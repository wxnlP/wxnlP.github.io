{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u4f60\u6211\u6709\u5e78\u76f8\u4f1a\uff01","text":""},{"location":"#_1","title":"\u4e3a\u7406\u60f3\u518d\u62fc\u640f\u51e0\u5e74\uff01","text":"<p>\u7f51\u7ad9\u5b66\u4e60\u8d44\u6e90\u5206\u5e03\uff1a</p> <p>OpenHarmony(\u6301\u7eed\u66f4\u65b0\u4e2d)</p> <p>ROS2(\u6301\u7eed\u66f4\u65b0\u4e2d)</p> <p>STM32</p> <p>FreeRTOS</p> <p>\u63a7\u5236\u7b97\u6cd5\u5408\u96c6(\u6301\u7eed\u66f4\u65b0\u4e2d)</p> <p>\u5168\u56fd\u5927\u5b66\u751f\u5de5\u7a0b\u5b9e\u8df5\u4e0e\u521b\u65b0\u80fd\u529b\u5927\u8d5b\u6307\u5bfc</p> <p>YOLO\u6a21\u578b\u8bad\u7ec3</p> <p>Git\u7b80\u5355\u4f7f\u7528</p> <p>\u98de\u4e66\u5b66\u4e60\u8d44\u6599\u5206\u6790</p> <p>Github\u5f00\u6e90\u4ed3\u5e93\uff1a</p> <p>\u5de5\u7a0b\u5b9e\u8df5\u4e0e\u521b\u65b0\u80fd\u529b\u5927\u8d5b\u6e90\u4ee3\u7801</p> <p>yolov8\u548cyolov5-lite\u7684\u90e8\u7f72\u7a0b\u5e8f\u4f18\u5316</p> <p>\u57fa\u4e8eArduino\u6846\u67b6\u7684ESP32\u4ee3\u7801\u53c2\u8003</p> <p>FreeRTOS\u5bf9\u5e94\u6e90\u7801</p> <p>\u56fd\u5185Gitee\u4ed3\u5e93\uff1a</p> <p>\u4ed3\u5e93 - wxnlP (wxnlP) - Gitee.com</p>"},{"location":"#_2","title":"\u73b0\u5b9e\u554a\uff0c\u83ab\u8981\u6253\u51fb\u6211","text":""},{"location":"#_3","title":"\u5b89\u88c5\u914d\u7f6e","text":"Bash<pre><code>pip install mkdocs\npip install mkdocs-material\n</code></pre>"},{"location":"#_4","title":"\u6539\u5206\u652f","text":"PowerShell<pre><code>git branch -m master main\n</code></pre>"},{"location":"#_5","title":"\u90e8\u7f72\u7f51\u7ad9","text":"Python<pre><code>python -m mkdocs build\n# main\u5206\u652f\ngit add .\ngit commit -m \"update\"\ngit push origin main\n# \u5207\u6362gh-pages\u5206\u652f\ngit checkout gh-pages\ngit pull origin gh-pages\n# \u5207\u6362main\u5206\u652f\ngit checkout main\n# \u90e8\u7f72\npython -m mkdocs gh-deploy\n</code></pre>"},{"location":"#_6","title":"\u672c\u5730\u6d4b\u8bd5","text":"Python<pre><code>python -m mkdocs serve\n</code></pre>"},{"location":"#_7","title":"\u56fe\u5e8a","text":"Bash<pre><code>https://cdn.jsdelivr.net/gh/wxnlP/pic\n</code></pre> <p>\u200b   </p>"},{"location":"blog/","title":"Blog","text":""},{"location":"study/FreeRTOS/0.ARM%E6%9E%B6%E6%9E%84%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/","title":"ARM\u67b6\u6784\u7b80\u4ecb","text":""},{"location":"study/FreeRTOS/0.ARM%E6%9E%B6%E6%9E%84%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/#1-arm","title":"1. ARM\u67b6\u6784","text":"<p>ARM\u82af\u7247\u5c5e\u4e8e\u7cbe\u7b80\u6307\u4ee4\u96c6\u8ba1\u7b97\u673a(RISC\uff1aReduced Instruction Set Computing)\uff0c\u5b83\u6240\u7528\u7684\u6307\u4ee4\u6bd4\u8f83\u7b80\u5355\uff0c\u6709\u5982\u4e0b\u7279\u70b9\uff1a</p> <p>\u2460 \u5bf9\u5185\u5b58\u53ea\u6709\u8bfb\u3001\u5199\u6307\u4ee4</p> <p>\u2461 \u5bf9\u4e8e\u6570\u636e\u7684\u8fd0\u7b97\u662f\u5728CPU\u5185\u90e8\u5b9e\u73b0</p> <p>\u2462 \u4f7f\u7528RISC\u6307\u4ee4\u7684CPU\u590d\u6742\u5ea6\u5c0f\u4e00\u70b9\uff0c\u6613\u4e8e\u8bbe\u8ba1</p>"},{"location":"study/FreeRTOS/0.ARM%E6%9E%B6%E6%9E%84%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/#2-cpu","title":"2. CPU\u5bc4\u5b58\u5668","text":"<p>\u65e0\u8bba\u662fcortex-M3/M4\uff0c</p> <p>\u8fd8\u662fcortex-A7\uff0c</p> <p>CPU\u5185\u90e8\u90fd\u6709R0\u3001R1\u3001\u2026\u2026\u3001R15\u5bc4\u5b58\u5668\uff1b</p> <p>\u5b83\u4eec\u53ef\u4ee5\u7528\u6765\u201c\u6682\u5b58\u201d\u6570\u636e\u3002</p> <p></p> <p>\u5bf9\u4e8eR13\u3001R14\u3001R15\uff0c\u8fd8\u53e6\u6709\u7528\u9014\uff1a</p> <p>R13\uff1a\u522b\u540dSP(Stack Pointer)\uff0c\u6808\u6307\u9488</p> <p>R14\uff1a\u522b\u540dLR(Link Register)\uff0c\u7528\u6765\u4fdd\u5b58\u8fd4\u56de\u5730\u5740</p> <p>R15\uff1a\u522b\u540dPC(Program Counter)\uff0c\u7a0b\u5e8f\u8ba1\u6570\u5668\uff0c\u8868\u793a\u5f53\u524d\u6307\u4ee4\u5730\u5740\uff0c\u5199\u5165\u65b0\u503c\u5373\u53ef\u8df3\u8f6c</p>"},{"location":"study/FreeRTOS/0.ARM%E6%9E%B6%E6%9E%84%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/#3-cpu","title":"3. CPU\u8ba1\u7b97","text":"<p>CPU\u8ba1\u7b97 a=a+b \u7684\u8fc7\u7a0b\uff1a</p> <p></p>"},{"location":"study/FreeRTOS/0.ARM%E6%9E%B6%E6%9E%84%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/#4","title":"4. \u5e38\u89c1\u6c47\u7f16\u6307\u4ee4","text":""},{"location":"study/FreeRTOS/0.ARM%E6%9E%B6%E6%9E%84%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/#41","title":"4.1 \u6808\u64cd\u4f5c\u6307\u4ee4","text":"<p>PUSH \uff1a\u538b\u6808\uff0c\u5c06\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u538b\u5165\u6808\u4e2d\u3002</p> <p>\u4f8b\u5982\uff1a<code>PUSH {r2, lr}</code> \u4e3a\u5c06<code>r2</code>\u3001<code>lr</code>\u5bc4\u5b58\u5668\u7684\u503c\u538b\u5165\u6808\u7a7a\u95f4</p> <p>POP \uff1a\u51fa\u6808\uff0c\u5c06 \u6808\u9876 \u7684\u6570\u636e\u5f39\u51fa\uff0c\u5e76\u6062\u590d\u5bc4\u5b58\u5668\u7684\u503c\u3002</p> <p>\u4f8b\u5982\uff1a<code>POP {r2-r3, pc}</code> </p>"},{"location":"study/FreeRTOS/0.ARM%E6%9E%B6%E6%9E%84%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/#42","title":"4.2 \u5bc4\u5b58\u5668\u8d4b\u503c","text":"<p>MOV \uff1a\u7ed9\u5bc4\u5b58\u5668\u8d4b\u503c\uff0c\u4e0d\u5f71\u54cd\u6807\u5fd7\u5bc4\u5b58\u5668\u3002</p> <p>\u4f8b\u5982\uff1a<code>MOV R0, #0x10</code> \u5c06 <code>0x10</code> \u4f20\u9001\u5230\u5bc4\u5b58\u5668 <code>R0</code>\u3002</p> <p>MOVS \uff1a\u7ed9\u5bc4\u5b58\u5668\u8d4b\u503c\uff0c\u5e76\u66f4\u65b0\u72b6\u6001\u6807\u5fd7\u3002</p> <p>\u4f8b\u5982\uff1a<code>MOVS r0, #0x0A</code> \u5c06<code>0x0A</code>\u8d4b\u503c\u7ed9<code>r0</code>\u5bc4\u5b58\u5668\uff0c\u5e76\u66f4\u65b0\u6761\u4ef6\u7801\u6807\u5fd7\uff08\u5982\u96f6\u6807\u5fd7\u3001\u8fdb\u4f4d\u6807\u5fd7\u7b49\uff09\u3002</p> <p>MOVW \uff1a\u5c06\u4e00\u4e2a 16 \u4f4d\u7684\u7acb\u5373\u6570\u52a0\u8f7d\u5230\u5bc4\u5b58\u5668\u4e2d\u3002</p> <p>\u4f8b\u5982\uff1a<code>MOVW R0, #0x1234</code> \u5c06 <code>0x1234</code> \u4f20\u9001\u5230 <code>R0</code>\u5bc4\u5b58\u5668 \u7684\u4f4e 16 \u4f4d\u3002</p>"},{"location":"study/FreeRTOS/0.ARM%E6%9E%B6%E6%9E%84%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/#43","title":"4.3 \u5199\u5bc4\u5b58\u5668","text":"<p>STR \uff1a\u5c06\u5bc4\u5b58\u5668\u4e2d\u76844\u4e2a\u5b57\u8282\u6570\u636e\u5199\u5165\u5185\u5b58\u3002</p> <p>\u4f8b\u5982\uff1a<code>STR r0, [sp, #0x00]</code> \u5c06<code>r0</code>\u5bc4\u5b58\u5668\u7684\u503c\u5199\u5165\u6808\u6307\u9488<code>sp</code>\u504f\u79fb<code>0x00</code>\u4f4d\u7f6e\u7684\u5185\u5b58\u3002</p> <p>STRB \uff1a\u5c06\u5bc4\u5b58\u5668\u4e2d\u76841\u4e2a\u5b57\u8282\u5199\u5165\u5185\u5b58\u3002</p> <p>\u4f8b\u5982\uff1a<code>STRB r0, [sp, #0x00]</code> \u5c06<code>r0</code>\u5bc4\u5b58\u5668\u7684\u6700\u4f4e\u5b57\u8282\uff081\u5b57\u8282\uff09\u5199\u5165\u6808\u6307\u9488<code>sp</code>\u504f\u79fb<code>0x00</code>\u4f4d\u7f6e\u7684\u5185\u5b58\u3002</p> <p>STRH \uff1a\u5c06\u5bc4\u5b58\u5668\u4e2d\u76842\u4e2a\u5b57\u8282\u5199\u5165\u5185\u5b58\u3002</p> <p>\u4f8b\u5982\uff1a<code>STRH r0, [sp, #0x00]</code> \u5c06<code>r0</code>\u5bc4\u5b58\u5668\u7684\u4f4e16\u4f4d\u5199\u5165\u6808\u6307\u9488<code>sp</code>\u504f\u79fb<code>0x00</code>\u4f4d\u7f6e\u7684\u5185\u5b58\u3002</p>"},{"location":"study/FreeRTOS/0.ARM%E6%9E%B6%E6%9E%84%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/#44","title":"4.4 \u8bfb\u5bc4\u5b58\u5668","text":"<p>LDR \uff1a\u4ece\u5185\u5b58\u8bfb\u53d64\u4e2a\u5b57\u8282\u6570\u636e\u5230\u5bc4\u5b58\u5668\u3002</p> <p>\u4f8b\u5982\uff1a<code>LDR r0, [sp, #0x00]</code> \u5c06\u6808\u6307\u9488<code>sp</code>\u504f\u79fb<code>0x00</code>\u4f4d\u7f6e\u76844\u4e2a\u5b57\u8282\u6570\u636e\u8bfb\u53d6\u5230<code>r0</code>\u5bc4\u5b58\u5668\u3002</p> <p>LDRB \uff1a\u4ece\u5185\u5b58\u8bfb\u53d61\u4e2a\u5b57\u8282\u6570\u636e\u5230\u5bc4\u5b58\u5668\u3002</p> <p>\u4f8b\u5982\uff1a<code>LDRB r0, [sp, #0x00]</code> \u5c06\u6808\u6307\u9488<code>sp</code>\u504f\u79fb<code>0x00</code>\u4f4d\u7f6e\u76841\u5b57\u8282\u6570\u636e\u8bfb\u53d6\u5230<code>r0</code>\u5bc4\u5b58\u5668\u3002</p> <p>LDRH \uff1a\u4ece\u5185\u5b58\u8bfb\u53d62\u4e2a\u5b57\u8282\u6570\u636e\u5230\u5bc4\u5b58\u5668\u3002</p> <p>\u4f8b\u5982\uff1a<code>LDRH r0, [sp, #0x00]</code> \u5c06\u6808\u6307\u9488<code>sp</code>\u504f\u79fb<code>0x00</code>\u4f4d\u7f6e\u76842\u5b57\u8282\u6570\u636e\u8bfb\u53d6\u5230<code>r0</code>\u5bc4\u5b58\u5668\u3002</p> <p>LDRD \uff1a\u4ece\u5185\u5b58\u8bfb\u53d68\u4e2a\u5b57\u8282\u6570\u636e\u5230\u5bc4\u5b58\u5668\u3002</p> <p>\u4f8b\u5982\uff1a<code>LDRD r1, r0, [sp, #0x00]</code> \u5c06\u6808\u6307\u9488<code>sp</code>\u504f\u79fb<code>0x00</code>\u4f4d\u7f6e\u76848\u5b57\u8282\u6570\u636e\u8bfb\u53d6\u5230<code>r0</code>\u548c<code>r1</code>\u5bc4\u5b58\u5668\u3002</p>"},{"location":"study/FreeRTOS/0.ARM%E6%9E%B6%E6%9E%84%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/#45","title":"4.5 \u52a0\u51cf\u6307\u4ee4","text":"<p>ADD \uff1a\u52a0\u6cd5\u64cd\u4f5c\u3002</p> <p>\u4f8b\u5982\uff1a<code>ADD r0, r0, r1</code> \u5c06<code>r0 = r0 + r1</code>\uff0c\u5c06<code>r0</code>\u548c<code>r1</code>\u5bc4\u5b58\u5668\u7684\u503c\u76f8\u52a0\uff0c\u5e76\u5c06\u7ed3\u679c\u5b58\u5165<code>r0</code>\u3002</p> <p>SUB \uff1a\u51cf\u6cd5\u64cd\u4f5c\u3002</p> <p>\u4f8b\u5982\uff1a<code>SUB sp, sp, #0x68</code> \u5c06\u6808\u6307\u9488<code>sp</code>\u51cf\u53bb<code>0x68</code>\uff0c\u5373<code>sp = sp - 0x68</code>\uff0c\u7528\u4e8e\u5728\u6808\u4e0a\u5206\u914d\u6216\u91ca\u653e\u7a7a\u95f4\u3002</p>"},{"location":"study/FreeRTOS/0.ARM%E6%9E%B6%E6%9E%84%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/#46","title":"4.6 \u8df3\u8f6c\u4e0e\u8c03\u7528\u6307\u4ee4","text":"<p>B \uff1a\u65e0\u6761\u4ef6\u8df3\u8f6c\u3002</p> <p>\u4f8b\u5982\uff1a<code>B label</code> \u8df3\u8f6c\u5230\u6807\u7b7e<code>label</code>\uff0c\u6267\u884c\u8be5\u4f4d\u7f6e\u7684\u4ee3\u7801\u3002</p> <p>BL \uff1a\u5e26\u8fd4\u56de\u5730\u5740\u7684\u8df3\u8f6c\uff08\u7528\u4e8e\u51fd\u6570\u8c03\u7528\uff09\u3002</p> <p>\u4f8b\u5982\uff1a<code>BL subroutine</code> \u8df3\u8f6c\u5230<code>subroutine</code>\u51fd\u6570\uff0c\u5e76\u5c06\u8fd4\u56de\u5730\u5740\uff08\u8df3\u8f6c\u6307\u4ee4\u540e\u7684\u5730\u5740\uff09\u4fdd\u5b58\u5230<code>lr</code>\uff08\u94fe\u63a5\u5bc4\u5b58\u5668\uff09\u3002\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u901a\u8fc7<code>POP</code>\u6216\u5176\u4ed6\u673a\u5236\u6062\u590d<code>pc</code>\u6765\u8fd4\u56de\u3002</p>"},{"location":"study/FreeRTOS/0.ARM%E6%9E%B6%E6%9E%84%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/#47","title":"4.7 \u5176\u4ed6\u5e38\u89c1\u6307\u4ee4","text":"<p>NOP \uff1a\u7a7a\u64cd\u4f5c\u6307\u4ee4\u3002\u4e0d\u4f1a\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u4ec5\u7528\u4e8e\u5360\u4f4d\u6216\u8c03\u8bd5\u3002</p> <p>\u4f8b\u5982\uff1a<code>NOP</code> \u5360\u7528\u4e00\u4e2a\u65f6\u949f\u5468\u671f\uff0c\u4f46\u4e0d\u6539\u53d8\u4efb\u4f55\u5bc4\u5b58\u5668\u6216\u6807\u5fd7\u3002</p> <p>CMP \uff1a\u6bd4\u8f83\u4e24\u4e2a\u5bc4\u5b58\u5668\u6216\u503c\u3002</p> <p>\u4f8b\u5982\uff1a<code>CMP r0, r1</code> \u5c06<code>r0</code>\u548c<code>r1</code>\u8fdb\u884c\u6bd4\u8f83\uff0c\u66f4\u65b0\u6761\u4ef6\u7801\uff0c\u4f46\u4e0d\u4fdd\u5b58\u7ed3\u679c\u3002</p> <p>TST \uff1a\u6309\u4f4d\u4e0e\u8fd0\u7b97\uff0c\u7528\u4e8e\u68c0\u67e5\u7279\u5b9a\u4f4d\u7684\u72b6\u6001\u3002</p> <p>\u4f8b\u5982\uff1a<code>TST r0, #0x1</code> \u5c06<code>r0</code>\u4e0e<code>0x1</code>\u8fdb\u884c\u6309\u4f4d\u4e0e\uff0c\u68c0\u67e5\u6700\u4f4e\u4f4d\u662f\u5426\u4e3a1\u3002</p>"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/","title":"C\u8bed\u8a00\u57fa\u7840","text":""},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#1","title":"1. \u5173\u952e\u8bcd","text":"\u5173\u952e\u5b57 \u5e94\u7528\u573a\u666f static \u2460 \u5728\u51fd\u6570\u5185\u90e8\uff1a\u8be5\u53d8\u91cf\u5728\u591a\u6b21\u51fd\u6570\u8c03\u7528\u4e4b\u95f4\u4fdd\u6301\u5176\u503c\u4e0d\u53d8 \u3002  \u2461 \u4f7f\u5f97\u53d8\u91cf\u6216\u51fd\u6570\u7684\u4f5c\u7528\u57df\u5c40\u9650\u4e8e\u5b9a\u4e49\u5b83\u7684\u6587\u4ef6\u6216\u51fd\u6570\u5185\u90e8\uff0c\u5916\u90e8\u65e0\u6cd5\u8bbf\u95ee \u3002 extern \u544a\u8bc9\u7f16\u8bd1\u5668\u53d8\u91cf\u6216\u51fd\u6570\u5728\u522b\u7684\u5730\u65b9\u5b9a\u4e49\uff0c\u53ef\u4ee5\u8de8\u6587\u4ef6\u5bfb\u627e\u5e76\u4f7f\u7528\u53d8\u91cf\u6216\u51fd\u6570 \u3002 volatile \u6240\u4fee\u9970\u7684\u5bf9\u8c61\u4e0d\u80fd\u88ab\u7f16\u8bd1\u5668\u4f18\u5316 \u3002 register \u5efa\u8bae\u7f16\u8bd1\u5668\u5c06\u53d8\u91cf\u5b58\u50a8\u5728\u5bc4\u5b58\u5668\u4e2d\u4ee5\u63d0\u9ad8\u8bbf\u95ee\u901f\u5ea6 \u3002 typedef \u7ed9\u6570\u636e\u7c7b\u578b\u53d6\u522b\u540d \u3002 const \u4fee\u9970\u53ea\u8bfb\u53d8\u91cf\uff0c\u53d8\u91cf\u4e00\u65e6\u8d4b\u521d\u503c\u5c31\u4e0d\u80fd\u88ab\u4fee\u6539 \u3002"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#2","title":"2. \u5168\u5c40\u53d8\u91cf\u4e0e\u5c40\u90e8\u53d8\u91cf","text":"\u53d8\u91cf\u7c7b\u578b \u4f5c\u7528\u57df \u751f\u547d\u5468\u671f \u5b58\u50a8\u4f4d\u7f6e \u9ed8\u8ba4\u503c \u5c40\u90e8\u53d8\u91cf \u51fd\u6570\u6216\u4ee3\u7801\u5757\u5185\u90e8 \u51fd\u6570\u6216\u4ee3\u7801\u5757\u6267\u884c\u671f\u95f4 \u6808\uff08Stack\uff09 \u672a\u5b9a\u4e49\uff08\u968f\u673a\u503c\uff09 \u5168\u5c40\u53d8\u91cf \u6574\u4e2a\u7a0b\u5e8f \u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4 \u9759\u6001\u533a\uff08Data Segment\uff09 0 \u9759\u6001\u5c40\u90e8\u53d8\u91cf \u51fd\u6570\u5185\u90e8 \u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4 \u9759\u6001\u533a\uff08Data Segment\uff09 0 \u9759\u6001\u5168\u5c40\u53d8\u91cf \u5f53\u524d\u6587\u4ef6 \u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4 \u9759\u6001\u533a\uff08Data Segment\uff09 0"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#3","title":"3. \u9884\u5904\u7406\u5668","text":""},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#31","title":"3.1 \u6307\u4ee4\u6c47\u603b","text":"\u6307\u4ee4 \u63cf\u8ff0 #define \u5b9a\u4e49\u5b8f #include \u5305\u542b\u4e00\u4e2a\u6e90\u4ee3\u7801\u6587\u4ef6 #undef \u53d6\u6d88\u5df2\u5b9a\u4e49\u7684\u5b8f #ifdef \u5982\u679c\u5b8f\u5df2\u7ecf\u5b9a\u4e49\uff0c\u5219\u8fd4\u56de\u771f #ifndef \u5982\u679c\u5b8f\u6ca1\u6709\u5b9a\u4e49\uff0c\u5219\u8fd4\u56de\u771f #if \u5982\u679c\u7ed9\u5b9a\u6761\u4ef6\u4e3a\u771f\uff0c\u5219\u7f16\u8bd1\u4e0b\u9762\u4ee3\u7801 #else #if \u7684\u4ee3\u66ff\u65b9\u6848 #elif \u5982\u679c\u524d\u9762\u7684 #if \u7ed9\u5b9a\u6761\u4ef6\u4e0d\u4e3a\u771f\uff0c\u5f53\u524d\u6761\u4ef6\u4e3a\u771f\uff0c\u5219\u7f16\u8bd1\u4e0b\u9762\u4ee3\u7801 #endif \u7ed3\u675f\u4e00\u4e2a #if\u2026\u2026#else \u6761\u4ef6\u7f16\u8bd1\u5757 #error \u5f53\u9047\u5230\u6807\u51c6\u9519\u8bef\u65f6\uff0c\u8f93\u51fa\u9519\u8bef\u6d88\u606f #pragma \u4f7f\u7528\u6807\u51c6\u5316\u65b9\u6cd5\uff0c\u5411\u7f16\u8bd1\u5668\u53d1\u5e03\u7279\u6b8a\u7684\u547d\u4ee4\u5230\u7f16\u8bd1\u5668\u4e2d"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#32","title":"3.2 \u5b8f\u5b9a\u4e49","text":"C<pre><code>// \u65e0\u53c2\u5b8f\n#define DEAD_ZONE_ARR           1850\n//\u6709\u53c2\u5b8f\n#define M1A(duty)               __HAL_TIM_SetCompare(&amp;htim8, TIM_CHANNEL_1, duty)\n</code></pre> C<pre><code>#include &lt;stdio.h&gt;\n\n#define VALUE 100\n\nint main() {\n    printf(\"VALUE = %d\\n\", VALUE);\n\n#undef VALUE\n    // printf(\"VALUE = %d\\n\", VALUE); // \u6b64\u884c\u4f1a\u62a5\u9519\uff0c\u56e0\u4e3a VALUE \u5df2\u88ab\u53d6\u6d88\u5b9a\u4e49\n\n    return 0;\n}\n</code></pre>"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#33","title":"3.3 \u6761\u4ef6\u7f16\u8bd1","text":"C<pre><code>#include &lt;stdio.h&gt;\n\n#define DEBUG  // \u5b9a\u4e49\u8c03\u8bd5\u6a21\u5f0f\n\nint main() {\n#ifdef DEBUG\n    printf(\"Debug mode is enabled.\\n\");\n#else\n    printf(\"Release mode.\\n\");\n#endif\n    return 0;\n}\n</code></pre> <p>\u5e94\u7528\u573a\u666f</p> C<pre><code>#if defined(PLATFORM_ARM)\n    // ARM \u5e73\u53f0\u4ee3\u7801\n#elif defined(PLATFORM_X86)\n    // x86 \u5e73\u53f0\u4ee3\u7801\n#else\n    // \u9ed8\u8ba4\u4ee3\u7801\n#endif\n</code></pre>"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#4","title":"4. \u6307\u9488","text":""},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#41","title":"4.1 \u6307\u9488\u57fa\u7840","text":"C<pre><code>//\u5b9a\u4e49\u6307\u9488\nint* p1;\n//\u7ed9\u6307\u9488\u5206\u914d\u5730\u5740\nint c;\nc = 5;\np1 = &amp;c;\n//\u83b7\u53d6\u6307\u9488\u6240\u6307\u5411\u7684\u503c\u4e0e\u5730\u5740\nprintf(\"p1 address: 0x%p, p1 value: %d\", p1, *p1);\n\n/*\u8f93\u51fa*/\np1 address: 0x0061FF18, p1 value: 5\n</code></pre> <p>\u7ecf\u8fc7\u4e0a\u8ff0\u4ee3\u7801\u6d41\u7a0b\uff0c\u6211\u4eec\u5c06\u6307\u9488<code>p1</code>\u6307\u5411\u53d8\u91cf<code>c</code>\u7684\u5730\u5740\uff0c\u6240\u4ee5\u5f53\u6211\u4eec\u6539\u53d8\u53d8\u91cf<code>c</code>\u7684\u503c\uff0cp1\u6307\u9488\u6307\u5411\u7684\u503c\u4e5f\u4f1a\u968f<code>c</code>\u6539\u53d8\u3002</p> C<pre><code>//\u6539\u53d8\u6307\u9488\u6240\u6307\u5411\u7684\u503c\nc = 8;\nprintf(\"p1 address: 0x%p, p1 value: %d\\n\", p1, *p1);\n\n/*\u8f93\u51fa*/\np1 address: 0x0061FF18, p1 value: 5\np1 address: 0x0061FF18, p1 value: 8\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u6307\u9488\u6307\u5411\u7684\u5730\u5740\u6ca1\u6709\u53d8\uff0c\u4e00\u81f4\u90fd\u662f\u53d8\u91cf<code>c</code>\u7684\u5730\u5740\uff0c\u800c\u53d8\u91cf<code>c</code>\u7684\u503c\u6539\u53d8\uff0c\u968f\u4e4bp1\u6307\u9488\u6307\u5411\u7684\u503c\u4e5f\u6539\u53d8\u3002\u540c\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539<code>*p1</code>\u5b9e\u73b0\u4fee\u6539\u53d8\u91cf<code>c</code>\u7684\u503c\uff0c\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n   //\u5b9a\u4e49\u6307\u9488\n    int* p1;\n    //\u7ed9\u6307\u9488\u5206\u914d\u5730\u5740\n    int c;\n    c = 5;\n    p1 = &amp;c;\n    //\u83b7\u53d6\u6307\u9488\u6240\u6307\u5411\u7684\u503c\u4e0e\u5730\u5740\n    printf(\"p1 address: 0x%p, p1 value: %d, c value: %d\\n\", p1, *p1, c);\n    //\u6539\u53d8\u6307\u9488\u6240\u6307\u5411\u7684\u503c\n    c = 8;\n    printf(\"p1 address: 0x%p, p1 value: %d, c value: %d\\n\", p1, *p1, c);\n    //\u901a\u8fc7\u6307\u9488\u4fee\u6539\u53d8\u91cf\u7684\u503c\n    *p1 = 10;\n    printf(\"p1 address: 0x%p, p1 value: %d, c value: %d\\n\", p1, *p1, c);\n\n   return 0;\n}\n\n/*\u8f93\u51fa*/\np1 address: 0x0061FF18, p1 value: 5, c value: 5\np1 address: 0x0061FF18, p1 value: 8, c value: 8\np1 address: 0x0061FF18, p1 value: 10, c value: 10\n</code></pre>"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#42","title":"4.2 \u6307\u9488\u4e0e\u6570\u7ec4","text":"<p>\u5728\u6570\u7ec4\u4e2d\uff0c\u6211\u4eec\u4ea6\u7ecf\u5e38\u4f1a\u7528\u5230\u53d6\u503c\u548c\u53d6\u5730\u5740\u3002\u6709\u4ee3\u7801\u4e0d\u96be\u770b\u51fa\uff1a<code>&amp;a[i]</code>\u4e0e<code>a + i</code>\u7ed3\u679c\u4e00\u6837\uff0c\u90fd\u662f\u53d6\u5730\u5740\uff0c\u800c<code>a[i]</code>\u5219\u662f\u53d6\u503c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int a[4] = {1, 2, 3, 4};\n    for (int i = 0 ; i &lt; 4 ; i++)\n    {\n        printf(\"a[%d]: %d\\n\", i, a[i]);\n        printf(\"a[%d]: %d\\n\", i, a + i);\n        printf(\"a[%d]: %d\\n\", i, &amp;a[i]);\n    }\n\n    return 0;\n}\n\n/*\u8f93\u51fa*/\na[0]: 1\na[0]: 6422284\na[0]: 6422284\na[1]: 2\na[1]: 6422288\na[1]: 6422288\na[2]: 3\na[2]: 6422292\na[2]: 6422292\na[3]: 4\na[3]: 6422296\na[3]: 6422296\n</code></pre> <p>int\u7c7b\u578b\u6570\u636e\u4e3a 4 \u5b57\u8282\uff0cchar\u4e3a 1 \u5b57\u8282\uff0c\u800c\u6307\u9488\u53ef\u4ee5\u901a\u8fc7<code>p +/- 1</code>\u6539\u53d8\u6307\u5411\u7684\u5730\u5740\uff0c\u800c\u5176\u6a2a\u8de8\u7684\u5730\u5740\u957f\u5ea6\u4e0e\u6307\u9488\u7684\u6570\u636e\u7c7b\u578b\u6709\u5173\uff0c\u6bd4\u5982int\u7c7b\u578b\uff0c\u6307\u9488\u52a0 1 \uff08<code>p+1</code>\uff09\u5730\u5740\u5c31\u589e\u52a0 4 \u4e2a\u5b57\u8282\uff1b\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u65b9\u6cd5\u7528\u6307\u9488\u52a0\u51cf\u65b9\u6cd5\u8bfb\u53d6\u6570\u7ec4\u6570\u636e\u548c\u5730\u5740\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n    int a[4] = {1, 2, 3, 4};\n    char b[4] = {'a', 'b', 'c', 'd'};\n    int *p1;\n    char *p2;\n    p1 = a + 2;\n    p2 = b + 1;\n    printf(\"p1 address1: %p, p1 address2: %p\\n\", p1+1, p1);\n    printf(\"p2 address2: %p, p2 address2: %p\\n\", p2+1, p2);\n\n    return 0;\n}\n\n/*\u8f93\u51fa*/\np1 address1: 0061FF14, p1 address2: 0061FF10\np2 address2: 0061FF06, p2 address2: 0061FF05\n</code></pre>"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#43","title":"4.3 \u6307\u9488\u4e0e\u51fd\u6570","text":"<p>\u2460 \u7528\u6307\u9488\u63a5\u53d7\u5904\u7406\u51fd\u6570\u53c2\u6570\u4f20\u5165\u7684\u5730\u5740\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4ea4\u6362\u51fd\u6570\u5916\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid swap(int* a, int* b);\n\nint main()\n{\n    int a=1, b=9;\n    printf(\"a: %d, b: %d\\n\", a, b);\n    swap(&amp;a, &amp;b);\n    printf(\"a: %d, b: %d\\n\", a, b);\n    return 0;\n\n}\n\nvoid swap(int* a, int* b)\n{\n    int temp;\n    temp = *a;\n    *a = *b;\n    *b = temp; \n}\n\n/*\u8f93\u51fa*/\na: 1, b: 9\na: 9, b: 1\n</code></pre> <p>\u2461 \u5c06\u6307\u9488\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u51fd\u6570\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n\nvoid swap(int* a, int* b);\nvoid my_add(int* p);\n\nint main()\n{\n    int a=1, b=9;\n    printf(\"a: %d, b: %d\\n\", a, b);\n    swap(&amp;a, &amp;b);\n    printf(\"a: %d, b: %d\\n\", a, b);\n    //\u6b64\u65f6b\u5df2\u7ecf\u4e0ea\u4ea4\u6362\uff0cb=1\n    int *p;\n    p = &amp;b;\n    //\u6307\u9488\u4f20\u5165\u51fd\u6570my_add()\n    my_add(p);\n    printf(\"b: %d, *p: %d\\n\", b, *p);\n    return 0;\n\n}\n\nvoid swap(int* a, int* b)\n{\n    int temp;\n    temp = *a;\n    *a = *b;\n    *b = temp; \n}\n\nvoid my_add(int* p)\n{\n    (*p)++;\n}\n\n/*\u8f93\u51fa*/\na: 1, b: 9\na: 9, b: 1\nb: 2, *p: 2\n</code></pre>"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#44","title":"4.4 \u52a8\u6001\u5185\u5b58\u5206\u914d","text":"<p>C\u8bed\u8a00\u6807\u51c6\u5e93\u51fd\u6570\uff1a<code>malloc()</code>\uff0c<code>calloc()</code>\uff0c<code>free()</code>\u548c<code>realloc()</code>\u5728\u7a0b\u5e8f\u4e2d\u53ef\u4ee5\u52a8\u6001\u5206\u914d\u5185\u5b58\u3002</p> <ul> <li><code>malloc()</code>\u51fd\u6570\u7528\u4e8e\u5728 \u5806\u533a \u52a8\u6001\u5206\u914d\u4e00\u5757\u6307\u5b9a\u5927\u5c0f\u7684\u5185\u5b58\uff0c\u5185\u5b58\u5185\u5bb9\u662f\u672a\u521d\u59cb\u5316\u7684\uff0c\u56e0\u6b64\uff0c\u5206\u914d\u7684\u5185\u5b58\u5757\u4e2d\u7684\u6570\u636e\u662f\u672a\u77e5\u7684\u3002 \u5e76\u4e14\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2avoid\u6307\u9488\uff0c\u53ef\u4ee5\u5c06\u5176\u8f6c\u6362\u4e3a\u4efb\u4f55\u5f62\u5f0f\u7684\u6307\u9488\u3002</li> </ul> <p>\u8bed\u6cd5\u793a\u4f8b\uff1a</p> C<pre><code>ptr = (float*) malloc(100 * sizeof(float));\n</code></pre> <p>\u6d6e\u70b9\u6570\u7684\u5927\u5c0f\u662f4\u5b57\u8282\uff0c\u6240\u4ee5\u4f8b\u5b50\u4e2d\u521b\u5efa\u4e86 400 \u5b57\u8282\u7684\u5185\u5b58\uff0c\u5176\u4e2d<code>ptr</code>\u6307\u9488\u6307\u5411\u5206\u914d\u7684\u5185\u5b58\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282\u3002 \u5982\u679c\u65e0\u6cd5\u5206\u914d\u5185\u5b58\uff0c\u5219\u8868\u8fbe\u5f0f\u5c06\u4ea7\u751fNULL\u6307\u9488\u3002</p> <ul> <li><code>calloc()</code>\u4e5f\u662f\u7528\u4e8e\u5728\u5806\u4e0a\u5206\u914d\u5185\u5b58\uff0c \u4f46\u4f1a\u5c06\u5206\u914d\u7684\u5185\u5b58\u521d\u59cb\u5316\u4e3a\u96f6\u3002</li> </ul> <p>\u8bed\u6cd5\u793a\u4f8b\uff1a</p> C<pre><code>ptr = (float*) calloc(25, sizeof(float));\n</code></pre> <ul> <li><code>free()</code>\u7528\u4e8e\u91ca\u653e<code>calloc()</code>\u6216<code>malloc()</code>\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u7a7a\u95f4\u3002</li> </ul> <p>\u8bed\u6cd5\u793a\u4f8b\uff1a</p> C<pre><code>free(ptr);\n</code></pre> <p>\u6b64\u4f8b\u5b50\u5c06\u91ca\u653e\u4e4b\u524d\u7531<code>calloc()</code>\u6216<code>malloc()</code>\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u7a7a\u95f4\uff0c<code>ptr</code>\u4e3a\u5b83\u4eec\u8fd4\u56de\u7684\u6307\u9488\u3002</p> <ul> <li><code>realloc()</code>\u7528\u4e8e\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u4e0d\u8db3\u6216\u8d85\u8fc7\u6240\u9700\uff0c\u53ef\u4ee5\u4f7f\u7528realloc()\u51fd\u6570\u66f4\u6539\u4ee5\u524d\u5206\u914d\u7684\u5185\u5b58\u7684\u5927\u5c0f\u3002</li> </ul> <p>\u8bed\u6cd5\u793a\u4f8b\uff1a</p> C<pre><code>ptr = realloc(ptr, x);\n</code></pre> <p>\u6b64\u4f8b\u5b50ptr\u88ab\u91cd\u65b0\u5206\u914d\u4e3a\u65b0\u7684\u5927\u5c0f x \u3002</p> <p>\u793a\u4f8b 1 \uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main()\n{\n    int n, i, *ptr, sum = 0;\n\n    printf(\"\u8f93\u5165\u5143\u7d20\u6570\u91cf: \");\n    scanf(\"%d\", &amp;n);\n\n    ptr = (int*) malloc(n * sizeof(int));\n\n    // \u5982\u679c\u65e0\u6cd5\u5206\u914d\u5185\u5b58\n    if(ptr == NULL)                     \n    {\n        printf(\"\u9519\u8bef\uff01 \u5185\u5b58\u672a\u5206\u914d\u3002\");\n        exit(0);\n    }\n\n    printf(\"\u8f93\u5165\u5143\u7d20: \");\n    for(i = 0; i &lt; n; ++i)\n    {\n        scanf(\"%d\", ptr + i);\n        sum += *(ptr + i);\n    }\n\n    printf(\"Sum = %d\", sum);\n\n    //\u91ca\u653e\u5185\u5b58\n    free(ptr);\n\n    return 0;\n}\n</code></pre> <p>\u793a\u4f8b 2 \uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main()\n{\n    int *ptr, i, n1, n2;\n    printf(\"\u8f93\u5165\u5927\u5c0f: \");\n    scanf(\"%d\", &amp;n1);\n\n    ptr = (int*)malloc(n1 * sizeof(int));\n\n    printf(\"\u5148\u524d\u5206\u914d\u7684\u5185\u5b58\u5730\u5740: \");\n    for (i = 0; i &lt; n1; ++i)\n        printf(\"%u\\n\", ptr + i);\n\n    printf(\"\\n\u8f93\u5165\u65b0\u7684\u5927\u5c0f: \");\n    scanf(\"%d\", &amp;n2);\n\n    //\u91cd\u65b0\u5206\u914d\u5185\u5b58\n    ptr = realloc(ptr, n2 * sizeof(int));\n\n    printf(\"\u65b0\u5206\u914d\u7684\u5185\u5b58\u5730\u5740: \");\n    for (i = 0; i &lt; n2; ++i)\n        printf(\"%u\\n\", ptr + i);\n\n    free(ptr);\n\n    return 0;\n}\n</code></pre>"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#5","title":"5. \u7ed3\u6784\u4f53","text":"<p>\u7ed3\u6784\u4f53\u5728\u5d4c\u5165\u5f0f\u4e2d\u975e\u5e38\u5e38\u89c1\uff0c\u4e14\u6211\u4eec\u6bcf\u5929\u5199\u7a0b\u5e8f\u90fd\u5728\u7528\u3002</p>"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#51","title":"5.1 \u7ed3\u6784\u4f53\u57fa\u7840","text":"<p><code>StructName</code> \u662f\u7ed3\u6784\u4f53\u7684\u540d\u79f0\uff0c<code>type</code> \u662f\u6210\u5458\u7684\u6570\u636e\u7c7b\u578b<code>member1</code>, <code>member2</code>, <code>member3</code> \u7b49\u662f\u7ed3\u6784\u4f53\u7684\u6210\u5458\uff0c<code>variable</code>\u662f\u7ed3\u6784\u53d8\u91cf\u3002</p> C<pre><code>struct StructName {\n    type member1;\n    type member2;\n    type member3;\n    // ...\n}variable;\n</code></pre> <p>\u7ed3\u6784\u4f53\u7b80\u5355\u793a\u4f8b\uff1a</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\nstruct Student\n{\n    /* data */\n    char name[20];\n    int age;\n    float grade;\n};\n\n\nint main()\n{\n    //\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\n    struct Student student1;\n    //\u6210\u5458\u8d4b\u503c\n    strcpy(student1.name, \"C_language\");\n    student1.age = 18;\n    student1.grade = 98.1;\n    // \u8bbf\u95ee\u7ed3\u6784\u4f53\u6210\u5458\n    printf(\"Student Name: %s\\n\", student1.name);\n    printf(\"Student Age: %d\\n\", student1.age);\n    printf(\"Student Grade: %.2f\\n\", student1.grade);\n\n    return 0;\n}\n\n/*\u8f93\u51fa*/\nStudent Name: C_language\nStudent Age: 18\nStudent Grade: 98.10\n</code></pre>"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#52","title":"5.2 \u7ed3\u6784\u4f53\u6307\u9488","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\nstruct Student\n{\n    /* data */\n    char name[20];\n    int age;\n    float grade;\n};\n\n\nint main()\n{\n    //\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\n    struct Student student1;\n    //\u6210\u5458\u8d4b\u503c\n    strcpy(student1.name, \"C_language\");\n    student1.age = 18;\n    student1.grade = 98.1;\n    // \u8bbf\u95ee\u7ed3\u6784\u4f53\u6210\u5458\n    printf(\"Student Name: %s\\n\", student1.name);\n    printf(\"Student Age: %d\\n\", student1.age);\n    printf(\"Student Grade: %.2f\\n\", student1.grade);\n    //\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u6307\u9488\n    struct Student *student_ptr;\n    student_ptr = &amp;student1;\n    printf(\"Student Name: %s\\n\", student_ptr-&gt;name);\n    printf(\"Student Age: %d\\n\", student_ptr-&gt;age);\n    printf(\"Student Grade: %.2f\\n\", student_ptr-&gt;grade);\n    return 0;\n}\n\n/*\u8f93\u51fa*/\nStudent Name: C_language\nStudent Age: 18\nStudent Grade: 98.10\nStudent Name: C_language\nStudent Age: 18\nStudent Grade: 98.10\n</code></pre>"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#53","title":"5.3 \u7ed3\u6784\u4f53\u505a\u51fd\u6570\u53c2\u6570","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\nstruct Student\n{\n    /* data */\n    char name[20];\n    int age;\n    float grade;\n};\n\nvoid printf_struct(struct Student student)\n{\n    printf(\"Student Name: %s\\n\", student.name);\n    printf(\"Student Age: %d\\n\", student.age);\n    printf(\"Student Grade: %.2f\\n\", student.grade);\n}\n\nint main()\n{\n    //\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\n    struct Student student1;\n    //\u6210\u5458\u8d4b\u503c\n    strcpy(student1.name, \"C_language\");\n    student1.age = 18;\n    student1.grade = 98.1;\n    printf_struct(student1);\n    return 0;\n}\n\n/*\u8f93\u51fa*/\nStudent Name: C_language\nStudent Age: 18\nStudent Grade: 98.10\n</code></pre> <p>\u4f20\u9012\u7ed3\u6784\u4f53\u6307\u9488</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\nstruct Student\n{\n    /* data */\n    char name[20];\n    int age;\n    float grade;\n};\n\nvoid printf_struct(struct Student *student_ptr)\n{\n    printf(\"Student Name: %s\\n\", student_ptr-&gt;name);\n    printf(\"Student Age: %d\\n\", student_ptr-&gt;age);\n    printf(\"Student Grade: %.2f\\n\", student_ptr-&gt;grade);\n}\n\nint main()\n{\n    //\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u53d8\u91cf\n    struct Student student1;\n    //\u6210\u5458\u8d4b\u503c\n    strcpy(student1.name, \"C_language\");\n    student1.age = 18;\n    student1.grade = 98.1;\n    printf_struct(&amp;student1);\n    return 0;\n}\n</code></pre>"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#54-typedef","title":"5.4 Typedef\u4f7f\u7528","text":"<p>\u5f88\u591a\u573a\u5408<code>typedef struct Student</code>\u4f1a\u76f4\u63a5\u5199\u51fa<code>typedef struct</code>\u90fd\u662f\u4e00\u4e2a\u610f\u601d\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\n// \u5b9a\u4e49\u7ed3\u6784\u4f53\u7c7b\u578b\uff0c\u5e76\u4f7f\u7528 typedef \u4e3a\u7ed3\u6784\u4f53\u7c7b\u578b\u8d77\u522b\u540d\ntypedef struct Student\n{\n    char name[20];\n    int age;\n    float grade;\n}Student;  // \u8fd9\u91cc\u7684 Student \u5c31\u662f\u7ed3\u6784\u4f53\u7c7b\u578b\u7684\u522b\u540d\n\nint main()\n{\n    Student student1;\n    strcpy(student1.name, \"C_language\");\n    student1.age = 18;\n    student1.grade = 98.1;\n    // \u8bbf\u95ee\u7ed3\u6784\u4f53\u6210\u5458\n    printf(\"Student Name: %s\\n\", student1.name);\n    printf(\"Student Age: %d\\n\", student1.age);\n    printf(\"Student Grade: %.2f\\n\", student1.grade);\n\n    return 0;\n}\n</code></pre>"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#55","title":"5.5 \u7ed3\u6784\u4f53\u6570\u7ec4","text":"C<pre><code>#include &lt;stdio.h&gt;\n\nstruct Student {\n    char name[50];\n    int age;\n    float grade;\n};\n\nint main() {\n    struct Student students[2] = {\n        {\"Alice\", 21, 91.2},\n        {\"Bob\", 22, 85.5}\n    };\n\n    // \u8bbf\u95ee\u7ed3\u6784\u4f53\u6570\u7ec4\u7684\u6210\u5458\n    for (int i = 0; i &lt; 2; i++) {\n        printf(\"Student %d Name: %s\\n\", i + 1, students[i].name);\n        printf(\"Age: %d\\n\", students[i].age);\n        printf(\"Grade: %.2f\\n\\n\", students[i].grade);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#56","title":"5.6 \u5d4c\u5957\u7ed3\u6784\u4f53","text":"C<pre><code>#include &lt;stdio.h&gt;\n\n// \u5b9a\u4e49\u5d4c\u5957\u7684\u7ed3\u6784\u4f53\ntypedef struct {\n    char street[50];\n    char city[30];\n    char zip[10];\n} Address; // \u5730\u5740\u7ed3\u6784\u4f53\n\ntypedef struct {\n    char name[50];\n    int age;\n    Address address; // \u5d4c\u5957 Address \u7ed3\u6784\u4f53\n} Person; // \u4eba\u5458\u7ed3\u6784\u4f53\n\nint main() {\n    // \u521b\u5efa\u4e00\u4e2a Person \u7c7b\u578b\u7684\u53d8\u91cf\u5e76\u521d\u59cb\u5316\n    Person person1 = {\n        \"Alice\",\n        25,\n        {\n            \"123 Main St\",\n            \"New York\",\n            \"10001\"\n        }\n    };\n\n    // \u6253\u5370\u5d4c\u5957\u7ed3\u6784\u4f53\u7684\u5185\u5bb9\n    printf(\"Name: %s\\n\", person1.name);\n    printf(\"Age: %d\\n\", person1.age);\n    printf(\"Address: %s, %s, %s\\n\",\n           person1.address.street,\n           person1.address.city,\n           person1.address.zip);\n\n    return 0;\n}\n\n/*\u8f93\u51fa*/\nName: Alice\nAge: 25\nAddress: 123 Main St, New York, 10001\n</code></pre>"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#6","title":"6. \u679a\u4e3e","text":""},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#61","title":"6.1 \u679a\u4e3e\u57fa\u7840","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u679a\u4e3e\u7c7b\u578b\u4e2d\u503c\u4f9d\u6b21\u4e3a 0\uff0c1\uff0c2 ... \u3002</p> C<pre><code>enum Weekday {\n    MONDAY,     // \u9ed8\u8ba4\u503c\u4e3a 0\n    TUESDAY,    // \u9ed8\u8ba4\u503c\u4e3a 1\n    WEDNESDAY,  // \u9ed8\u8ba4\u503c\u4e3a 2\n    THURSDAY10, // \u9ed8\u8ba4\u503c\u4e3a 3\n    FRIDAY      // \u9ed8\u8ba4\u503c\u4e3a 4\n};\n</code></pre> <p>\u4f7f\u7528<code>typedef</code></p> C<pre><code>#include &lt;stdio.h&gt;\n\n// \u5b9a\u4e49\u679a\u4e3e\u5e76\u6307\u5b9a\u5e38\u91cf\u503c\ntypedef enum {\n    MONDAY,     // \u9ed8\u8ba4\u503c\u4e3a 0\n    TUESDAY,    // \u9ed8\u8ba4\u503c\u4e3a 1\n    WEDNESDAY,  // \u9ed8\u8ba4\u503c\u4e3a 2\n    THURSDAY10, // \u9ed8\u8ba4\u503c\u4e3a 3\n    FRIDAY      // \u9ed8\u8ba4\u503c\u4e3a 4\n}Weekday ;\n\nint main()\n{\n    Weekday today;\n    today = WEDNESDAY;\n    printf(\"today:%d\", today);\n    return 0;\n}\n\n/*\u8f93\u51fa*/\ntoday:2\n</code></pre>"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#62","title":"6.2 \u679a\u4e3e\u4e0e\u7ed3\u6784\u4f53\u7684\u5e94\u7528","text":"C<pre><code>// \u57fa\u4e8eSTM32\ntypedef enum\n{\n  GPIO_PIN_RESET = 0u,\n  GPIO_PIN_SET\n} GPIO_PinState;\n\ntypedef struct\n{\n  uint32_t Pin;       /*!&lt; Specifies the GPIO pins to be configured.\n                           This parameter can be any value of @ref GPIO_pins_define */\n\n  uint32_t Mode;      /*!&lt; Specifies the operating mode for the selected pins.\n                           This parameter can be a value of @ref GPIO_mode_define */\n\n  uint32_t Pull;      /*!&lt; Specifies the Pull-up or Pull-Down activation for the selected pins.\n                           This parameter can be a value of @ref GPIO_pull_define */\n\n  uint32_t Speed;     /*!&lt; Specifies the speed for the selected pins.\n                           This parameter can be a value of @ref GPIO_speed_define */\n} GPIO_InitTypeDef;\n\n//\u51fd\u6570\u8c03\u7528\nvoid HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState);\n//\u7ed3\u6784\u4f53\u521d\u59cb\u5316\nGPIO_InitTypeDef GPIO_InitStruct = {0};\n</code></pre>"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#7","title":"7. \u94fe\u8868","text":""},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#71","title":"7.1 \u94fe\u8868\u57fa\u7840","text":"<p>\u5176\u4e2d<code>head</code>\u3001<code>Next</code>\u3001<code>last</code>\u5747\u4e3a\u6307\u9488\uff0c\u84dd\u8272\u7bad\u5934\u4e0e\u7ea2\u8272\u7bad\u5934\u5747\u662f\u6307\u5411\u6574\u4e2a\u8282\u70b9\uff0c\u800c\u7eff\u8272\u8868\u793a\u6307\u5411\u8282\u70b9\u5185\u90e8\u7684<code>Next</code>\u6307\u9488\uff0c\u7070\u8272\u4e3a\u4e0d\u6307\u5411\u3002\u6bcf\u4e00\u4e2a\u8282\u70b9\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u4e00\u4e2a\u6210\u5458\u4e3a\u6570\u636e\uff0c\u4e00\u4e2a\u4e3a<code>Next</code>\u6307\u9488\uff0c\u4e0b\u56fe\u5373\u662f\u94fe\u8868\u7ed3\u6784\u793a\u610f\u56fe\uff0c\u4e5f\u662f\u4e0b\u9762\u7684\u6dfb\u52a0\u8282\u70b9\u3001\u6570\u636e\u7684\u4ee3\u7801\u6d41\u7a0b\u793a\u610f\u56fe\u3002</p> <p></p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include \"node.h\"\n\n\nint main()\n{\n    //\u94fe\u8868 head\n    Node * head = NULL;\n    int number;\n    do\n    {\n        scanf(\"Pleases input number: %d\", &amp;number);\n        if (number != -1)\n        {\n            /*\u6570\u636e\u6dfb\u52a0\u81f3\u94fe\u8868*/\n            //\u5728\u5806\u533a\u5f00\u8f9f\u4e00\u4e2a Node\u7ed3\u6784\u4f53\u7684\u5185\u5b58\u7a7a\u95f4, \n            Node *p = (Node*)malloc(sizeof(Node));\n            p-&gt;value = number;\n            //\u65b0\u7684\u7ed3\u70b9 p \u7684Next\u6307\u5411NULL,\u800c\u8ba9\u539f\u6765\u7684\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\uff08last\uff09\u6307\u5411\u8fd9\u4e2a\u65b0\u7684\u7ed3\u70b9\n            p-&gt;next = NULL;\n            //\u627e\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\n            Node* last = head;\n            if (last)\n            {\n                while (last-&gt;next)\n                {\n                    //\u4e00\u5f00\u59cb\uff0clast\u6307\u5411\u7684\u662f\u4e00\u4e2a\u7ed3\u70b9\uff0c\u82e5\u7ed3\u70b9\u4e2d\u7684Next\u6307\u9488\u4e0d\u4e3a\u7a7a\uff0c\u5219\u8ba9\u6307\u9488\u6307\u5411\u7ed3\u70b9\u7684Next\n                    last = last-&gt;next;\n                }\n                //\u8ba9\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\uff08last\uff09\u7684Next\u6307\u5411\u8fd9\u4e2a\u65b0\u7684\u7ed3\u70b9\uff08p\uff09\n                last-&gt;next = p;\n            }\n            else\n            {\n                head = p;\n            }\n        }\n    } while (number != -1);\n\n    return 0;\n}\n</code></pre>"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#72","title":"7.2 \u94fe\u8868\u51fd\u6570","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include \"node.h\"\n\n/* \u81ea\u5b9a\u4e49\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\uff0c\u7528\u4e8e\u5904\u7406head\u88ab\u53cd\u590d\u8c03\u7528\uff0c\u4f46\u4ec5\u4f20\u5165\u503c\u4e0d\u4f1a\u6539\u53d8head\n * \u4e0e\u7ecf\u5178\u7684\u6307\u9488swap()\u51fd\u6570\u7684\u539f\u7406\u4e00\u6837\n */\ntypedef struct _list\n{\n    Node* head;\n}List;\n\nvoid linked_list_add(List* pList, int number);\n\nint main()\n{\n    //\u94fe\u8868 head\n    // Node * head = NULL;\n    List list;\n    list.head = NULL;\n    int number;\n    do\n    {\n        scanf(\"Pleases input number: %d\", &amp;number);\n        if (number != -1)\n        {\n            linked_list_add(&amp;list, number);\n        }\n    } while (number != -1);\n\n    return 0;\n}\n\n/* \n * \u53c2\u6570 pList : \u662f\u4e00\u4e2aList\u6570\u636e\u7c7b\u578b\u7684\u7ed3\u6784\u4f53\u6307\u9488\n */\nvoid linked_list_add(List* pList, int number)\n{\n    /*\u6570\u636e\u6dfb\u52a0\u81f3\u94fe\u8868*/\n    //\u5728\u5806\u533a\u5f00\u8f9f\u4e00\u4e2a Node\u7ed3\u6784\u4f53\u7684\u5185\u5b58\u7a7a\u95f4, \n    Node *p = (Node*)malloc(sizeof(Node));\n    p-&gt;value = number;\n    //\u65b0\u7684\u7ed3\u70b9 p \u7684Next\u6307\u5411NULL,\u800c\u8ba9\u539f\u6765\u7684\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\uff08last\uff09\u6307\u5411\u8fd9\u4e2a\u65b0\u7684\u7ed3\u70b9\n    p-&gt;next = NULL;\n    //\u627e\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\n    Node* last = pList-&gt;head;\n    if (last)\n    {\n        while (last-&gt;next)\n        {\n            //\u4e00\u5f00\u59cb\uff0clast\u6307\u5411\u7684\u662f\u4e00\u4e2a\u7ed3\u70b9\uff0c\u82e5\u7ed3\u70b9\u4e2d\u7684Next\u6307\u9488\u4e0d\u4e3a\u7a7a\uff0c\u5219\u8ba9\u6307\u9488\u6307\u5411\u7ed3\u70b9\u7684Next\n            last = last-&gt;next;\n        }\n        //\u8ba9\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\uff08last\uff09\u7684Next\u6307\u5411\u8fd9\u4e2a\u65b0\u7684\u7ed3\u70b9\uff08p\uff09\n        last-&gt;next = p;\n    }\n    else\n    {\n        pList-&gt;head = p;\n    }\n}\n</code></pre>"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#73","title":"7.3 \u6253\u5370\u94fe\u8868","text":"<p>\u6253\u5370\u94fe\u8868\u51fd\u6570\uff0c\u5b9e\u8d28\u4e0a\u5c31\u662f\u904d\u5386\u94fe\u8868\uff0c\u7136\u540e\u6253\u5370\u6570\u636e\uff0c\u5176\u4e2d<code>for (p=pList-&gt;head; p; p=p-&gt;next)</code>\u4e3a\u5e38\u89c1\u65b9\u6cd5\u3002</p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include \"node.h\"\n\n/* \u81ea\u5b9a\u4e49\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\uff0c\u7528\u4e8e\u5904\u7406 head\u88ab\u53cd\u590d\u8c03\u7528\uff0c\u4f46\u4ec5\u4f20\u5165\u503c\u4e0d\u4f1a\u6539\u53d8 head\n * \u4e0e\u7ecf\u5178\u7684\u6307\u9488swap()\u51fd\u6570\u7684\u539f\u7406\u4e00\u6837\n */\ntypedef struct _list\n{\n    Node* head;\n}List;\n\nvoid linked_list_add(List* pList, int number);\nvoid linked_list_print(List* pList);\n\nint main()\n{\n    //\u94fe\u8868 head\n    // Node * head = NULL;\n    List list;\n    list.head = NULL;\n    int number;\n    do\n    {\n        scanf(\"%d\", &amp;number);\n        if (number != -1)\n        {\n            linked_list_add(&amp;list, number);\n        }\n    } while (number != -1);\n    linked_list_print(&amp;list);\n    return 0;\n}\n\n/* \n * \u53c2\u6570 pList : \u662f\u4e00\u4e2aList\u6570\u636e\u7c7b\u578b\u7684\u7ed3\u6784\u4f53\u6307\u9488\n */\nvoid linked_list_add(List* pList, int number)\n{\n    /*\u6570\u636e\u6dfb\u52a0\u81f3\u94fe\u8868*/\n    //\u5728\u5806\u533a\u5f00\u8f9f\u4e00\u4e2a Node\u7ed3\u6784\u4f53\u7684\u5185\u5b58\u7a7a\u95f4, \n    Node *p = (Node*)malloc(sizeof(Node));\n    p-&gt;value = number;\n    //\u65b0\u7684\u7ed3\u70b9 p \u7684Next\u6307\u5411NULL,\u800c\u8ba9\u539f\u6765\u7684\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\uff08last\uff09\u6307\u5411\u8fd9\u4e2a\u65b0\u7684\u7ed3\u70b9\n    p-&gt;next = NULL;\n    //\u627e\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\n    Node* last = pList-&gt;head;\n    if (last)\n    {\n        while (last-&gt;next)\n        {\n            //\u4e00\u5f00\u59cb\uff0clast\u6307\u5411\u7684\u662f\u4e00\u4e2a\u7ed3\u70b9\uff0c\u82e5\u7ed3\u70b9\u4e2d\u7684Next\u6307\u9488\u4e0d\u4e3a\u7a7a\uff0c\u5219\u8ba9\u6307\u9488\u6307\u5411\u7ed3\u70b9\u7684Next\n            last = last-&gt;next;\n        }\n        //\u8ba9\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\uff08last\uff09\u7684Next\u6307\u5411\u8fd9\u4e2a\u65b0\u7684\u7ed3\u70b9\uff08p\uff09\n        last-&gt;next = p;\n    }\n    else\n    {\n        pList-&gt;head = p;\n    }\n}\n\n/*\u6253\u5370\u94fe\u8868*/\nvoid linked_list_print(List* pList)\n{\n    Node *p;\n    for (p=pList-&gt;head; p; p=p-&gt;next)\n    {\n        printf(\"%d\\t\", p-&gt;value);\n    }\n    printf(\"\\n\");\n}\n</code></pre>"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#74","title":"7.4 \u94fe\u8868\u7684\u5220\u9664","text":"<p>\u6307\u9488<code>p</code>\u904d\u5386\u5bfb\u627e\u9700\u8981\u5220\u9664\u7684\u7ed3\u70b9\uff0c\u6307\u9488<code>q</code>\u5728\u6307\u9488<code>p</code>\u6307\u5411\u4e0b\u4e00\u7ed3\u70b9\uff08\u4e5f\u5c31\u662fp-&gt;next\uff09\u524d\u6307\u5411<code>p</code>\u3002\u540c\u65f6\u5b58\u5728\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u5373\u5220\u9664\u7684\u7ed3\u70b9\u4e3a\u7b2c\u4e00\u4e2a\u7ed3\u70b9\uff0c\u6b64\u65f6\u9700\u8981\u6307\u9488<code>q</code>\u4e3a\u7a7a\uff0c\u8ba9head\u6307\u9488\u6307\u5411\u4e0b\u4e00\u7ed3\u70b9\uff08\u4e5f\u5c31\u662fp-&gt;next\uff09\u3002</p> Danger <p>\u6839\u636e\u89e3\u91ca\uff0c\u6307\u9488\u53d8\u5316\u4e3a\u84dd\u8272\u81f3\u7eff\u8272\uff1b\u6a59\u8272\u4e3a\u7279\u6b8a\u60c5\u51b5\u3002</p> <p></p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include \"node.h\"\n\n/* \u81ea\u5b9a\u4e49\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\uff0c\u7528\u4e8e\u5904\u7406 head\u88ab\u53cd\u590d\u8c03\u7528\uff0c\u4f46\u4ec5\u4f20\u5165\u503c\u4e0d\u4f1a\u6539\u53d8 head\n * \u4e0e\u7ecf\u5178\u7684\u6307\u9488swap()\u51fd\u6570\u7684\u539f\u7406\u4e00\u6837\n */\ntypedef struct _list\n{\n    Node* head;\n}List;\n\nvoid linked_list_add(List* pList, int number);\nvoid linked_list_print(List* pList);\n\nint main()\n{\n    //\u94fe\u8868 head\n    // Node * head = NULL;\n    List list;\n    list.head = NULL;\n    int number;\n    do\n    {\n        scanf(\"%d\", &amp;number);\n        if (number != -1)\n        {\n            linked_list_add(&amp;list, number);\n        }\n    } while (number != -1);\n    linked_list_print(&amp;list);\n    scanf(\"%d\\n\", &amp;number);\n    Node* p, q;\n    // int isFound = 0;\n    for(q=NULL, list.head; p; q=p, p=p-&gt;next)\n    {\n        if(p-&gt;value = number)\n        {\n            if(q){\n                q-&gt;next = p-&gt;next;\n            }\n            else{\n                list.head = p-&gt;next;\n            }\n            free(p);\n            // printf(\"\u627e\u5230\u4e86\\n\");\n            // isFound = 1;\n            break;\n        }\n    }\n    // if(!isFound) {printf(\"\u672a\u627e\u5230\\n\");}\n    return 0;\n}\n\n/* \n * \u53c2\u6570 pList : \u662f\u4e00\u4e2aList\u6570\u636e\u7c7b\u578b\u7684\u7ed3\u6784\u4f53\u6307\u9488\n */\nvoid linked_list_add(List* pList, int number)\n{\n    /*\u6570\u636e\u6dfb\u52a0\u81f3\u94fe\u8868*/\n    //\u5728\u5806\u533a\u5f00\u8f9f\u4e00\u4e2a Node\u7ed3\u6784\u4f53\u7684\u5185\u5b58\u7a7a\u95f4, \n    Node *p = (Node*)malloc(sizeof(Node));\n    p-&gt;value = number;\n    //\u65b0\u7684\u7ed3\u70b9 p \u7684Next\u6307\u5411NULL,\u800c\u8ba9\u539f\u6765\u7684\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\uff08last\uff09\u6307\u5411\u8fd9\u4e2a\u65b0\u7684\u7ed3\u70b9\n    p-&gt;next = NULL;\n    //\u627e\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\n    Node* last = pList-&gt;head;\n    if (last)\n    {\n        while (last-&gt;next)\n        {\n            //\u4e00\u5f00\u59cb\uff0clast\u6307\u5411\u7684\u662f\u4e00\u4e2a\u7ed3\u70b9\uff0c\u82e5\u7ed3\u70b9\u4e2d\u7684Next\u6307\u9488\u4e0d\u4e3a\u7a7a\uff0c\u5219\u8ba9\u6307\u9488\u6307\u5411\u7ed3\u70b9\u7684Next\n            last = last-&gt;next;\n        }\n        //\u8ba9\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\uff08last\uff09\u7684Next\u6307\u5411\u8fd9\u4e2a\u65b0\u7684\u7ed3\u70b9\uff08p\uff09\n        last-&gt;next = p;\n    }\n    else\n    {\n        pList-&gt;head = p;\n    }\n}\n\n/*\u6253\u5370\u94fe\u8868*/\nvoid linked_list_print(List* pList)\n{\n    Node *p;\n    for (p=pList-&gt;head; p; p=p-&gt;next)\n    {\n        printf(\"%d\\t\", p-&gt;value);\n    }\n    printf(\"\\n\");\n}\n</code></pre>"},{"location":"study/FreeRTOS/0.C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/#75","title":"7.5 \u94fe\u8868\u7684\u6e05\u9664","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include \"node.h\"\n\n/* \u81ea\u5b9a\u4e49\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\uff0c\u7528\u4e8e\u5904\u7406 head\u88ab\u53cd\u590d\u8c03\u7528\uff0c\u4f46\u4ec5\u4f20\u5165\u503c\u4e0d\u4f1a\u6539\u53d8 head\n * \u4e0e\u7ecf\u5178\u7684\u6307\u9488swap()\u51fd\u6570\u7684\u539f\u7406\u4e00\u6837\n */\ntypedef struct _list\n{\n    Node* head;\n}List;\n\nvoid linked_list_add(List* pList, int number);\nvoid linked_list_print(List* pList);\n\nint main()\n{\n    //\u94fe\u8868 head\n    // Node * head = NULL;\n    List list;\n    list.head = NULL;\n    int number;\n    do\n    {\n        scanf(\"%d\", &amp;number);\n        if (number != -1)\n        {\n            linked_list_add(&amp;list, number);\n        }\n    } while (number != -1);\n    linked_list_print(&amp;list);\n    scanf(\"%d\", &amp;number);\n    Node* p;\n    Node* q;\n    int isFound = 0;\n    for(q=NULL, list.head; p; q=p, p=p-&gt;next)\n    {\n        if(p-&gt;value = number)\n        {\n            if(q){\n                q-&gt;next = p-&gt;next;\n            }\n            else{\n                list.head = p-&gt;next;\n            }\n            free(p);\n            printf(\"find it\\n\");\n            isFound = 1;\n            break;\n        }\n    }\n    if(!isFound) {printf(\"not find it\\n\");}\n    //\u6e05\u9664\u94fe\u8868\n    for(p=list.head; p; p=q)\n    {\n        q = p-&gt;next;\n        free(p);\n    }\n\n    return 0;\n}\n\n/* \n * \u53c2\u6570 pList : \u662f\u4e00\u4e2aList\u6570\u636e\u7c7b\u578b\u7684\u7ed3\u6784\u4f53\u6307\u9488\n */\nvoid linked_list_add(List* pList, int number)\n{\n    /*\u6570\u636e\u6dfb\u52a0\u81f3\u94fe\u8868*/\n    //\u5728\u5806\u533a\u5f00\u8f9f\u4e00\u4e2a Node\u7ed3\u6784\u4f53\u7684\u5185\u5b58\u7a7a\u95f4, \n    Node *p = (Node*)malloc(sizeof(Node));\n    p-&gt;value = number;\n    //\u65b0\u7684\u7ed3\u70b9 p \u7684Next\u6307\u5411NULL,\u800c\u8ba9\u539f\u6765\u7684\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\uff08last\uff09\u6307\u5411\u8fd9\u4e2a\u65b0\u7684\u7ed3\u70b9\n    p-&gt;next = NULL;\n    //\u627e\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\n    Node* last = pList-&gt;head;\n    if (last)\n    {\n        while (last-&gt;next)\n        {\n            //\u4e00\u5f00\u59cb\uff0clast\u6307\u5411\u7684\u662f\u4e00\u4e2a\u7ed3\u70b9\uff0c\u82e5\u7ed3\u70b9\u4e2d\u7684Next\u6307\u9488\u4e0d\u4e3a\u7a7a\uff0c\u5219\u8ba9\u6307\u9488\u6307\u5411\u7ed3\u70b9\u7684Next\n            last = last-&gt;next;\n        }\n        //\u8ba9\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\uff08last\uff09\u7684Next\u6307\u5411\u8fd9\u4e2a\u65b0\u7684\u7ed3\u70b9\uff08p\uff09\n        last-&gt;next = p;\n    }\n    else\n    {\n        pList-&gt;head = p;\n    }\n}\n\n/*\u6253\u5370\u94fe\u8868*/\nvoid linked_list_print(List* pList)\n{\n    Node *p;\n    for (p=pList-&gt;head; p; p=p-&gt;next)\n    {\n        printf(\"%d\\t\", p-&gt;value);\n    }\n    printf(\"\\n\");\n}\n</code></pre> C<pre><code>/*\u6700\u7ec8\u94fe\u8f93\u5165\u4e0e\u8f93\u51fa\u7ed3\u679c*/\n1\n2\n3\n4\n5\n-1\n1       2       3       4       5\n2\nfind it\n</code></pre>"},{"location":"study/FreeRTOS/0.%E5%A0%86%E5%92%8C%E6%A0%88/","title":"\u5806\u548c\u6808","text":""},{"location":"study/FreeRTOS/0.%E5%A0%86%E5%92%8C%E6%A0%88/#1","title":"1. \u5c40\u90e8\u53d8\u91cf","text":""},{"location":"study/FreeRTOS/0.%E5%A0%86%E5%92%8C%E6%A0%88/#11","title":"1.1 \u5355\u4e2a\u5c40\u90e8\u53d8\u91cf\u6808\u7a7a\u95f4\u5206\u914d","text":"<p>\u2460 STM32\u82af\u7247\u7684\u57fa\u5730\u5740\uff1a0x20000000----&gt;0x20010000 \u2461 \u6808\u7a7a\u95f4\u4ece0x20010000\u5f00\u59cb\u5206\u914d \u2462 \u5206\u914d<code>r3</code>\u7ed9\u53d8\u91cf<code>b</code>\u5360\u5751 \u2463 \u8d4b\u503c\u7ed9<code>r0</code>\u5bc4\u5b58\u5668<code>0x1c8</code>\uff0c\u5373 456 \u2464 \u5c06<code>r0</code>\u5bc4\u5b58\u5668\u7684\u503c\u5199\u5165\u5230<code>sp</code>\u6240\u6307\u5411\u7684\u5730\u5740\uff0c\u5373<code>r3</code>\u5bc4\u5b58\u5668</p> <p>\u8fd9\u4fbf\u662f\u5c40\u90e8\u53d8\u91cf<code>b=456;</code>\u5206\u914d\u6808\u7a7a\u95f4\u7684\u8fc7\u7a0b\u3002</p> <p></p> <p>\u5b9e\u9645\u6c47\u7f16\u7801\u5c55\u793a\uff08\u57fa\u4e8ekeil5\u8c03\u8bd5\uff09</p> <p></p>"},{"location":"study/FreeRTOS/0.%E5%A0%86%E5%92%8C%E6%A0%88/#12","title":"1.2 \u5c40\u90e8\u6570\u7ec4\u6808\u7a7a\u95f4\u5206\u914d","text":"<p>\u7ee7\u7eed\u521b\u5efa\u4e00\u4e2a<code>volatile char name[100];</code>\uff0c\u89c2\u5bdf\u6808\u7a7a\u95f4\u5206\u914d\uff1a</p> <p></p> <p>\u5f53\u6211\u4eec\u7684<code>char name[100]</code>\u4e3a\u4f7f\u7528\u65f6\uff0c\u662f\u4e0d\u4f1a\u4e3a\u5176\u5206\u914d\u5185\u5b58\u7684\uff0c\u5f53\u6211\u4eec\u5728\u540e\u9762\u4f7f\u7528\u4e86\u8d4b\u503c\u64cd\u4f5c\uff0c\u5c31\u4f1a\u901a\u8fc7<code>SUB</code>\u51cf\u6307\u4ee4\uff0c\u5206\u914d<code>0x68</code>\u5373\u5341\u8fdb\u5236\u7684 104 \u5b57\u8282\u7a7a\u95f4\uff0c\u5176\u4e2d\u5305\u62ec 100 \u7684<code>char name[100]</code>\u548c 4 \u7684 <code>int b</code>\u3002\u540c\u65f6\u53ef\u4ee5\u770b\u5230<code>b</code>\u53d8\u91cf\u7684\u8d4b\u503c\u662f\u5c06<code>r0</code>\u5bc4\u5b58\u5668\u7684\u503c\u5199\u5165\u5230<code>SP</code>\u504f\u79fb<code>0x64</code>\u7684\u4f4d\u7f6e\u3002</p> <p></p>"},{"location":"study/FreeRTOS/0.%E5%A0%86%E5%92%8C%E6%A0%88/#13","title":"1.3 \u5c40\u90e8\u53d8\u91cf\u7684\u91ca\u653e","text":"<p>\u5c40\u90e8\u53d8\u91cf\u7684\u91ca\u653e\uff0c\u4e3b\u8981\u662f\u4f7f\u7528<code>POP</code>\u6307\u4ee4\uff0c\u6bcf\u56de\u6536\u4e00\u4e2a\u5bc4\u5b58\u5668<code>SP</code>\u6307\u9488\u4e0a\u79fb\u4e00\u4f4d\u3002</p> <p></p>"},{"location":"study/FreeRTOS/0.%E5%A0%86%E5%92%8C%E6%A0%88/#2","title":"2. \u5168\u5c40\u53d8\u91cf","text":"<p>\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u7684\u521d\u59cb\u5316\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <ul> <li>\u6709\u521d\u59cb\u503c\u7684\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u662f\u901a\u8fc7<code>copy</code>\u51fd\u6570\uff0c\u5c06Flash\u91cc\u9762\u7684\u6570\u636e\u590d\u5236\u5230\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u7684\u5185\u5b58\u91cc\u9762\u3002</li> <li>\u6ca1\u6709\u521d\u59cb\u503c\u548c\u521d\u59cb\u503c\u4e3a0\u7684\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\uff0c\u8c03\u7528memset\u51fd\u6570\u5c06\u8fd9\u4e9b\u53d8\u91cf\u7684\u5b58\u50a8\u7a7a\u95f4\u6e05\u96f6\uff0c\u7136\u540e\u518d\u8c03\u7528<code>main</code>\u51fd\u6570\u3002</li> </ul> <p></p> <p>\u5176\u4e2d\u5168\u5c40\u53d8\u91cf\u4e0e\u9759\u6001\u53d8\u91cf\u5b58\u653e\u7684\u8d77\u59cb\u5730\u5740\u53ef\u4ee5\u81ea\u5b9a\u4e49\uff0c\u5728keil5\u4e2d\u7684\u8fde\u63a5\u5668\u914d\u7f6e\uff1a</p> <p></p>"},{"location":"study/FreeRTOS/0.%E5%A0%86%E5%92%8C%E6%A0%88/#3","title":"3. \u5806\u548c\u6808\u7b80\u8ff0","text":"<p>\u5806\u662f\u5806\uff0c\u6808\u662f\u6808\uff0c\u4e0d\u80fd\u6df7\u8bb2\u3002</p> <p>\u6808\uff1a</p> <ol> <li>\u5411\u4e0b\u589e\u957f</li> <li>\u4f30\u8ba1\u6808\u5927\u5c0f</li> <li>\u9009\u51fa\u7a7a\u95f2\u7684\u7a7a\u95f4</li> <li>\u6808\u7684\u521d\u59cb\u5730\u5740\u7531\u7a0b\u5e8f\u5458\u81ea\u5df1\u51b3\u5b9a\uff08\u4e00\u822c\u4e3a\u6700\u4e0a\u65b9\u5f00\u59cb\uff09</li> <li>\u4e00\u4e2a\u7a0b\u5e8f\u53ef\u80fd\u6709\u591a\u4e2a\u7ebf\u7a0b\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u5c31\u6709\u4e00\u4e2a\u6808</li> </ol> <p>\u5806\uff1a</p> C<pre><code>char* str;\nstr = malloc(100);\nstrcpy(str, \"OpenHarmony\");\n\nfree(str);\n</code></pre> <p>\u5806\u5c31\u662f\u4e00\u5757\u7528<code>malloc()</code>\u548c<code>free()</code>\u7ba1\u7406\u7684\u7a7a\u95f2\u5185\u5b58\u3002\u6808\u6211\u4eec\u53ea\u80fd\u63a7\u5236\u8d77\u59cb\u5730\u5740\uff0c\u4f46\u662f\u5806\u6211\u4eec\u53ef\u4ee5\u5b8c\u5168\u7531\u81ea\u5df1\u63a7\u5236\u5185\u5b58\u5f00\u8f9f\u3001\u91ca\u653e\u7b49\u3002</p>"},{"location":"study/FreeRTOS/0.%E5%A0%86%E5%92%8C%E6%A0%88/#3_1","title":"3. \u5806","text":""},{"location":"study/FreeRTOS/0.%E5%A0%86%E5%92%8C%E6%A0%88/#4","title":"4. \u6808","text":""},{"location":"study/FreeRTOS/0.%E9%98%85%E8%AF%BB%E5%A3%B0%E6%98%8E/","title":"\u9605\u8bfb\u58f0\u660e","text":""},{"location":"study/FreeRTOS/0.%E9%98%85%E8%AF%BB%E5%A3%B0%E6%98%8E/#_1","title":"\u53c2\u8003\u58f0\u660e","text":"<p>FreeRTOS\u7cfb\u5217\u7684\u53c2\u8003\u8d44\u6599\u4e3a\u97e6\u4e1c\u5c71\u8001\u5e08\u7684B\u7ad9\u6559\u7a0b\uff0c\u5bf9\u4e8e\u89c6\u9891\u4e2d\u6ca1\u6709\u7684\u90e8\u5206\uff0c\u5982\u4efb\u52a1\u901a\u77e5\u3001\u8f6f\u4ef6\u5b9a\u65f6\u5668\u90e8\u5206\uff0c\u53c2\u8003\u6b63\u70b9\u539f\u5b50FreeRTOS\u6559\u7a0b\u53ca\u5176PPT\u8d44\u6599\u3002\u5176\u4e2d\uff0c\u6587\u6863\u4e2d\u4f7f\u7528\u7684\u9a71\u52a8\u4e3a\u81ea\u5df1\u5199\u7684\uff0c\u793a\u4f8b\u4e3a\u53c2\u8003\u97e6\u4e1c\u5c71\u8001\u5e08\u7684B\u7ad9\u6559\u7a0b\u7ed3\u5408\u624b\u8fb9\u8d44\u6e90\u8fdb\u884c\u4fee\u6539\u5f97\u6765\u7684\uff0c\u5e76\u4e0d\u4e00\u6837\uff0c\u540c\u65f6\u4e5f\u5efa\u8bae\u5b66\u4e60\u8005\u81ea\u5df1\u624b\u5199\u7a0b\u5e8f\u4fee\u6539\u548c\u8bbe\u8ba1\u5408\u9002\u81ea\u5df1\u7684\u6848\u4f8b\u5b9e\u9a8c\u3002</p>"},{"location":"study/FreeRTOS/0.%E9%98%85%E8%AF%BB%E5%A3%B0%E6%98%8E/#_2","title":"\u5f00\u53d1\u65b9\u5f0f\u8bf4\u660e","text":"<p>\u5f00\u53d1\u73af\u5883\u4e0eSTM32\u7cfb\u5217\u4e00\u81f4\uff0c\u5f00\u53d1\u677f\u7528\u7684\u4e9a\u535a\u667a\u80fd\u7684ROS\u673a\u5668\u4eba\u63a7\u5236\u677f\u3002</p>"},{"location":"study/FreeRTOS/1.%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%A4%9A%E4%BB%BB%E5%8A%A1%E7%A8%8B%E5%BA%8F/","title":"\u591a\u4efb\u52a1\u7a0b\u5e8f","text":""},{"location":"study/FreeRTOS/1.%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%A4%9A%E4%BB%BB%E5%8A%A1%E7%A8%8B%E5%BA%8F/#11-rtos","title":"1.1 RTOS\u7684\u7edf\u4e00\u63a5\u53e3","text":"<p>\u5728<code>cmsis_os2.c</code>\u6587\u4ef6\u4e2d\u7531\u4e00\u4e2a<code>osThreadNew()</code>\u51fd\u6570\uff0c\u7528\u4e8e\u7edf\u4e00\u5404\u79cd\u64cd\u4f5c\u7cfb\u7edf\u7684\u4efb\u52a1\u63a5\u53e3\uff0c\u6211\u4eec\u5b66\u4e60FreeRTOS\u6240\u4ee5\u4f18\u5148\u4f7f\u7528FreeRTOS\u539f\u751f\u4ee3\u7801\u51fd\u6570\u3002</p> <p></p>"},{"location":"study/FreeRTOS/1.%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%A4%9A%E4%BB%BB%E5%8A%A1%E7%A8%8B%E5%BA%8F/#12-freertos","title":"1.2 FreeRTOS\u9ed8\u8ba4\u4efb\u52a1","text":"<p>\u5728\u4f7f\u7528STM32CubeMX\u914d\u7f6e\u5b8cFreeRTOS\u4ee5\u540e\uff0c\u4f1a\u6709\u4e00\u4e2a\u9ed8\u8ba4\u4efb\u52a1\u751f\u6210\uff0c\u53ef\u4ee5\u5728<code>Core\\Src\\freertos.c</code>\u6587\u4ef6\u4e2d\u627e\u5230\uff1a</p> C<pre><code>void MX_FREERTOS_Init(void) {\n    ...\n    /* creation of defaultTask */\n    defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &amp;defaultTask_attributes);\n\n    /* USER CODE BEGIN RTOS_THREADS */\n    ...\n}\n</code></pre> <p>\u627e\u5230<code>osThreadNew()</code>\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u5373<code>StartDefaultTask()</code>\u51fd\u6570\uff0c\u5e76\u66ff\u6362\u9ed8\u8ba4\u51fd\u6570\u5185\u5bb9\uff0c\u6211\u4eec\u5c31\u6709\u7b2c\u4e00\u4e2a\u5faa\u73af\u4efb\u52a1\uff1a</p> C<pre><code>/* USER CODE END Header_StartDefaultTask */\nvoid StartDefaultTask(void *argument) {\n    /* USER CODE BEGIN StartDefaultTask */\n    /* Infinite loop */\n    for (;;) {\n        rtBuzzer_ON_Time();\n//        osDelay(1);\n    }\n    /* USER CODE END StartDefaultTask */\n}\n</code></pre> Danger <p><code>Bsp_Loop()</code>\u662f\u4e00\u4e2a\u8702\u9e23\u5668\u52a0LED\u7684\u6b7b\u5faa\u73af\u51fd\u6570\u3002</p> <p>\u6b64\u5916\uff0c\u6211\u4eec\u5e94\u77e5\u9053\uff0c\u9ed8\u8ba4\u4efb\u52a1\u5c01\u88c5\u5728<code>MX_FREERTOS_Init()</code>\u51fd\u6570\u4e2d\uff08RTOS\u521d\u59cb\u5316\u51fd\u6570\uff09\uff0c\u5728<code>main.c</code>\u6587\u4ef6\u4e2d\u7ea6 126 \u884c\u53ef\u4ee5\u627e\u5230\u8fd9\u4e2a\u51fd\u6570\u3002</p> C<pre><code>/* Call init function for freertos objects (in cmsis_os2.c) */\nMX_FREERTOS_Init();\n</code></pre>"},{"location":"study/FreeRTOS/1.%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%A4%9A%E4%BB%BB%E5%8A%A1%E7%A8%8B%E5%BA%8F/#13-freertos","title":"1.3 \u521b\u5efa\u4e00\u4e2a\u539f\u751fFreeRTOS\u4efb\u52a1","text":"<p>\u9996\u5148\u4e86\u89e3FreeRTOS\u7684\u4efb\u52a1\u521b\u5efa\u51fd\u6570<code>xTaskCreate()</code>\uff0c\u7136\u540e\u53c2\u8003\u9ed8\u8ba4\u4efb\u52a1<code>osThreadNew()</code>\u7684\u4f20\u5165\u53c2\u6570\u3002</p> C<pre><code>BaseType_t xTaskCreate( TaskFunction_t pxTaskCode, // \u51fd\u6570\u6307\u9488, \u4efb\u52a1\u51fd\u6570\n                        const char * const pcName, // \u4efb\u52a1\u7684\u540d\u5b57\n                        const configSTACK_DEPTH_TYPE usStackDepth, // \u6808\u5927\u5c0f,\u5355\u4f4d\u4e3aword,10\u8868\u793a40\u5b57\u8282\n                        void * const pvParameters, // \u8c03\u7528\u4efb\u52a1\u51fd\u6570\u65f6\u4f20\u5165\u7684\u53c2\u6570\n                        UBaseType_t uxPriority,    // \u4f18\u5148\u7ea7\n                        TaskHandle_t * const pxCreatedTask ); // \u4efb\u52a1\u53e5\u67c4, \u4ee5\u540e\u4f7f\u7528\u5b83\u6765\u64cd\u4f5c\u8fd9\u4e2a\u4efb\u52a1\n</code></pre> <p>\u5173\u4e8e\u9ed8\u8ba4\u4efb\u52a1\u7684\u53c2\u6570\u8bbe\u7f6e\uff0c\u627e\u5230<code>osThreadNew()</code>\u7684\u7b2c\u4e09\u53c2\u6570<code>&amp;defaultTask_attributes</code>\u7684\u5b9a\u4e49\u4f4d\u7f6e\uff1a</p> C<pre><code>/* Definitions for defaultTask */\nosThreadId_t defaultTaskHandle;\nconst osThreadAttr_t defaultTask_attributes = {\n        .name = \"defaultTask\",\n        .stack_size = 128 * 4,\n        .priority = (osPriority_t) osPriorityNormal,\n};\n</code></pre> <p>\u63a5\u4e0b\u6765\u521b\u5efa\uff0c\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u539f\u751f\u4efb\u52a1\uff1a</p> <p>\u2460 \u4efb\u52a1\u51fd\u6570\uff0c\u4f4d\u7f6e\u5728<code>freertos.c</code>\u6587\u4ef6\u7684\u6700\u4e0b\u65b9\uff0c\u51fd\u6570\u7c7b\u578b\u53c2\u6570\u53c2\u8003<code>void StartDefaultTask(void *argument)</code>\uff0c\u6ce8\u610f\u770b\u6ce8\u91ca\u627e\u4efb\u52a1\u51fd\u6570\u5b9a\u4e49\u4f4d\u7f6e\u3002</p> C<pre><code>/* Private application code --------------------------------------------------*/\n/* USER CODE BEGIN Application */\nvoid MyTask(void *argument)\n{\n    rtMotor_Test();\n}\n/* USER CODE END Application */\n</code></pre> <p>\u2461 \u58f0\u660e\u4efb\u52a1\u51fd\u6570\uff0c\u5728C\u8bed\u8a00\u5b66\u4e60\u65f6\u6211\u4eec\u5c31\u77e5\u9053\u7684\u77e5\u8bc6\u70b9\uff0c\u4f4d\u7f6e\u7d27\u6328\u7740<code>void StartDefaultTask(void *argument);</code>\u3002</p> C<pre><code>/* Private function prototypes -----------------------------------------------*/\n/* USER CODE BEGIN FunctionPrototypes */\nvoid MyTask(void *argument);\n/* USER CODE END FunctionPrototypes */\n</code></pre> <p>\u2462 \u521b\u5efa\u4efb\u52a1\uff0c\u4f4d\u7f6e\u5728<code>MX_FREERTOS_Init()</code>\u51fd\u6570\u4e2d\uff0c\u6839\u636e\u6ce8\u91ca\u627e\u4f4d\u7f6e\u521b\u5efa\u6211\u4eec\u81ea\u5df1\u7684\u4efb\u52a1\u3002</p> C<pre><code>/* USER CODE BEGIN RTOS_THREADS */\n/* add threads, ... */\nxTaskCreate(MyTask, \"RbTask_1\", 124, NULL, osPriorityNormal, NULL);\n/* USER CODE END RTOS_THREADS */\n</code></pre>"},{"location":"study/FreeRTOS/1.%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%A4%9A%E4%BB%BB%E5%8A%A1%E7%A8%8B%E5%BA%8F/#14","title":"1.4 \u9a71\u52a8\u521d\u59cb\u5316","text":"C<pre><code>...\n/* Private includes ----------------------------------------------------------*/\n/* USER CODE BEGIN Includes */\n#include \"freertos_ITF.h\"\n/* USER CODE END Includes */\n...\nint main(void) {    \n    ...\n    /* USER CODE BEGIN 2 */\n    Motor_Init();\n    /* USER CODE END 2 */\n    ...\n}\n</code></pre>"},{"location":"study/FreeRTOS/10.%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/","title":"\u4e2d\u65ad\u7ba1\u7406","text":""},{"location":"study/FreeRTOS/10.%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#101","title":"10.1 \u4e2d\u65ad\u4f18\u5148\u7ea7","text":"<p>\u4e2d\u65ad\u4f18\u5148\u7ea7\u5206\u7ec4\u4e00\u5171\u6709 5 \u79cd\u5206\u914d\u65b9\u5f0f\uff1a</p> \u4f18\u5148\u7ea7\u5206\u7ec4 \u62a2\u5360\u4f18\u5148\u7ea7 \u5b50\u4f18\u5148\u7ea7 \u4f18\u5148\u7ea7\u914d\u7f6e\u5bc4\u5b58\u5668\u9ad8 4 \u4f4d NVIC_PriorityGroup_0 0 \u7ea7\u62a2\u5360\u4f18\u5148\u7ea7 0-15 \u7ea7\u5b50\u4f18\u5148\u7ea7 0bit \u7528\u4e8e\u62a2\u5360\u4f18\u5148\u7ea7\uff0c4bit \u7528\u4e8e\u5b50\u4f18\u5148\u7ea7 NVIC_PriorityGroup_1 0-1 \u7ea7\u62a2\u5360\u4f18\u5148\u7ea7 0-7 \u7ea7\u5b50\u4f18\u5148\u7ea7 1bit \u7528\u4e8e\u62a2\u5360\u4f18\u5148\u7ea7\uff0c3bit \u7528\u4e8e\u5b50\u4f18\u5148\u7ea7 NVIC_PriorityGroup_2 0-3 \u7ea7\u62a2\u5360\u4f18\u5148\u7ea7 0-3 \u7ea7\u5b50\u4f18\u5148\u7ea7 2bit \u7528\u4e8e\u62a2\u5360\u4f18\u5148\u7ea7\uff0c2bit \u7528\u4e8e\u5b50\u4f18\u5148\u7ea7 NVIC_PriorityGroup_3 0-7 \u7ea7\u62a2\u5360\u4f18\u5148\u7ea7 0-1 \u7ea7\u5b50\u4f18\u5148\u7ea7 3bit \u7528\u4e8e\u62a2\u5360\u4f18\u5148\u7ea7\uff0c1bit \u7528\u4e8e\u5b50\u4f18\u5148\u7ea7 NVIC_PriorityGroup_4 0-15 \u7ea7\u62a2\u5360\u4f18\u5148\u7ea7 0 \u7ea7\u5b50\u4f18\u5148\u7ea7 4bit \u7528\u4e8e\u62a2\u5360\u4f18\u5148\u7ea7\uff0c0bit \u7528\u4e8e\u5b50\u4f18\u5148\u7ea7 <p>\u5176\u4e2dFreeRTOS\u7684\u4f18\u5148\u7ea7\u5206\u7ec4\u4e3a<code>NVIC_PriorityGroup_4</code>\uff0c\u5c06\u6240\u6709\u4f18\u5148\u7ea7\u4f4d\u6307\u5b9a\u4e3a\u62a2\u5360\u4f18\u5148\u7ea7\u4f4d\uff0c\u65b9\u4fbfFreeRTOS\u7ba1\u7406\u3002\u4f18\u5148\u7ea7\u5206\u7ec4\u7684\u8bbe\u7f6e\u4f4d\u7f6e\u5728<code>HAL_Init()</code>\u51fd\u6570\u4e2d\uff0cSTM32CubeMX\u9ed8\u8ba4\u7684\u4f18\u5148\u7ea7\u5206\u7ec4<code>NVIC_PriorityGroup_4</code>\uff0c\u5728\u88f8\u673a\u7a0b\u5e8f\u4e2d\u6211\u4eec\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u4f18\u5148\u7ea7\u5206\u7ec4\uff0c\u4f46\u5f53\u6211\u4eec\u4f7f\u7528FreeRTOS\u65f6\uff0c\u4fbf\u53ea\u6709<code>NVIC_PriorityGroup_4</code>\u4e00\u4e2a\u9009\u9879\u3002</p> <p>\u5173\u4e8e\u4f18\u5148\u7ea7\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff0c \u4e2d\u65ad\u4f18\u5148\u7ea7\u6570\u503c(0-15)\u8d8a\u5c0f\u8d8a\u4f18\u5148\uff0c\u4efb\u52a1\u4f18\u5148\u7ea7\u6570\u503c(0-31)\u8d8a\u5927\u8d8a\u4f18\u5148</p>"},{"location":"study/FreeRTOS/10.%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#102","title":"10.2 \u4e2d\u65ad\u4f18\u5148\u7ea7\u5bc4\u5b58\u5668","text":"<p>\u4e09\u4e2a\u7cfb\u7edf\u4e2d\u65ad\u4f18\u5148\u7ea7\u914d\u7f6e\u5bc4\u5b58\u5668\uff0c\u5206\u522b\u4e3a SHPR1(0xE000ED18)\u3001 SHPR2(0xE000ED1C)\u3001 SHPR3(0xE000ED20)\uff0c\u6bcf\u4e00\u4e2a\u4e2d\u65ad\u5bc4\u5b58\u5668\u56db\u4e2a\u5b57\u8282\uff0c32Bit\u3002</p> <p></p> <p><code>SysTick</code>\u662fFreeRTOS\u7684\u7cfb\u7edf\u65f6\u57fa\uff0c<code>PendSV</code>\u4e2d\u65ad\u5904\u7406\u4efb\u52a1\u7684\u8c03\u5ea6\uff0cFreeRTOS\u4e2d<code>PendSV</code>\u548c<code>SysTick</code>\u88ab\u8bbe\u7f6e\u6700\u4f4e\u4f18\u5148\u7ea7 15\uff0c\u4fdd\u8bc1\u7cfb\u7edf\u4efb\u52a1\u5207\u6362\u4e0d\u4f1a\u963b\u585e\u7cfb\u7edf\u5176\u4ed6\u4e2d\u65ad\u7684\u54cd\u5e94</p>"},{"location":"study/FreeRTOS/10.%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#103","title":"10.3 \u4e2d\u65ad\u5c4f\u853d\u5bc4\u5b58\u5668","text":"<p>\u4e09\u4e2a\u4e2d\u65ad\u5c4f\u853d\u5bc4\u5b58\u5668\uff0c\u5206\u522b\u4e3a PRIMASK\u3001 FAULTMASK \u548cBASEPRI \uff0c FreeRTOS\u6240\u4f7f\u7528\u7684\u4e2d\u65ad\u7ba1\u7406\u5c31\u662f\u5229\u7528\u7684BASEPRI\u8fd9\u4e2a\u5bc4\u5b58\u5668\u00a0\u3002</p> <p></p> <p><code>BASEPRI</code> \u5bc4\u5b58\u5668\u7684\u4f7f\u7528\uff1a \u4f8b\u5982\uff1a\u5728\u5bc4\u5b58\u5668\u4e2d\u5199\u5165 <code>0x50</code>\uff0c\u7531\u4e8e\u4f4e\u56db\u4f4d\u4e0d\u7528\uff0c\u5219\u5b9e\u9645\u8868\u793a\u7684\u662f\u4e2d\u65ad\u4f18\u5148\u7ea7\u5728 5-15 \u5185\u7684\u5747\u88ab\u5c4f\u853d\uff0c0-4 \u7684\u4e2d\u65ad\u4f18\u5148\u7ea7\u6b63\u5e38\u6267\u884c\u3002</p> <p>\u540c\u65f6\u503c\u5f97\u6ce8\u610f\u7684\u662fFreeRTOS\u53ea\u7ba1\u7406\u4f18\u5148\u7ea7 5-15\u7684\u4e2d\u65ad\uff0c\u6240\u4ee5\u4e2d\u65ad\u670d\u52a1\u51fd\u6570\u7684\u4f18\u5148\u7ea7\u5e94\u5728\u6b64\u8303\u56f4\u3002</p> <p></p>"},{"location":"study/FreeRTOS/10.%E4%B8%AD%E6%96%AD%E7%AE%A1%E7%90%86/#104","title":"10.4 \u4e2d\u65ad\u7ba1\u7406\u51fd\u6570","text":"C<pre><code>#define portDISABLE_INTERRUPTS()                vPortRaiseBASEPRI()\n#define portENABLE_INTERRUPTS()                 vPortSetBASEPRI(0)\n\n/* \u5173\u4e2d\u65ad */\nportFORCE_INLINE static void vPortRaiseBASEPRI( void )\n{\nuint32_t ulNewBASEPRI;\n\n    __asm volatile\n    (\n        \"   mov %0, %1                                              \\n\" \\\n        \"   msr basepri, %0                                         \\n\" \\\n        \"   isb                                                     \\n\" \\\n        \"   dsb                                                     \\n\" \\\n        :\"=r\" (ulNewBASEPRI) : \"i\" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : \"memory\"\n    );\n}\n\n/* \u5f00\u4e2d\u65ad */\nportFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )\n{\n    __asm volatile\n    (\n        \"   msr basepri, %0 \" :: \"r\" ( ulNewMaskValue ) : \"memory\"\n    );\n}\n</code></pre>"},{"location":"study/FreeRTOS/2.%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/","title":"\u5185\u5b58\u7ba1\u7406","text":"<p>FreeRTOS\u5185\u5b58\u7ba1\u7406\u76845\u79cd\u65b9\u6cd5\uff1a</p> \u6587\u4ef6 \u4f18\u70b9 \u7f3a\u70b9 heap_1.c \u5206\u914d\u7b80\u5355\uff0c\u65f6\u95f4\u786e\u5b9a \u53ea\u5206\u914d\u3001\u4e0d\u56de\u6536 heap_2.c \u52a8\u6001\u5206\u914d\u3001\u6700\u4f73\u5339\u914d \u788e\u7247\u3001\u65f6\u95f4\u4e0d\u5b9a heap_3.c \u8c03\u7528\u6807\u51c6\u5e93\u51fd\u6570 \u901f\u5ea6\u6162\u3001\u65f6\u95f4\u4e0d\u5b9a heap_4.c \u76f8\u90bb\u7a7a\u95f2\u5185\u5b58\u53ef\u5408\u5e76 \u53ef\u89e3\u51b3\u788e\u7247\u95ee\u9898\u3001\u65f6\u95f4\u4e0d\u5b9a heap_5.c \u5728heap_4\u57fa\u7840\u4e0a\u652f\u6301\u5206\u9694\u7684\u5185\u5b58\u5757 \u53ef\u89e3\u51b3\u788e\u7247\u95ee\u9898\u3001\u65f6\u95f4\u4e0d\u5b9a <p>\u5e38\u7528\u7684\u4e3a<code>heap_4.c</code>\u3002</p> <p>\u89e3\u91ca\u66f4\u4e3a\u8be6\u7ec6\u7684\u6587\u7ae0\uff1a</p> <p>\u7b2c8\u7ae0 \u5185\u5b58\u7ba1\u7406 | \u767e\u95ee\u7f51</p> <p>FreeRTOS\u8bf4\u660e\u4e66\u5410\u8840\u6574\u7406\u3010\u9002\u5408\u65b0\u624b+\u5165\u95e8\u3011-CSDN\u535a\u5ba2</p>"},{"location":"study/FreeRTOS/3.%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/","title":"\u4efb\u52a1\u7ba1\u7406","text":""},{"location":"study/FreeRTOS/3.%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#31","title":"3.1 \u4efb\u52a1\u7684\u521b\u5efa\u4e0e\u5220\u9664","text":""},{"location":"study/FreeRTOS/3.%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#311","title":"3.1.1 \u4efb\u52a1\u6982\u5ff5","text":"<p>\u51e0\u4e2a\u4efb\u52a1\u7684\u91cd\u8981\u6982\u5ff5\uff1a</p> <ul> <li>\u6808</li> <li>\u4f18\u5148\u7ea7</li> <li>\u4efb\u52a1\u72b6\u6001</li> <li>\u4efb\u52a1\u8c03\u5ea6</li> </ul> Danger <p>\u4efb\u52a1\u6982\u5ff5\u4f1a\u5728\u540e\u9762\u6162\u6162\u5b66\u4e60\uff0c\u73b0\u6682\u4e0d\u5c55\u5f00\u8bf4\u660e\u3002</p>"},{"location":"study/FreeRTOS/3.%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#312","title":"3.1.2 \u521b\u5efa\u4efb\u52a1","text":"<p>\u5728FreeRTOS\u4e2d\uff0c\u4e00\u4e2a\u4efb\u52a1\u5c01\u88c5\u4e3a\u4e00\u4e2a\u51fd\u6570\uff0c\u800c\u51fd\u6570\u7684\u5b9a\u4e49\u5f62\u5f0f\u5982\u4e0b\uff1a</p> C<pre><code>void ATaskFunction( void *pvParameters );\n</code></pre> <p>\u521b\u5efa\u4efb\u52a1\u5730\u65b9\u5f0f\u5206\u4e3a\u4e24\u79cd\uff1a</p> <ul> <li>\u52a8\u6001\u521b\u5efa\u4efb\u52a1\uff1a <code>xTaskCreate</code><ul> <li>\u5373\u901a\u8fc7FreeRTOS\u7684\u5806\u7ba1\u7406\u51fd\u6570\uff08\u5982\uff1a<code>pvPortMalloc</code>\uff09\u5206\u914d\u4efb\u52a1\u6240\u9700\u7684\u5185\u5b58\u7a7a\u95f4\u3002</li> </ul> </li> </ul> C<pre><code>BaseType_t xTaskCreate( \n                        TaskFunction_t pxTaskCode, // \u51fd\u6570\u6307\u9488, \u4efb\u52a1\u51fd\u6570\n                        const char * const pcName, // \u4efb\u52a1\u7684\u540d\u5b57\n                        const configSTACK_DEPTH_TYPE usStackDepth, // \u6808\u5927\u5c0f,\u5355\u4f4d\u4e3aword,\u4e00\u4e2a\u5b57(word)\u56db\u4e2a\u5b57\u8282\n                        void * const pvParameters, // \u8c03\u7528\u4efb\u52a1\u51fd\u6570\u65f6\u4f20\u5165\u7684\u53c2\u6570\n                        UBaseType_t uxPriority,    // \u4f18\u5148\u7ea7\n                        TaskHandle_t * const pxCreatedTask // \u4efb\u52a1\u53e5\u67c4, \u4ee5\u540e\u4f7f\u7528\u5b83\u6765\u64cd\u4f5c\u8fd9\u4e2a\u4efb\u52a1\n);\n</code></pre> <ul> <li>\u9759\u6001\u521b\u5efa\u4efb\u52a1\uff1a <code>xTaskCreateStatic</code><ul> <li>\u4e0e\u52a8\u6001\u521b\u5efa\u4efb\u52a1\u4e0d\u540c\u7684\u5728\u4e8e\uff0c\u9759\u6001\u521b\u5efa\u5728\u7f16\u8bd1\u524d\u521d\u59cb\u5316\u4e00\u4e2a<code>StaticTask_t</code>\u7c7b\u578b\u7684\u6808\uff08\u5373\u4e00\u4e2a\u6570\u7ec4\uff09\u4f9b\u4efb\u52a1\u4f7f\u7528\u3002</li> </ul> </li> </ul> C<pre><code>TaskHandle_t xTaskCreateStatic ( \n                        TaskFunction_t pxTaskCode,   // \u51fd\u6570\u6307\u9488, \u4efb\u52a1\u51fd\u6570\n                        const char * const pcName,   // \u4efb\u52a1\u7684\u540d\u5b57\n                        const uint32_t ulStackDepth, // \u6808\u5927\u5c0f,\u5355\u4f4d\u4e3aword,\u4e00\u4e2a\u5b57(word)\u56db\u4e2a\u5b57\u8282\n                        void * const pvParameters,   // \u8c03\u7528\u4efb\u52a1\u51fd\u6570\u65f6\u4f20\u5165\u7684\u53c2\u6570\n                        UBaseType_t uxPriority,      // \u4f18\u5148\u7ea7\n                        StackType_t * const puxStackBuffer, // \u9759\u6001\u5206\u914d\u7684\u6808\uff0c\u5c31\u662f\u4e00\u4e2abuffer\n                        StaticTask_t * const pxTaskBuffer // \u9759\u6001\u5206\u914d\u7684\u4efb\u52a1\u7ed3\u6784\u4f53\u7684\u6307\u9488\uff0c\u7528\u5b83\u6765\u64cd\u4f5c\u8fd9\u4e2a\u4efb\u52a1\n);\n</code></pre>"},{"location":"study/FreeRTOS/3.%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#313","title":"3.1.3 \u521b\u5efa\u4efb\u52a1\u793a\u4f8b","text":"<p>\u57fa\u4e8e\u7b2c\u4e00\u4e2a\u591a\u4efb\u52a1\u7a0b\u5e8f\u90a3\u4e00\u8282\uff0c\u4fdd\u7559\u9ed8\u8ba4\u7684\u8702\u9e23\u5668\u52a0LED\u95ea\u70c1\u4efb\u52a1\uff0c\u4fee\u6539<code>RbTask_1</code>\u4efb\u52a1\uff0c\u5b8c\u5584\u52a8\u6001\u521b\u5efa\u4efb\u52a1\u6d41\u7a0b\uff1b\u540c\u65f6\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684OLED\u6bcf 500 ms\u81ea\u589e\u9759\u6001\u4efb\u52a1\u3002</p> <p>\u521b\u5efa\u52a8\u6001\u4efb\u52a1</p> <p>\u2460 \u4efb\u52a1\u51fd\u6570</p> C<pre><code>/* Private application code --------------------------------------------------*/\n/* USER CODE BEGIN Application */\nvoid Motor_Task(void *argument)\n{\n    rtMotor_Test();\n}\n\n/* USER CODE END Application */\n</code></pre> <p>\u2461 \u58f0\u660e\u4efb\u52a1\u51fd\u6570</p> C<pre><code>/* Private function prototypes -----------------------------------------------*/\n/* USER CODE BEGIN FunctionPrototypes */\nvoid Motor_Task(void *argument);\n/* USER CODE END FunctionPrototypes */\n</code></pre> <p>\u2462 \u5b9a\u4e49\u4efb\u52a1\u53e5\u67c4\u548c\u8fd4\u56de\u503c\u53d8\u91cf\uff08\u5c40\u90e8\u53d8\u91cf\uff09</p> <p>\u627e\u5230\u4efb\u52a1\u53e5\u67c4\u7c7b\u578b\u7684\u5b9a\u4e49\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u770b\u5230<code>TaskHandle_t</code>\u5176\u5b9e\u662f\u4e00\u4e2avoid\u6307\u9488\uff0c\u901a\u8fc7\u5b98\u65b9\u6ce8\u91ca\u53ef\u4ee5\u77e5\u9053\uff0c\u4efb\u52a1\u53e5\u67c4\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\u7528\u4e8e<code>vTaskDelete</code> \u51fd\u6570\u5220\u9664\u8fd9\u4e2a\u4efb\u52a1\u3002</p> Danger <p>\u5bf9\u4e8e\u5f00\u6e90\u7684\u64cd\u4f5c\u7cfb\u7edf\u6700\u5927\u7684\u597d\u5904\u5c31\u662f\u5f00\u53d1\u8005\u53ef\u4ee5\u7545\u901a\u65e0\u963b\u7684\u9605\u8bfb\u6ce8\u91ca\u6765\u5b66\u4e60\u5b83\uff0c\u56e0\u6b64\u5b66\u4f1a\u9605\u8bfbFreeRTOS\u7684\u6ce8\u91ca\u4e5f\u662f\u91cd\u8981\u7684\u5b66\u4e60\u5185\u5bb9\u3002</p> C<pre><code>/**\n * task. h\n *\n * Type by which tasks are referenced.  For example, a call to xTaskCreate\n * returns (via a pointer parameter) an TaskHandle_t variable that can then\n * be used as a parameter to vTaskDelete to delete the task.\n *\n * \\defgroup TaskHandle_t TaskHandle_t\n * \\ingroup Tasks\n */\ntypedef void * TaskHandle_t;\n</code></pre> <p>\u540c\u6837\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u8fd4\u56de\u503c\u6570\u636e\u7c7b\u578b\u7684\u5b9a\u4e49\uff1a</p> C<pre><code>typedef long BaseType_t;\n</code></pre> <p>\u7531\u4e0a\uff0c\u6211\u4eec\u5b9a\u4e49\u52a8\u6001\u4efb\u52a1\u7684\u4efb\u52a1\u53e5\u67c4\u548c\u8fd4\u56de\u503c\uff1a</p> C<pre><code>void MX_FREERTOS_Init(void) {\n    /* USER CODE BEGIN Init */\n    TaskHandle_t MotorTaskHandle;\n    BaseType_t motor_ret;\n    /* USER CODE END Init */\n    ...\n}\n</code></pre> <p>\u2463 \u521b\u5efa\u52a8\u6001\u4efb\u52a1</p> C<pre><code>/* USER CODE BEGIN RTOS_THREADS */\n/* add threads, ... */\nmotor_ret = xTaskCreate(Motor_Task, \"MotorTask\", 124, NULL, osPriorityNormal, &amp;MotorTaskHandle);\n/* USER CODE END RTOS_THREADS */\n</code></pre> <p>\u521b\u5efa\u9759\u6001\u4efb\u52a1</p> <p>\u2460 \u4efb\u52a1\u51fd\u6570</p> C<pre><code>void OLED_Task(void *argument)\n{\n    OLED_Test();\n}\n</code></pre> <p>\u2461 \u58f0\u660e\u4efb\u52a1\u51fd\u6570</p> C<pre><code>/* Private function prototypes -----------------------------------------------*/\n/* USER CODE BEGIN FunctionPrototypes */\nvoid Motor_Task(void *argument);\nvoid OLED_Task(void *argument);\n/* USER CODE END FunctionPrototypes */\n</code></pre> <p>\u2462 \u5b9a\u4e49\u6808\u548c\u4efb\u52a1\u7ed3\u6784\u4f53\u53d8\u91cf\uff08\u5168\u5c40\u53d8\u91cf\uff09</p> <p><code>StackType_t</code>\u5176\u5b9e\u5c31\u662f<code>uint32_t</code>\u7c7b\u578b\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a 128 \u5143\u7d20\u7684\u6570\u7ec4\uff0c\u56e0\u6b64\u8be5\u4efb\u52a1\u7684\u9759\u6001\u5206\u914d\u6808\u7a7a\u95f4\u4e3a 4x128 \u5b57\u8282\u3002</p> <p><code>StaticTask_t</code>\u662f\u4e00\u4e2aTCB\u7ed3\u6784\u4f53\uff0c\u7ed3\u6784\u4f53\u6210\u5458\u4f1a\u6839\u636e<code>FreeRTOSConfig.h</code>\u7684\u8bbe\u7f6e\u76f8\u5e94\u53d8\u5316\uff0c\u66f4\u591a\u8be6\u60c5\u53ef\u4ee5\u81ea\u884c\u9605\u8bfb\u6e90\u7801\u3002</p> C<pre><code>StackType_t OledStackBuffer[128];\nStaticTask_t OledTaskBuffer;\n</code></pre> <p>\u2463 \u5b9a\u4e49\u4efb\u52a1\u53e5\u67c4\u63a5\u6536\u8fd4\u56de\u503c\uff08\u5168\u5c40\u53d8\u91cf\uff09</p> C<pre><code>TaskHandle_t OledTaskHandle;\n</code></pre> <p>\u2464 \u521b\u5efa\u9759\u6001\u4efb\u52a1</p> C<pre><code>OledTaskHandle = xTaskCreateStatic(\n    OLED_Task, \"OLEDTask\", \n    124, \n    NULL, \n    osPriorityNormal,\n    OledStackBuffer, \n    &amp;OledTaskBuffer\n);\n</code></pre> <p>\u521d\u59cb\u5316\u9a71\u52a8</p> <p>\u5728<code>main.c</code>\u4e2d\u6dfb\u52a0\u5982\u4e0b\u521d\u59cb\u5316\uff1a</p> C<pre><code>...\n/* Private includes ----------------------------------------------------------*/\n/* USER CODE BEGIN Includes */\n#include \"freertos_ITF.h\"\n/* USER CODE END Includes */\n...\nint main(void) {    \n    ...\n    /* USER CODE BEGIN 2 */\n    Motor_Init();\n    OLED_Init();\n    OLED_Clear();\n    /* USER CODE END 2 */\n    ...\n}\n</code></pre>"},{"location":"study/FreeRTOS/3.%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#314","title":"3.1.4 \u4f7f\u7528\u4efb\u52a1\u53c2\u6570\u793a\u4f8b","text":"<p>FreeRTOS\u4e2d\u591a\u4e2a\u4efb\u52a1\u53ef\u4ee5\u4f7f\u7528\u540c\u4e00\u4e2a\u51fd\u6570\uff0c\u7136\u5176\u4e2d\u4ea6\u6709\u5dee\u522b\uff1a</p> <ul> <li>\u6808\u4e0d\u540c\uff08\u56e0\u6b64\u521d\u59cb\u5316\u7684\u5c40\u90e8\u53d8\u91cf\u662f\u5355\u72ec\u7684\uff09</li> <li>\u521b\u5efa\u4efb\u52a1\u65f6\u53ef\u4ee5\u4f20\u5165\u4e0d\u540c\u7684\u53c2\u6570</li> </ul> <p>\u4ee5OLED\u7a0b\u5e8f\u4e3a\u4f8b\uff0c\u540c\u65f6\u4f7f\u7528\u521b\u5efa\u4efb\u52a1\u51fd\u6570\u7684\u53c2\u6570\uff1a</p> <p>\u2460 \u5b9a\u4e49\u4efb\u52a1\u53c2\u6570\u7ed3\u6784\u4f53</p> <p>\u4f7f\u7528<code>typedef</code>\u7ed9\u7ed3\u6784\u4f53\u91cd\u547d\u540d\uff0c\u5e76\u521b\u5efa\u4e24\u4e2a\u6570\u636e\u5b9e\u4f53\u4f5c\u4e3a\u540e\u7eed\u4efb\u52a1 1 \u548c 2 \u7684\u51fd\u6570\u53c2\u6570\u3002</p> C<pre><code>/* Private typedef -----------------------------------------------------------*/\n/* USER CODE BEGIN PTD */\ntypedef struct\n{\n    uint8_t x;\n    uint8_t y;\n    char str[16];\n}Params;\nstatic Params Task1_Params={0, 0,  \"Task1:\"};\nstatic Params Task2_Params={0, 2,  \"Task2:\"};\n/* USER CODE END PTD */\n</code></pre> <p>\u2461 \u4efb\u52a1\u51fd\u6570</p> <p>\u4efb\u52a1\u51fd\u6570\u5185\u5bb9\u662f\u8ba1\u6570\u81ea\u589e\uff0c\u5176\u4e2d<code>g_status</code>\u5168\u5c40\u53d8\u91cf\u662f\u4e3a\u4e86\u4fdd\u62a4<code>I2C</code>\u901a\u4fe1\u5b8c\u6574\u5f53\u7136\u8fd9\u4e0d\u662f\u53ef\u9760\u7684\uff0c\u771f\u6b63\u7684\u89e3\u51b3\u65b9\u6cd5\u540e\u9762\u4f1a\u5b66\u4e60\u5230\uff0c\u8fd9\u91cc\u7559\u4e00\u4e2a\u2753\u3002</p> Danger <p>\u5982\u679c\u4e0d\u52a0\u4fdd\u62a4\u63aa\u65bd\uff0c\u5b9e\u6d4b\u4ee5\u540e\u4f1a\u6709\u5931\u4e00\u4e2a\u4efb\u52a1\u4e00\u4e2a\u6808\u7684\u7406\u8bba\u3002</p> C<pre><code>/* Private variables ---------------------------------------------------------*/\n/* USER CODE BEGIN Variables */\nstatic int g_status = 1;\n/* USER CODE END Variables */\n</code></pre> C<pre><code>/* Private application code --------------------------------------------------*/\n/* USER CODE BEGIN Application */\nvoid OLED_Print_Task(void *argument)\n{\n    Params* p = argument;\n    uint32_t cnt=0;\n    while (1){\n        if(g_status)\n        {\n            g_status = 0;\n            OLED_ShowStr(p-&gt;x, p-&gt;y, p-&gt;str, 16);\n            OLED_ShowNum(p-&gt;x + 6*8, p-&gt;y, cnt, 2, 16);\n            cnt++;\n            g_status = 1;\n        }\n        HAL_Delay(500);\n    }\n\n}\n/* USER CODE END Application */\n</code></pre> <p>\u2462 \u58f0\u660e\u4efb\u52a1\u51fd\u6570</p> C<pre><code>/* Private function prototypes -----------------------------------------------*/\n/* USER CODE BEGIN FunctionPrototypes */\nvoid OLED_Print_Task(void *argument);\n/* USER CODE END FunctionPrototypes */\n</code></pre> <p>\u2463 \u521b\u5efa\u4efb\u52a1\uff08\u4e0d\u4f7f\u7528\u4efb\u52a1\u53e5\u67c4\uff09</p> <p>\u4f20\u5165\u4efb\u52a1\u53c2\u6570\u5730\u5740\u3002</p> C<pre><code>/* USER CODE BEGIN RTOS_THREADS */\n/* add threads, ... */\nxTaskCreate(OLED_Print_Task, \"Task1\", 128, &amp;Task1_Params, osPriorityNormal, NULL);\nxTaskCreate(OLED_Print_Task, \"Task2\", 128, &amp;Task2_Params, osPriorityNormal, NULL);\n/* USER CODE END RTOS_THREADS */\n</code></pre>"},{"location":"study/FreeRTOS/3.%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#315","title":"3.1.5 \u7559\u7591\u2753","text":"<p>\u2753\uff1a \u4e3a\u4ec0\u4e48\u540e\u521b\u5efa\u7684\u4efb\u52a1\u5148\u6267\u884c</p> <p>\u2753\uff1a \u4e3a\u4ec0\u4e48\u7528<code>g_status</code>\u5168\u5c40\u53d8\u91cf\u6765\u4fdd\u62a4\u4efb\u52a1</p>"},{"location":"study/FreeRTOS/3.%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#316","title":"3.1.6 \u5220\u9664\u4efb\u52a1\u793a\u4f8b","text":"<p>\u5220\u9664\u4efb\u52a1\u51fd\u6570 </p> <p>\u524d\u9762\u6211\u4eec\u63d0\u5230\u8fc7\uff0c\u4efb\u52a1\u53e5\u67c4\u53ef\u4ee5\u4f5c\u4e3a<code>vTaskDelete</code>\u53c2\u6570\u5220\u9664\u4efb\u52a1\u3002</p> C<pre><code>void vTaskDelete(TaskHandle_t xTaskToDelete );\n</code></pre> <p>\u4fee\u6539\u9ed8\u8ba4\u4efb\u52a1\uff0c\u5b9e\u73b0\u7b80\u5355\u7684\u5220\u9664\u4efb\u52a1\u903b\u8f91\u793a\u4f8b\uff1a</p> C<pre><code>/* USER CODE END Header_StartDefaultTask */\nvoid StartDefaultTask(void *argument) {\n    /* USER CODE BEGIN StartDefaultTask */\n    TaskHandle_t MotorTaskHandle = NULL;\n    BaseType_t motor_ret;\n    uint8_t KeyNum = 0;\n    /* Infinite loop */\n    while (1) {\n        KeyNum = Get_KeyNum();\n        OLED_ShowNum(0, 0, KeyNum, 1, 16);\n        if (KeyNum) {\n            if (MotorTaskHandle == NULL) {\n                motor_ret = xTaskCreate(\n                        Motor_Task,\n                        \"MotorTask\",\n                        124,\n                        NULL,\n                        osPriorityNormal,\n                        &amp;MotorTaskHandle);\n            }\n        } else {\n            if (MotorTaskHandle != NULL) {\n                vTaskDelete(MotorTaskHandle);\n                Motor_Stop();\n                MotorTaskHandle = NULL;\n            }\n        }\n    }\n    /* USER CODE END StartDefaultTask */\n}\n</code></pre> <p><code>Get_KeyNum</code>\u51fd\u6570\u903b\u8f91\u5982\u4e0b\uff0c<code>Key_Status</code>\u4e3a\u5c01\u88c5\u540e\u7684\u8bfb\u53d6IO\u7ed3\u679c\uff0c\u65e0\u9700\u8fc7\u5206\u7ea0\u7ed3\u9a71\u52a8\u7a0b\u5e8f\uff0c\u6ce8\u610f\u7406\u89e3FreeRTOS\u4f7f\u7528\u3002</p> C<pre><code>uint8_t Get_KeyNum(void)\n{\n    static uint16_t num=0;\n    if (Key_Status == 0)\n    {\n        while (Key_Status==0);\n        num++;\n    }\n    return num%2;\n}\n</code></pre> \u6ce8\u610f <p>\u9891\u7e41\u7684\u521b\u5efa\u548c\u5220\u9664\u4efb\u52a1\u5728\u52a8\u6001\u5206\u914d\u5185\u5b58\u65f6\u4f1a\u5bfc\u81f4\u5185\u5b58\u788e\u7247\u7684\u5b58\u5728\uff0c\u56e0\u6b64\u5220\u9664\u4efb\u52a1\u51fd\u6570\u4f7f\u7528\u5e76\u4e0d\u591a\uff0c\u6545\u7b80\u5355\u4e86\u89e3\u4f7f\u7528\u65b9\u6cd5\u5373\u53ef\u3002</p>"},{"location":"study/FreeRTOS/3.%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#32","title":"3.2 \u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u4e0e\u72b6\u6001","text":""},{"location":"study/FreeRTOS/3.%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#321","title":"3.2.1 \u4efb\u52a1\u72b6\u6001","text":"<ol> <li>Running\uff08\u8fd0\u884c\uff09\u2192\u4efb\u52a1\u8fd0\u884c\u65f6\u5904\u4e8e\u6b64\u72b6\u6001\u3002</li> <li>Ready\uff08\u5c31\u7eea\uff09---&gt;\u672a\u6267\u884c\u7684\u4efb\u52a1\u5904\u4e8e\u6b64\u72b6\u6001\u3002</li> <li>Blocked\uff08\u963b\u585e\uff09---&gt;\u4f1a\u7b49\u5f85\u67d0\u4e00\u4e8b\u4ef6Event\uff0c\u5728\u8fd0\u884c<code>vTaskDelay</code>\u51fd\u6570\u65f6\u5c31\u5904\u4e8e\u6b64\u72b6\u6001\u3002</li> <li>Suspended\uff08\u6682\u505c\u6216\u6302\u8d77\uff09\u2192\u2460 \u4e00\u4e2a\u4efb\u52a1\u53ef\u4ee5\u81ea\u5df1\u8c03\u7528<code>vTaskSuspend</code>\u51fd\u6570\u7f6e\u6b64\u72b6\u6001\u3002                                                   \u2192\u2461 \u4e5f\u53ef\u4ee5\u7531\u5176\u4ed6\u4efb\u52a1\u8c03\u7528<code>vTaskSuspend</code>\u51fd\u6570\u7f6e\u4e00\u4e2a\u4efb\u52a1\u4e3a\u6b64\u72b6\u6001</li> </ol> <p>\u5b8c\u6574\u7684\u72b6\u6001\u8f6c\u6362\u56fe\uff1a</p> <p></p> <p>\u6682\u505c\u903b\u8f91\u793a\u4f8b\uff1a</p> C<pre><code>01 while (1)\n\n02 {\n\n03   /* \u8bfb\u53d6\u7ea2\u5916\u9065\u63a7\u5668 */\n\n04      if (0 == IRReceiver_Read(&amp;dev, &amp;data))\n\n05      {       \n\n06          if (data == 0xa8) /* play */\n\n07          {\n\n08              /* \u521b\u5efa\u64ad\u653e\u97f3\u4e50\u7684\u4efb\u52a1 */\n\n09           extern void PlayMusic(void *params);\n\n10           if (xSoundTaskHandle == NULL)\n\n11           {\n\n12                  LCD_ClearLine(0, 0);\n\n13                  LCD_PrintString(0, 0, \"Create Task\");\n\n14                  ret = xTaskCreate(PlayMusic, \"SoundTask\", 128, NULL, osPriorityNormal+1,            &amp;xSoundTaskHandle);\n\n15                  bRunning = 1;\n\n16           }\n\n17           else\n\n18           {\n\n19               /* \u8981\u4e48suspend\u8981\u4e48resume */\n\n20               if (bRunning)\n\n21               {\n\n22                   LCD_ClearLine(0, 0);\n\n23                   LCD_PrintString(0, 0, \"Suspend Task\");\n\n24                   vTaskSuspend(xSoundTaskHandle);\n\n25                   PassiveBuzzer_Control(0); /* \u505c\u6b62\u8702\u9e23\u5668 */\n\n26                   bRunning = 0;\n\n27               }\n\n28               else\n\n29               {\n\n30                   LCD_ClearLine(0, 0);\n\n31                   LCD_PrintString(0, 0, \"Resume Task\");\n\n32                   vTaskResume(xSoundTaskHandle);\n\n33                   bRunning = 1;\n\n34               }\n\n35           }\n\n36          }\n\n37          \n\n38          else if (data == 0xa2) /* power */\n\n39          {\n\n40              /* \u5220\u9664\u64ad\u653e\u97f3\u4e50\u7684\u4efb\u52a1 */\n\n41              if (xSoundTaskHandle != NULL)\n\n42              {\n\n43                  LCD_ClearLine(0, 0);\n\n44                  LCD_PrintString(0, 0, \"Delete Task\");\n\n45                  vTaskDelete(xSoundTaskHandle);\n\n46                  PassiveBuzzer_Control(0); /* \u505c\u6b62\u8702\u9e23\u5668 */\n\n47                  xSoundTaskHandle = NULL;\n\n48              }\n\n49          }\n\n50      }\n\n51  }\n</code></pre>"},{"location":"study/FreeRTOS/3.%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#322","title":"3.2.2 \u4f18\u5148\u7ea7","text":"<ul> <li>\u76f8\u540c\u4f18\u5148\u7ea7\u4efb\u52a1\u8f6e\u6d41\u6267\u884c</li> <li>\u6700\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u5148\u6267\u884c<ul> <li>\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u672a\u6267\u884c\u5b8c\uff0c\u66f4\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u65e0\u6cd5\u6267\u884c</li> <li>\u4e00\u65e6\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u5c31\u7eea\u9a6c\u4e0a\u8fd0\u884c</li> <li>\u6700\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u6709\u591a\u4e2a\uff0c\u5b83\u4eec\u8f6e\u6d41\u6267\u884c</li> </ul> </li> </ul> <ul> <li>\u7528\u94fe\u8868\u7ba1\u7406\u4efb\u52a1</li> </ul> <p>FreeRTOS\u4f18\u5148\u7ea7</p> <p>\u2460 \u5728<code>FreeRTOSConfig.h</code>\u4e2d\u5b9a\u4e49\u7684\u5b8f\u53ef\u77e5\uff0cFreeRTOS\u5171 56 \u4e2a\u4f18\u5148\u7ea7\u3002</p> C<pre><code>#define configMAX_PRIORITIES                     ( 56 )\n</code></pre> <p>\u2461 \u5728<code>task.c</code>\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u94fe\u8868\u6570\u7ec4\uff0c\u5206\u522b\u5b58\u653e\u5404\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u3002</p> C<pre><code>PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ] = {0};\n</code></pre> <p>\u2462 \u4e4b\u524d\u4e00\u76f4\u4f7f\u7528\u5f97\u5230\u4f18\u5148\u7ea7<code>osPriorityNormal</code>\u4e3a\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\u7684\u6210\u5458\u4e4b\u4e00\uff0c 24 \u7ea7\u522b\u4f18\u5148\u7ea7\u3002</p> C<pre><code>osPriorityNormal        = 24,         ///&lt; Priority: normal\n</code></pre> <p>\u2463 \u5728\u5185\u6838\u542f\u52a8<code>osKernelStart</code>\u4e2d\u7684\u8c03\u5ea6\u5668\u542f\u52a8\u51fd\u6570<code>vTaskStartScheduler</code>\u4f1a\u521b\u5efa\u4e00\u4e2a\u7a7a\u95f2\u4efb\u52a1<code>prvIdleTask</code>\u3002</p> C<pre><code>xIdleTaskHandle = xTaskCreateStatic(    prvIdleTask,\n                              configIDLE_TASK_NAME,\n                              ulIdleTaskStackSize,\n                              ( void * ) NULL,\n                              ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),\n                              pxIdleTaskStackBuffer,\n                              pxIdleTaskTCBBuffer ); \n</code></pre> <p>\u2464 \u6bcf\u4e00\u4e2a\u4efb\u52a1\u6709\u4e00\u4e2aTCB\u7ed3\u6784\u4f53\u7ba1\u7406\u3002</p> <p>\u2465 \u5728\u521b\u5efa\u4efb\u52a1\u51fd\u6570<code>xTaskCreate</code>\u4e2d\uff0c\u6709\u4e00\u4e2a\u5c06\u4efb\u52a1\u52a0\u5165\u5c31\u7eea\u94fe\u8868\u7684\u51fd\u6570\u3002</p> C<pre><code>prvAddNewTaskToReadyList( pxNewTCB );\n</code></pre> <p>\u5728\u8be5\u51fd\u6570\u4e2d\u6709\u4f7f\u7528\u5168\u5c40\u6307\u9488<code>pxCurrentTCB</code>\u3002</p> C<pre><code>PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;\n</code></pre> <p>\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff0c\u4ee5\u4e24\u4e2a\u4efb\u52a1\u7684\u7a0b\u5e8f\u4e3a\u4f8b\uff1a</p> <p>\u4e00\u5f00\u59cb<code>pxCurrentTCB</code>\u6307\u9488\u6307\u5411\u7b2c\u4e00\u4e2a\u4efb\u52a1\uff0c\u521b\u5efa\u7b2c\u4e8c\u4e2a\u4efb\u52a1\u65f6\uff0c\u6bd4\u8f83\u4f18\u5148\u7ea7\uff0c\u7136\u540e\u4f9d\u6b21\u6307\u5411\u540c\u4e00\u4f18\u5148\u7ea7\u7684\u4e0b\u4e00\u4e2a\u4efb\u52a1\uff1b\u542f\u52a8\u8c03\u5ea6\u5668\u65f6 0\u4f18\u5148\u7ea7\u7684\u7a7a\u95f2\u4efb\u52a1\uff0c\u7531\u4e8e\u4f18\u5148\u7ea7\u8f83\u4f4e\u6240\u4ee5\u505c\u7559\u5728<code>osPriorityNormal</code>\u7684\u6700\u540e\u521b\u5efa\u7684\u4efb\u52a1\uff1b\u5f53\u4efb\u52a1\u6267\u884c\u65f6\uff0c\u5c31\u4eceTask2\u5f00\u59cb\u3002</p> \u89e3\u51b3\u7559\u75911 <p>\u8fd9\u91cc\u89e3\u91ca\u4e3a\u4ec0\u4e48\u540e\u521b\u5efa\u7684\u4efb\u52a1\u5148\u6267\u884c\u3002</p> C<pre><code>if( xSchedulerRunning == pdFALSE )\n{\n    if( pxCurrentTCB-&gt;uxPriority &lt;= pxNewTCB-&gt;uxPriority )\n    {\n        pxCurrentTCB = pxNewTCB;\n    }\n    else\n    {\n        mtCOVERAGE_TEST_MARKER();\n    }\n}\n</code></pre> <p></p>"},{"location":"study/FreeRTOS/3.%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#323-tick","title":"3.2.3 Tick","text":"<ul> <li>Tick 1ms \u65f6\u949f\u4e2d\u65ad\uff08\u6b63\u5e38\uff09<ul> <li>cnt++</li> <li>\u53d1\u8d77\u8c03\u5ea6\uff0c\u5373\u904d\u5386<code>pxReadyTasksLists</code>\u94fe\u8868\u6570\u7ec4\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u975e\u7a7a\u94fe\u8868\uff0c\u627e\u4e0b\u4e00\u4e2a\u4efb\u52a1</li> </ul> </li> </ul> <ul> <li>Tick 1ms \u65f6\u949f\u4e2d\u65ad\uff08\u6709\u4e00\u4e2a\u9ad8\u4f18\u5148\u7ea7\uff09<ul> <li>cnt++</li> <li>\u5224\u65addelaylist\u94fe\u8868\u4e2d\u7684\u963b\u585e\u6001\u4efb\u52a1\u662f\u5426\u53ef\u6062\u590d</li> <li>\u53d1\u8d77\u8c03\u5ea6\uff0c\u5373\u904d\u5386<code>pxReadyTasksLists</code>\u94fe\u8868\u6570\u7ec4\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u975e\u7a7a\u94fe\u8868\uff0c\u627e\u4e0b\u4e00\u4e2a\u4efb\u52a1</li> </ul> </li> </ul> <ul> <li>Tick 1ms \u65f6\u949f\u4e2d\u65ad\uff08\u6709\u4e00\u4e2a\u9ad8\u4f18\u5148\u7ea7\uff0c\u6709\u4efb\u52a1\u6682\u505c\uff09<ul> <li>\u4efb\u52a1\u6682\u505c\uff0c\u5c06\u4efb\u52a1\u653e\u81f3\u6682\u505c\u94fe\u8868</li> <li>\u9700\u8981\u6062\u590d\u51fd\u6570\u5c06\u4efb\u52a1\u4ece\u6682\u505c\u94fe\u8868\u79fb\u5230\u5c31\u7eea\u94fe\u8868</li> </ul> </li> </ul> <p>\u5173\u4e8e\u5c31\u7eea\u94fe\u8868\u3001Delay\u94fe\u8868\u3001\u6682\u505c\u94fe\u8868\u5747\u53ef\u4ee5\u5728\u6e90\u7801\u4e2d\u627e\u5230\u5b9a\u4e49\u4f4d\u7f6e\uff1a</p> <p></p> <p></p>"},{"location":"study/FreeRTOS/3.%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#324-tick","title":"3.2.4 Tick\u4e2d\u65ad\u793a\u4f8b","text":"<p>\u793a\u4f8b\uff1a\u5047\u8bbe\u6709 4 \u4e2a\u81ea\u5efa\u4efb\u52a1\uff0c\u4e00\u4e2a\u8c03\u5ea6\u51fd\u6570\u521b\u5efa\u7684\u7a7a\u95f2\u4efb\u52a1\uff1b\u5176\u4e2dTask4\u662f\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\uff0c\u4e00\u65e6\u8fdb\u5165\u5c31\u7eea\u6001\uff08Ready\uff09\u7acb\u5373\u6267\u884c\u3002\u540c\u65f6\uff0c\u793a\u4f8b\u4e2d\u4f1a\u7528\u5230\u5ef6\u8fdf\u94fe\u8868\u548c\u6682\u505c\u94fe\u8868\uff0c\u5982\u56fe\u4e2d\u7eff\u8272\u5b57\u4f53\u6240\u793a\u3002</p> <p></p> <p>\u2460 \u82e5\u65e0Task4\uff0c\u53ea\u6709\u4e09\u4e2a\u540c\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\uff0c\u5219\u4efb\u52a1\u65f6\u95f4\u8f74\u5982\u4e0b\uff1a</p> <p></p> <p>\u2461 4 \u4e2a\u4efb\u52a1\uff0c\u5176\u4e2dTask4\u4e2d\u6709<code>vTaskDelay(2);</code>\u7a0b\u5e8f\uff0c\u82e5Tick\u5468\u671f\u4e3a1ms\uff0c\u5219\u4e3a\u7b49\u5f85 2 ms\uff0c\u6b64\u65f6Task4\u4e3a\u963b\u585e\u6001\uff08Blocked\uff09\uff0c\u8981\u4ece\u5c31\u7eea\u94fe\u8868(<code>pxReadyTasksLists</code>)\u5220\u9664\uff0c\u5c06\u4efb\u52a1\u653e\u5230\u5ef6\u8fdf\u94fe\u8868(<code>pxDelayedTaskList</code>)\u3002</p> <p></p> <p>\u2462 \u5728\u2461\u5730\u57fa\u7840\u4e0a\uff0c\u4e3aTask4\u6dfb\u52a0\u4efb\u52a1\u6682\u505c\u548c\u4efb\u52a1\u6062\u590d\uff0c\u5176\u4e2d\u4efb\u52a1\u6682\u505c\u65f6\u5c06Task4\u4ece\u5c31\u7eea\u94fe\u8868(<code>pxReadyTasksLists</code>)\u5220\u9664\uff0c\u5c06\u4efb\u52a1\u653e\u5230\u6682\u505c\u94fe\u8868(<code>xSuspendedTaskList</code>)\u3002\u5f53\u6062\u590dTask4\u5230\u5c31\u7eea\u6001\u65f6\uff0c\u5373\u4f7fTask3\u5730\u4e00\u4e2aTick\u5468\u671f\u8fd8\u6ca1\u6709\u6267\u884c\u5b8c\uff0c\u4e5f\u4f1a\u7acb\u523b\u505c\u6b62\u53bb\u6267\u884cTask4\u3002</p> <p></p>"},{"location":"study/FreeRTOS/3.%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#33-delay","title":"3.3 \u7a7a\u95f2\u4efb\u52a1\u4e0eDelay\u51fd\u6570","text":""},{"location":"study/FreeRTOS/3.%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#331","title":"3.3.1 \u4efb\u52a1\u7684\u9000\u51fa","text":"<p>\u4e0b\u9762\u4e00\u4e2a<code>for</code>\u5faa\u73af\u4efb\u52a1\u6267\u884c\u7ed3\u675f\uff0c\u672a\u6b63\u786e\u9000\u51fa\u4efb\u52a1\uff0c\u4f1a\u5bfc\u81f4Tick\u4e2d\u65ad\u505c\u6b62\uff0c\u4ece\u800c\u65e0\u6cd5\u5207\u6362\u5176\u4ed6\u4efb\u52a1\uff0c\u539f\u56e0\u5728\u4e8e\u89e6\u53d1\u4e86<code>prvTaskExitError</code>\u51fd\u6570\u3002</p> C<pre><code>void Buzzer_Task(void *argument)\n{\n    for (int i = 0; i &lt; 5; i++) {\n        Buzzer_ON_Time();\n    }\n}\n</code></pre> <p>\u4e00\u4e2a\u4efb\u52a1\u7684\u9000\u51fa\u65b9\u5f0f\u6709\u4e24\u79cd\uff1a</p> C<pre><code>//\u81ea\u5df1\u6740\u6b7b\u81ea\u5df1\nvTaskDelete(NULL);\n//\u7531\u522b\u7684\u4efb\u52a1\u6740\u6b7b\nvTaskDelete(TaskHandle_t xTaskToDelete);\n</code></pre> <p>\u52a0\u5165\u9000\u51fa\u4efb\u52a1\u65b9\u5f0f\u540e\uff0c\u5373\u4f7f\u4efb\u52a1\u7ed3\u675f\uff0c\u5176\u4ed6\u4efb\u52a1\u4e5f\u53ef\u4ee5\u6b63\u5e38\u6839\u636eTick\u4e2d\u65ad\u5207\u6362\uff1a</p> C<pre><code>void Buzzer_Task(void *argument)\n{\n    for (int i = 0; i &lt; 5; i++) {\n        Buzzer_ON_Time();\n    }\n    vTaskDelete(NULL);\n}\n</code></pre> <p>\u4e00\u4e2a\u4efb\u52a1\u9000\u51fa\u540e\uff0c\u9700\u8981\u4e00\u4e2a\u4efb\u52a1\u6765\u201c\u6536\u5c38\u201d\uff0c\u5176\u4e2d<code>vTaskDelete(TaskHandle_t xTaskToDelete);</code>\u65b9\u5f0f\u5219\u662f\u7531\u6740\u6b7b\u5b83\u7684\u4efb\u52a1\u6536\u5c38\uff0c\u800c<code>vTaskDelete(NULL);</code>\u65b9\u5f0f\u5219\u9700\u8981\u7a7a\u95f2\u4efb\u52a1\"\u6536\u5c38\"\uff0c\u4ece\u800c\u5f15\u51fa\u672c\u8282\u91cd\u70b9\u3002</p>"},{"location":"study/FreeRTOS/3.%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#332","title":"3.3.2 \u7a7a\u95f2\u4efb\u52a1","text":"<p>\u7a7a\u95f2\u4efb\u52a1\u7684\u4f5c\u7528\u4e4b\u4e00\u5c31\u662f \u91ca\u653e\u88ab\u5220\u9664\u7684\u4efb\u52a1\u7684\u5185\u5b58 \u3002\u7a7a\u95f2\u4efb\u52a1\u53ea\u6709\u5c31\u7eea\u6001\u548c\u8fd0\u884c\u6001\u4e24\u79cd\u72b6\u6001\uff0c\u4e0d\u4f1a\u88ab\u963b\u585e\uff1b\u7136\u800c\uff0c\u7a7a\u95f2\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u4e3a 0 \uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u6709\u4efb\u610f\u4e00\u4e2a\u4efb\u52a1\u5904\u4e8e\u5c31\u7eea\u6001\uff0c\u7a7a\u95f2\u4efb\u52a1\u90fd\u4e0d\u4f1a\u88ab\u6267\u884c\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u6709\u4fdd\u6301\u826f\u597d\u7684\u7f16\u7a0b\u89c4\u8303\uff1a</p> <p>\u6211\u4eec\u65e5\u5e38\u903b\u8f91\u5f00\u53d1\u4f7f\u7528\u7684\u5ef6\u65f6\u51fd\u6570\u90fd\u662f\u6b7b\u5faa\u73af\uff0c\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u5c06\u4ed6\u4eec\u6539\u4e3a<code>vTaskDelay</code>\uff0c\u8fd9\u6837\u5728\u5ef6\u65f6\u9636\u6bb5\uff0c\u4efb\u52a1\u4f1a\u5904\u4e8e\u963b\u585e\u6001\uff0c\u5c31\u6709\u7a7a\u95f2\u4e8b\u4ef6\u53bb\u6267\u884c\u7a7a\u95f2\u4efb\u52a1\uff0c\u4ece\u800c\u91ca\u653e\u88ab\u5220\u9664\u7684\u4efb\u52a1\u7684\u5185\u5b58\u3002</p> <p>\u5728<code>FreeRTOS\\Source\\tasks.c</code>\u4e2d\u6211\u4eec\u53ef\u4ee5\u5728\u7a7a\u95f2\u4efb\u52a1\u4e2d\u627e\u5230\u4e00\u4e2a\u94a9\u5b50\u51fd\u6570<code>vApplicationIdleHook</code>\uff0c\u8fd9\u4e2a\u51fd\u6570\u4e2d\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e00\u4e9b\u7a7a\u95f2\u4efb\u52a1\u65f6\u671f\u6267\u884c\u7684\u7a0b\u5e8f\uff0c\u5728\u4f7f\u7528\u4e4b\u524d\u9700\u8981\u914d\u7f6e<code>configUSE_IDLE_HOOK</code>\u5b8f\u5b9a\u4e49\u3002</p> C<pre><code>#if ( configUSE_IDLE_HOOK == 1 )\n{\n    extern void vApplicationIdleHook( void );\n\n    /* Call the user defined function from within the idle task.  This\n    allows the application designer to add background functionality\n    without the overhead of a separate task.\n    NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,\n    CALL A FUNCTION THAT MIGHT BLOCK. */\n    vApplicationIdleHook();\n}\n#endif /* configUSE_IDLE_HOOK */\n</code></pre>"},{"location":"study/FreeRTOS/3.%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86/#333","title":"3.3.3 \u4e24\u4e2a\u5ef6\u65f6\u51fd\u6570","text":"C<pre><code>void vTaskDelay( const TickType_t xTicksToDelay ); /* xTicksToDelay: \u7b49\u5f85\u591a\u5c11\u7ed9Tick */\n\n/* pxPreviousWakeTime: \u4e0a\u4e00\u6b21\u88ab\u5524\u9192\u7684\u65f6\u95f4\n * xTimeIncrement: \u8981\u963b\u585e\u5230(pxPreviousWakeTime + xTimeIncrement)\n * \u5355\u4f4d\u90fd\u662fTick Count\n */\nBaseType_t xTaskDelayUntil( TickType_t * const pxPreviousWakeTime,\n                            const TickType_t xTimeIncrement );\n</code></pre> <p><code>vTaskDelay</code>\u4e25\u683c\u5ef6\u65f63Tick\uff0c\u6b64\u671f\u95f4\u4e3a\u963b\u585e\u6001\uff0c3Tick\u540e\u6062\u590d\u5c31\u7eea\u6001\u3002</p> <p></p> <p><code>xTaskDelayUntil</code>\u5219\u65e8\u5728\u5b9e\u73b0\u5468\u671f\u8fd0\u884c\uff0c\u9700\u8981\u4f20\u5165\u4e00\u4e2apreTime\uff0c\u4ecepreTime\u5f00\u59cb\u8ba1\u65f63Tick\uff0c\u540e\u6062\u590d\u5c31\u7eea\u6001\u3002</p> <p></p>"},{"location":"study/FreeRTOS/4.%E5%90%8C%E6%AD%A5%E4%BA%92%E6%96%A5/","title":"\u540c\u6b65\u4e92\u65a5","text":""},{"location":"study/FreeRTOS/4.%E5%90%8C%E6%AD%A5%E4%BA%92%E6%96%A5/#41","title":"4.1 \u540c\u6b65\u4e92\u65a5\u6982\u5ff5","text":"<p>\u5bf9\u4e8e\u8d44\u6e90C\uff0c\u4f7f\u7528\u8005A\u548cB\u3002</p> <p>\u540c\u6b65 \uff1a\u5f53A\u6b63\u5728\u4f7f\u7528C\u65f6\uff0cB\u5fc5\u987b\u7b49\u5f85A\u4f7f\u7528\u5b8c\uff0c\u5176\u4e2dA\u3001B\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\u5373B\u4f9d\u8d56A\u4ea7\u751f\u7684\u6570\u636e\u5b8c\u6210\u81ea\u5df1\u7684\u4efb\u52a1\u3002</p> <p>\u4e92\u65a5 \uff1a\u5f53A\u6b63\u5728\u4f7f\u7528C\u65f6\uff0cB\u4e0d\u80fd\u4f7f\u7528C\uff0c\u5f3a\u8c03\u7684\u65f6\u8d44\u6e90C\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u6709\u4e00\u4e2a\u4efb\u52a1\u4f7f\u7528\u3002</p>"},{"location":"study/FreeRTOS/4.%E5%90%8C%E6%AD%A5%E4%BA%92%E6%96%A5/#42","title":"4.2 \u6709\u7f3a\u9677\u7684\u540c\u6b65\u793a\u4f8b","text":"<p>\u5728\u521b\u5efaFreeRTOS\u9879\u76ee\u65f6\uff0c\u7531\u4e8eRTOS\u65f6\u949f\u4f7f\u7528\u7684\u662f<code>SysTick</code>\uff0c\u6211\u9009\u7528\u7684\u7cfb\u7edf\u65f6\u949f\u4e3a<code>TIM6</code>\u3002</p> <p></p> <p>\u501f\u9274<code>\u767e\u95ee\u7f51</code>\u65f6\u949f\u9a71\u52a8\u7a0b\u5e8f\uff0c\u6211\u4eec\u4ee5<code>TIM6</code>\u4e3a\u65f6\u57fa\uff0c\u521b\u5efa\u4e00\u4e2a\u83b7\u53d6\u7cfb\u7edf\u65f6\u95f4\u7684\u9a71\u52a8\uff1a</p> <p><code>timer.h</code></p> C<pre><code>#ifndef ROBOT_TIMER_H\n#define ROBOT_TIMER_H\n#include \"stm32f1xx_hal.h\"\n\nuint64_t system_get_ns(void);\n\n#endif //ROBOT_TIMER_H\n</code></pre> <p><code>timer.c</code></p> C<pre><code>#include \"timer.h\"\n\n\n/**********************************************************************\n * \u51fd\u6570\u540d\u79f0\uff1a system_get_ns\n * \u529f\u80fd\u63cf\u8ff0\uff1a \u83b7\u5f97\u7cfb\u7edf\u65f6\u95f4(\u5355\u4f4dns)\n * \u8f93\u5165\u53c2\u6570\uff1a \u65e0\n * \u8f93\u51fa\u53c2\u6570\uff1a \u65e0\n * \u8fd4 \u56de \u503c\uff1a \u7cfb\u7edf\u65f6\u95f4(\u5355\u4f4dns)\n * \u4fee\u6539\u65e5\u671f        \u7248\u672c\u53f7     \u4fee\u6539\u4eba        \u4fee\u6539\u5185\u5bb9\n * -----------------------------------------------\n * 2023/08/03        V1.0     \u97e6\u4e1c\u5c71         \u521b\u5efa\n ***********************************************************************/\nuint64_t system_get_ns(void)\n{\n    //extern uint32_t HAL_GetTick(void);\n    extern TIM_HandleTypeDef        htim6;\n    TIM_HandleTypeDef *hHalTim = &amp;htim6;\n\n    uint64_t ns = HAL_GetTick();\n    uint64_t cnt;\n    uint64_t reload;\n\n    cnt = __HAL_TIM_GET_COUNTER(hHalTim);\n    reload = __HAL_TIM_GET_AUTORELOAD(hHalTim);\n\n    ns *= 1000000;\n    ns += cnt * 1000000 / reload;\n    return ns;\n}\n</code></pre> <p>\u4efb\u52a1\u51fd\u6570\uff1a</p> C<pre><code>/* \u540c\u6b65\u793a\u4f8b */\nvoid Task_A(void *argument)\n{\n    uint32_t i;\n    OLED_ShowStr(0, 0, \"Waiting\", 16);\n    g_time = system_get_ns();\n    for (i = 0 ; i &lt; 10000000 ; i++ )\n    {\n        g_cnt += i;\n    }\n    g_time = system_get_ns() - g_time;\n    g_count_end = 1;\n    vTaskDelete(NULL);\n}\nvoid Task_B(void *argument)\n{\n    OLED_ShowStr(0, 0, \"Waiting\", 16);\n//    vTaskDelay(3000);\n    while (g_count_end ==0);\n    OLED_Clear();\n    OLED_ShowNum(0, 0, g_time/1000000, 11, 16);\n    OLED_ShowNum(0, 2, g_cnt, 11, 16);\n    vTaskDelete(NULL);\n}\n/* USER CODE END Application */\n</code></pre> <p>\u5176\u4e2d\u5168\u5c40\u53d8\u91cf\u5b9a\u4e49\uff1a</p> C<pre><code>// \u540c\u6b65\u793a\u4f8b\u5168\u5c40\u53d8\u91cf\nstatic volatile uint8_t g_count_end = 0;\nstatic uint32_t g_cnt=0;\nstatic uint64_t g_time=0;\n</code></pre> C<pre><code>/* Private function prototypes -----------------------------------------------*/\n/* USER CODE BEGIN FunctionPrototypes */\nvoid Task_B(void *argument);\nvoid Task_A(void *argument);\n/* USER CODE END FunctionPrototypes */\n</code></pre> C<pre><code>/* USER CODE BEGIN RTOS_THREADS */\n/* add threads, ... */\nxTaskCreate(Task_A, \"TaskA\", 128, NULL, osPriorityNormal, NULL);\nxTaskCreate(Task_B, \"TaskB\", 128, NULL, osPriorityNormal, NULL);\n/* USER CODE END RTOS_THREADS */\n</code></pre> <p>\u6700\u540e\u7684\u8f93\u51fa\u7ed3\u679c\uff1a</p> Text Only<pre><code>\u65f6\u95f4\uff1a5880 ms\n\u8ba1\u6570\u503c\uff1a1228070726412\n</code></pre> <p>\u7136<code>Task_B</code>\u4e2d\u7b49\u5f85\u4e3a\u6b7b\u5faa\u73af\uff0c\u4e0d\u8fdb\u5165\u963b\u585e\u6001\uff0c\u56e0\u6b64\u4f1a\u9891\u7e41\u88ab\u5207\u6362\u5230<code>Task_B</code>\u5374\u53ea\u662f\u505a\u5ef6\u65f6\u4efb\u52a1\uff0c\u8fd9\u4fbf\u662f\u6211\u4eec\u540c\u6b65\u793a\u4f8b\u7684\u7f3a\u9677\u3002\u5728\u6b7b\u5faa\u73af\u524d\u52a0\u4e0a<code>vTaskDelay(3000);</code>\u5c31\u4f1a\u8282\u7701\u8fd1\u4e00\u534a\u65f6\u95f4\uff1a</p> C<pre><code>void Task_B(void *argument)\n{\n    OLED_ShowStr(0, 0, \"Waiting\", 16);\n    vTaskDelay(6000);\n    while (g_count_end ==0);\n    OLED_Clear();\n    OLED_ShowNum(0, 0, g_time/1000000, 11, 16);\n    OLED_ShowNum(0, 2, g_cnt, 11, 16);\n    vTaskDelete(NULL);\n}\n</code></pre> <p>\u8f93\u51fa\uff1a</p> Text Only<pre><code>\u65f6\u95f4\uff1a2969 ms\n\u8ba1\u6570\u503c\uff1a1228070726412\n</code></pre>"},{"location":"study/FreeRTOS/4.%E5%90%8C%E6%AD%A5%E4%BA%92%E6%96%A5/#43","title":"4.3 \u6709\u7f3a\u9677\u7684\u4e92\u65a5\u793a\u4f8b","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7528\u5168\u5c40\u53d8\u91cf<code>g_status</code>\u5b9e\u73b0\u4e92\u65a5\u7684\u793a\u4f8b\uff0c\u4f46\u524d\u9762\u6211\u4eec\u63d0\u5230\u5b83\u662f\u6709\u7f3a\u9677\u7684\u2753\uff1a</p> <p>\u5047\u8bbe\u5982\u4e0b\u573a\u666f\uff1a\u6709\u4e24\u4e2a\u4efb\u52a1A\u3001B\u90fd\u60f3\u8c03\u7528<code>OLED_Print_Task</code>\uff0c\u4efb\u52a1A\u6267\u884c\u5230\u7b2c4\u884c\u4ee3\u7801\u65f6\u53d1\u73b0<code>g_status</code>\u4e3a1\uff0c\u53ef\u4ee5\u8fdb\u5165<code>if</code>\u8bed\u53e5\u5757\uff0c\u5b83\u8fd8\u6ca1\u6267\u884c\u7b2c6\u53e5\u6307\u4ee4\u5c31\u88ab\u5207\u6362\u51fa\u53bb\u4e86\uff1b\u7136\u540e\u4efb\u52a1B\u4e5f\u8c03\u7528<code>OLED_Print_Task</code>\uff0c\u4efb\u52a1B\u6267\u884c\u5230\u7b2c4\u884c\u4ee3\u7801\u65f6\u4e5f\u53d1\u73b0<code>bCanUse</code>\u4e3a1\uff0c\u4e5f\u53ef\u4ee5\u8fdb\u5165if\u8bed\u53e5\u5757\u4f7f\u7528OLED\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\u5e76\u4e0d\u80fd\u5b9e\u73b0\u4e92\u65a5\u64cd\u4f5c\u3002</p> C<pre><code>void OLED_Print_Task(void *argument) {\n    Params *p = argument;\n    uint32_t cnt = 0;\n    while (1) {\n        if (g_status) {\n            g_status = 0;\n            OLED_ShowStr(p-&gt;x, p-&gt;y, p-&gt;str, 16);\n            OLED_ShowNum(p-&gt;x + 6 * 8, p-&gt;y, cnt, 3, 16);\n            cnt++;\n            g_status = 1;\n        }\n        vTaskDelay(500);\n    }\n}\n</code></pre> <p>\u6b64\u65b9\u6cd5\u4e0d\u80fd\u4fdd\u8bc1\u4e00\u5b9a\u5b9e\u73b0\u4e92\u65a5\uff0c\u539f\u56e0\u5728\u4e8e\uff1a\u5728\u5224\u65ad\u8fc7\u7a0b\u4e2d\uff0c\u88ab\u6253\u65ad\u4e86\u3002\u5982\u679c\u5728\u786e\u4fdd\u5728\u5224\u65ad\u65f6\u4e0d\u88ab\u4e2d\u65ad\u6253\u65ad\uff0c\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0c\u56e0\u6b64\u4f18\u5316\u4ee3\u7801\u5982\u4e0b\uff1a</p> C<pre><code>void OLED_Print_Task(void *argument) {\n    Params *p = argument;\n    uint32_t cnt = 0;\n    while (1) {\n        disable_irq();\n        if (g_status) {\n            g_status = 0;\n            OLED_ShowStr(p-&gt;x, p-&gt;y, p-&gt;str, 16);\n            OLED_ShowNum(p-&gt;x + 6 * 8, p-&gt;y, cnt, 3, 16);\n            cnt++;\n            g_status = 1;\n        }\n        enable_irq();\n        vTaskDelay(500);\n    }\n}\n</code></pre> <p>\u7136\u800c\uff0c\u4f7f\u7528\u5173\u95ed\u4e2d\u65ad\u7684\u65b9\u6cd5\u4fdd\u62a4\u4e34\u754c\u8d44\u6e90\u4f1a\u51fa\u73b0\u6d6a\u8d39CPU\u8d44\u6e90\u60c5\u51b5\uff1a</p> <p>\u5047\u8bbe\uff0c\u4e24\u4e2a\u4efb\u52a1\u8c03\u7528<code>OLED_Print_Task</code>\uff0c\u800c\u6bcf\u6b21\u90fd\u662fA\u6210\u529f\u6253\u5370\uff0cB\u4e00\u76f4\u5224\u65ad\u5931\u8d25\uff0c\u6b64\u65f6B\u4e00\u76f4\u5224\u65ad\u5931\u8d25\u7684\u65f6\u95f4\u5185\u5c31\u4f1a\u9020\u6210CPU\u6d6a\u8d39\u3002</p> <p></p> <p>\u6211\u4eec\u671f\u671b\u7684\u7ed3\u679c\u65f6\uff0cB\u5224\u65ad\u5931\u8d25\u540e\u8fdb\u5165\u963b\u585e\u6001\uff0c\u7b49A\u6267\u884c\u5b8c<code>OLED_Print_Task</code>\uff0c\u5524\u9192B\u3002</p> <p></p>"},{"location":"study/FreeRTOS/4.%E5%90%8C%E6%AD%A5%E4%BA%92%E6%96%A5/#44-freertos","title":"4.4 FreeRTOS\u89e3\u51b3\u65b9\u6cd5","text":"<p>\u56fe\u7247\u6765\u6e90\uff1a\u7b2c10\u7ae0 \u540c\u6b65\u4e92\u65a5\u4e0e\u901a\u4fe1 | \u767e\u95ee\u7f51</p> <p>\u80fd\u5b9e\u73b0\u540c\u6b65\u3001\u4e92\u65a5\u7684\u5185\u6838\u65b9\u6cd5\u6709\uff1a \u4efb\u52a1\u901a\u77e5\uff08Task Notification\uff09 \u3001 \u961f\u5217\uff08Queue\uff09 \u3001 \u4e8b\u4ef6\u7ec4\uff08Event Group\uff09 \u3001 \u4fe1\u53f7\u91cf\uff08Semaphore\uff09 \u548c \u4e92\u65a5\u91cf\uff08Mutex\uff09\u3002</p> <p></p>"},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/","title":"\u961f\u5217","text":""},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#51","title":"5.1 \u961f\u5217\u672c\u8d28","text":""},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#511","title":"5.1.1 \u73af\u5f62\u7f13\u51b2\u533a","text":"<p>\u5168\u5c40\u53d8\u91cf\u5bb9\u6613\u51fa\u73b0\u7684\u95ee\u9898\u5df2\u7ecf\u4e3e\u4f8b\u8fc7\uff0c\u800c\u73af\u5f62\u7f13\u51b2\u533a\u5219\u4e0d\u5b9c\u51fa\u73b0\u5168\u5c40\u53d8\u91cf\u7c7b\u4f3c\u95ee\u9898\u3002</p> \u7c7b\u578b \u6570\u636e\u4e2a\u6570 \u4e92\u65a5\u63aa\u65bd \u963b\u585e-\u5524\u9192 \u5168\u5c40\u53d8\u91cf 1 \u65e0 \u65e0 \u73af\u5f62\u7f13\u51b2\u533a \u591a\u4e2a \u65e0 \u65e0 \u961f\u5217 \u591a\u4e2a \u6709 \u6709 <p>\u5173\u4e8e\u73af\u5f62\u7f13\u51b2\u533a\u7684\u8bfb\u5199\u64cd\u4f5c\u53ca\u6570\u636e\u662f\u5426\u6ee1\uff1a</p> <ul> <li>\u7f13\u51b2\u533a\u7a7a\uff1ar\u4f4d\u7f6e == w\u4f4d\u7f6e</li> <li>\u7f13\u51b2\u533a\u6ee1\uff1a\u4e0b\u4e00\u4e2aw\u4f4d\u7f6e == r\u4f4d\u7f6e</li> <li>\u5199\u6570\u636e\u548c\u8bfb\u6570\u636e\u5747\u4ece\u7d22\u5f15 0 \u5f00\u59cb</li> </ul> C<pre><code>/* \u73af\u5f62\u7f13\u51b2\u533a\u903b\u8f91\u793a\u4f8b */\nint buf[8];\nint r = 0, w = 0;\nint next_w = w+1;\nif (next_w == 8) { next_w = 0; }\n//\u5199\u6570\u636e\nif (next_w != r)\n{\n    buf[w] = value;\n    w++;\n    if (w == 8) { w = 0; }\n}\n//\u8bfb\u6570\u636e\nif (r != w)\n{\n    value = buf[r];\n    r++;\n    if (r == 8) { r = 0; }\n}\n</code></pre> <p></p>"},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#512","title":"5.1.2 \u961f\u5217\u7684\u672c\u8d28","text":"<p>\u961f\u5217\u4e2d\uff0c\u6570\u636e\u7684\u8bfb\u5199\u672c\u8d28\u5c31\u662f\u73af\u5f62\u7f13\u51b2\u533a\uff0c\u5728\u8fd9\u4e2a\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u4e92\u65a5\u63aa\u65bd\u3001\u963b\u585e-\u5524\u9192\u673a\u5236\u3002</p> <p>\u2192\u5982\u679c\u8fd9\u4e2a\u961f\u5217\u4e0d\u4f20\u8f93\u6570\u636e\uff0c\u53ea\u8c03\u6574\u201c\u6570\u636e\u4e2a\u6570\u201d\uff0c\u5b83\u5c31\u662f\u4fe1\u53f7\u91cf(semaphore)\u3002</p> <p>\u2192\u5982\u679c\u4fe1\u53f7\u91cf\u4e2d\uff0c\u9650\u5b9a\u201c\u6570\u636e\u4e2a\u6570\u201d\u6700\u5927\u503c\u4e3a1\uff0c\u5b83\u5c31\u662f\u4e92\u65a5\u91cf(mutex)\u3002</p> <p></p> <p>\u5728\u961f\u5217\u4e2d\uff0c\u2460 \u6709\u73af\u5f62\u7f13\u51b2\u533a\uff0c\u7528\u4e8e\u5b58\u653e\u548c\u8bfb\u53d6\u6570\u636e\u3002 \u2461 \u4e24\u4e2a\u94fe\u8868(<code>SendList</code>\u548c<code>ReceiveList</code>)\uff0c\u7528\u4e8e\u6307\u5b9aA\uff08\u6216B\uff09\u5199\uff08\u6216\u8bfb\uff09\u65f6\u5524\u9192\u7684\u4efb\u52a1\u3002</p> <p>\u4ee5\u4efb\u52a1B\uff08\u8bfb\u6570\u5217\uff09\u4e3a\u4f8b\uff0c\u5206\u6790\u4e24\u79cd\u5524\u9192\u65f6\u5e8f\uff1a</p> <p>\u5524\u9192\u65b9\u5f0f\u4e00\uff1a</p> <p>\u2460 TaskB\u8bfb\u961f\u5217\uff0c\u961f\u5217\u4e3a\u7a7a\uff0c\u8fdb\u5165\u963b\u585e\u6001\uff0c\u8bbe\u6709\u8d85\u65f6\u65f6\u95f4\u3002  </p> \u5185\u90e8\u53d8\u5316 <p>\u521b\u5efaTaskB\u8fdb\u5165\u5c31\u7eea\u6001\uff0c\u6b64\u65f6TaskB\u5728 \u5c31\u7eea\u94fe\u8868 (<code>pxReadyTasksLists</code>)\uff1b\u8bfb\u961f\u5217\uff0c\u961f\u5217\u4e3a\u7a7a\uff0c\u8fdb\u5165\u963b\u585e\u6001\uff0c\u6b64\u65f6TaskB\u5728 \u961f\u5217\u63a5\u6536\u94fe\u8868 (<code>ReceiveList</code>)\uff0c\u540c\u65f6\u4f1a\u5165 \u5ef6\u65f6\u94fe\u8868 (<code>pxDelayedTaskList</code>)\u3002</p> <p>\u2461 TaskA\u5199\u961f\u5217\uff0c\u540c\u65f6\u5524\u9192TaskB\u3002  </p> \u5185\u90e8\u53d8\u5316 <p>TaskA\u5e76\u975e\u76f4\u63a5\u5524\u9192TaskB\uff0c\u800c\u662f\u5728 \u961f\u5217\u63a5\u6536\u94fe\u8868 (<code>ReceiveList</code>)\u4e2d\u627e\u5230\u7b2c\u4e00\u4e2a\u4efb\u52a1\uff0c\u5c06\u5176\u653e\u81f3 \u5c31\u7eea\u94fe\u8868 (<code>pxReadyTasksLists</code>)\uff0c\u5e76\u4ece \u961f\u5217\u63a5\u6536\u94fe\u8868 (<code>ReceiveList</code>)\u548c \u5ef6\u65f6\u94fe\u8868 (<code>pxDelayedTaskList</code>)\u4e2d\u5c06TaskB\u5220\u9664\uff0c\u6211\u4eec\u793a\u4f8b\u4e2d\u53ea\u6709\u4e00\u4e2aTaskB\uff0c\u6545\u5c31\u662f\u5524\u9192TaskB\u3002</p> <p>\u2462 TaskB\u6267\u884c\u8bfb\u961f\u5217\u64cd\u4f5c\uff08\u6b64\u65f6\u672a\u5230\u8d85\u65f6\u65f6\u95f4\uff09\u3002</p> <p></p> <p>\u5524\u9192\u65b9\u5f0f\u4e8c\uff1a</p> <p>\u2460 TaskB\u8bfb\u961f\u5217\uff0c\u961f\u5217\u4e3a\u7a7a\uff0c\u8fdb\u5165\u963b\u585e\u6001\uff0c\u8bbe\u6709\u8d85\u65f6\u65f6\u95f4\u3002 </p> <p>\u2461 \u4e00\u76f4\u6ca1\u6709\u4efb\u52a1\u5199\u961f\u5217\uff0c\u901a\u8fc7Tick\u4e2d\u5224\u65ad\u8fbe\u5230\u8d85\u65f6\u65f6\u95f4\uff0c\u5524\u9192TaskB\u3002    </p> \u5185\u90e8\u53d8\u5316 <p>Tick\u4e2d\u65ad\u4f1a\u4ece \u961f\u5217\u63a5\u6536\u94fe\u8868 (<code>ReceiveList</code>)\u548c \u5ef6\u65f6\u94fe\u8868 (<code>pxDelayedTaskList</code>)\u4e2d\u5c06TaskB\u5220\u9664\uff0c\u653e\u5165 \u5c31\u7eea\u94fe\u8868 (<code>pxReadyTasksLists</code>)\u3002</p>"},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#52","title":"5.2 \u961f\u5217\u51fd\u6570","text":"<p>\u672c\u8282\u5747\u4e0d\u63d0\u4f9b\u51fd\u6570\u8be6\u7ec6\u53c2\u6570\u89e3\u91ca\uff0c\u4ec5\u9002\u5f53\u63d0\u4f9b\u6e90\u7801\u6ce8\u91ca\uff0c\u5e0c\u671b\u8bfb\u8005\u638c\u63e1\u901a\u8fc7\u9605\u8bfb\u6e90\u7801\u5b66\u4e60\u51fd\u6570\u7684\u4f7f\u7528\u65b9\u6cd5\u3002</p>"},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#521","title":"5.2.1 \u521b\u5efa\u961f\u5217","text":"<p>\u961f\u5217\u7684\u521b\u5efa\u6709\u4e24\u79cd\u65b9\u6cd5\uff1a</p> <p>\u52a8\u6001\u5206\u914d\u5185\u5b58</p> C<pre><code>/*\n * Creates a new queue instance, and returns a handle by which the new queue\n * can be referenced.\n */\nQueueHandle_t xQueueCreate(\n        UBaseType_t uxQueueLength,\n        UBaseType_t uxItemSize\n);\n</code></pre> <p>\u9759\u6001\u5206\u914d\u5185\u5b58</p> C<pre><code>/*\n * Creates a new queue instance, and returns a handle by which the new queue\n * can be referenced.\n */\nQueueHandle_t xQueueCreateStatic(\n        UBaseType_t uxQueueLength,\n        UBaseType_t uxItemSize,\n        uint8_t *pucQueueStorageBuffer,\n        StaticQueue_t *pxQueueBuffer\n);\n</code></pre>"},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#522","title":"5.2.2 \u590d\u4f4d\u961f\u5217","text":"C<pre><code>/*\n * Reset a queue back to its original empty state.  The return value is now\n * obsolete and is always set to pdPASS.\u2018\n *\n * @param xQueue The handle of the queue being added to the registry.  This\n * is the handle returned by a call to xQueueCreate().\n */\n\nxQueueReset( QueueHandle_t xQueue );\n</code></pre>"},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#523","title":"5.2.3 \u5220\u9664\u961f\u5217","text":"C<pre><code>/**\n * queue. h\n * &lt;pre&gt;void vQueueDelete( QueueHandle_t xQueue );&lt;/pre&gt;\n *\n * Delete a queue - freeing all the memory allocated for storing of items\n * placed on the queue.\n *\n * @param xQueue A handle to the queue to be deleted.\n *\n * \\defgroup vQueueDelete vQueueDelete\n * \\ingroup QueueManagement\n */\nvoid vQueueDelete( QueueHandle_t xQueue )\n</code></pre>"},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#524","title":"5.2.4 \u5199\u961f\u5217","text":"<p>\u5199\u961f\u5217\u628a\u6570\u636e\u5199\u5230\u961f\u5217\u5934\u90e8\uff0c\u4e5f\u53ef\u4ee5\u5199\u5230\u5c3e\u90e8\uff0c\u540c\u65f6\u51fd\u6570\u5206\u5728\u4efb\u52a1\u4e2d\u4f7f\u7528\u548c\u5728\u4e2d\u65ad\u4e2d\u4f7f\u7528\u4e24\u4e2a\u7248\u672c\u3002</p> <p>\u5728\u4efb\u52a1\u4e2d\u4f7f\u7528\uff1a</p> C<pre><code>/* Post an item on a queue.  The item is queued by copy, not by reference.\n * This function must not be called from an interrupt service routine.\n * See xQueueSendFromISR () for an alternative which may be used in an ISR.\n *\n * @param xQueue The handle to the queue on which the item is to be posted.\n *\n * @param pvItemToQueue A pointer to the item that is to be placed on the\n * queue.  The size of the items the queue will hold was defined when the\n * queue was created, so this many bytes will be copied from pvItemToQueue\n * into the queue storage area.\n *\n * @param xTicksToWait The maximum amount of time the task should block\n * waiting for space to become available on the queue, should it already\n * be full.  The call will return immediately if this is set to 0 and the\n * queue is full.  The time is defined in tick periods so the constant\n * portTICK_PERIOD_MS should be used to convert to real time if this is required.\n *\n * @return pdTRUE if the item was successfully posted, otherwise errQUEUE_FULL.\n */\nBaseType_t xQueueSend(\n         QueueHandle_t xQueue,\n         const void * pvItemToQueue,\n         TickType_t xTicksToWait\n );\n\n/* Post an item to the front of a queue. */\nBaseType_t xQueueSendToToFront(\n        QueueHandle_t   xQueue,\n        const void      *pvItemToQueue,\n        TickType_t      xTicksToWait\n);\n\n/* Post an item to the back of a queue. */\nBaseType_t xQueueSendToBack(\n        QueueHandle_t   xQueue,\n        const void      *pvItemToQueue,\n        TickType_t      xTicksToWait\n);\n</code></pre> <p>\u5728\u4e2d\u65ad\u4e2d\u4f7f\u7528\uff1a</p> C<pre><code>/* Post an item to the back of a queue.  It is safe to use this function from\n * within an interrupt service routine.\n *\n * Items are queued by copy not reference so it is preferable to only\n * queue small items, especially when called from an ISR.  In most cases\n * it would be preferable to store a pointer to the item being queued.\n *\n * @param xQueue The handle to the queue on which the item is to be posted.\n *\n * @param pvItemToQueue A pointer to the item that is to be placed on the\n * queue.  The size of the items the queue will hold was defined when the\n * queue was created, so this many bytes will be copied from pvItemToQueue\n * into the queue storage area.\n *\n * @param pxHigherPriorityTaskWoken xQueueSendFromISR() will set\n * *pxHigherPriorityTaskWoken to pdTRUE if sending to the queue caused a task\n * to unblock, and the unblocked task has a priority higher than the currently\n * running task.  If xQueueSendFromISR() sets this value to pdTRUE then\n * a context switch should be requested before the interrupt is exited.\n *\n * @return pdTRUE if the data was successfully sent to the queue, otherwise\n * errQUEUE_FULL.\n */\nBaseType_t xQueueSendFromISR(\n          QueueHandle_t xQueue,\n          const void *pvItemToQueue,\n          BaseType_t *pxHigherPriorityTaskWoken\n);\n\n/* Post an item to the back of a queue. */\nBaseType_t xQueueSendToBackFromISR(\n        QueueHandle_t xQueue,\n        const void *pvItemToQueue,\n        BaseType_t *pxHigherPriorityTaskWoken\n);\n\n/* Post an item to the front of a queue. */\nBaseType_t xQueueSendToFrontFromISR(\n         QueueHandle_t xQueue,\n         const void *pvItemToQueue,\n         BaseType_t *pxHigherPriorityTaskWoken\n );\n</code></pre>"},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#525","title":"5.2.5 \u8bfb\u961f\u5217","text":"C<pre><code>/* Receive an item from a queue.\n * This function must not be used in an interrupt service routine. \n */\nBaseType_t xQueueReceive(\n         QueueHandle_t xQueue,\n         void *pvBuffer,\n         TickType_t xTicksToWait\n);\n\n/* Receive an item from a queue.\n * It is safe to use this function from within an interrupt service routine. \n */\nBaseType_t xQueueReceiveFromISR(\n         QueueHandle_t  xQueue,\n         void   *pvBuffer,\n         BaseType_t *pxTaskWoken\n);\n</code></pre>"},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#526","title":"5.2.6 \u67e5\u8be2\u961f\u5217","text":"C<pre><code>/* Return the number of messages stored in a queue. */\nUBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue );\n/* Return the number of free spaces available in a queue. */\nUBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue );    \n</code></pre>"},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#53","title":"5.3 \u961f\u5217\u793a\u4f8b","text":""},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#531","title":"5.3.1 \u5355\u961f\u5217","text":"<p>\u5916\u90e8\u4e2d\u65ad\u5199\u961f\u5217\uff0cOLED\u4efb\u52a1\u8bfb\u961f\u5217\u5e76\u663e\u793a\u3002</p> <p><code>freertos.c</code>\u6587\u4ef6\u5185\u5bb9\uff1a</p> C<pre><code>/* \u5b9a\u4e49\u961f\u5217\u53e5\u67c4(\u5168\u5c40\u53d8\u91cf) */\nQueueHandle_t g_QueueA;\n</code></pre> C<pre><code>/* \u5b58\u50a8\u961f\u5217\u6570\u636e\u7684\u7ed3\u6784\u4f53 */\ntypedef struct{\n    int32_t speed;\n    int16_t cnt_value;\n    char messages[16];\n}OLEDData;\n</code></pre> <p>\u5b9a\u4e49<code>OLED</code>\u4efb\u52a1\u8bfb\u961f\u5217\uff1a</p> C<pre><code>/* Private application code --------------------------------------------------*/\n/* USER CODE BEGIN Application */\nvoid OLED_Queue_Task(void *argument) {\n    /* \u521b\u5efa\u961f\u5217 */\n    g_QueueA = xQueueCreate(10, sizeof(OLEDData));\n    /* \u5b9a\u4e49\u7ed3\u6784\u4f53 */\n    OLEDData QueueA_Data_Output;\n    while (1) {\n        /* \u8bfb\u961f\u5217A */\n        if ( pdPASS == xQueueReceive(g_QueueA, &amp;QueueA_Data_Output, portMAX_DELAY) ) {\n            /* \u663e\u793a\u961f\u5217A\u6570\u636e */\n            OLED_ShowNum(0, 0, QueueA_Data_Output.speed, 1, 16);\n            OLED_ShowStr(16, 0, QueueA_Data_Output.messages, 16);\n            OLED_ShowNum(0, 2, QueueA_Data_Output.cnt_value, 3, 16);\n        }\n    }\n}\n/* USER CODE END Application */\n</code></pre> C<pre><code>xTaskCreate(OLED_Queue_Task, \"QueueTask1\", 128, NULL, osPriorityNormal, NULL);\n</code></pre> <p>\u5916\u90e8\u4e2d\u65ad\u5199\u961f\u5217\uff1a</p> C<pre><code>void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {\n    /* \u5b9a\u4e49\u53d8\u91cf */\n    extern QueueHandle_t g_QueueA;\n    static int16_t cnt;\n    /* \u5b9a\u4e49\u7ed3\u6784\u4f53 */\n    OLEDData QueueA_Data_Input;\n    if (GPIO_Pin == GPIO_PIN_2) {\n        QueueA_Data_Input.speed = cnt % 10;\n        QueueA_Data_Input.cnt_value = cnt;\n        strcpy(QueueA_Data_Input.messages, \"Writed\");\n        xQueueSendFromISR(g_QueueA, &amp;QueueA_Data_Input, NULL);\n        cnt++;\n    }\n}\n</code></pre>"},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#532","title":"5.3.2 \u591a\u961f\u5217","text":"<p>\u7a0b\u5e8f\u6d41\u7a0b\u5982\u4e0b\uff0c\u4e24\u4e2a\u4efb\u52a1\u4e24\u4e2a\u961f\u5217\uff1a</p> <p></p> <p>\u5b9a\u4e49\u961f\u5217\u53e5\u67c4\u53d8\u91cf\uff1a</p> C<pre><code>/* Private variables ---------------------------------------------------------*/\n/* USER CODE BEGIN Variables */\n// \u5b9a\u4e49\u961f\u5217\u53e5\u67c4\nQueueHandle_t g_QueueA = NULL;\nQueueHandle_t g_QueueB = NULL;\n/* USER CODE END Variables */C\n</code></pre> <p><code>TIM7</code>\u5b9a\u65f6\u4e2d\u65ad\uff0c\u5199\u961f\u5217A\uff1a</p> C<pre><code>void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)\n{\n  /* USER CODE BEGIN Callback 0 */\n    /* \u5b9a\u4e49\u53d8\u91cf */\n    extern QueueHandle_t g_QueueA;\n    static int16_t cnt;\n    /* \u5b9a\u4e49\u7ed3\u6784\u4f53 */\n    EncoderData QueueA_Data_Input;\n    if (htim-&gt;Instance == TIM7) {\n        QueueA_Data_Input.cnt_value = Encoder_Read_CNT(4);\n        QueueA_Data_Input.speed = QueueA_Data_Input.cnt_value % 100;\n        strcpy(QueueA_Data_Input.messages, \"EncoderGet!\");\n//        OLED_ShowNum(0, 0, QueueA_Data_Input.speed, 4, 16);\n//        OLED_ShowStr(40, 0, QueueA_Data_Input.messages, 16);\n//        OLED_ShowNum(0, 2, QueueA_Data_Input.cnt_value, 4, 16);\n        if (g_QueueA != NULL) {\n            xQueueSendFromISR(g_QueueA, &amp;QueueA_Data_Input, NULL);\n        }\n    }\n      /* USER CODE END Callback 0 */\n  if (htim-&gt;Instance == TIM6) {\n    HAL_IncTick();\n  }\n  /* USER CODE BEGIN Callback 1 */\n\n  /* USER CODE END Callback 1 */\n}\n</code></pre> <p><code>OLED</code>\u548c<code>Encoder</code>\u4efb\u52a1\uff1a</p> C<pre><code>/* USER CODE END Header_StartDefaultTask */\nvoid StartDefaultTask(void *argument) {\n    /* USER CODE BEGIN StartDefaultTask */\n    /* Infinite loop */\n    rtMotor_Test();\n    /* USER CODE END StartDefaultTask */\n}\n/* Private application code --------------------------------------------------*/\n/* USER CODE BEGIN Application */\nvoid OLED_Queue_Task(void *argument) {\n    /* \u5b9a\u4e49\u7ed3\u6784 */\n    OLEDData QueueB_Data_Output;\n    while (1) {\n        /* \u8bfb\u961f\u5217B */\n        if (pdTRUE == xQueueReceive(g_QueueB, &amp;QueueB_Data_Output, portMAX_DELAY)) {\n            /* \u663e\u793a\u961f\u5217B\u6570\u636e */\n            OLED_ShowNum(0, 0, QueueB_Data_Output.speed, 4, 16);\n            OLED_ShowStr(40, 0, QueueB_Data_Output.messages, 16);\n            OLED_ShowNum(0, 2, QueueB_Data_Output.cnt_value, 4, 16);\n        }\n        vTaskDelay(200);\n    }\n}\n\nvoid Encoder_Queue_Task(void *argument) {\n    /* \u5b9a\u4e49\u7ed3\u6784 */\n    EncoderData QueueA_Data_Output;\n    OLEDData QueueB_Data_Input;\n    while (1) {\n        /* \u8bfb\u961f\u5217A */\n        if (pdTRUE == xQueueReceive(g_QueueA, &amp;QueueA_Data_Output, portMAX_DELAY)) {\n            /* \u5904\u7406\u961f\u5217A\u6570\u636e */\n            QueueB_Data_Input.cnt_value = (int16_t) (QueueA_Data_Output.cnt_value - 1000);\n            QueueB_Data_Input.speed = (QueueA_Data_Output.speed) % 10;\n            strcpy(QueueB_Data_Input.messages, \"SendOLED!\");\n//            OLED_ShowNum(0, 0, QueueB_Data_Input.speed, 4, 16);\n//            OLED_ShowStr(40, 0, QueueB_Data_Input.messages, 16);\n//            OLED_ShowNum(0, 2, QueueB_Data_Input.cnt_value, 4, 16);\n            /* \u53d1\u9001\u961f\u5217B */\n            if (pdTRUE == xQueueSend(g_QueueB, &amp;QueueB_Data_Input, 0)) {\n                LED_ON();\n            }\n        }\n        vTaskDelay(200);\n    }\n}\n/* USER CODE END Application */\n</code></pre> <p>\u58f0\u660e\u51fd\u6570\uff1a</p> C<pre><code>/* USER CODE BEGIN FunctionPrototypes */\nvoid OLED_Queue_Task(void *argument);\n\nvoid Encoder_Queue_Task(void *argument);\n\n/* USER CODE END FunctionPrototypes */\n</code></pre> <p>\u521b\u5efa\u961f\u5217\u3001\u4efb\u52a1\uff1a</p> C<pre><code>void MX_FREERTOS_Init(void) {\n    /* USER CODE BEGIN Init */\n    /* \u521b\u5efa\u961f\u5217 */\n    g_QueueA = xQueueCreate(10, sizeof(OLEDData));\n    g_QueueB = xQueueCreate(10, sizeof(EncoderData));\n    /* USER CODE END Init */\n    ...\n    /* Create the thread(s) */\n    /* creation of defaultTask */\n    defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &amp;defaultTask_attributes);\n    /* USER CODE BEGIN RTOS_THREADS */\n    /* add threads, ... */\n    xTaskCreate(OLED_Queue_Task, \"QueueTask1\", 128, NULL, osPriorityNormal, NULL);\n    xTaskCreate(Encoder_Queue_Task, \"QueueTask2\", 128, NULL, osPriorityNormal, NULL);\n    /* USER CODE END RTOS_THREADS */\n    ...\n}\n</code></pre> <p>Danger</p> <p>\u8bb0\u5f97\u628a\u9ed8\u8ba4\u4efb\u52a1\u7684\u6808\u5206\u914d\u5c0f\u4e00\u70b9\uff0c\u4e0d\u7136\u5185\u5b58\u4e0d\u591f\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5361\u6b7b\u3002</p>"},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#54","title":"5.4 \u961f\u5217\u96c6","text":""},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#541","title":"5.4.1 \u961f\u5217\u4e0e\u961f\u5217\u96c6","text":"<p>\u961f\u5217\u96c6\u53ef\u4ee5\u5b9e\u73b0\u786c\u4ef6\u6570\u636e\u4e0e\u4e1a\u52a1\u5e94\u7528\u5206\u79bb\uff0c\u5373\u4fbf\u4e8e\u6dfb\u52a0\u786c\u4ef6\u8bbe\u5907\uff0c\u53c8\u6613\u4e8e\u4e00\u76f4\u9a71\u52a8\u7a0b\u5e8f\uff1a</p> <p></p> <p>\u961f\u5217\u4e0e\u961f\u5217\u96c6\uff1a</p> <ol> <li>\u521b\u5efa\u961f\u5217A\u548c\u961f\u5217B</li> <li>\u521b\u5efa\u961f\u5217\u96c6C</li> <li>\u5c06\u961f\u5217A\u548c\u961f\u5217B\u52a0\u5165\u961f\u5217\u96c6C</li> <li>\u5c06\u6570\u636e\u5199\u5165\u961f\u5217A\u6216\u961f\u5217B\uff0c\u961f\u5217\u96c6\u4e2d\u4f1a\u5bf9\u5e94\u5199\u5165\u961f\u5217A\u6216\u961f\u5217B\u7684\u53e5\u67c4</li> <li>\u8bfb\u961f\u5217\u96c6\u5f97\u5230\u961f\u5217\u53e5\u67c4\uff0c\u8bfb\u961f\u5217\u53e5\u67c4\u5373\u53ef\u5f97\u5230\u6570\u636e</li> </ol>"},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#542","title":"5.4.2 \u961f\u5217\u96c6\u51fd\u6570","text":"<p>\u521d\u59cb\u5316</p> <p>\u5728<code>FreeRTOSConfig.h</code>\u6587\u4ef6\u4e2d\uff0c\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\u4fe1\u606f\uff1a</p> C<pre><code>/* USER CODE BEGIN Includes */\n/* Section where include file can be added */\n#define configUSE_QUEUE_SETS     1\n/* USER CODE END Includes */\n</code></pre> <p>\u521b\u5efa\u961f\u5217\u96c6</p> <p>\u961f\u5217\u96c6\u957f\u5ea6 = \u6240\u6709\u961f\u5217\u957f\u5ea6\u548c</p> C<pre><code>QueueSetHandle_t xQueueCreateSet( const UBaseType_t uxEventQueueLength )\n</code></pre> <p>\u961f\u5217\u52a0\u5165\u961f\u5217\u96c6</p> C<pre><code>BaseType_t xQueueAddToSet( QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSet )\n</code></pre> <p>\u8bfb\u961f\u5217</p> C<pre><code>QueueSetMemberHandle_t xQueueSelectFromSet( QueueSetHandle_t xQueueSet, const TickType_t xTicksToWait )\n</code></pre>"},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#55","title":"5.5 \u961f\u5217\u96c6\u793a\u4f8b","text":""},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#551","title":"5.5.1 \u5916\u90e8\u4e2d\u65ad","text":"<p>\u5916\u90e8\u4e2d\u65ad<code>PD2</code>\u8ba1\u6570\u81ea\u589e\uff1a</p> C<pre><code>void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {\n    /* \u5b9a\u4e49\u53d8\u91cf */\n    static int cnt=0;\n    static uint64_t last_time = 0;\n    /* \u5b9a\u4e49\u7ed3\u6784\u4f53 */\n    static xGPIOData GPIO_Queue_Data = {0, 0};\n    uint64_t current_time = system_get_ns()/1000000;\n    if (current_time-last_time &gt; 200) {\n        if (GPIO_Pin == GPIO_PIN_2) {\n            last_time = current_time;\n            /* \u521d\u59cb\u5316\u6570\u636e */\n            cnt++;\n            GPIO_Queue_Data.count = cnt;\n            GPIO_Queue_Data.sum += cnt;\n            /* \u5199GPIO\u961f\u5217 */\n            xQueueSendFromISR(g_GPIO_Queue, &amp;GPIO_Queue_Data, NULL);\n        }\n    }\n    else {\n        last_time = current_time;\n    }\n}\n</code></pre> <p><code>if (current_time-last_time &gt; 200)</code>\u4e3a\u6d88\u6296\uff0c\u7279\u522b\u5728\u7535\u673a\u8f6c\u52a8\u65f6\u5f71\u54cd\u5f88\u5927\uff0c\u5efa\u8bae\u52a0\u4e0a\u3002</p> <p>\u5b9a\u4e49\u961f\u5217\uff1a</p> C<pre><code>/* \u5b9a\u4e49\u961f\u5217 */\nstatic QueueHandle_t g_GPIO_Queue;\n\n/* \u5916\u90e8\u6587\u4ef6\u67e5\u770b\u961f\u5217\u53e5\u67c4 */\nQueueHandle_t GPIO_GetQueueHandle(void) {\n    return g_GPIO_Queue;\n}\n</code></pre> <p>\u7ed3\u6784\u4f53\u5efa\u8bae\u5b9a\u4e49\u5728<code>.h</code>\u6587\u4ef6\uff1a</p> C<pre><code>#define GPIO_QUEUE_LENGTH   10\n\ntypedef struct {\n    uint8_t count;\n    uint16_t sum;\n}xGPIOData;\n</code></pre> <p>\u521b\u5efa\u961f\u5217\u653e\u5728\u521d\u59cb\u5316\u51fd\u6570\uff0c\u82e5\u6ca1\u6709\u5c31\u5355\u72ec\u5b9a\u4e49\u4e00\u4e2a\u521b\u5efa\u961f\u5217\u51fd\u6570\uff1a</p> C<pre><code>/* \u521b\u5efaGPIO\u5916\u90e8\u4e2d\u65ad\u6240\u9700\u961f\u5217 */\nvoid GPIO_QueueInit(void) {\n    g_GPIO_Queue = xQueueCreate(GPIO_QUEUE_LENGTH, sizeof(xGPIOData));\n}\n</code></pre>"},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#552","title":"5.5.2 \u7f16\u7801\u5668\u5b9a\u65f6\u4e2d\u65ad","text":"<p>\u5c06\u5b9a\u65f6\u4e2d\u65ad\u6267\u884c\u7684\u4efb\u52a1\u5c01\u88c5\u6210\u4e00\u4e2a\u51fd\u6570\uff1a</p> C<pre><code>/* \u7f16\u7801\u5668\u4e2d\u65ad\u529f\u80fd\u51fd\u6570 */\nvoid Encoder_Func_IRQ(void) {\n    /* \u5b9a\u4e49\u7ed3\u6784\u4f53 */\n    xEncoderData Encoder_Queue_Data;\n    /* \u521d\u59cb\u5316\u6570\u636e */\n    Encoder_Queue_Data.value = Encoder_Read_CNT(4);\n    Encoder_Queue_Data.speed = (int16_t)(Encoder_Queue_Data.value % 100);\n    strcpy(Encoder_Queue_Data.device, \"M4\");\n    /* \u5199Encoder\u961f\u5217 */\n    xQueueSendFromISR(g_Encoder_Queue, &amp;Encoder_Queue_Data, NULL);\n}\n</code></pre> <p>\u5b9a\u4e49\u961f\u5217\uff1a</p> C<pre><code>/* \u5b9a\u4e49\u961f\u5217 */\nstatic QueueHandle_t g_Encoder_Queue;\n\n/* \u5916\u90e8\u6587\u4ef6\u67e5\u770b\u961f\u5217\u53e5\u67c4 */\nQueueHandle_t Encoder_GetQueueHandle(void) {\n    return g_Encoder_Queue;\n}\n</code></pre> <p>\u7ed3\u6784\u4f53\u5efa\u8bae\u5b9a\u4e49\u5728<code>.h</code>\u6587\u4ef6\uff1a</p> C<pre><code>#define Encoder_QUEUE_LENGTH   10\n\ntypedef struct {\n    char device[6];\n    int32_t value;\n    int16_t speed;\n}xEncoderData;\n</code></pre> <p>\u521b\u5efa\u961f\u5217\u653e\u5728\u521d\u59cb\u5316\u51fd\u6570\uff0c\u82e5\u6ca1\u6709\u5c31\u5355\u72ec\u5b9a\u4e49\u4e00\u4e2a\u521b\u5efa\u961f\u5217\u51fd\u6570\uff1a</p> C<pre><code>/* @brief  \u7f16\u7801\u5668\u63a5\u53e3\u521d\u59cb\u5316\uff08STM32\u9ed8\u8ba4\u5f00\u542f\uff0c\u4e0d\u521d\u59cb\u5316\u4e5f\u53ef\u4ee5\u8bfb\u7f16\u7801\u5668\u503c\uff09\n * @param  \u65e0\u53c2\u6570\n * @retval \u65e0\u8fd4\u56de\u503c\n */\nvoid Encoder_Init(void)\n{\n    HAL_TIM_Encoder_Start(&amp;htim2, TIM_CHANNEL_1 | TIM_CHANNEL_2);\n    HAL_TIM_Encoder_Start(&amp;htim3, TIM_CHANNEL_1 | TIM_CHANNEL_2);\n    HAL_TIM_Encoder_Start(&amp;htim4, TIM_CHANNEL_1 | TIM_CHANNEL_2);\n    HAL_TIM_Encoder_Start(&amp;htim5, TIM_CHANNEL_1 | TIM_CHANNEL_2);\n    HAL_TIM_Base_Start_IT(&amp;htim7);\n    /* \u7f16\u7801\u5668\u521d\u59cb\u5316\u65f6\uff0c\u521b\u5efa\u4e13\u5c5e\u961f\u5217 */\n    g_Encoder_Queue = xQueueCreate(Encoder_QUEUE_LENGTH, sizeof(xEncoderData));\n}\n</code></pre>"},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#553","title":"5.5.3 \u961f\u5217\u96c6\u521d\u59cb\u5316","text":"<p>\u521b\u5efa\u4efb\u52a1\u524d\uff0c\u521d\u59cb\u5316\u6240\u6709\u961f\u5217\u548c\u961f\u5217\u96c6\uff1a</p> C<pre><code>/* Private variables ---------------------------------------------------------*/\n/* USER CODE BEGIN Variables */\nstatic QueueSetHandle_t g_InputQueueSetHandle;\nstatic QueueHandle_t g_OLEDQueue;\n/* USER CODE END Variables */C\n</code></pre> C<pre><code>/* \u521d\u59cb\u5316\u961f\u5217\u96c6 */\nvoid QueueSet_Init(void) {\n    QueueHandle_t GPIO_QueueHandle;\n    QueueHandle_t Encoder_QueueHandle;\n    /* \u83b7\u53d6\u961f\u5217\u53e5\u67c4 */\n    GPIO_QueueHandle = GPIO_GetQueueHandle();\n    Encoder_QueueHandle = Encoder_GetQueueHandle();\n    /* \u521b\u5efa\u961f\u5217\u67c4 */\n    g_InputQueueSetHandle = xQueueCreateSet(Encoder_QUEUE_LENGTH + GPIO_QUEUE_LENGTH);\n    /* \u5c06\u961f\u5217\u52a0\u5165\u961f\u5217\u96c6 */\n    xQueueAddToSet(GPIO_QueueHandle, g_InputQueueSetHandle);\n    xQueueAddToSet(Encoder_QueueHandle, g_InputQueueSetHandle);\n    /* \u521b\u5efaOLED\u961f\u5217 */\n    g_OLEDQueue = xQueueCreate(10, sizeof(xOLEDData));\n}\n/* USER CODE END Application */\n</code></pre>"},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#554-input","title":"5.5.4 Input\u4efb\u52a1","text":"C<pre><code>void Input_Queue_Task(void *argument) {\n    QueueHandle_t Result_QueueHandel;\n    /* \u5b9a\u4e49\u7ed3\u6784\u4f53 */\n    xGPIOData GPIO_Queue_Data;\n    xEncoderData Encoder_Queue_Data;\n    xOLEDData OLED_Queue_Data;\n    while (1) {\n        /* \u8bfb\u961f\u5217\u96c6\uff0c\u5f97\u5230\u961f\u5217\u53e5\u67c4 */\n        Result_QueueHandel = xQueueSelectFromSet(g_InputQueueSetHandle, portMAX_DELAY);\n        if (Result_QueueHandel) {\n            if (Result_QueueHandel == GPIO_GetQueueHandle()) {\n                /* \u8bfb\u961f\u5217\u53e5\u67c4\uff0c\u5f97\u5230\u6570\u636e */\n                xQueueReceive(Result_QueueHandel, &amp;GPIO_Queue_Data, 0);\n                /* \u5904\u7406\u6570\u636e */\n                OLED_Queue_Data.value1 = GPIO_Queue_Data.count;\n                OLED_Queue_Data.value2 = GPIO_Queue_Data.sum;\n                strcpy(OLED_Queue_Data.messages, \"None\");\n            } else if (Result_QueueHandel == Encoder_GetQueueHandle()) {\n                /* \u8bfb\u961f\u5217\u53e5\u67c4\uff0c\u5f97\u5230\u6570\u636e */\n                xQueueReceive(Result_QueueHandel, &amp;Encoder_Queue_Data, 0);\n                /* \u5904\u7406\u6570\u636e */\n                OLED_Queue_Data.value1 = Encoder_Queue_Data.speed;\n                OLED_Queue_Data.value2 = Encoder_Queue_Data.value;\n                strcpy(OLED_Queue_Data.messages, Encoder_Queue_Data.device);\n            }\n            /* \u5199OLED\u961f\u5217 */\n            xQueueSend(g_OLEDQueue, &amp;OLED_Queue_Data, 0);\n        }\n    }\n}\n</code></pre>"},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#555-oled","title":"5.5.5 OLED\u4e1a\u52a1","text":"C<pre><code>void OLED_Queue_Task(void *argument) {\n    /* \u5b9a\u4e49\u7ed3\u6784 */\n    xOLEDData OLED_Queue_Data;\n    while (1) {\n        /* \u8bfb\u961f\u5217 */\n        if (pdTRUE == xQueueReceive(g_OLEDQueue, &amp;OLED_Queue_Data, portMAX_DELAY)) {\n            OLED_Clear();\n            /* \u663e\u793a\u961f\u5217\u6570\u636e */\n            OLED_ShowNum(0, 0, OLED_Queue_Data.value1, 4, 16);\n            OLED_ShowStr(40, 0, OLED_Queue_Data.messages, 16);\n            OLED_ShowNum(0, 2, OLED_Queue_Data.value2, 4, 16);\n        }\n    }\n}\n</code></pre> C<pre><code>/* USER CODE BEGIN FunctionPrototypes */\nvoid QueueSet_Init(void);\n\nvoid OLED_Queue_Task(void *argument);\n\nvoid Input_Queue_Task(void *argument);\n\n/* USER CODE END FunctionPrototypes */\n</code></pre>"},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#556-freertos","title":"5.5.6 FreeRTOS\u521d\u59cb\u5316","text":"C<pre><code>void MX_FREERTOS_Init(void) {\n    /* USER CODE BEGIN Init */\n    QueueSet_Init();\n    /* USER CODE END Init */\n    ...\n    /* Create the thread(s) */\n    /* creation of defaultTask */\n    defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &amp;defaultTask_attributes);\n\n    /* USER CODE BEGIN RTOS_THREADS */\n    /* add threads, ... */\n    xTaskCreate(OLED_Queue_Task, \"QueueTask1\", 128, NULL, osPriorityNormal, NULL);\n    xTaskCreate(Input_Queue_Task, \"QueueTask2\", 128, NULL, osPriorityNormal, NULL);\n    /* USER CODE END RTOS_THREADS */\n    ...\n}\n</code></pre>"},{"location":"study/FreeRTOS/5.%E9%98%9F%E5%88%97/#56","title":"5.6 \u5206\u53d1\u6570\u636e\u7ed9\u591a\u4e2a\u4efb\u52a1","text":"<p>\u793a\u4f8b\u7b80\u8ff0\uff1a</p> <ol> <li>\u5916\u90e8\u4e2d\u65ad\u63a7\u5236OLED\u56db\u4e2a\u5b57\u7b26\u79fb\u52a8\u3002</li> <li>\u5916\u90e8\u4e2d\u65ad\u5199\u56db\u4e2a\u961f\u5217\u3002</li> <li>\u521b\u5efa\u56db\u4e2a\u4efb\u52a1\uff0c\u7528\u540c\u4e00\u4e2a\u4e1a\u52a1\u51fd\u6570\uff0c\u4f20\u5165\u4e0d\u540c\u7684\u53c2\u6570\u3002</li> <li>\u91c7\u7528\u6ce8\u518c\u961f\u5217\u7684\u65b9\u6cd5\uff0c\u5b9e\u73b0\u5199\u591a\u4e2a\u961f\u5217\u7684\u53ef\u79fb\u690d\u578b\u51fd\u6570\u3002</li> </ol> <p></p> <p>\u5355\u72ec\u521b\u5efa\u4e00\u5bf9\u6e90\u6587\u4ef6\uff1a</p> <p><code>game.c</code></p> C<pre><code>#include \"game.h\"\n\nstatic QueueHandle_t g_QueueHandles[10];\nstatic uint8_t g_QueueCnt = 0;\n\nCar g_car[4] = {\n        {0, 0, 0},\n        {0, 1, 1},\n        {0, 2, 2},\n        {0, 3, 3},\n};\n\nvoid GameInit(void) {\n    OLED_ShowStr(0, 0, \"D\", 8);\n    OLED_ShowStr(0, 1, \"D\", 8);\n    OLED_ShowStr(0, 2, \"D\", 8);\n    OLED_ShowStr(0, 3, \"D\", 8);\n}\n\nvoid ShowCar(Car *pCar) {\n    OLED_ShowStr(pCar-&gt;x, pCar-&gt;y, \"D\", 8);\n}\n\nvoid HideCar(Car *pCar) {\n    OLED_ShowStr(pCar-&gt;x, pCar-&gt;y, \" \", 8);\n}\n\n/* \u6ce8\u518c\u961f\u5217 */\nvoid RegisterQueue(QueueHandle_t QueueHandle_t) {\n    g_QueueHandles[g_QueueCnt] = QueueHandle_t;\n    g_QueueCnt++;\n}\n\n/* \u5199\u591a\u4e2a\u5df2\u6ce8\u518c\u7684\u961f\u5217 */\nstatic void QueuesWrite(InputData *idata) {\n    int i;\n    for ( i = 0 ; i &lt; g_QueueCnt ; i++ ) {\n        xQueueSendFromISR(g_QueueHandles[i], idata, NULL);\n    }\n}\n\nvoid HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {\n    /* \u5b9a\u4e49\u53d8\u91cf */\n    static int cnt=0;\n    static uint64_t last_time = 0;\n    uint64_t current_time = system_get_ns()/1000000;\n    /* \u5b9a\u4e49\u7ed3\u6784\u4f53 */\n    InputData idata;\n    if (current_time-last_time &gt; 200) {\n        if (GPIO_Pin == GPIO_PIN_2) {\n            last_time = current_time;\n            idata.cnt = cnt;\n            cnt++;\n            if (cnt &gt; 3) {cnt = 0;}\n            /* \u5199\u56db\u4e2a\u961f\u5217 */\n            QueuesWrite(&amp;idata);\n        }\n    }\n    else {\n        last_time = current_time;\n    }\n}\n</code></pre> <p><code>game.h</code></p> C<pre><code>#ifndef FREERTOS1_GAME_H\n#define FREERTOS1_GAME_H\n\n#include \"oled.h\"\n#include \"timer.h\"\n#include \"FreeRTOS.h\"\n#include \"task.h\"\n#include \"queue.h\"\n\ntypedef struct {\n   uint8_t x;\n   uint8_t y;\n   uint8_t dev;\n} Car;\n\ntypedef struct {\n    uint8_t cnt;\n} InputData;\n\nvoid GameInit(void);\nvoid ShowCar(Car *pCar);\nvoid HideCar(Car *pCar);\nvoid RegisterQueue(QueueHandle_t QueueHandle_t);\n\n\n#endif //FREERTOS1_GAME_H\n</code></pre> <p><code>OLED</code>\u4e1a\u52a1\uff1a</p> C<pre><code>void OLED_PrintTask(void *params) {\n    /* \u521b\u5efa\u81ea\u5df1\u7684\u961f */\n    QueueHandle_t QueueHandle = xQueueCreate(10, sizeof(InputData));\n    RegisterQueue(QueueHandle);\n    /* \u5b9a\u4e49\u7ed3\u6784 */\n    InputData outdata;\n    Car *car = params;\n    while (1) {\n        /* \u8bfb\u961f */\n        if (pdTRUE == xQueueReceive(QueueHandle, &amp;outdata, portMAX_DELAY)) {\n            /* car-&gt;dev\u53c2\u6570\u5224\u65adcar\u8bbe\u5907 */\n            if (outdata.cnt == car-&gt;dev) {\n                HideCar(car);\n                car-&gt;x += 16;\n                ShowCar(car);\n            }\n        }\n    }\n}\n</code></pre> C<pre><code>...\nextern Car g_car[4];\n...\nvoid MX_FREERTOS_Init(void) {\n    /* USER CODE BEGIN Init */\n    GameInit();\n    /* USER CODE END Init */\n\n    /* USER CODE BEGIN RTOS_MUTEX */\n    /* add mutexes, ... */\n    /* USER CODE END RTOS_MUTEX */\n\n    /* USER CODE BEGIN RTOS_SEMAPHORES */\n    /* add semaphores, ... */\n    /* USER CODE END RTOS_SEMAPHORES */\n\n    /* USER CODE BEGIN RTOS_TIMERS */\n    /* start timers, add new ones, ... */\n    /* USER CODE END RTOS_TIMERS */\n\n    /* USER CODE BEGIN RTOS_QUEUES */\n    /* add queues, ... */\n    /* USER CODE END RTOS_QUEUES */\n\n    /* Create the thread(s) */\n    /* creation of defaultTask */\n//  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &amp;defaultTask_attributes);\n\n    /* USER CODE BEGIN RTOS_THREADS */\n    /* add threads, ... */\n    xTaskCreate(OLED_PrintTask, \"Task1\", 128, &amp;g_car[0], osPriorityNormal, NULL);\n    xTaskCreate(OLED_PrintTask, \"Task2\", 128, &amp;g_car[1], osPriorityNormal, NULL);\n    xTaskCreate(OLED_PrintTask, \"Task3\", 128, &amp;g_car[2], osPriorityNormal, NULL);\n    xTaskCreate(OLED_PrintTask, \"Task4\", 128, &amp;g_car[3], osPriorityNormal, NULL);\n\n    /* USER CODE END RTOS_THREADS */\n\n    /* USER CODE BEGIN RTOS_EVENTS */\n    /* add events, ... */\n    /* USER CODE END RTOS_EVENTS */\n\n}\n</code></pre>"},{"location":"study/FreeRTOS/6.%E4%BF%A1%E5%8F%B7%E9%87%8F/","title":"\u4fe1\u53f7\u91cf\u4e92\u65a5\u9501","text":""},{"location":"study/FreeRTOS/6.%E4%BF%A1%E5%8F%B7%E9%87%8F/#61","title":"6.1 \u4fe1\u53f7\u91cf\u7684\u672c\u8d28","text":"<p>\u4fe1\u53f7\u91cf\uff08Semaphore\uff09\u662f\u4e00\u79cd\u5b9e\u73b0\u4efb\u52a1\u95f4\u901a\u4fe1\u7684\u673a\u5236\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4efb\u52a1\u95f4\u540c\u6b65\u6216\u5171\u4eab\u8d44\u6e90\u7684\u4e92\u65a5\u8bbf\u95ee\u3002\u4e00\u4e2a\u4fe1\u53f7\u91cf\u7684\u6570\u636e\u7ed3\u6784\u4e2d\uff0c\u901a\u5e38\u6709\u4e00\u4e2a\u8ba1\u6570\u503c\uff0c\u7528\u4e8e\u5bf9\u6709\u6548\u8d44\u6e90\u6570\u7684\u8ba1\u6570\uff0c\u8868\u793a\u5269\u4e0b\u7684\u53ef\u88ab\u4f7f\u7528\u7684\u5171\u4eab\u8d44\u6e90\u6570\u3002</p> <p>\u4fe1\u53f7\u91cf\u7528\u4e8e\u591a\u4efb\u52a1\u7684\u540c\u6b65\uff0c\u800c\u540e\u9762\u4f1a\u8bb2\u7684\u4e92\u65a5\u91cf\u7528\u4e8e\u5b9e\u73b0\u591a\u4efb\u52a1\u7684\u4e92\u65a5\u3002</p> <p></p> <p>\u4fe1\u53f7\u91cf\u672c\u8d28\u4e0a\u65f6\u7279\u6b8a\u7684\u961f\u5217\uff0c\u4e0b\u9762\u65f6\u5bf9\u5e94\u7684\u5dee\u5f02\uff1a</p> <p>\u961f\u5217</p> <ul> <li>\u8bfb\u961f\u5217\uff1a\u2460 \u62f7\u8d1d\u6570\u636e\u3002 \u2461 CNT-- \u3002 \u2462\u5524\u9192\u7b49\u5f85\u63a5\u6536\u6570\u636e\u8005\u3002</li> </ul> <ul> <li>\u5199\u961f\u5217\uff1a\u2460 \u62f7\u8d1d\u6570\u636e\u3002 \u2461 CNT++ \u3002 \u2462\u5524\u9192\u7b49\u5f85\u63a5\u6536\u6570\u636e\u8005\u3002</li> <li>\u8bfb\u961f\u5217\u65f6\uff0c\u961f\u5217\u4e3a\u7a7a \u53ef\u4ee5\u963b\u585e \u3002</li> <li>\u5199\u961f\u5217\u65f6\uff0c\u961f\u5217\u5df2\u6ee1 \u53ef\u4ee5\u963b\u585e \u3002</li> </ul> <p>\u4fe1\u53f7\u91cf</p> <ul> <li>\u7ed9\u51fa\u8d44\u6e90(Give)\uff1a\u2460 CNT++\u3002 \u2461 \u5524\u9192\u7b49\u5f85\u8005\u3002</li> <li>\u83b7\u5f97\u8d44\u6e90(Take)\uff1a\u2460 CNT--\u3002\uff08\u6ca1\u6709\u5524\u9192\u64cd\u4f5c\uff09</li> <li>Give\uff1a\u8ba1\u6570\u503c\u5df2\u7ecf\u8fbe\u5230\u6700\u5927\u65f6\u8fd4\u56de\u5931\u8d25\uff0c \u4e0d\u963b\u585e \u3002</li> <li>Take\uff1a\u6ca1\u6709\u8d44\u6e90\u83b7\u53d6\u65f6\uff0c \u53ef\u4ee5\u963b\u585e \u3002</li> </ul>"},{"location":"study/FreeRTOS/6.%E4%BF%A1%E5%8F%B7%E9%87%8F/#62","title":"6.2 \u4fe1\u53f7\u91cf\u51fd\u6570","text":""},{"location":"study/FreeRTOS/6.%E4%BF%A1%E5%8F%B7%E9%87%8F/#621","title":"6.2.1 \u521b\u5efa\u4fe1\u53f7\u91cf","text":"<p>\u4e24\u79cd\u4fe1\u53f7\u91cf\u5dee\u5f02\uff1a</p> \u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf \u8ba1\u6570\u578b\u4fe1\u53f7\u91cf \u53ea\u6709 0 \u6216 1 \u4e24\u4e2a\u503c\uff0c\u88ab\u521b\u5efa\u65f6\u521d\u59cb\u503c\u4e3a 0 \u8ba1\u6570\u503c\u81ea\u5b9a\u4e49\uff0c\u4e14\u88ab\u521b\u5efa\u65f6\u521d\u59cb\u503c\u53ef\u4ee5\u8bbe\u5b9a \u5176\u4ed6\u64cd\u4f5c\u662f\u4e00\u6837\u7684 \u5176\u4ed6\u64cd\u4f5c\u662f\u4e00\u6837\u7684 <p>\u8ba1\u6570\u578b\u4fe1\u53f7\u91cf</p> C<pre><code>/* Creates a new counting semaphore instance, and returns a handle by which the\n * new counting semaphore can be referenced. \n */\nSemaphoreHandle_t xSemaphoreCreateCounting( UBaseType_t uxMaxCount, UBaseType_t uxInitialCount )\n</code></pre> <p>\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf</p> C<pre><code>/* Creates a new binary semaphore instance, and returns a handle by which the\n * new semaphore can be referenced. \n */\nSemaphoreHandle_t xSemaphoreCreateBinary( void )\n</code></pre>"},{"location":"study/FreeRTOS/6.%E4%BF%A1%E5%8F%B7%E9%87%8F/#622","title":"6.2.2 \u83b7\u53d6/\u91ca\u653e\u4fe1\u53f7\u91cf","text":"<p>\u83b7\u53d6\u4fe1\u53f7\u91cf</p> C<pre><code>/* to obtain a semaphore. */\nxSemaphoreTake(\n        SemaphoreHandle_t xSemaphore,\n        TickType_t xBlockTime\n               );\n/* to obtain a semaphore from an ISR */   \nxSemaphoreTakeFromISR(\n        SemaphoreHandle_t xSemaphore,\n        BaseType_t *pxHigherPriorityTaskWoken\n                      );\n</code></pre> <p>\u91ca\u653e\u4fe1\u53f7\u91cf</p> C<pre><code>/*  to release a semaphore. */\nxSemaphoreGive( SemaphoreHandle_t xSemaphore );\n\n/*  to release a semaphore from an ISR */\nxSemaphoreGiveFromISR(\n        SemaphoreHandle_t xSemaphore,\n        BaseType_t *pxHigherPriorityTaskWoken\n                      );\n</code></pre>"},{"location":"study/FreeRTOS/6.%E4%BF%A1%E5%8F%B7%E9%87%8F/#623","title":"6.2.3 \u5220\u9664\u4fe1\u53f7\u91cf","text":""},{"location":"study/FreeRTOS/6.%E4%BF%A1%E5%8F%B7%E9%87%8F/#63","title":"6.3 \u4f7f\u7528\u4fe1\u53f7\u91cf","text":""},{"location":"study/FreeRTOS/6.%E4%BF%A1%E5%8F%B7%E9%87%8F/#631","title":"6.3.1 \u521b\u5efa\u3001\u83b7\u53d6\u4e0e\u91ca\u653e\u793a\u4f8b","text":"<p>\u5728\u961f\u5217\u6700\u540e\u4e00\u4e2a\u793a\u4f8b\u7684\u57fa\u7840\u4e0a\uff1a</p> <p>\u5b9a\u4e49\u4fe1\u53f7\u91cf\u53e5\u67c4</p> C<pre><code>/* Private variables ---------------------------------------------------------*/\n/* USER CODE BEGIN Variables */\nstatic SemaphoreHandle_t g_xSemaphoreHandle;\n/* USER CODE END Variables */\n</code></pre> <p>\u521b\u5efa\u4fe1\u53f7\u91cf\uff0c\u6700\u5927\u8ba1\u6570\u4e3a 5 \uff0c\u53ef\u7528\u91cf\u4e3a 2 \uff1b\u5e76\u5c06\u4efb\u52a1\u6ce8\u91ca\u4e00\u4e2a</p> C<pre><code>void MX_FREERTOS_Init(void) {\n    /* USER CODE BEGIN Init */\n    g_xSemaphoreHandle = xSemaphoreCreateCounting(4, 2);\n    /* USER CODE END Init */\n    ...\n    /* USER CODE BEGIN RTOS_THREADS */\n    /* add threads, ... */\n    xTaskCreate(OLED_PrintTask, \"Task1\", 128, &amp;g_car[0], osPriorityNormal, NULL);\n    xTaskCreate(OLED_PrintTask, \"Task2\", 128, &amp;g_car[1], osPriorityNormal, NULL);\n    xTaskCreate(OLED_PrintTask, \"Task3\", 128, &amp;g_car[2], osPriorityNormal, NULL);\n}\n</code></pre> <p>\u4fee\u6539\u4efb\u52a1\u51fd\u6570\uff0c\u53d6\u6d88\u961f\u5217\uff0c\u6dfb\u52a0\u4fe1\u53f7\u91cf\u83b7\u53d6\u4e0e\u91ca\u653e</p> C<pre><code>void OLED_PrintTask(void *params) {\n    Car *car = params;\n    ShowCar(car);\n    /* \u83b7\u53d6\u4fe1\u53f7\u91cf */\n    xSemaphoreTake(g_xSemaphoreHandle, portMAX_DELAY);\n    while (1) {\n        /* \u8bfb\u961f */\n        HideCar(car);\n        car-&gt;x += 1;\n        if (car-&gt;x &gt; 128 ) {car-&gt;x = 120;}\n        ShowCar(car);\n        vTaskDelay(100);\n        if (car-&gt;x == 120) {\n            /* \u91ca\u653e\u4fe1\u53f7\u91cf */\n            xSemaphoreGive(g_xSemaphoreHandle);\n            vTaskDelete(NULL);\n        }\n    }\n}\n</code></pre> <p>\u5b9e\u9a8c\u73b0\u8c61\uff0c\u4e0a\u4e24\u884c\u5b57\u7b26\u5148\u79fb\u52a8\uff0c\u5230\u8fbe\u7ec8\u70b9\u91ca\u653e\u4fe1\u53f7\u91cf\uff0c\u7b2c\u4e09\u884c\u5b57\u7b26\u5f00\u59cb\u79fb\u52a8\u3002</p>"},{"location":"study/FreeRTOS/6.%E4%BF%A1%E5%8F%B7%E9%87%8F/#632","title":"6.3.2 \u4fe1\u53f7\u91cf\u5206\u914d\u4f18\u5148\u7ea7","text":"<ol> <li>\u4f18\u5148\u7ea7\u9ad8\u7684\uff0c\u540e\u5230\u53ef\u4ee5\u6392\u524d\u9762\u3002</li> <li>\u4f18\u5148\u7ea7\u4e00\u6837\u9ad8\u7684\uff0c\u6309\u521b\u5efa\u4efb\u52a1\u7684\u5148\u540e\u5206\u914d\u4fe1\u53f7\u91cf\uff0c\u540e\u521b\u5efa\u7684\u7b49\u5f85\u4fe1\u53f7\u91cf\u91ca\u653e\u3002</li> </ol>"},{"location":"study/FreeRTOS/6.%E4%BF%A1%E5%8F%B7%E9%87%8F/#633","title":"6.3.3 \u4f18\u5148\u7ea7\u53cd\u8f6c","text":"<p>\u4ec0\u4e48\u65f6\u4f18\u5148\u7ea7\u53cd\u8f6c\uff0c\u5c31\u662f\u4f4e\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u5361\u4f4f\u4e86\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\uff0c\u4f7f\u5176\u65e0\u6cd5\u8fd0\u884c\uff0c\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a</p> <p>\u2460 \u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\uff1a\u5360\u7528\u552f\u4e00\u4e00\u4e2a\u4fe1\u53f7\u91cf\u5b9e\u9a8c\u3002 \u2461 \u4e2d\u4f18\u5148\u7ea7\u4efb\u52a1\uff1a\u6ca1\u6709\u963b\u585e\u6001\uff0c\u4e00\u76f4\u5904\u4e8e\u53ef\u8fd0\u884c\u72b6\u6001\u3002\uff08\u4e00\u65e6\u6b64\u4efb\u52a1\u8fd0\u884c\uff0c\u5219\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u4efb\u52a1\u6ca1\u6709\u8fd0\u884c\u673a\u4f1a\uff09 \u2462 \u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\uff1a\u9700\u8981\u4fe1\u53f7\u91cf\uff0c\u5f97\u4e0d\u5230\u4fe1\u53f7\u91cf\u5c31\u963b\u585e\u3002</p> <p>\u590d\u73b0\u4e0a\u8bc9\u6848\u4f8b\uff1a</p> <p>\u4f7f\u7528\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff0c\u5e76\u4fee\u6539\u4efb\u52a1\u4f18\u5148\u7ea7</p> C<pre><code>void MX_FREERTOS_Init(void) {\n    /* USER CODE BEGIN Init */\n    g_xSemaphoreHandle = xSemaphoreCreateBinary();\n    // \u91ca\u653e\u4e00\u4e2a\u4fe1\u53f7\u91cf\n    xSemaphoreGive(g_xSemaphoreHandle);\n    /* USER CODE END Init */\n    ...\n    /* USER CODE BEGIN RTOS_THREADS */\n    /* add threads, ... */\n    xTaskCreate(OLED_PrintTask1, \"Task1\", 128, &amp;g_car[0], osPriorityNormal, NULL);\n    xTaskCreate(OLED_PrintTask2, \"Task2\", 128, &amp;g_car[1], osPriorityNormal+1, NULL);\n    xTaskCreate(OLED_PrintTask3, \"Task3\", 128, &amp;g_car[2], osPriorityNormal+2, NULL);\n    /* USER CODE END RTOS_THREADS */\n    ...\n}\n</code></pre> <p>\u4fee\u6539\u4efb\u52a1\u51fd\u6570</p> C<pre><code>void OLED_PrintTask1(void *params) {\n    Car *car = params;\n    ShowCar(car);\n    xSemaphoreTake(g_xSemaphoreHandle, portMAX_DELAY);\n    while (1) {\n        /* \u8bfb\u961f */\n        HideCar(car);\n        car-&gt;x += 1;\n        if (car-&gt;x &gt; 128 ) {car-&gt;x = 120;}\n        ShowCar(car);\n        vTaskDelay(100);\n        if (car-&gt;x == 120) {\n            xSemaphoreGive(g_xSemaphoreHandle);\n            vTaskDelete(NULL);\n        }\n    }\n}\n\nvoid OLED_PrintTask2(void *params) {\n    Car *car = params;\n    ShowCar(car);\n    vTaskDelay(1000);\n//    xSemaphoreTake(g_xSemaphoreHandle, portMAX_DELAY);\n    while (1) {\n        /* \u8bfb\u961f */\n        HideCar(car);\n        car-&gt;x += 1;\n        if (car-&gt;x &gt; 128 ) {car-&gt;x = 120;}\n        ShowCar(car);\n//        vTaskDelay(100);\n        HAL_Delay(100);\n        if (car-&gt;x == 120) {\n//            xSemaphoreGive(g_xSemaphoreHandle);\n            vTaskDelete(NULL);\n        }\n    }\n}\nvoid OLED_PrintTask3(void *params) {\n    Car *car = params;\n    ShowCar(car);\n    vTaskDelay(2000);\n    xSemaphoreTake(g_xSemaphoreHandle, portMAX_DELAY);\n    while (1) {\n        /* \u8bfb\u961f */\n        HideCar(car);\n        car-&gt;x += 1;\n        if (car-&gt;x &gt; 128 ) {car-&gt;x = 120;}\n        ShowCar(car);\n        vTaskDelay(100);\n        if (car-&gt;x == 120) {\n            xSemaphoreGive(g_xSemaphoreHandle);\n            vTaskDelete(NULL);\n        }\n    }\n}\n</code></pre>"},{"location":"study/FreeRTOS/6.%E4%BF%A1%E5%8F%B7%E9%87%8F/#64","title":"6.4 \u4e92\u65a5\u9501","text":""},{"location":"study/FreeRTOS/6.%E4%BF%A1%E5%8F%B7%E9%87%8F/#641","title":"6.4.1 \u4e92\u65a5\u9501\u672c\u8d28","text":"<p>\u4e92\u65a5\u9501\u53c8\u79f0 \u4e92\u65a5\u578b\u4fe1\u53f7\u91cf\u00a0\uff0c\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u4e8c\u503c\u6027\u4fe1\u53f7\u91cf\uff0c\u7528\u4e8e\u5b9e\u73b0\u5bf9\u5171\u4eab\u8d44\u6e90\u7684\u72ec\u5360\u5f0f\u5904\u7406\u3002</p> <p>\u591a\u4efb\u52a1\u73af\u5883\u4e0b\u5f80\u5f80\u5b58\u5728\u591a\u4e2a\u4efb\u52a1\u7ade\u4e89\u540c\u4e00\u5171\u4eab\u8d44\u6e90\u7684\u5e94\u7528\u573a\u666f\uff0c\u4e92\u65a5\u9501\u53ef\u88ab\u7528\u4e8e\u5bf9\u5171\u4eab\u8d44\u6e90\u7684\u4fdd\u62a4\u4ece\u800c\u5b9e\u73b0\u72ec\u5360\u5f0f\u8bbf\u95ee\u3002\u53e6\u5916\u4e92\u65a5\u9501\u53ef\u4ee5\u89e3\u51b3\u4fe1\u53f7\u91cf\u5b58\u5728\u7684\u4f18\u5148\u7ea7\u53cd\u8f6c\u95ee\u9898\u3002</p> <p>\u7528\u4e92\u65a5\u9501\u5904\u7406\u975e\u5171\u4eab\u8d44\u6e90\u7684\u540c\u6b65\u8bbf\u95ee\u65f6\uff0c\u5982\u679c\u6709\u4efb\u52a1\u8bbf\u95ee\u8be5\u8d44\u6e90\uff0c\u5219\u4e92\u65a5\u9501\u4e3a\u52a0\u9501\u72b6\u6001\u3002\u6b64\u65f6\u5176\u4ed6\u4efb\u52a1\u5982\u679c\u60f3\u8bbf\u95ee\u8fd9\u4e2a\u516c\u5171\u8d44\u6e90\u5219\u4f1a\u88ab \u963b\u585e \uff0c\u76f4\u5230\u4e92\u65a5\u9501\u88ab\u6301\u6709\u8be5\u9501\u7684\u4efb\u52a1\u91ca\u653e\u540e\uff0c\u5176\u4ed6\u4efb\u52a1\u624d\u80fd\u91cd\u65b0\u8bbf\u95ee\u8be5\u516c\u5171\u8d44\u6e90\uff0c\u6b64\u65f6\u4e92\u65a5\u9501\u518d\u6b21\u4e0a\u9501\uff0c\u5982\u6b64\u786e\u4fdd\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u4efb\u52a1\u6b63\u5728\u8bbf\u95ee\u8fd9\u4e2a\u516c\u5171\u8d44\u6e90\uff0c\u4fdd\u8bc1\u4e86\u516c\u5171\u8d44\u6e90\u64cd\u4f5c\u7684\u5b8c\u6574\u6027\u3002</p> <p></p> <p>\u6848\u4f8b\u5206\u6790\uff1a</p> <p>\u4efb\u52a11\u83b7\u53d6\u9501A\uff0c\u968f\u540e\u4efb\u52a12\u83b7\u53d6\u9501A\u3002\u7531\u4e8e\u6b64\u65f6\u4efb\u52a11\u5e76\u672a\u91ca\u653e\u9501A\uff0c\u6b64\u65f6\u4efb\u52a12\u4f1a\u8fdb\u5165 \u963b\u585e\u6001\u00a0\u3002</p>"},{"location":"study/FreeRTOS/6.%E4%BF%A1%E5%8F%B7%E9%87%8F/#642","title":"6.4.2 \u4f7f\u7528\u573a\u666f","text":"<ol> <li>\u89e3\u51b3\u4f18\u5148\u7ea7\u53cd\u8f6c\u95ee\u9898\uff0c\u4e34\u65f6\u63d0\u62d4\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u548c\u9ad8\u4f18\u5148\u7ea7\u4e00\u6837\u3002</li> <li>\u4fdd\u62a4\u4e34\u754c\u8d44\u6e90\u3002</li> </ol>"},{"location":"study/FreeRTOS/6.%E4%BF%A1%E5%8F%B7%E9%87%8F/#643","title":"6.4.3 \u4e92\u65a5\u9501\u51fd\u6570","text":"C<pre><code>/* \u521b\u5efa */\nSemaphoreHandle_t xSemaphoreCreateMutex( void );\n</code></pre> C<pre><code>/* \u91ca\u653e */\nBaseType_t xSemaphoreGive( SemaphoreHandle_t xSemaphore );\n</code></pre> C<pre><code>/* \u83b7\u5f97 */\nBaseType_t xSemaphoreTake(\n                   SemaphoreHandle_t xSemaphore,\n                   TickType_t xTicksToWait\n               );\n</code></pre>"},{"location":"study/FreeRTOS/6.%E4%BF%A1%E5%8F%B7%E9%87%8F/#644","title":"6.4.4 \u89e3\u51b3\u4f18\u5148\u7ea7\u53cd\u8f6c","text":"<p>\u5c06\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u7684\u521b\u5efa\u6539\u6210\u4e92\u65a5\u91cf\u5373\u53ef\uff1a</p> C<pre><code>void MX_FREERTOS_Init(void) {\n    /* USER CODE BEGIN Init */\n    g_xSemaphoreHandle = xSemaphoreCreateMutex();\n    xSemaphoreGive(g_xSemaphoreHandle);\n}\n</code></pre>"},{"location":"study/FreeRTOS/6.%E4%BF%A1%E5%8F%B7%E9%87%8F/#645","title":"6.4.5 \u4fdd\u62a4\u4e34\u754c\u8d44\u6e90","text":"<p>\u5f85\u8865\u5145</p> <p>\u63a8\u8350\u9605\u8bfb\uff1a\u7b2c13\u7ae0 \u4e92\u65a5\u91cf(mutex) | \u767e\u95ee\u7f51</p>"},{"location":"study/FreeRTOS/7.%E4%BA%8B%E4%BB%B6%E7%BB%84/","title":"\u4e8b\u4ef6\u7ec4","text":""},{"location":"study/FreeRTOS/7.%E4%BA%8B%E4%BB%B6%E7%BB%84/#71","title":"7.1 \u4e8b\u4ef6\u7ec4\u7684\u672c\u8d28","text":"<p>\u4e8b\u4ef6\u7ec4\u53ef\u4ee5\u5b9e\u73b0\u4e00\u6b21\u5524\u9192\u591a\u4e2a\u4efb\u52a1\u3002</p> <p></p> <p>\u5173\u4e8e\u4e8b\u4ef6\u7ec4\uff1a</p> <ol> <li>\u4e8b\u4ef6\u7ec4\u7528\u4e00\u4e2a\u6574\u6570\u6765\u8868\u793a\uff0c\u9ad8\u516b\u4f4d\u7559\u7ed9\u5185\u6838\u4f7f\u7528\uff0c\u5176\u4ed6\u7684\u4f4d\u6bcf\u4e00\u4e2aBit\u4ee3\u8868\u4e00\u4e2a\u4e8b\u4ef6\u3002<ul> <li>\u5982\u679cconfigUSE_16_BIT_TICKS\u662f1\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6574\u6570\u5c31\u662f16\u4f4d\u7684\uff0c\u4f4e8\u4f4d\u7528\u6765\u8868\u793a\u4e8b\u4ef6\u3002</li> <li>\u5982\u679cconfigUSE_16_BIT_TICKS\u662f0\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6574\u6570\u5c31\u662f32\u4f4d\u7684\uff0c\u4f4e24\u4f4d\u7528\u6765\u8868\u793a\u4e8b\u4ef6\u3002</li> <li>configUSE_16_BIT_TICKS\u662f\u7528\u6765\u8868\u793aTick Count\uff0c\u6574\u6570\u4f4d\u57fa\u4e8e\u6548\u7387\u6765\u8003\u8651\uff0c\u6bd4\u5982configUSE_16_BIT_TICKS\u662f1\uff0c\u5c31\u8868\u793a\u8be5\u5904\u7406\u5668\u4f7f\u752816\u4f4d\u66f4\u9ad8\u6548\u3002</li> </ul> </li> <li>\u6709\u4e00\u4e2a\u94fe\u8868\u7528\u6765\u94fe\u63a5\u4efb\u52a1\u3002</li> <li>\u4efb\u52a1\u6709\u81ea\u5df1\u9700\u8981\u7b49\u5f85\u7684\u4e8b\u4ef6\uff0c\u53ef\u4ee5\u662f\u591a\u4e2a\uff0c\u4efb\u52a1\u4e2d\u7684\u9ad8\u516b\u4f4d\u51b3\u5b9a\u7b49\u5f85\u7684\u591a\u4e2a\u4e8b\u4ef6\u662f \u201cor\u201d \u8fd8\u662f \u201cand\u201d \u5173\u7cfb\u3002</li> </ol> <p>\u4f8b\u5982\uff0c\u4efb\u52a1A\u3001B\u4e2d\u7b49\u5f85\u7684\u4e8b\u4ef6\u5747\u662f \u201cor\u201d \u5173\u7cfb\uff0c\u6709\u4e00\u4e2a\u4efb\u52a1C\u5199\u4e8b\u4ef6\uff1a \u2460 \u82e5C\u5199 Bit0 \uff0c\u5219A\u3001B\u5747\u88ab\u5524\u9192\u3002 \u2461 \u82e5C\u5199 Bit1 \uff0c\u5219\u53ea\u6709B\u88ab\u5524\u9192\u3002 \u2462 \u82e5C\u5199 Bit7 \uff0c\u5219\u53ea\u6709A\u88ab\u5524\u9192\u3002</p>"},{"location":"study/FreeRTOS/7.%E4%BA%8B%E4%BB%B6%E7%BB%84/#72","title":"7.2 \u4e8b\u4ef6\u7ec4\u51fd\u6570","text":""},{"location":"study/FreeRTOS/7.%E4%BA%8B%E4%BB%B6%E7%BB%84/#721","title":"7.2.1 \u521b\u5efa\u4e8b\u4ef6\u7ec4","text":"C<pre><code>EventGroupHandle_t xEventGroupCreate( void );\n</code></pre>"},{"location":"study/FreeRTOS/7.%E4%BA%8B%E4%BB%B6%E7%BB%84/#722","title":"7.2.2 \u5220\u9664\u4e8b\u4ef6\u7ec4","text":"C<pre><code>void xEventGroupDelete( EventGroupHandle_t xEventGroup );\n</code></pre>"},{"location":"study/FreeRTOS/7.%E4%BA%8B%E4%BB%B6%E7%BB%84/#723","title":"7.2.3 \u8bbe\u7f6e\u4e8b\u4ef6","text":"C<pre><code>EventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet );\n</code></pre> C<pre><code>BaseType_t xEventGroupSetBitsFromISR( \n        EventGroupHandle_t xEventGroup, \n        const EventBits_t uxBitsToSet, \n        BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre>"},{"location":"study/FreeRTOS/7.%E4%BA%8B%E4%BB%B6%E7%BB%84/#724","title":"7.2.4 \u7b49\u5f85\u4e8b\u4ef6","text":"C<pre><code>EventBits_t xEventGroupWaitBits(    \n        EventGroupHandle_t xEventGroup,\n        const EventBits_t uxBitsToWaitFor,\n        const BaseType_t xClearOnExit,\n        const BaseType_t xWaitForAllBits,\n        const TickType_t xTicksToWait );\n</code></pre>"},{"location":"study/FreeRTOS/7.%E4%BA%8B%E4%BB%B6%E7%BB%84/#73","title":"7.3 \u4e8b\u4ef6\u7ec4\u793a\u4f8b","text":""},{"location":"study/FreeRTOS/7.%E4%BA%8B%E4%BB%B6%E7%BB%84/#731-1","title":"7.3.1 \u793a\u4f8b 1","text":"<p>car1\u8fd0\u884c\u5230\u7ec8\u70b9\u540e\uff0c\u4f1a\u8bbe\u7f6ebit0\u4e8b\u4ef6\uff1bcar2\u3001car3\u90fd\u7b49\u5f85bit0\u4e8b\u4ef6\u3002</p> <p>\u5b9a\u4e49\u4e8b\u4ef6\u7ec4\u53e5\u67c4</p> C<pre><code>static EventGroupHandle_t g_xEventCarHandle;\n</code></pre> <p>\u521b\u5efa\u4e8b\u4ef6\u7ec4</p> C<pre><code>void MX_FREERTOS_Init(void) {\n    /* USER CODE BEGIN Init */\n//    g_xSemaphoreHandle = xSemaphoreCreateMutex();\n//    xSemaphoreGive(g_xSemaphoreHandle);\n//    GameInit();\n    g_xEventCarHandle = xEventGroupCreate();\n    /* USER CODE END Init */\n    ...\n}\n</code></pre> <p>\u8bbe\u7f6e\u548c\u7b49\u5f85\u4e8b\u4ef6</p> C<pre><code>void OLED_PrintTask1(void *params) {\n    Car *car = params;\n    ShowCar(car);\n    while (1) {\n        HideCar(car);\n        car-&gt;x += 1;\n        if (car-&gt;x &gt; 128) { car-&gt;x = 120; }\n        ShowCar(car);\n        vTaskDelay(100);\n        if (car-&gt;x == 120) {\n            /* \u8bbe\u7f6e\u4e8b\u4ef60 */\n            xEventGroupSetBits(g_xEventCarHandle, (1&lt;&lt;0));\n            vTaskDelete(NULL);\n        }\n    }\n}\n\nvoid OLED_PrintTask2(void *params) {\n    Car *car = params;\n    ShowCar(car);\n    /* \u7b49\u5f85\u4e8b\u4ef60 */\n    xEventGroupWaitBits(g_xEventCarHandle, (1&lt;&lt;0), pdTRUE, pdTRUE, portMAX_DELAY);\n    while (1) {\n        HideCar(car);\n        car-&gt;x += 1;\n        if (car-&gt;x &gt; 128) { car-&gt;x = 120; }\n        ShowCar(car);\n//        vTaskDelay(100);\n        HAL_Delay(100);\n        if (car-&gt;x == 120) {\n            vTaskDelete(NULL);\n        }\n    }\n}\n\nvoid OLED_PrintTask3(void *params) {\n    Car *car = params;\n    ShowCar(car);\n    /* \u7b49\u5f85\u4e8b\u4ef60 */\n    xEventGroupWaitBits(g_xEventCarHandle, (1&lt;&lt;0), pdTRUE, pdTRUE, portMAX_DELAY);\n    while (1) {\n        HideCar(car);\n        car-&gt;x += 1;\n        if (car-&gt;x &gt; 128) { car-&gt;x = 120; }\n        ShowCar(car);\n//        vTaskDelay(100);\n        HAL_Delay(100);\n        if (car-&gt;x == 120) {\n            vTaskDelete(NULL);\n        }\n    }\n}\n</code></pre> <p>\u6b64\u65f6\u73b0\u8c61\u4e3a\uff0ccar1\u5148\u5230\u8fbe\u7ec8\u70b9\u7136\u540e\uff0ccar3\u4f18\u5148\u7ea7\u9ad8\u4e14\u65e0\u963b\u585e\u5148\u884c\uff0c\u5230\u8fbe\u7ec8\u70b9\u540e\uff0ccar2\u8fd0\u884c\uff1b\u53ef\u4ee5\u4fee\u6539\u4f18\u5148\u7ea7\u8ba9car3\u548ccar2\u540c\u65f6\u8fd0\u884c\u3002</p> <p>\u4e3a\u4ec0\u4e48\u4e8b\u4ef6 0 \u4f1a\u8868\u8fbe\u4e3a <code>(1&lt;&lt;0)</code>\uff0c\u8fd9\u91cc\u53ef\u4ee5\u770bFreeRTOS\u7684\u6e90\u7801\u793a\u4f8b\uff1a</p> C<pre><code>* Example usage:\n   &lt;pre&gt;\n   #define BIT_0    ( 1 &lt;&lt; 0 )\n   #define BIT_4    ( 1 &lt;&lt; 4 )\n\n   void aFunction( EventGroupHandle_t xEventGroup )\n   {\n   EventBits_t uxBits;\n   const TickType_t xTicksToWait = 100 / portTICK_PERIOD_MS;\n\n        // Wait a maximum of 100ms for either bit 0 or bit 4 to be set within\n        // the event group.  Clear the bits before exiting.\n        uxBits = xEventGroupWaitBits(\n                    xEventGroup,    // The event group being tested.\n                    BIT_0 | BIT_4,  // The bits within the event group to wait for.\n                    pdTRUE,         // BIT_0 and BIT_4 should be cleared before returning.\n                    pdFALSE,        // Don't wait for both bits, either bit will do.\n                    xTicksToWait ); // Wait a maximum of 100ms for either bit to be set.\n        ...\n}\n</code></pre>"},{"location":"study/FreeRTOS/7.%E4%BA%8B%E4%BB%B6%E7%BB%84/#732-2","title":"7.3.2 \u793a\u4f8b 2","text":"<p>car1\u8fd0\u884c\u5230\u7ec8\u70b9\u540e\uff0c\u4f1a\u8bbe\u7f6ebit0\u4e8b\u4ef6\uff1bcar2\u8fd0\u884c\u5230\u7ec8\u70b9\u540e\uff0c\u4f1a\u8bbe\u7f6ebit1\u4e8b\u4ef6\uff1bcar3\u7b49\u5f85bit0\u3001bit1\u7684\u6240\u6709\u4e8b\u4ef6\u3002</p> C<pre><code>void OLED_PrintTask1(void *params) {\n    Car *car = params;\n    ShowCar(car);\n    while (1) {\n        HideCar(car);\n        car-&gt;x += 1;\n        if (car-&gt;x &gt; 128) { car-&gt;x = 120; }\n        ShowCar(car);\n        vTaskDelay(120);\n        if (car-&gt;x == 120) {\n            /* \u8bbe\u7f6e\u4e8b\u4ef6 */\n            xEventGroupSetBits(g_xEventCarHandle, (1&lt;&lt;0));\n            vTaskDelete(NULL);\n        }\n    }\n}\n\nvoid OLED_PrintTask2(void *params) {\n    Car *car = params;\n    ShowCar(car);\n//    xEventGroupWaitBits(g_xEventCarHandle, (1&lt;&lt;0), pdTRUE, pdTRUE, portMAX_DELAY);\n    while (1) {\n        HideCar(car);\n        car-&gt;x += 1;\n        if (car-&gt;x &gt; 128) { car-&gt;x = 120; }\n        ShowCar(car);\n        vTaskDelay(100);\n        if (car-&gt;x == 120) {\n            xEventGroupSetBits(g_xEventCarHandle, (1&lt;&lt;1));\n            vTaskDelete(NULL);\n        }\n    }\n}\n\nvoid OLED_PrintTask3(void *params) {\n    Car *car = params;\n    ShowCar(car);\n    xEventGroupWaitBits(g_xEventCarHandle, (1&lt;&lt;0)|(1&lt;&lt;1), pdTRUE, pdTRUE, portMAX_DELAY);\n    while (1) {\n        HideCar(car);\n        car-&gt;x += 1;\n        if (car-&gt;x &gt; 128) { car-&gt;x = 120; }\n        ShowCar(car);\n//        vTaskDelay(100);\n        HAL_Delay(100);\n        if (car-&gt;x == 120) {\n            vTaskDelete(NULL);\n        }\n    }\n}\n</code></pre> <p><code>xEventGroupWaitBits(g_xEventCarHandle, (1&lt;&lt;0)|(1&lt;&lt;1), pdTRUE, pdTRUE, portMAX_DELAY)</code>\u7684\u7b2c\u56db\u4e2a\u53c2\u6570\u4e3a\u63a7\u5236\u7b49\u5f85 \u4e8b\u4ef60 \u6216 \u4e8b\u4ef61 \u8fd8\u662f \u4e8b\u4ef60 \u548c \u4e8b\u4ef61 \u3002</p> C<pre><code>/**\n * @param xWaitForAllBits If xWaitForAllBits is set to pdTRUE then\n * xEventGroupWaitBits() will return when either all the bits in uxBitsToWaitFor\n * are set or the specified block time expires.  If xWaitForAllBits is set to\n * pdFALSE then xEventGroupWaitBits() will return when any one of the bits set\n * in uxBitsToWaitFor is set or the specified block time expires.  The block\n * time is specified by the xTicksToWait parameter.\n */\n</code></pre>"},{"location":"study/FreeRTOS/8.%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/","title":"\u4efb\u52a1\u901a\u77e5","text":""},{"location":"study/FreeRTOS/8.%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#81","title":"8.1 \u4efb\u52a1\u901a\u77e5\u7684\u7279\u6027","text":""},{"location":"study/FreeRTOS/8.%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#811","title":"8.1.1 \u4efb\u52a1\u901a\u77e5\u7684\u6982\u5ff5","text":"<p>\u4efb\u52a1\u901a\u77e5 \uff1a\u662f\u7528\u6765\u901a\u77e5\u4efb\u52a1\u7684\uff0c\u4e14\u5728\u4efb\u52a1\u7684TCB\u7ed3\u6784\u4f53\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u5185\u90e8\u5bf9\u8c61\uff0c\u53ef\u4ee5\u76f4\u63a5\u63a5\u6536\u522b\u4eba\u53d1\u8fc7\u6765\u7684\"\u901a\u77e5\"\u3002</p> <p>\u5728\u6e90\u7801\u4e2d\u627e\u5230\u4efb\u52a1TCB\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\uff0c\u5176\u4e2d<code>ulNotifiedValue</code>\u4e3a \u901a\u77e5\u503c\u00a0\u3001<code>ucNotifyState</code>\u4e3a \u901a\u77e5\u72b6\u6001\u00a0\u3002</p> C<pre><code>typedef  struct  tskTaskControlBlock \n{\n    ListItem_t          xStateListItem; \n    ListItem_t          xEventListItem;     \n    UBaseType_t         uxPriority;         \n    StackType_t         *pxStack;           \n    char                pcTaskName[ configMAX_TASK_NAME_LEN ];\n    ...\n    #if ( configUSE_TASK_NOTIFICATIONS  ==  1 )\n        volatile  uint32_t    ulNotifiedValue [ configTASK_NOTIFICATION_ARRAY_ENTRIES ];\n        volatile  uint8_t      ucNotifyState [ configTASK_NOTIFICATION_ARRAY_ENTRIES ];\n    #endif\n    ...\n} tskTCB;\n\n#define  configTASK_NOTIFICATION_ARRAY_ENTRIES  1   /* \u5b9a\u4e49\u4efb\u52a1\u901a\u77e5\u6570\u7ec4\u7684\u5927\u5c0f, \u9ed8\u8ba4: 1\n</code></pre>"},{"location":"study/FreeRTOS/8.%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#812","title":"8.1.2 \u901a\u77e5\u503c\u4e0e\u901a\u77e5\u72b6\u6001","text":"<p>\u901a\u77e5\u503c\u7684\u66f4\u65b0\u65b9\u5f0f\uff1a</p> <ul> <li>\u8ba1\u6570\u503c\uff08\u6570\u503c\u7d2f\u52a0\uff0c\u7c7b\u4f3c\u4fe1\u53f7\u91cf\uff09</li> <li>\u76f8\u5bf9\u5e94\u4f4d\u7f6e\uff08\u7c7b\u4f3c\u4e8b\u4ef6\u6807\u5fd7\u7ec4\uff09</li> <li>\u4efb\u610f\u6570\u503c\uff08\u652f\u6301\u8986\u5199\u548c\u4e0d\u8986\u5199\uff0c\u7c7b\u4f3c\u961f\u5217\uff09</li> </ul> <p>\u901a\u77e5\u72b6\u6001\u76843\u79cd\u53d6\u503c\uff1a</p> <ul> <li><code>taskNOT_WAITING_NOTIFICATION</code>\uff1a\u4efb\u52a1\u6ca1\u6709\u5728\u7b49\u5f85\u901a\u77e5</li> <li><code>taskWAITING_NOTIFICATION</code>\uff1a\u4efb\u52a1\u5728\u7b49\u5f85\u901a\u77e5</li> <li><code>taskNOTIFICATION_RECEIVED</code>\uff1a\u4efb\u52a1\u63a5\u6536\u5230\u4e86\u901a\u77e5\uff0c\u4e5f\u88ab\u79f0\u4e3apending(\u6709\u6570\u636e\u4e86\uff0c\u5f85\u5904\u7406)</li> </ul>"},{"location":"study/FreeRTOS/8.%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#813","title":"8.1.3 \u4efb\u52a1\u901a\u77e5\u7684\u4f18\u52a3","text":"<p>\u4efb\u52a1\u901a\u77e5\u7684\u4f18\u70b9\uff1a</p> <ul> <li>\u6548\u7387\u66f4\u9ad8\uff1a\u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u5411\u4efb\u52a1\u53d1\u9001\u4e8b\u4ef6\u6216\u6570\u636e\u6bd4\u4f7f\u7528\u961f\u5217\u3001\u4e8b\u4ef6\u7ec4\u6216\u4fe1\u53f7\u91cf\u66f4\u5feb\u3002</li> <li>\u4f7f\u7528\u5185\u5b58\u66f4\u5c0f\uff1a\u4f7f\u7528\u5176\u4ed6\u65b9\u6cd5\u65f6\u90fd\u9700\u8981\u5148\u521b\u5efa\u5bf9\u5e94\u7684\u7ed3\u6784\u4f53\uff0c\u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u65f6\u65e0\u9700\u989d\u5916\u521b\u5efa\u7ed3\u6784\u4f53\u3002</li> </ul> <p>\u4efb\u52a1\u901a\u77e5\u7684\u7f3a\u70b9\uff1a</p> <ul> <li>\u65e0\u6cd5\u53d1\u9001\u6570\u636e\u7ed9ISR\uff1aISR\u6ca1\u6709\u4efb\u52a1\u7ed3\u6784\u4f53\uff0c\u56e0\u6b64\u65e0\u6cd5\u7ed9ISR\u53d1\u9001\u6570\u636e\uff0c\u4f46ISR\u53ef\u4ee5\u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u7684\u529f\u80fd\uff0c\u53d1\u9001\u6570\u636e\u7ed9\u4efb\u52a1\u3002</li> <li>\u65e0\u6cd5\u5e7f\u64ad\u7ed9\u591a\u4e2a\u4efb\u52a1\uff1a\u4efb\u52a1\u901a\u77e5\u53ea\u80fd\u88ab\u6307\u5b9a\u7684\u4e00\u4e2a\u4efb\u52a1\u63a5\u6536\u5e76\u5904\u7406\u3002</li> <li>\u65e0\u6cd5\u7f13\u5b58\u591a\u4e2a\u6570\u636e\uff1a\u4efb\u52a1\u901a\u77e5\u662f\u901a\u8fc7\u66f4\u65b0\u4efb\u52a1\u901a\u77e5\u503c\u6765\u53d1\u9001\u6570\u636e\u7684\uff0c\u4efb\u52a1\u7ed3\u6784\u4f53\u4e2d\u53ea\u6709\u4e00\u4e2a\u4efb\u52a1\u901a\u77e5\u503c\uff0c\u53ea\u80fd\u4fdd\u6301\u4e00\u4e2a\u6570\u636e\u3002</li> <li>\u53d1\u9001\u53d7\u9650\u4e0d\u652f\u6301\u963b\u585e\uff1a\u53d1\u9001\u65b9\u65e0\u6cd5\u8fdb\u5165\u963b\u585e\u72b6\u6001\u7b49\u5f85\u3002</li> </ul>"},{"location":"study/FreeRTOS/8.%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#82","title":"8.2 \u4efb\u52a1\u901a\u77e5\u51fd\u6570","text":""},{"location":"study/FreeRTOS/8.%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#821","title":"8.2.1 \u4e24\u7c7b\u51fd\u6570","text":"\u529f\u80fd \u7b80\u5316\u7248 \u4e13\u4e1a\u7248 \u53d1\u51fa\u901a\u77e5 <code>xTaskNotifyGive</code> \u548c<code>vTaskNotifyGiveFromISR</code> <code>xTaskNotify</code> \u548c<code>xTaskNotifyFromISR</code> \u53d6\u51fa\u901a\u77e5 <code>ulTaskNotifyTake</code> <code>xTaskNotifyWait</code>"},{"location":"study/FreeRTOS/8.%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#821_1","title":"8.2.1 \u53d1\u9001\u901a\u77e5","text":"<p>\u5728\u4efb\u52a1\u4e2d\u4f7f\u7528 xTaskNotifyGive\u00a0\u51fd\u6570\uff0c\u5728ISR\u4e2d\u4f7f\u7528 vTaskNotifyGiveFromISR\u00a0\u51fd\u6570\uff0c\u90fd\u662f\u76f4\u63a5\u7ed9\u5176\u4ed6\u4efb\u52a1\u53d1\u9001\u901a\u77e5\uff1a</p> <ul> <li>\u4f7f\u5f97\u901a\u77e5\u503c\u52a0\u4e00\u3002</li> <li>\u5e76\u4f7f\u5f97\u901a\u77e5\u72b6\u6001\u53d8\u4e3a\"pending\"\uff0c\u4e5f\u5c31\u662f<code>taskNOTIFICATION_RECEIVED</code>\uff0c\u8868\u793a\u6709\u6570\u636e\u4e86\u3001\u5f85\u5904\u7406\u3002</li> </ul> <p>xTaskNotify \u51fd\u6570\u529f\u80fd\u66f4\u5f3a\u5927\uff1a</p> <ul> <li>\u8ba9\u63a5\u6536\u4efb\u52a1\u7684\u901a\u77e5\u503c\u52a0\u4e00\uff1a\u8fd9\u65f6 xTaskNotify() \u7b49\u540c\u4e8e xTaskNotifyGive()</li> <li><code>eAction</code>\u7f6e\u4e0d\u540c\u53c2\u6570\u53ef\u4ee5\u6267\u884c\u4e0d\u540c\u64cd\u4f5c\uff1a<ul> <li><code>eSetBits</code>\uff1a\u66f4\u65b0\u6307\u5b9abit\u3002</li> <li><code>eIncrement</code>\uff1a\u901a\u77e5\u503c\u52a0\u4e00\u3002</li> <li><code>eSetValueWithOverwrite</code>\uff1a\u8986\u5199\u7684\u65b9\u5f0f\u66f4\u65b0\u901a\u77e5\u503c\u3002</li> <li><code>eSetValueWithoutOverwrite</code>\uff1a\u4e0d\u8986\u5199\u901a\u77e5\u503c\u3002</li> <li><code>eNoAction</code>\uff1a\u65e0\u64cd\u4f5c\u3002</li> </ul> </li> </ul> <p><code>eAction</code>\u5728\u6e90\u7801\u4e2d\u7684\u5904\u7406\uff1a</p> C<pre><code>switch( eAction )\n{\n    case eSetBits   :\n        pxTCB-&gt;ulNotifiedValue |= ulValue;\n        break;\n\n    case eIncrement :\n        ( pxTCB-&gt;ulNotifiedValue )++;\n        break;\n\n    case eSetValueWithOverwrite :\n        pxTCB-&gt;ulNotifiedValue = ulValue;\n        break;\n\n    case eSetValueWithoutOverwrite :\n        if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )\n        {\n            pxTCB-&gt;ulNotifiedValue = ulValue;\n        }\n        else\n        {\n            /* The value could not be written to the task. */\n            xReturn = pdFAIL;\n        }\n        break;\n\n    case eNoAction:\n        /* The task is being notified without its notify value being\n                    updated. */\n        break;\n}\n</code></pre> C<pre><code>/* \u53d1\u9001\u901a\u77e5 */\nBaseType_t xTaskNotifyGive( TaskHandle_t xTaskToNotify );\n\n/* A version of xTaskNotifyGive() that can be called from an interrupt service routine (ISR). */\nvoid vTaskNotifyGiveFromISR( TaskHandle_t xTaskHandle, BaseType_t *pxHigherPriorityTaskWoken );\n\n/* \u53d1\u9001\u901a\u77e5 */\nBaseType_t xTaskNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction );\n\n/* A version of xTaskNotify() that can be used from an interrupt service routine (ISR). */\nBaseType_t xTaskNotifyFromISR( \n        TaskHandle_t xTaskToNotify,\n        uint32_t ulValue, \n        eNotifyAction eAction, \n        BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre>"},{"location":"study/FreeRTOS/8.%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#822","title":"8.2.2 \u4e13\u4e1a\u7248","text":"<p>\u4f7f\u7528 ulTaskNotifyTake \u51fd\u6570\u53ef\u4ee5\u5b9e\u73b0\u8f7b\u91cf\u7ea7\u7684\u3001\u9ad8\u6548\u7684\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u3001\u8ba1\u6570\u578b\u4fe1\u53f7\u91cf\uff1a</p> <ul> <li><code>xClearCountOnExit</code>\u8bbe\u7f6e\u901a\u77e5\u503c\u6e05\u96f6\uff0c\u53ef\u6a21\u62df\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\u3002</li> <li><code>xClearCountOnExit</code>\u8bbe\u7f6e\u901a\u77e5\u503c\u51cf\u4e00\uff0c\u914d\u5408<code>xTaskNotifyGive</code> \u53ef\u6a21\u62df\u8ba1\u6570\u578b\u4fe1\u53f7\u91cf\u3002</li> <li>\u53ef\u4ee5\u8fd4\u56de\u901a\u77e5\u8ba1\u6570\u503c\u3002</li> </ul> <p>\u4f7f\u7528 xTaskNotifyWait() \u51fd\u6570\u53d6\u51fa\u901a\u77e5\u503c\u53ef\u4ee5\u5b9e\u73b0\u66f4\u591a\u64cd\u4f5c\uff1a</p> <ul> <li>\u53ef\u4ee5\u83b7\u53d6\u63a5\u6536\u7684\u901a\u77e5\u503c\u3002</li> <li>\u8fd8\u53ef\u4ee5\u5728\u51fd\u6570\u8fdb\u5165\u3001\u9000\u51fa\u65f6\uff0c\u6e05\u9664\u901a\u77e5\u503c\u7684\u6307\u5b9a\u4f4d\u3002</li> </ul> C<pre><code>/* \u53d6\u51fa\u901a\u77e5\u503c */\nuint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait );\n\n/* \u53d6\u51fa\u901a\u77e5\u503c */\nBaseType_t xTaskNotifyWait( \n        uint32_t ulBitsToClearOnEntry, \n        uint32_t ulBitsToClearOnExit, \n        uint32_t *pulNotificationValue, \n        TickType_t xTicksToWait );\n</code></pre>"},{"location":"study/FreeRTOS/8.%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#83","title":"8.3 \u4efb\u52a1\u901a\u77e5\u793a\u4f8b","text":""},{"location":"study/FreeRTOS/8.%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#831","title":"8.3.1 \u6a21\u62df\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf","text":"<p>car1\u8fd0\u884c\u5230\u7ec8\u70b9\u540e\uff0c\u7ed9car2\u53d1\u9001\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff0c\u7ed9car3\u53d1\u9001\u6570\u503c\u3002car2\u7b49\u5f85\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff0ccar3\u7b49\u5f85\u7279\u5b9a\u7684\u901a\u77e5\u503c\u3002</p> <p>\u6dfb\u52a0\u4efb\u52a1\u53e5\u67c4</p> C<pre><code>static TaskHandle_t g_Task2Handle;\nstatic TaskHandle_t g_Task3Handle;\n\nxTaskCreate(OLED_PrintTask1, \"Task1\", 128, &amp;g_car[0], osPriorityNormal, NULL);\nxTaskCreate(OLED_PrintTask2, \"Task2\", 128, &amp;g_car[1], osPriorityNormal + 2, &amp;g_Task2Handle);\nxTaskCreate(OLED_PrintTask3, \"Task3\", 128, &amp;g_car[2], osPriorityNormal + 2, &amp;g_Task3Handle);\n</code></pre> <p>\u6a21\u62df\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf\uff0c\u4f7f\u7528\u4efb\u52a1\u901a\u77e5\u4f20\u9012\u7279\u5b9a\u503c</p> C<pre><code>void OLED_PrintTask1(void *params) {\n    Car *car = params;\n    ShowCar(car);\n    while (1) {\n        HideCar(car);\n        car-&gt;x += 1;\n        if (car-&gt;x &gt; 128) { car-&gt;x = 120; }\n        ShowCar(car);\n        vTaskDelay(50);\n        if (car-&gt;x == 120) {\n            /* \u7ed9Task2\u53d1\u9001\u4efb\u52a1\u901a\u77e5 */\n            xTaskNotifyGive(g_Task2Handle);\n            /* \u7ed9Task3\u53d1\u9001\u4efb\u52a1\u901a\u77e5\u503c100\uff08eSetValueWithOverwrite\u64cd\u4f5c\uff09 */\n            xTaskNotify(g_Task3Handle, 100, eSetValueWithOverwrite);\n            /* \u8bbe\u7f6e\u4e8b\u4ef6 */\n            vTaskDelete(NULL);\n        }\n    }\n}\n\nvoid OLED_PrintTask2(void *params) {\n    Car *car = params;\n    ShowCar(car);\n    /* \u53d6\u51fa\u4efb\u52a1\u901a\u77e5\uff0c\u5c06\u901a\u77e5\u503c\u6e05\u96f6\uff0c\u6a21\u62df\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf */\n    ulTaskNotifyTake(pdTRUE, portMAX_DELAY);\n    while (1) {\n        HideCar(car);\n        car-&gt;x += 1;\n        if (car-&gt;x &gt; 128) { car-&gt;x = 120; }\n        ShowCar(car);\n        vTaskDelay(100);\n        if (car-&gt;x == 120) {\n            vTaskDelete(NULL);\n        }\n    }\n}\n\nvoid OLED_PrintTask3(void *params) {\n    uint32_t value;\n    Car *car = params;\n    ShowCar(car);\n    do {\n        /* \u7b49\u5f85\u7279\u5b9a\u7684\u901a\u77e5\u503c */\n        xTaskNotifyWait(0, 0, &amp;value, portMAX_DELAY);\n    } while (value != 100);\n    while (1) {\n        HideCar(car);\n        car-&gt;x += 1;\n        if (car-&gt;x &gt; 128) { car-&gt;x = 120; }\n        ShowCar(car);\n        vTaskDelay(100);\n//        HAL_Delay(100);\n        if (car-&gt;x == 120) {\n            vTaskDelete(NULL);\n        }\n    }\n}\n</code></pre>"},{"location":"study/FreeRTOS/8.%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#832","title":"8.3.2 \u6a21\u62df\u6280\u672f\u578b\u4fe1\u53f7\u91cf","text":"<p>\u4fee\u6539\u4efb\u52a1 1 \u548c 2 \u90e8\u5206\u53c2\u6570</p> C<pre><code>void OLED_PrintTask1(void *params) {\n    Car *car = params;\n    ShowCar(car);\n    while (1) {\n        HideCar(car);\n        car-&gt;x += 1;\n        if (car-&gt;x &gt; 128) { car-&gt;x = 120; }\n        ShowCar(car);\n        vTaskDelay(50);\n        if (car-&gt;x == 120) {\n            /* \u7ed9Task2\u53d1\u9001\u4e24\u6b21\u4efb\u52a1\u901a\u77e5\uff0c\u4f7f\u5f97\u901a\u77e5\u503c\u4e3a2\uff0c\u6a21\u62df\u8ba1\u6570\u578b\u4fe1\u53f7\u91cf */\n            xTaskNotifyGive(g_Task2Handle);\n            xTaskNotifyGive(g_Task2Handle);\n            /* \u7ed9Task3\u53d1\u9001\u4efb\u52a1\u901a\u77e5\u503c100\uff08eSetValueWithOverwrite\u64cd\u4f5c\uff09 */\n            xTaskNotify(g_Task3Handle, 100, eSetValueWithOverwrite);\n            /* \u8bbe\u7f6e\u4e8b\u4ef6 */\n            vTaskDelete(NULL);\n        }\n    }\n}\n\nvoid OLED_PrintTask2(void *params) {\n    Car *car = params;\n    uint8_t cnt;\n    ShowCar(car);\n    /* \u53d6\u51fa\u4efb\u52a1\u901a\u77e5\uff0c\u5c06\u901a\u77e5\u503c\u6e05\u96f6\uff0c\u6a21\u62df\u4e8c\u8fdb\u5236\u4fe1\u53f7\u91cf */\n    cnt = ulTaskNotifyTake(pdFALSE, portMAX_DELAY);\n    while (1) {\n        HideCar(car);\n        car-&gt;x += 1;\n        if (car-&gt;x &gt; 128) { car-&gt;x = 120; }\n        ShowCar(car);\n        vTaskDelay(100);\n        if (car-&gt;x == 120) {\n            /* Task1\u53d6\u51fa\u4e00\u6b21\u4efb\u52a1\u901a\u77e5\uff0ccnt = 2-1 = 1 */\n            OLED_ShowNum(0, 0, cnt, 1, 16);\n            vTaskDelete(NULL);\n        }\n    }\n}\n</code></pre>"},{"location":"study/FreeRTOS/8.%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#832_1","title":"8.3.2 \u6a21\u62df\u6d88\u606f\u90ae\u7bb1","text":"<p>\u524d\u4e24\u4e2a\u4f8b\u5b50\u4e2d\uff0cTask3\u5373\u4e3a\u6b64\u6848\u4f8b\u3002</p>"},{"location":"study/FreeRTOS/8.%E4%BB%BB%E5%8A%A1%E9%80%9A%E7%9F%A5/#833","title":"8.3.3 \u6a21\u62df\u4e8b\u4ef6\u7ec4","text":"<p>car1\u8fd0\u884c\u5230\u7ec8\u70b9\u540e\uff0c\u53d1\u9001\u4efb\u52a1\u901a\u77e5\u5c06Task3\u7684 Bit0 \u7f6e 1 \uff0ccar2\u8fd0\u884c\u5230\u7ec8\u70b9\u540e\uff0c\u53d1\u9001\u4efb\u52a1\u901a\u77e5\u5c06Task3\u7684 Bit1 \u7f6e 1\uff0cTask\u63a5\u6536\u4efb\u52a1\u901a\u77e5\u5224\u65adBit0 \u548c Bit1\u3002</p> <p>\u5b9a\u4e49\u4e24\u4e2a\u6570\u636e\u4f4d</p> C<pre><code>#define EventBit0 (1&lt;&lt;0)    // 0000 0001\n#define EventBit1 (1&lt;&lt;1)    // 0000 0010\n</code></pre> <p>\u4fee\u6539\u4efb\u52a1\u51fd\u6570</p> C<pre><code>void OLED_PrintTask1(void *params) {\n    Car *car = params;\n    ShowCar(car);\n    while (1) {\n        HideCar(car);\n        car-&gt;x += 1;\n        if (car-&gt;x &gt; 128) { car-&gt;x = 120; }\n        ShowCar(car);\n        vTaskDelay(50);\n        if (car-&gt;x == 120) {\n            /* \u7f6eTask3\u7684Bit0\u4e3a1 */\n            xTaskNotify(g_Task3Handle, EventBit0, eSetBits);\n            /* \u8bbe\u7f6e\u4e8b\u4ef6 */\n            vTaskDelete(NULL);\n        }\n    }\n}\n\nvoid OLED_PrintTask2(void *params) {\n    Car *car = params;\n    ShowCar(car);\n    while (1) {\n        HideCar(car);\n        car-&gt;x += 1;\n        if (car-&gt;x &gt; 128) { car-&gt;x = 120; }\n        ShowCar(car);\n        vTaskDelay(100);\n        if (car-&gt;x == 120) {\n            /* \u7f6eTask3\u7684Bit1\u4e3a1 */\n            xTaskNotify(g_Task3Handle, EventBit1, eSetBits);\n            vTaskDelete(NULL);\n        }\n    }\n}\n\nvoid OLED_PrintTask3(void *params) {\n    uint32_t value;\n    uint32_t event_bit = 0;\n    Car *car = params;\n    ShowCar(car);\n    /* \u7b49\u5f85\u7279\u5b9a\u7684\u901a\u77e5\u503c */\n    while (1) {\n        xTaskNotifyWait(0, 0xffffffffUL, &amp;value, portMAX_DELAY);\n        if (value &amp; EventBit0) {\n            event_bit |= EventBit0;\n        }\n        if (value &amp; EventBit1) {\n            event_bit |= EventBit1;\n        }\n        if(event_bit == (EventBit0|EventBit1)) {\n            event_bit = 0;\n            while (car-&gt;x != 120) {\n                HideCar(car);\n                car-&gt;x += 1;\n                if (car-&gt;x &gt; 128) { car-&gt;x = 120; }\n                ShowCar(car);\n                vTaskDelay(100);\n            }\n            if (car-&gt;x == 120) {\n                vTaskDelete(NULL);\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"study/FreeRTOS/9.%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8/","title":"\u8f6f\u4ef6\u5b9a\u65f6\u5668","text":""},{"location":"study/FreeRTOS/9.%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8/#91","title":"9.1 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u7279\u6027","text":""},{"location":"study/FreeRTOS/9.%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8/#911","title":"9.1.1 \u8f6f\u786c\u4ef6\u5b9a\u65f6\u5668","text":"<p>\u786c\u4ef6\u5b9a\u65f6\u5668\uff1a</p> <ul> <li>\u82af\u7247\u672c\u8eab\u81ea\u5e26\u7684\u5b9a\u65f6\u5668\u6a21\u5757\uff0c\u786c\u4ef6\u5b9a\u65f6\u5668\u7684\u7cbe\u5ea6\u4e00\u822c\u5f88\u9ad8\uff0c\u6bcf\u6b21\u5728\u5b9a\u65f6\u65f6\u95f4\u5230\u8fbe\u4e4b\u540e\u5c31\u4f1a\u81ea\u52a8\u89e6\u53d1\u4e00\u4e2a\u4e2d\u65ad\uff0c\u7528\u6237\u5728\u4e2d\u65ad\u670d\u52a1\u51fd\u6570\u4e2d\u5904\u7406\u4fe1\u606f\u3002</li> </ul> <p>\u8f6f\u4ef6\u5b9a\u65f6\u5668\uff1a</p> <ul> <li>\u662f\u6307\u5177\u6709\u5b9a\u65f6\u529f\u80fd\u7684\u8f6f\u4ef6\uff0c\u53ef\u8bbe\u7f6e\u5b9a\u65f6\u5468\u671f\uff0c\u5f53\u6307\u5b9a\u65f6\u95f4\u5230\u8fbe\u540e\u8981\u8c03\u7528\u56de\u8c03\u51fd\u6570\uff08\u4e5f\u79f0\u8d85\u65f6\u51fd\u6570\uff09\uff0c\u7528\u6237\u5728\u56de\u8c03\u51fd\u6570\u4e2d\u5904\u7406\u4fe1\u606f\u3002</li> </ul>"},{"location":"study/FreeRTOS/9.%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8/#912","title":"9.1.2 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u7279\u6027","text":"<p>\u8f6f\u4ef6\u5b9a\u65f6\u5668\u53ef\u4ee5\u8bbe\u7f6e\u4e3a \u5355\u6b21\u5b9a\u65f6\u5668\u00a0\u548c \u5468\u671f\u5b9a\u65f6\u5668\u00a0\uff1a</p> <ul> <li>\u5355\u6b21\u5b9a\u65f6\u5668\uff0c\u5373\u5f53\u6307\u5b9a\u65f6\u95f4\u5230\u8fbe\u540e\u53ea\u8c03\u7528\u4e00\u6b21\u8d85\u65f6\u51fd\u6570\uff0c\u4e4b\u540e\u8f6f\u4ef6\u5b9a\u65f6\u5668\u4e0d\u518d\u5de5\u4f5c\uff0c\u4f46 \u53ef\u4ee5\u88ab\u624b\u52a8\u91cd\u65b0\u5f00\u542f\u00a0\u3002</li> <li>\u5468\u671f\u5b9a\u65f6\u5668\uff0c\u5373\u4f1a\u5468\u671f\u6027\u7684\u5faa\u73af\u8c03\u7528\u8d85\u65f6\u51fd\u6570\u3002</li> </ul> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u8f6f\u4ef6\u5b9a\u65f6\u5668\u6709\u4e24\u79cd\u72b6\u6001\uff0c \u4f11\u7720\u6001\u00a0\u548c \u8fd0\u884c\u6001\u00a0\uff1a</p> <ul> <li>\u4f11\u7720\u6001\uff0c\u5373\u8f6f\u4ef6\u5b9a\u65f6\u5668\u53ef\u4ee5\u901a\u8fc7\u5176\u53e5\u67c4\u88ab\u5f15\u7528\uff0c\u4f46\u56e0\u4e3a\u6ca1\u6709\u8fd0\u884c\uff0c\u6240\u4ee5\u5176\u5b9a\u65f6\u8d85\u65f6\u56de\u8c03\u51fd\u6570\u4e0d\u4f1a\u88ab\u6267\u884c\u3002</li> <li>\u8fd0\u884c\u6001\uff0c\u8fd0\u884c\u6001\u7684\u5b9a\u65f6\u5668\uff0c\u5f53\u6307\u5b9a\u65f6\u95f4\u5230\u8fbe\u4e4b\u540e\uff0c\u5b83\u7684\u8d85\u65f6\u56de\u8c03\u51fd\u6570\u4f1a\u88ab\u8c03\u7528\u3002</li> </ul> <p>\u5355\u6b21\u5b9a\u65f6\u5668\u72b6\u6001\u8f6c\u6362\u56fe\uff1a</p> <p></p> <p>\u5468\u671f\u5b9a\u65f6\u5668\u72b6\u6001\u8f6c\u6362\u56fe\uff1a</p> <p></p>"},{"location":"study/FreeRTOS/9.%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8/#913","title":"9.1.3 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u4f7f\u7528","text":"<ul> <li>\u5982\u679c\u8981\u4f7f\u80fd\u8f6f\u4ef6\u5b9a\u65f6\u5668\uff0c\u9700\u5728<code>FreeRTOSConfig.h</code>\u6587\u4ef6\u4e2d\u5c06<code>configUSE_TIMERS</code> \u914d\u7f6e\u6210 1 \u3002</li> <li>\u8f6f\u4ef6\u5b9a\u65f6\u5668\u4ee5Tick\u4e3a\u57fa\u51c6\uff0c\u4f46\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u8d85\u65f6\u56de\u8c03\u51fd\u6570\u662f\u7531 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1 \u8c03\u7528\u7684\u3002</li> <li>\u5728\u5f00\u542f\u4efb\u52a1\u8c03\u5ea6\u5668\u65f6\uff0c\u8f6f\u4ef6\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1<code>prvTimerTask()</code>\u4e0e\u7a7a\u95f2\u4efb\u52a1\u4e00\u8d77\u88ab\u521b\u5efa\u3002</li> <li>\u8f6f\u4ef6\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u7684\u4f5c\u7528\uff1a<ul> <li>\u8d1f\u8d23\u8f6f\u4ef6\u5b9a\u65f6\u5668\u8d85\u65f6\u7684\u903b\u8f91\u5224\u65ad</li> <li>\u8c03\u7528\u8d85\u65f6\u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u8d85\u65f6\u56de\u8c03\u51fd\u6570</li> <li>\u5904\u7406\u8f6f\u4ef6\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217</li> </ul> </li> <li>\u8f6f\u4ef6\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u9ed8\u8ba4\u914d\u7f6e\u4e3a <code>configTIMER_TASK_PRIORITY</code>  =  31 \u3002</li> <li>\u7528\u6237\u901a\u8fc7\u547d\u4ee4\u961f\u5217\u4e0e\u8f6f\u4ef6\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u4ea4\u4e92\uff0c\u547d\u4ee4\u961f\u5217\u957f\u5ea6\u9ed8\u8ba4\u914d\u7f6e\u4e3a <code>configTIMER_QUEUE_LENGTH</code>  = 5 \u3002</li> <li>\u5b9a\u65f6\u5668\u7684\u8d85\u65f6\u65f6\u95f4\u662f\u57fa\u4e8e\u8c03\u7528 <code>xTimerStart()</code> \u7684\u65f6\u523b\uff0c<code>xTimerStart()</code>\u53ea\u662f\u628a\u5f00\u542f\u5b9a\u65f6\u5668\u547d\u4ee4\u53d1\u7ed9\"\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\"\uff0c\u81f3\u4e8e\u670d\u52a1\u4efb\u52a1\u80fd\u5426\u9a6c\u4e0a\u6267\u884c\uff0c\u53d6\u51b3\u4e8e\u5b83\u7684\u4f18\u5148\u7ea7\u3002</li> </ul> <p>\u7528\u6237\u8c03\u7528FreeRTOS\u7684\u8f6f\u4ef6\u5b9a\u65f6\u5668\u76f8\u5173\u7684 API \u51fd\u6570\uff0cAPI \u51fd\u6570\u5f80\u8f6f\u4ef6\u5b9a\u65f6\u5668\u547d\u4ee4\u961f\u5217\u4e2d\u5199\u6d88\u606f\uff0c\u5b9e\u73b0\u7528\u6237\u4e0e\u5b9a\u65f6\u5668\u670d\u52a1\u4efb\u52a1\u7684\u4ea4\u4e92\uff1a</p> <p></p>"},{"location":"study/FreeRTOS/9.%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8/#914","title":"9.1.4 \u56de\u8c03\u51fd\u6570","text":"<p>\u51fd\u6570\u539f\u578b\uff1a</p> C<pre><code>void ATimerCallback( TimerHandle_t xTimer );\n</code></pre> <p>\u5b9a\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u662f\u5728\u5b88\u62a4\u4efb\u52a1\u4e2d\u88ab\u8c03\u7528\u7684\uff0c\u5b88\u62a4\u4efb\u52a1\u4e0d\u662f\u4e13\u4e3a\u67d0\u4e2a\u5b9a\u65f6\u5668\u670d\u52a1\u7684\uff0c\u5b83\u8fd8\u8981\u5904\u7406\u5176\u4ed6\u5b9a\u65f6\u5668\u3002</p> <p>\u6240\u4ee5\uff0c\u5b9a\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\u4e0d\u8981\u5f71\u54cd\u5176\u4ed6\u4eba\uff1a</p> <ul> <li>\u56de\u8c03\u51fd\u6570\u8981\u5c3d\u5feb\u5b9e\u884c\uff0c\u4e0d\u80fd\u8fdb\u5165\u963b\u585e\u72b6\u6001\u3002</li> <li>\u4e0d\u8981\u8c03\u7528\u4f1a\u5bfc\u81f4\u963b\u585e\u7684API\u51fd\u6570\uff0c\u6bd4\u5982 vTaskDelay()\u00a0\u3002</li> <li>\u53ef\u4ee5\u8c03\u7528 xQueueReceive() \u4e4b\u7c7b\u7684\u51fd\u6570\uff0c\u4f46\u662f\u8d85\u65f6\u65f6\u95f4\u8981\u8bbe\u4e3a0\uff1a\u5373\u523b\u8fd4\u56de\uff0c\u4e0d\u53ef\u963b\u585e\u3002</li> </ul>"},{"location":"study/FreeRTOS/9.%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8/#92","title":"9.2 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u51fd\u6570","text":""},{"location":"study/FreeRTOS/9.%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8/#921","title":"9.2.1 \u521b\u5efa\u5b9a\u65f6\u5668","text":"C<pre><code>TimerHandle_t xTimerCreate( \n        const char * const pcTimerName, \n        const TickType_t xTimerPeriodInTicks,\n        const UBaseType_t uxAutoReload,\n        void * const pvTimerID,\n        TimerCallbackFunction_t pxCallbackFunction );\n</code></pre> C<pre><code>TimerHandle_t xTimerCreateStatic(   \n        const char * const pcTimerName,         \n        const TickType_t xTimerPeriodInTicks,\n        const UBaseType_t uxAutoReload,\n        void * const pvTimerID,\n        TimerCallbackFunction_t pxCallbackFunction,\n        StaticTimer_t *pxTimerBuffer );\n</code></pre>"},{"location":"study/FreeRTOS/9.%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8/#922","title":"9.2.2 \u5220\u9664\u5b9a\u65f6\u5668","text":"C<pre><code>BaseType_t xTimerDelete( TimerHandle_t xTimer, TickType_t xTicksToWait );\n</code></pre>"},{"location":"study/FreeRTOS/9.%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8/#923","title":"9.2.3 \u542f\u52a8/\u505c\u6b62\u5b9a\u65f6\u5668","text":"C<pre><code>BaseType_t xTimerStart( \n        TimerHandle_t xTimer, \n        TickType_t xTicksToWait );\n\nBaseType_t xTimerStartFromISR(   \n        TimerHandle_t xTimer,\n        BaseType_t *pxHigherPriorityTaskWoken );\n\nBaseType_t xTimerStop( \n        TimerHandle_t xTimer, \n        TickType_t xTicksToWait );\n\nBaseType_t xTimerStopFromISR(    \n        TimerHandle_t xTimer,\n        BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre>"},{"location":"study/FreeRTOS/9.%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8/#924","title":"9.2.4 \u590d\u4f4d\u5b9a\u65f6\u5668","text":"C<pre><code>BaseType_t xTimerReset( \n        TimerHandle_t xTimer, \n        TickType_t xTicksToWait );\n\nBaseType_t xTimerResetFromISR(  \n        TimerHandle_t xTimer,\n        BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre>"},{"location":"study/FreeRTOS/9.%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8/#925","title":"9.2.5 \u4fee\u6539\u5468\u671f","text":"C<pre><code>BaseType_t xTimerChangePeriod(   \n        TimerHandle_t xTimer,\n        TickType_t xNewPeriod,\n        TickType_t xTicksToWait );\n\nBaseType_t xTimerChangePeriodFromISR(\n        TimerHandle_t xTimer,\n        TickType_t xNewPeriod,\n        BaseType_t *pxHigherPriorityTaskWoken );\n</code></pre>"},{"location":"study/FreeRTOS/9.%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8/#926","title":"9.2.6 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u7ed3\u6784\u4f53","text":"C<pre><code>typedef struct tmrTimerControl\n{\n    const char              *pcTimerName;       /* \u5b9a\u65f6\u5668\u540d\u79f0 */ \n    ListItem_t              xTimerListItem;     /* \u8f6f\u4ef6\u5b9a\u65f6\u5668\u5217\u8868\u9879 */\n    TickType_t              xTimerPeriodInTicks;/* \u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u5468\u671f */\n    UBaseType_t             uxAutoReload;       /* \u81ea\u52a8\u91cd\u542fpdTRUE/pdFALSE */\n    void                    *pvTimerID;         /* \u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684ID */\n    TimerCallbackFunction_t pxCallbackFunction; /* \u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570 */\n    #if( configUSE_TRACE_FACILITY == 1 )\n        UBaseType_t         uxTimerNumber;      /* \u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u7f16\u53f7\uff0c\u8c03\u8bd5\u7528 */\n    #endif\n\n    #if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) &amp;&amp; ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )\n        uint8_t             ucStaticallyAllocated; /* \u8f6f\u4ef6\u5b9a\u65f6\u5668\u7684\u72b6\u6001 */\n    #endif\n} xTIMER;\n</code></pre>"},{"location":"study/FreeRTOS/9.%E8%BD%AF%E4%BB%B6%E5%AE%9A%E6%97%B6%E5%99%A8/#93","title":"9.3 \u8f6f\u4ef6\u5b9a\u65f6\u5668\u793a\u4f8b","text":"<p>\u7528\u8f6f\u4ef6\u5b9a\u65f6\u5668\u63a7\u5236\u8702\u9e23\u5668\u53d1\u58f0\uff0c\u5e76\u5728200ms\u540e\u5173\u95ed\u3002</p> <p>\u8702\u9e23\u5668\u529f\u80fd\u5c01\u88c5</p> C<pre><code>static TimerHandle_t g_SoftTimerHandle;\n\n/* \u8f6f\u4ef6\u5b9a\u65f6\u5668\u8d85\u65f6\u51fd\u6570 */\nstatic void rtCallbackFunc(TimerHandle_t xTimer) {\n    Buzzer_OFF();\n}\n\n/* \u8f6f\u4ef6\u5b9a\u65f6\u5668\u63a7\u5236\u8702\u9e23\u5668 */\nvoid rtBuzzerSoftTimer_Init(void) {\n    g_SoftTimerHandle = xTimerCreate(\n            \"BuzzerSound\",\n            200,\n            pdFALSE,\n            NULL,\n            rtCallbackFunc\n            );\n}\n\n/* \u8c03\u7528\u8702\u9e23\u5668\uff0c\u5f00\u542f\u5b9a\u65f6\u5668 */\nvoid rtBuzzerON(TickType_t period) {\n    Buzzer_ON();\n    xTimerChangePeriod(g_SoftTimerHandle, period, 0);\n}\n</code></pre> <p>\u521d\u59cb\u5316\u4e0e\u521b\u5efa\u4efb\u52a1</p> C<pre><code>void MX_FREERTOS_Init(void) {\n    /* USER CODE BEGIN Init */\n    rtBuzzerSoftTimer_Init();\n    /* USER CODE END Init */\n    ...\n    /* USER CODE BEGIN RTOS_THREADS */\n    /* add threads, ... */\n    xTaskCreate(OLED_PrintTask, \"Task1\", 128, NULL, osPriorityNormal, NULL);\n    /* USER CODE END RTOS_THREADS */\n    ...\n}\n</code></pre> <p>\u4efb\u52a1\u51fd\u6570</p> C<pre><code>void OLED_PrintTask(void *params) {\n    int cnt = 1;\n    while (1) {\n        if (cnt % 10 == 0) {\n            rtBuzzerON(200);\n        }\n        OLED_ShowNum(0, 0, cnt, 3, 16);\n        cnt++;\n        vTaskDelay(200);\n    }\n}\n</code></pre>"},{"location":"study/Git/Git/","title":"Git","text":""},{"location":"study/Git/Git/#git","title":"\u4f7f\u7528Git\u7ba1\u7406\u4e2a\u4eba\u9879\u76ee","text":""},{"location":"study/Git/Git/#_1","title":"\u7ed1\u5b9a\u8d26\u6237","text":"<p>\u7ed1\u5b9a\u7528\u6237\u540d\u548c\u90ae\u7bb1\u3002</p> Bash<pre><code># &lt;your_name&gt;\u662f\u4f60\u7684\u81ea\u5b9a\u4e49\u7528\u6237\u540d\ngit config --global user.name \"&lt;your_name&gt;\"\n# &lt;your_email&gt;\u662f\u4f60\u7684\u90ae\u7bb1\ngit config --global user.email \"&lt;your_email&gt;\"\n</code></pre>"},{"location":"study/Git/Git/#_2","title":"\u914d\u7f6e\u9ed8\u8ba4\u5206\u652f","text":"<p>\u9ed8\u8ba4\u5206\u652f\u4e00\u822c\u547d\u540d\u4e3a<code>main</code>\u6216<code>master</code>\uff0c\u5982\u679c\u9879\u76ee\u8981\u4e0a\u4f20\u5230GitHub\u53ef\u4ee5\u4f7f\u7528<code>main</code>\u597d\u4e00\u4e9b\u3002</p> Bash<pre><code>git config --global init.defaultBranch master\n</code></pre>"},{"location":"study/Git/Git/#git_1","title":"\u67e5\u770bGit\u914d\u7f6e","text":"Bash<pre><code>git config -l\n</code></pre>"},{"location":"study/Git/Git/#_3","title":"\u521d\u59cb\u5316\u4ed3\u5e93","text":"<p>\u8fdb\u5165\u8981\u521d\u59cb\u5316\u4e3a\u4ed3\u5e93\u7684\u76ee\u5f55</p> Bash<pre><code>git init\n</code></pre> <p>\u5982\u679c\u60f3\u8981\u5220\u9664\u4ed3\u5e93\u4f7f\u7528<code>rm -rf .git</code>(Linux)\u5220\u9664\u76ee\u5f55\u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"study/Git/Git/#_4","title":"\u63d0\u4ea4\u4ee3\u7801","text":"<p>\u2460 \u6dfb\u52a0\u5f53\u6587\u4ef6\u5230\u6682\u5b58\u533a</p> Bash<pre><code>git add &lt;\"\u6587\u4ef6\u8def\u5f84\"&gt;\n# \u793a\u4f8b\ngit add src/status_interfaces/package.xml\n</code></pre> <p>\u2461 \u6dfb\u52a0\u6574\u4e2a\u76ee\u5f55\u5230\u6682\u5b58\u533a</p> Bash<pre><code>git add &lt;\"\u76ee\u5f55\"&gt;\n# \u793a\u4f8b\ngit add src\n</code></pre> <p>\u2462 \u6dfb\u52a0\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6\u5230\u6682\u5b58\u533a</p> Bash<pre><code>git add .\n</code></pre> <p>\u2463 \u5220\u9664\u6682\u5b58\u533a\u6240\u6709\u6587\u4ef6</p> Bash<pre><code>git reset\n</code></pre> <p>\u2464 \u4e0a\u4f20\u6682\u5b58\u533a\u6587\u4ef6</p> Bash<pre><code>git commit -m &lt;\"\u66f4\u65b0\u65e5\u5fd7\"&gt;\n# \u793a\u4f8b\ngit add src\ngit commit -m \"\u5b8c\u6210\u72b6\u6001\u53d1\u5e03\u529f\u80fd\"\n</code></pre> <p>\u2465 \u67e5\u770b\u63d0\u4ea4\u65e5\u5fd7</p> Bash<pre><code>git log\n</code></pre> <p>\u60f3\u8981\u770b\u63d0\u4ea4\u4e86\u54ea\u4e9b\u6587\u4ef6\u53ef\u4ee5\u501f\u52a9Vscode\u7b49\u7f16\u8bd1\u5de5\u5177\u3002</p> <p></p>"},{"location":"study/Git/Git/#gitignore","title":"\u5ffd\u7565\u6587\u4ef6gitignore","text":"<p>\u5728\u4ed3\u5e93\u6839\u76ee\u5f55\u65b0\u5efa<code>.gitignore</code>\u6587\u4ef6\uff0c\u6dfb\u52a0\u5ffd\u7565\u7684\u76ee\u5f55\u3002</p> Text Only<pre><code>build/\ninstall/\nlog/\n.vscode/\n</code></pre>"},{"location":"study/Git/Git/#gitgithub","title":"Git\u7ed1\u5b9a\u8fdc\u7a0b\u4ed3\u5e93(Github)","text":""},{"location":"study/Git/Git/#github","title":"\u5bc6\u94a5\u914d\u7f6e\uff08Github\uff09","text":"<p>\u60f3\u8981\u5728\u5f53\u524d\u8bbe\u5907\u4e0a\u4f20git\u4ed3\u5e93\u5230\u8fdc\u7a0b\u4ed3\u5e93(Github)\u5fc5\u8981\u7ed1\u5b9aGithub\u7684\u5bc6\u94a5\uff0c\u4ee5\u83b7\u5f97\u6743\u9650\u3002</p> Bash<pre><code># 1.\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u4e0d\u65ad\u56de\u8f66\nssh-keygen -t rsa\n# 2.\u83b7\u53d6\u516c\u94a5\ncat ~/.ssh/id_rsa.pub\n</code></pre> <p></p> <p>\u590d\u5236\u4e0a\u8ff0\u5185\u5bb9\u81f3GitHub</p> <p></p> <p>\u68c0\u67e5\u914d\u7f6e\u662f\u5426\u5b8c\u6210</p> Bash<pre><code>ssh -T git@github.com\n</code></pre>"},{"location":"study/Git/Git/#_5","title":"\u7ed1\u5b9a\u4ed3\u5e93","text":"Bash<pre><code># &lt;your_repository_url&gt;\u662f\u4f60\u7684GitHub\u4ed3\u5e93\u94fe\u63a5\uff08https\uff09\ngit remote add origin &lt;your_repository_url&gt;\n</code></pre>"},{"location":"study/Git/Git/#_6","title":"\u7ba1\u7406\u8fdc\u7a0b\u4ed3\u5e93","text":"<p>\u82e5\u662f\u5728\u53e6\u4e00\u53f0\u8bbe\u5907\u7ef4\u62a4\u540c\u4e00\u4e2a\u9879\u76ee\uff0c\u4e00\u5b9a\u5148\u62c9\u53d6\u4ed3\u5e93\u7684\u6700\u65b0\u5185\u5bb9\uff0c\u7136\u540e\u518d\u6dfb\u52a0\u65b0\u5185\u5bb9\u3002</p> Bash<pre><code># \u63a8\u9001\u4ed3\u5e93\u6700\u65b0\u5185\u5bb9\ngit push origin main\n# \u62c9\u53d6\u4ed3\u5e93\u6700\u65b0\u5185\u5bb9\ngit pull origin main\n#-------------------------------------------\n# \u4fee\u6539\u5206\u652f\u540d\u79f0\ngit branch -m master main\n</code></pre>"},{"location":"study/Git/Git/#_7","title":"\u514b\u9686\u4ee3\u7801","text":"<p>\u514b\u9686\u4ee3\u7801\u540e\uff0c\u5728\u672c\u5730\u4e5f\u53ef\u4ee5\u770b\u5230\u4f5c\u8005\u7684\u4e0a\u4f20\u8fc7\u7a0b\uff0c\u7279\u522b\u518dvscode\u53ef\u4ee5\u770b\u7684\u6bd4\u8f83\u6e05\u695a\u3002\u56e0\u6b64\uff0c\u82e5\u662f\u81ea\u5df1\u7684\u9879\u76ee\u53ef\u4ee5\u514b\u9686\u540e\u5728\u5176\u4ed6\u8bbe\u5907\u7ef4\u62a4\uff0c\u4f46\u524d\u63d0\u662f\u5f53\u524d\u8bbe\u5907\u5177\u6709\u6743\u9650\u3002</p> Bash<pre><code>git clone &lt;repository_url&gt;\n</code></pre> <p>\u82e5\u4e0b\u56fe\u6240\u793a\u7684ROS2\u4ed3\u5e93\u7ba1\u7406\uff0c\u524d\u90e8\u5206\u662f\u6211\u5728RDKX5\u5b9e\u673a\u4e0a\u505a\u7684\u7ef4\u62a4\uff0c\u540e\u9762\u662f\u7528\u865a\u62df\u673a\u505a\u7684\u7ef4\u62a4\uff0c\u53ef\u4ee5\u8bf4\u662f\u65e0\u7f1d\u8854\u63a5\u3002</p> <p></p>"},{"location":"study/Git/Git/#git_2","title":"Git\u8fdb\u9636\u4f7f\u7528","text":""},{"location":"study/Git/Git/#_8","title":"\u67e5\u770b\u6587\u4ef6\u4fee\u6539\u72b6\u6001","text":"Bash<pre><code>git status\n</code></pre> <p>\u540c\u65f6\u53ef\u4ee5\u67e5\u770b\u5177\u4f53\u7684\u4fee\u6539\u4f4d\u7f6e</p> Bash<pre><code>git diff \n</code></pre> <p></p>"},{"location":"study/Git/Git/#_9","title":"\u64a4\u9500\u4ee3\u7801","text":"<p>\u2460 \u5e76\u672a\u6dfb\u52a0\u5230\u7f13\u51b2\u533a\uff0c\u5373\u672a\u8fdb\u884c<code>git add</code>\u3002</p> Bash<pre><code>git checkout &lt;\u6587\u4ef6&gt;\n</code></pre> <p>\u2461 \u5df2\u7ecf\u6dfb\u52a0\u5230\u7f13\u51b2\u533a\uff0c\u4f46\u4e3a\u63d0\u4ea4\u66f4\u6539\u3002</p> Bash<pre><code>git reset \n</code></pre> <p>\u2462 \u5df2\u7ecf\u63d0\u4ea4\u66f4\u6539\uff0c\u4e3a\u4e0a\u4f20\u670d\u52a1\u5668\u3002</p> <p>\u4f7f\u7528<code>git\u00a0log</code>\u67e5\u770b\u65e5\u5fd7</p> Bash<pre><code>git log\n</code></pre> <p></p> <p>\u5c06Git\u6062\u590d\u5230<code>\u4fee\u6539\u4f9d\u8d56\u540d\u79f0</code>\u7684\u9636\u6bb5\uff0c\u4f7f\u7528<code>git\u00a0reset\u00a0+\u00a0commit</code></p> Bash<pre><code>git reset 41fb438af114aae1f182579422c2f115a7a8148d\n</code></pre> <p></p>"},{"location":"study/Git/Git/#git_3","title":"Git\u5206\u652f","text":"<p>Git\u5206\u652f\u53ef\u4ee5\u7528\u6765\u7ba1\u7406\u9879\u76ee\u7684\u4e0d\u7248\u672c\uff0c\u9632\u6b62\u4e3b\u5206\u652f\u7248\u672c\u6df7\u4e71\u3002</p> <p>\u2460 \u67e5\u770b\u5206\u652f\u5217\u8868</p> Bash<pre><code>git branch\n</code></pre> <p>\u2461 \u521b\u5efa\u65b0\u5206\u652f</p> Bash<pre><code>git branch rolling\n</code></pre> <p>\u2462 \u5207\u6362\u5206\u652f</p> Bash<pre><code>git checkout rolling\n</code></pre> <p>\u4e24\u4e2a\u5206\u652f\u4fee\u6539\u63d0\u4ea4\u4e92\u4e0d\u5f71\u54cd\uff0c\u5982\u4e0b\u56fe\uff1a\u6211\u5728<code>main</code>\u5206\u652f\u63d0\u4ea4\u4e86README\u66f4\u65b0\uff0c\u4f46<code>rolling</code>\u4f9d\u65e7\u662f\u521b\u5efa\u65f6\u5019\u7684\u6837\u5b50\u3002</p> <p></p> <p>\u2463 \u5408\u5e76\u5206\u652f</p> <p>\u5c06<code>main</code>\u5206\u652f\u7684\u4fee\u6539\u540c\u6b65\u5230<code>rolling</code>\u5206\u652f\uff0c\u6b64\u65f6\u9700\u8981\u7528\u5230\u5408\u5e76\u5206\u652f\u6307\u4ee4\u3002</p> Text Only<pre><code>git merge main\n</code></pre> <p></p> <p>\u2464 \u5220\u9664\u5206\u652f</p> Bash<pre><code>git branch -D rolling\n</code></pre>"},{"location":"study/OpenHarmony/0.%E9%98%85%E8%AF%BB%E5%89%8D%E7%9A%84%E5%A3%B0%E6%98%8E/","title":"\u9605\u8bfb\u58f0\u660e","text":""},{"location":"study/OpenHarmony/0.%E9%98%85%E8%AF%BB%E5%89%8D%E7%9A%84%E5%A3%B0%E6%98%8E/#_1","title":"\u53c2\u8003\u58f0\u660e","text":"<p>OpenHarmony\u7cfb\u5217\u6587\u6863\u5185\u5bb9\u53c2\u8003\u6765\u81eaOpenHarmony\u5b98\u65b9\u6587\u6863 \u548c \u8d2d\u4e70\u7684\u4e66\u7c4d\u300aOpenHarmony\u8f7b\u91cf\u8bbe\u5907\u5f00\u53d1\u7406\u8bba\u4e0e\u5b9e\u8df5\u300b\uff0c\u7136\u5747\u6ca1\u6709\u7167\u6284\u642c\u8fd0\uff0c\u4e3b\u8981\u5185\u5bb9\u4e3a\u81ea\u5df1\u7684\u5b66\u4e60\u603b\u7ed3\u8bb0\u5f55\u3002\u5982\u82e5\u90e8\u5206\u5185\u5bb9\u4f1a\u8868\u660e\u6765\u6e90\uff0c\u82e5\u6709\u4fb5\u6743\u8bf7\u8054\u7cfb\u5220\u9664\u3002\u613f\u6b64\u6587\u6863\u80fd\u7ed9\u6709\u7f18\u4eba\u63d0\u4f9b\u4e00\u4e9b\u5b66\u4e60\u5e2e\u52a9\u3002</p>"},{"location":"study/OpenHarmony/0.%E9%98%85%E8%AF%BB%E5%89%8D%E7%9A%84%E5%A3%B0%E6%98%8E/#_2","title":"\u5f00\u53d1\u65b9\u5f0f\u8bf4\u660e","text":"<p>\u5148\u8bf4\u89c2\u70b9\uff0c\u5efa\u8bae\u4f7f\u7528 \u547d\u4ee4\u884c\u5f00\u53d1\u65b9\u5f0f \u5b66\u4e60\uff0c\u539f\u56e0\u5982\u4e0b\uff1a</p> <ol> <li>\u7f51\u4e0a\u591a\u6570\u8d44\u6599\u4e3a\u547d\u4ee4\u884c\u6559\u7a0b\u3002</li> <li>\u867d\u7136\u73af\u5883\u914d\u7f6e\u7e41\u7410\uff0c\u4f46\u6709\u52a9\u4e8e\u7406\u89e3\u7f16\u8bd1\u539f\u7406\u3002</li> <li>\u57fa\u4e8eLinux\u66f4\u7b26\u5408\u516c\u53f8\u548c\u884c\u4e1a\u8981\u6c42\u3002</li> <li>\u4e66\u7c4d\u914d\u5957\u7684\u5feb\u901f\u70e7\u5f55\u811a\u672c\u5177\u5907\u591a\u5f00\u53d1\u677f\u70e7\u5f55\u4f18\u52bf\u3002</li> <li>.....\uff08\u5f88\u591a\u4e0d\u7ee7\u7eed\u5217\u4e3e\uff09</li> </ol> <p>\u4e00\u5f00\u59cb\u6211\u4e5f\u662f\u9009\u62e9IDE\u5f00\u53d1\uff0c\u914d\u7f6e\u7b80\u5355\uff0c\u7f16\u8bd1\u70e7\u5f55\u65b9\u4fbf\uff0c\u540e\u6765\u6211\u5728\u300aOpenHarmony\u8f7b\u91cf\u8bbe\u5907\u5f00\u53d1\u7406\u8bba\u4e0e\u5b9e\u8df5\u300b\u4e66\u53cb\u4ea4\u6d41\u7fa4\u8bf7\u6559\u4e86\u4e00\u4e0b\uff0c\u7ed3\u5408\u4e2a\u4eba\u7406\u89e3\u603b\u7ed3\u4e86\u4ee5\u4e0a 4 \u6761\u4f18\u52bf\uff0c\u4f46\u4e5f\u4e0d\u6b62 4 \u6761\u3002 </p> <p>\u5f53\u7136\u82e5\u65e0Linux\u5f00\u53d1\u57fa\u7840\u6ca1\u6709\u4f7f\u7528\u8fc7Linux\u7cfb\u7edf\u7684\u4eba\u53ef\u4ee5\u4f7f\u7528IDE\u5f00\u53d1\u3002</p>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/","title":"\u7b2c\u4e00\u7ae0 \u547d\u4ee4\u884c\u5f00\u53d1","text":""},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#11","title":"1.1 \u57fa\u7840\u5de5\u5177\u5b89\u88c5","text":""},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#111","title":"1.1.1 \u5b89\u88c5\u5fc5\u8981\u5e93\u4e0e\u5de5\u5177","text":"Bash<pre><code>sudo apt-get update\nsudo apt-get install build-essential gcc g++ make zlib* libffi-dev\n</code></pre> Bash<pre><code>sudo apt-get install e2fsprogs pkg-config flex bison perl bc openssl libssl-dev libelf-dev libc6-dev-amd64 binutils binutils-dev libdwarf-dev u-boot-tools mtd-utils gcc-arm-linux-gnueabi cpio device-tree-compiler\n</code></pre>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#112-python","title":"1.1.2 \u66f4\u6539python\u6e90","text":"Bash<pre><code>which python3.8\n</code></pre> Bash<pre><code>sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1    #/usr/bin/python3.8\u4e3a\u4e0a\u4e00\u6b65\u67e5\u770b\u7684Python 3.8\u7684\u4f4d\u7f6e\nsudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1   #/usr/bin/python3.8\u4e3a\u4e0a\u4e00\u6b65\u67e5\u770b\u7684Python 3.8\u7684\u4f4d\u7f6e\n</code></pre>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#113-pip","title":"1.1.3 \u914d\u7f6e\u534e\u4e3a\u4e91\u4e3apip\u7684\u66f4\u65b0\u6e90","text":"Bash<pre><code>sudo apt install python3-pip\n</code></pre> Bash<pre><code>mkdir ~/.pip\npip3 config set global.index-url https://mirrors.huaweicloud.com/repository/pypi/simple\npip3 config set global.trusted-host mirrors.huaweicloud.com\npip3 config set global.timeout 120\n</code></pre>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#12","title":"1.2 \u7f16\u8bd1\u5de5\u5177\u5b89\u88c5","text":""},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#121","title":"1.2.1 \u5b89\u88c5\u7f16\u8bd1\u548c\u6784\u5efa\u5de5\u5177","text":"<p>\u88681 Hi3861 WLAN\u6a21\u7ec4\u9700\u8981\u5b89\u88c5\u7684\u7f16\u8bd1\u5de5\u5177</p> \u5f00\u53d1\u5de5\u5177 \u7528\u9014 SCons3.0.4+ \u7f16\u8bd1\u6784\u5efa\u5de5\u5177 python\u6a21\u5757\uff1asetuptools\u3001kconfiglib\u3001pycryptodome\u3001six\u3001ecdsa \u7f16\u8bd1\u6784\u5efa\u5de5\u5177 gcc riscv32 \u7f16\u8bd1\u6784\u5efa\u5de5\u5177"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#122scons","title":"1.2.2scons","text":"Bash<pre><code>python3 -m pip install scons\n#\u6dfb\u52a0\u73af\u5883\u53d8\u91cf\necho 'export PATH=~/.local/bin:$PATH' | tee -a ~/.bashrc\nsource ~/.bashrc\n</code></pre> Bash<pre><code># \u9a8c\u8bc1\nscons -v\n</code></pre>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#123-kconfiglib","title":"1.2.3 kconfiglib","text":"Bash<pre><code>pip3 install  kconfiglib\n</code></pre>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#124-pycryptodomeecdsa","title":"1.2.4 pycryptodome\u548cecdsa","text":"Bash<pre><code>pip3 install pycryptodome ecdsa\n</code></pre>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#125-gcc-riscv32","title":"1.2.5 gcc riscv32","text":"<p>\u4e0b\u8f7d</p> Bash<pre><code>wget https://repo.huaweicloud.com/harmonyos/compiler/gcc_riscv32/7.3.0/linux/gcc_riscv32-linux-7.3.0.tar.gz\n</code></pre> <p>\u89e3\u538b\u5230home\u76ee\u5f55</p> Bash<pre><code>tar -xvf gcc_riscv32-linux-7.3.0.tar.gz -C ~/\n</code></pre> <p>\u5220\u9664\u538b\u7f29\u5305</p> Bash<pre><code>rm gcc_riscv32-linux-7.3.0.tar.gz\n</code></pre> <p>\u6dfb\u52a0\u73af\u5883\u53d8\u91cf</p> Bash<pre><code>echo 'export PATH=~/gcc_riscv32/bin:$PATH' | tee -a ~/.bashrc\nsource ~/.bashrc\n</code></pre>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#13-samba","title":"1.3 \u5b89\u88c5Samba\u670d\u52a1","text":"Bash<pre><code>sudo apt-get install samba\n#\u6253\u5f00\u914d\u7f6e\u6587\u4ef6\nsudo nano /etc/samba/smb.conf   \n</code></pre> <p>\u5c06\u4e0b\u5217\u4fe1\u606f\u586b\u5165<code>smb.conf</code>\u7684\u6700\u540e\u4e00\u884c</p> Text Only<pre><code>[home]\ncomment = User Homes\npath = /home\nguest ok = no\nwritable = yes\nbrowsable = yes  \ncreate mask = 0755\ndirectory mask = 0755\n</code></pre> <p>\u6307\u5b9a\u5171\u4eab\u8d26\u53f7</p> Bash<pre><code>sudo smbpasswd -a username   #\u7528\u6237\u540d\u4e3aUbuntu\u7528\u6237\u540d\u3002\u8f93\u5165\u547d\u4ee4\u540e\uff0c\u6839\u636e\u63d0\u793a\u8bbe\u7f6e\u5bc6\u7801\u3002\n</code></pre> Bash<pre><code>sudo service smbd restart\n</code></pre>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#14","title":"1.4 \u83b7\u53d6\u6e90\u7801","text":""},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#141-gitgit-lfs","title":"1.4.1 \u5b89\u88c5git\u548cgit-lfs","text":"Bash<pre><code>#\u66f4\u65b0\u8f6f\u4ef6\u5217\u8868\nsudo apt-get update\n#\u5b89\u88c5git\u5ba2\u6237\u7aef\u548cgit-lfs\nsudo apt-get install git git-lfs\n</code></pre>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#142-git","title":"1.4.2 git\u7528\u6237\u914d\u7f6e","text":"Bash<pre><code>git config --global user.name \"yourname\"\ngit config --global user.email \"your-email-address\"\ngit config --global credential.helper store\n</code></pre>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#143-reporequests","title":"1.4.3 \u5b89\u88c5repo\u548crequests","text":"Bash<pre><code>wget https://gitee.com/oschina/repo/raw/fork_flow/repo-py3 \nsudo mv repo-py3 /usr/local/bin/repo\nsudo chmod a+x /usr/local/bin/repo\n</code></pre> Bash<pre><code>pip install requests\n</code></pre>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#144-307lts","title":"1.4.4 \u83b7\u53d63.0.7LTS\u7248\u672c\u6e90\u7801","text":"Danger <p>\u5173\u4e8e\u521d\u5b66\u8005\u9009\u62e9\u6e90\u7801\u7684\u6807\u51c6\uff0c\u636e\u4e86\u89e3\u5148OpenHarmony\u7684\u8f7b\u91cf\u7cfb\u7edf\u5df2\u57fa\u672c\u7a33\u5b9a\uff0c3.1\u4e4b\u540e\u7248\u672c\u66f4\u65b0\u591a\u9488\u5bf9\u4e8e\u5c0f\u578b\u7cfb\u7edf\u548c\u6807\u51c6\u7cfb\u7edf\uff0c\u6545\u65e0\u9700\u8ffd\u6c42\u8fc7\u9ad8\u7684\u6e90\u7801\uff0c3.0.7\u4e3a\u6bd4\u8f83\u9ad8\u7684\u9002\u5408\u7248\u672c\u3002\uff08\u4e2a\u4eba\u4e5f\u559c\u6b22\u65b0\u7248\u672c\u6240\u4ee5\u9009\u62e9\u8fd9\u4e2a\u7248\u672c\uff09</p> <p>\u521b\u5efa\u6e90\u7801\u5b58\u653e\u6587\u4ef6\u5939</p> Bash<pre><code>mkdir ~/OpenHarmony/3.0.7\ncd ~/OpenHarmony/3.0.7\n</code></pre> <p>\u83b7\u53d6OpenHarmony-3.0.7-LTS\u6e90\u4ee3\u7801</p> Bash<pre><code>#\u4f7f\u7528repo\u5de5\u5177-\u521d\u59cb\u5316\u6e90\u7801\u4ed3\nrepo init -u https://gitee.com/openharmony/manifest.git -b refs/tags/OpenHarmony-v3.0.7-LTS --no-repo-verify\n#\u4f7f\u7528repo\u5de5\u5177-\u540c\u6b65\u6e90\u7801\u4ed3\nrepo sync -c\n#\u4f7f\u7528repo\u5de5\u5177-\u62c9\u53d6\u6e90\u7801\u4ed3\u5927\u578b\u6587\u4ef6\nrepo forall -c 'git lfs pull'\n</code></pre>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#15","title":"1.5 \u5b8c\u5584\u7f16\u8bd1\u73af\u5883","text":""},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#151-hb","title":"1.5.1 \u5b89\u88c5hb","text":"<p>\u5728\u6e90\u7801\u6839\u76ee\u5f55\u6253\u5f00\u7ec8\u7aef</p> Bash<pre><code>python3 -m pip install --user build/lite\necho 'export PATH=~/.local/bin:$PATH' | tee -a ~/.bashrc\nsource ~/.bashrc\nhb -h\n</code></pre>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#152-gn","title":"1.5.2 \u5b89\u88c5gn","text":"Bash<pre><code>#\u5efa\u7acb\u76ee\u5f55\nmkdir -p ~/OpenHarmony/3.0.7/prebuilts/build-tools/linux-x86/bin/\n#\u4e0b\u8f7d\nwget https://repo.huaweicloud.com/harmonyos/compiler/gn/1717/linux/gn-linux-x86-1717.tar.gz\n#\u5b89\u88c5\ntar -xvf gn-linux-x86-1717.tar.gz -C ~/OpenHarmony/3.0.7/prebuilts/build-tools/linux-x86/bin/\n#\u5220\u9664\u5b89\u88c5\u5305\nrm gn-linux-x86-1717.tar.gz\n</code></pre>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#153-ninja","title":"1.5.3 \u5b89\u88c5ninja","text":"Bash<pre><code>#\u4e0b\u8f7d\nwget https://repo.huaweicloud.com/harmonyos/compiler/ninja/1.10.1/linux/ninja-linux-x86-1.10.1.tar.gz\n#\u5b89\u88c5\ntar -xvf ninja-linux-x86-1.10.1.tar.gz -C ~/OpenHarmony/3.0.7/prebuilts/build-tools/linux-x86/bin/\n#\u5220\u9664\u5b89\u88c5\u5305\nrm ninja-linux-x86-1.10.1.tar.gz\n</code></pre>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#16","title":"1.6 \u7b2c\u4e00\u4e2a\u7a0b\u5e8f","text":""},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#161","title":"1.6.1 \u7f16\u5199\u7a0b\u5e8f","text":"<p>Vscode\u6253\u5f00\u865a\u62df\u673a\u6e90\u7801</p> <p></p> <p>\u6dfb\u52a0vscode\u7684\u5934\u6587\u4ef6\u5f15\u7528\uff0c\u5c06\u56fe\u4e2d\u6807\u7ea2\u5904\u6dfb\u52a0\u5373\u53ef\u3002</p> <p></p> <p>\u627e\u5230\u76ee\u5f55<code>./applications/sample/wifi-iot/app</code>\uff0c\u5728app\u6587\u4ef6\u5939\u4e0b\u4e00\u4e2a\u6587\u4ef6\u5939<code>my_first_app</code>\uff0c\u4ee3\u7801\u6587\u4ef6<code>hello_world.c</code>\uff0c\u7f16\u8bd1\u811a\u672c<code>BUILD.gn</code>\u3002\u5177\u4f53\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a</p> Text Only<pre><code>.\n\u2514\u2500\u2500 applications\n    \u2514\u2500\u2500 sample\n        \u2514\u2500\u2500 wifi-iot\n            \u2514\u2500\u2500 app\n                \u2514\u2500\u2500 my_first_app\n                  \u2502\u2500\u2500 hello_world.c\n                  \u2514\u2500\u2500 BUILD.gn\n</code></pre> Note <p>\u5b98\u65b9\u79f0\u547c\uff1a\u65b0\u589e\u4e1a\u52a1my_first_app\uff0c\u5176\u4e2dhello_world.c\u4e3a\u4e1a\u52a1\u4ee3\u7801\uff0cBUILD.gn\u4e3a\u7f16\u8bd1\u811a\u672c\u3002</p> <p>\u5728<code>hello_world.c</code>\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4ee3\u7801</p> C<pre><code>#include &lt;stdio.h&gt;\n#include \"ohos_init.h\"\n#include \"ohos_types.h\"\n\nvoid HelloWorld(void)\n{\n    printf(\"[DEMO] Hello world.\\n\");\n}\nSYS_RUN(HelloWorld);\n</code></pre> <p>\u5728\u7f16\u8bd1\u811a\u672c<code>BUILD.gn</code>\u4e2d\u6dfb\u52a0\u7f16\u8bd1\u914d\u7f6e</p> Text Only<pre><code>static_library(\"myapp\") {\n    sources = [\n        \"hello_world.c\"\n    ]\n    include_dirs = [\n        \"//utils/native/lite/include\"\n    ]\n}\n</code></pre> <p>\u6dfb\u52a0\u65b0\u7ec4\u4ef6\uff0c\u7ec4\u4ef6\u914d\u7f6e\u6587\u4ef6\u4e3a<code>build/lite/components/applications.json</code></p> Danger <p>\u82e5\u6e90\u7801\u7248\u672c\u5927\u4e8e\u7b49\u4e8eOpenHarmony 3.2 Beta2\u65f6\uff0c\u7ec4\u4ef6\u914d\u7f6e\u6587\u4ef6\u4e3a<code>build/lite/components/communication.json</code>\u3002</p> JSON<pre><code>{\n  \"components\": [\n    {\n      \"component\": \"camera_sample_communication\",\n      \"description\": \"Communication related samples.\",\n      \"optional\": \"true\",\n      \"dirs\": [\n        \"applications/sample/camera/communication\"\n      ],\n      \"targets\": [\n        \"//applications/sample/camera/communication:sample\"\n      ],\n      \"rom\": \"\",\n      \"ram\": \"\",\n      \"output\": [],\n      \"adapted_kernel\": [ \"liteos_a\" ],\n      \"features\": [],\n      \"deps\": {\n        \"components\": [],\n        \"third_party\": []\n      }\n    },\n##start##\n    {\n      \"component\": \"hello_world_app\",\n      \"description\": \"hello world samples.\",\n      \"optional\": \"true\",\n      \"dirs\": [\n        \"applications/sample/wifi-iot/app/my_first_app\"\n      ],\n      \"targets\": [\n        \"//applications/sample/wifi-iot/app/my_first_app:myapp\"\n      ],\n      \"rom\": \"\",\n      \"ram\": \"\",\n      \"output\": [],\n      \"adapted_kernel\": [ \"liteos_m\" ],\n      \"features\": [],\n      \"deps\": {\n        \"components\": [],\n        \"third_party\": []\n      }\n    },\n##end##\n    {\n      \"component\": \"camera_sample_app\",\n      \"description\": \"Camera related samples.\",\n      \"optional\": \"true\",\n      \"dirs\": [\n        \"applications/sample/camera/launcher\",\n        \"applications/sample/camera/cameraApp\",\n        \"applications/sample/camera/setting\",\n        \"applications/sample/camera/gallery\",\n        \"applications/sample/camera/media\"\n      ],\n</code></pre> <p>\u4fee\u6539\u5355\u677f\u914d\u7f6e\u6587\u4ef6<code>vendor/hisilicon/hispark_pegasus/config.json</code>\uff0c\u65b0\u589ehello_world_app\u7ec4\u4ef6\u7684\u6761\u76ee</p> JSON<pre><code>      {\n        \"subsystem\": \"applications\",\n        \"components\": [\n##start##\n          { \"component\": \"hello_world_app\", \"features\":[] },\n##end##\n          { \"component\": \"wifi_iot_sample_app\", \"features\":[] }\n        ]\n      },\n</code></pre> <p>Note</p> <p>\u8fd9\u91cc\u5c31\u8ddf\u7740\u4fee\u6539\u6587\u4ef6\u5373\u53ef\uff0c\u5177\u4f53\u5173\u4e8e\u7f16\u8bd1\u811a\u672c\u548c\u7ec4\u4ef6\u6dfb\u52a0\u95ee\u9898\uff0c\u4f1a\u5728\u7f16\u8bd1\u539f\u7406\u7ae0\u8282\u8fdb\u4e00\u6b65\u89e3\u91ca\u3002</p>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#162","title":"1.6.2 \u7f16\u8bd1\u6e90\u7801","text":"<p>\u5728\u7ec8\u7aef\u8fdb\u5165\u6e90\u4ee3\u7801\u7684\u6839\u76ee\u5f55\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u9009\u62e9\u5f00\u53d1\u677f</p> Bash<pre><code>hb set\n</code></pre> <p>\u9700\u8981\u786e\u8ba4\u4ee3\u7801\u76ee\u5f55\uff0c\u6211\u4eec\u5df2\u7ecf\u5728\u6839\u76ee\u5f55\uff0c\u56de\u8f66\u5373\u53ef\u3002\u7136\u540e\uff0c\u4e0a\u4e0b\u79fb\u52a8\u9009\u62e9\u5f00\u53d1\u677f</p> <p></p> <p>\u7f16\u8bd1</p> <ul> <li><code>hb build</code>\uff0c\u589e\u91cf\u7f16\u8bd1</li> <li><code>hb build -f</code>\uff0c\u5168\u91cf\u7f16\u8bd1</li> </ul> Bash<pre><code>hb build\n</code></pre> <p></p>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#163","title":"1.6.3 \u70e7\u5f55\u56fa\u4ef6","text":"<p>windows\u7cfb\u7edf\u4f7f\u7528hiburn\u70e7\u5f55<code>.bin</code>\u6587\u4ef6</p> <p>\u5728windows\u7cfb\u7edf\u4e2d\u5b89\u88c5HiBurn\u8f6f\u4ef6\uff0cHiBurn\u8d44\u6e90\u4e0b\u8f7d</p> <p></p> <p>\u63d2\u4e0a\u5f00\u53d1\u677f\uff0c\u6211\u4f7f\u7528\u7684\u662f\"\u5c0f\u718a\u62cd-nano\"\uff0c\u67e5\u770b\u7aef\u53e3</p> <p></p> <p>\u6253\u5f00HiBurn\u8f6f\u4ef6\uff0c\u914d\u7f6e\u4e32\u53e3\u6ce2\u7279\u7387\u4e3a 2000000</p> <p></p> <p></p> <p>\u9009\u62e9\u81ea\u5df1\u7aef\u53e3\uff0c\u6253\u5f00<code>Auto burn</code>\u9009\u9879</p> <p></p> <p>\u9009\u62e9\u865a\u62df\u673a\u7684\u5f85\u70e7\u5f55\u6587\u4ef6\uff0c\u5728<code>/home/username/OpenHarmony/3.0.7/out/hispark_pegasus/wifiiot_hispark_pegasus</code>\u76ee\u5f55\u627e\u5230<code>Hi3861_wifiiot_app_allinone.bin</code>\u6587\u4ef6</p> <p></p> <p><code>\\\\</code>\u52a0\u4e0a\u4f60\u7684\u865a\u62df\u673aIP\u5730\u5740\u5373\u53ef\u9009\u62e9\u865a\u62df\u673a\u7684\u6587\u4ef6\u70e7\u5f55\uff08\u4e0b\u56fe\u6709\u4e9b\u9519\u8bef\uff0c\u4ee5\u8bf4\u660e\u4e3a\u51c6\uff09</p> <p></p> <p></p> <p>\u70b9\u51fb<code>Connect</code>\uff0c\u7136\u540e\u8f93\u51fa\u6846\u51fa\u73b0\u201cConnecting...\u201d\uff0c\u70b9\u51fb\u5f00\u53d1\u677f\u7684\u590d\u4f4d\u6309\u952e\u70e7\u5f55\u5f00\u59cb</p> <p></p> <p>\u70e7\u5f55\u6210\u529f</p> <p></p>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#164","title":"1.6.4 \u67e5\u770b\u8f93\u51fa","text":"<p>\u5b89\u88c5\u4e32\u53e3\u548cssh\u8f6f\u4ef6MobaXterm\uff0cMobaXterm\u5b89\u88c5\u4ecb\u7ecd\uff0c\u7136\u540e\u6253\u5f00\u4e00\u4e2a\u4e32\u53e3\u754c\u9762\uff0c\u590d\u4f4d\u5373\u53ef\u770b\u5230\u8f93\u51fa\u5185\u5bb9\u3002</p> <p></p>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#17","title":"1.7 \u5173\u95ed\u9ed8\u8ba4\u6d4b\u8bd5\u8f93\u51fa","text":"<p>\u4e32\u53e3\u67e5\u770b\u8f93\u51fa\u6709\u5f88\u591a\u6d4b\u8bd5\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5173\u95ed\uff0c\u5220\u9664\u6e90\u7801\u4e2dvendor\\hisilicon\\hispark_pegasus\\config.json\u7684\u5982\u4e0b\u5185\u5bb9\uff0c\u7136\u540e<code>hb build -f</code>\u7f16\u8bd1\u70e7\u5f55\u3002</p> <p></p>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#18-at","title":"1.8 AT\u547d\u4ee4\u8054\u7f51","text":"<p>\u4e0d\u8981\u6709\u591a\u4f59\u7684\u7a7a\u683c\uff0c\u5426\u5219\u5bb9\u6613\u9519\u8bef</p> Bash<pre><code>AT+STARTSTA             # \u542f\u52a8STA\u6a21\u5f0f\nAT+SCAN                     # \u626b\u63cf\u5468\u8fb9AP\nAT+SCANRESULT               # \u663e\u793a\u626b\u63cf\u7ed3\u679c\nAT+CONN=\"pi\",,2,\"123456789\" # \u8fde\u63a5\u6307\u5b9aAP\uff0c\u66ff\u6362\u70ed\u70b9\u540d\u79f0\u4e0e\u5bc6\u7801\u5373\u53ef\nAT+STASTAT                  # \u67e5\u770b\u8fde\u63a5\u7ed3\u679c\nAT+DHCP=wlan0,1             # \u901a\u8fc7DHCP\u5411AP\u8bf7\u6c42wlan0\u7684IP\u5730\u5740\nAT+IFCFG                    # \u67e5\u770b\u5f00\u53d1\u677f\u7684IP\u5730\u5740\nAT+PING=www.baidu.com\n</code></pre>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#19","title":"1.9 \u4e00\u4e9b\u4fbf\u6377\u4f7f\u7528\u811a\u672c","text":"<p>\u8bf4\u660e\uff1a\u811a\u672c\u975e\u672c\u4eba\u6240\u5199\uff0c\u800c\u662f\u5728\u8d2d\u4e70\u4e86\u300aOpenHarmony\u8f7b\u91cf\u8bbe\u5907\u5f00\u53d1\u7406\u8bba\u4e0e\u5b9e\u8df5\u300b\u4ee5\u540e\u5728\u914d\u5957\u8d44\u6599\u4e2d\u6240\u5f97\uff0c\u5e0c\u671b\u53ef\u4ee5\u5e2e\u52a9\u5230\u9605\u8bfb\u5230\u6b64\u6587\u6863\u7684\u5f00\u6e90\u9e3f\u8499\u5b66\u4e60\u8005\u3002\u4e3a\u4e0d\u4fb5\u5360\u56fe\u4e66\u5229\u76ca\uff0c\u7f51\u76d8\u4e2d\u4ec5\u5b58\u6709\u4e24\u4e2a\u4fbf\u6377\u811a\u672c\uff0c\u66f4\u591a\u597d\u7528\u8d44\u6e90\u9f13\u52b1\u5927\u5bb6\u8d2d\u4e70\u56fe\u4e66\u652f\u6301\uff0c\u7f51\u76d8\u5185\u5bb9\u82e5\u6709\u4fb5\u6743\u8bf7\u8054\u7cfb\u5220\u9664\u3002</p> Text Only<pre><code>\u94fe\u63a5: https://pan.baidu.com/s/1o-FyN4wB-fxVT8XxQ5zhlQ?pwd=hj55 \n\u63d0\u53d6\u7801: hj55\n</code></pre>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#191","title":"1.9.1 \u5feb\u901f\u8054\u7f51\u811a\u672c","text":"<p>\u6253\u5f00MobaXterm\uff0c\u53f3\u51fb\u6dfb\u52a0\u811a\u672c\uff0c\u5e76\u4fee\u6539\u70ed\u70b9\u4fe1\u606f</p> <p></p> <p></p>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#192","title":"1.9.2 \u5feb\u901f\u70e7\u5f55","text":"<p>\u6587\u672c\u7f16\u8f91\u6253\u5f00\u4fee\u6539HiBurn.exe\u3001\u4e32\u53e3\u53f7\u3001\u865a\u62df\u673aIP\u3001\u865a\u62df\u673a\u6587\u4ef6\u5730\u5740\uff0c\u53cc\u51fb\u5373\u53ef\u5b8c\u6210\u70e7\u5f55\uff0c\u65e0\u9700\u6765\u56de\u70b9\u51fbHiBurn\u914d\u7f6e\u53c2\u6570\uff08\u5207\u8bb0\u5148\u65ad\u5f00MobaXterm\u4e32\u53e3\uff09</p> <p></p>"},{"location":"study/OpenHarmony/1.OH%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%BC%80%E5%8F%91/#_1","title":"\u9519\u8bef\u89e3\u6790","text":"Bash<pre><code>\u66f4\u6362\u4ecb\u8d28\uff1a\u8bf7\u628a\u6807\u6709                     \n \u201cUbuntu 20.04.6 LTS _Focal Fossa_ - Release amd64 (20230316)\u201d\n\u7684\u76d8\u7247\u63d2\u5165\u9a71\u52a8\u5668\u201c/cdrom/\u201d\u518d\u6309\u300c\u56de\u8f66\u300d\u952e\n</code></pre> Bash<pre><code># \u6253\u5f00sources.list\nsudo nano /etc/apt/sources.list\n</code></pre> <p>\u6ce8\u91ca\u7b2c\u4e00\u884c</p> <p></p>"},{"location":"study/OpenHarmony/10.MQTT/","title":"\u7b2c\u5341\u7ae0 MQTT","text":""},{"location":"study/OpenHarmony/10.MQTT/#101-mqtt","title":"10.1 MQTT\u7684\u5386\u53f2\u80cc\u666f","text":"<ol> <li>\u8d77\u6e90</li> </ol> <p>MQTT\uff08Message Queuing Telemetry Transport\uff09\u7531 IBM \u7684 Andy Stanford-Clark \u548c Arcom \u516c\u53f8\u7684 Arlen Nipper \u4e8e 1999 \u5e74 \u5f00\u53d1\uff0c\u6700\u521d\u7528\u4e8e\u77f3\u6cb9\u7ba1\u9053\u7684\u8fdc\u7a0b\u76d1\u63a7\u7cfb\u7edf\uff0c\u65e8\u5728\u89e3\u51b3\u536b\u661f\u901a\u4fe1\u4e2d\u7684\u9ad8\u5ef6\u8fdf\u548c\u4f4e\u5e26\u5bbd\u95ee\u9898\u3002</p> <ol> <li>\u6807\u51c6\u5316\u8fdb\u7a0b</li> </ol> <p>2013 \u5e74 \uff1aIBM \u5c06 MQTT 3.1 \u63d0\u4ea4\u81f3 OASIS\uff08\u7ed3\u6784\u5316\u4fe1\u606f\u6807\u51c6\u4fc3\u8fdb\u7ec4\u7ec7\uff09\uff0c\u63a8\u52a8\u5176\u6210\u4e3a\u5f00\u653e\u6807\u51c6\u3002</p> <p>2016 \u5e74 \uff1aMQTT 3.1.1 \u6210\u4e3a OASIS \u5b98\u65b9\u6807\u51c6\uff0c\u5e76\u88ab\u5e7f\u6cdb\u91c7\u7528\u3002</p> <p>2019 \u5e74 \uff1aMQTT 5.0 \u53d1\u5e03\uff0c\u65b0\u589e\u4f1a\u8bdd\u7ba1\u7406\u3001\u539f\u56e0\u7801\u3001\u5171\u4eab\u8ba2\u9605\u7b49\u529f\u80fd\uff0c\u8fdb\u4e00\u6b65\u63d0\u5347\u534f\u8bae\u80fd\u529b\u3002</p> <p>ISO \u6807\u51c6 \uff1aMQTT \u88ab\u7eb3\u5165 ISO/IEC 20922 \u6807\u51c6\uff0c\u6210\u4e3a\u56fd\u9645\u8ba4\u53ef\u7684\u7269\u8054\u7f51\u901a\u4fe1\u534f\u8bae\u3002</p> <p>MQTT\u4ece\u5de5\u4e1a\u76d1\u63a7\u9010\u6b65\u6269\u5c55\u81f3\u667a\u80fd\u5bb6\u5c45\u3001\u8f66\u8054\u7f51\u3001\u79fb\u52a8\u5e94\u7528\u7b49\u9886\u57df\uff0c\u6210\u4e3a\u7269\u8054\u7f51\uff08IoT\uff09\u7684\u6838\u5fc3\u534f\u8bae\u3002</p>"},{"location":"study/OpenHarmony/10.MQTT/#102-mqtt","title":"10.2 MQTT\u7684\u6280\u672f\u7279\u6027","text":"<ol> <li> <p>\u8f7b\u91cf\u7ea7\u8bbe\u8ba1</p> <ul> <li>\u534f\u8bae\u5934\u6700\u5c0f\u4ec5 2 \u5b57\u8282\uff0c\u9002\u5408\u8d44\u6e90\u53d7\u9650\u7684\u5d4c\u5165\u5f0f\u8bbe\u5907\u548c\u4f4e\u5e26\u5bbd\u7f51\u7edc\u3002</li> <li>\u4ee3\u7801\u5b9e\u73b0\u7b80\u5355\uff0c\u5360\u7528\u5185\u5b58\u5c11\uff08\u5982 Paho \u5ba2\u6237\u7aef\u5e93\u4ec5\u9700\u51e0\u5341 KB\uff09\u3002</li> </ul> </li> <li> <p>\u53d1\u5e03/\u8ba2\u9605\u6a21\u578b</p> <ul> <li>\u89e3\u8026\u901a\u4fe1 \uff1a\u53d1\u5e03\u8005\u4e0e\u8ba2\u9605\u8005\u65e0\u9700\u76f4\u63a5\u4ea4\u4e92\uff0c\u901a\u8fc7 Broker \u4e2d\u8f6c\u6d88\u606f\uff0c\u63d0\u5347\u7cfb\u7edf\u6269\u5c55\u6027\u3002</li> <li>\u5f02\u6b65\u901a\u4fe1 \uff1a\u652f\u6301\u6d77\u91cf\u8bbe\u5907\u540c\u65f6\u8fde\u63a5\uff0c\u9002\u5e94\u9ad8\u5e76\u53d1\u573a\u666f\u3002</li> </ul> </li> <li> <p>\u7075\u6d3b\u7684\u670d\u52a1\u8d28\u91cf\uff08QoS\uff09</p> QoS \u7b49\u7ea7 \u63cf\u8ff0 \u9002\u7528\u573a\u666f 0 \u6700\u591a\u4e00\u6b21\uff08\u53ef\u80fd\u4e22\u5931\uff09 \u5b9e\u65f6\u6027\u9ad8\u3001\u5141\u8bb8\u4e22\u5305\uff08\u5982\u4f20\u611f\u5668\u6570\u636e\uff09 1 \u81f3\u5c11\u4e00\u6b21\uff08\u53ef\u80fd\u91cd\u590d\uff09 \u9700\u53ef\u9760\u4f20\u8f93\u4f46\u5141\u8bb8\u5197\u4f59\uff08\u5982\u63a7\u5236\u6307\u4ee4\uff09 2 \u6070\u597d\u4e00\u6b21\uff08\u4e25\u683c\u53ef\u9760\uff09 \u91d1\u878d\u4ea4\u6613\u3001\u5173\u952e\u64cd\u4f5c </li> <li> <p>\u7f51\u7edc\u9002\u5e94\u6027</p> <ul> <li>\u652f\u6301\u65ad\u7ebf\u91cd\u8fde\u548c\u4f1a\u8bdd\u4fdd\u6301\uff0c\u786e\u4fdd\u5f31\u7f51\u73af\u5883\u4e0b\u7684\u901a\u4fe1\u8fde\u7eed\u6027\u3002</li> <li>\u901a\u8fc7\u5fc3\u8df3\u673a\u5236\uff08<code>PINGREQ/PINGRESP</code>\uff09\u68c0\u6d4b\u8fde\u63a5\u72b6\u6001\u3002</li> </ul> </li> <li> <p>\u5b89\u5168\u673a\u5236</p> <ul> <li>\u652f\u6301 TLS/SSL \u52a0\u5bc6\u4f20\u8f93\uff0c\u9632\u6b62\u6570\u636e\u7a83\u542c\u3002</li> <li>\u63d0\u4f9b\u7528\u6237\u540d/\u5bc6\u7801\u8ba4\u8bc1\u548c\u5ba2\u6237\u7aef\u8bc1\u4e66\u9274\u6743\u3002</li> </ul> </li> </ol>"},{"location":"study/OpenHarmony/10.MQTT/#103","title":"10.3 \u5e7f\u4e49\u53d1\u5e03\u8ba2\u9605\u6a21\u578b","text":""},{"location":"study/OpenHarmony/10.MQTT/#1031","title":"10.3.1 \u53d1\u5e03\u8ba2\u9605\u6a21\u578b","text":"<p>\u4e09\u4e2a\u91cd\u8981\u7684\u4e13\u4e1a\u540d\u79f0\uff1a</p> <ul> <li>Broker\uff08\u4ee3\u7406\u670d\u52a1\u5668\uff09 \uff1a\u6d88\u606f\u8def\u7531\u4e2d\u5fc3\uff0c\u8d1f\u8d23\u63a5\u6536\u3001\u8fc7\u6ee4\u548c\u8f6c\u53d1\u6d88\u606f\uff08\u5982 Mosquitto\u3001EMQX\uff09\u3002</li> <li>Publisher\uff08\u53d1\u5e03\u8005\uff09 \uff1a\u5411\u6307\u5b9a\u4e3b\u9898\uff08Topic\uff09\u53d1\u9001\u6d88\u606f\u7684\u8bbe\u5907\u6216\u5e94\u7528\u3002</li> <li>**Subscriber\uff08\u8ba2\u9605\u8005\uff09 ** \uff1a\u8ba2\u9605\u4e3b\u9898\u4ee5\u63a5\u6536\u76f8\u5173\u6d88\u606f\u7684\u7ec8\u7aef\u3002</li> </ul> <p></p>"},{"location":"study/OpenHarmony/10.MQTT/#1032","title":"10.3.2 \u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f\u4f18\u52bf","text":"<ol> <li> <p>\u7cfb\u7edf\u89e3\u8026</p> <ul> <li>\u7a7a\u95f4\u89e3\u8026\uff1a\u53d1\u5e03\u8005\u65e0\u9700\u77e5\u9053\u8ba2\u9605\u8005\u7684IP/\u7aef\u53e3\uff1b\u8ba2\u9605\u8005\u65e0\u9700\u611f\u77e5\u53d1\u5e03\u8005\u7684\u5b58\u5728\u3002</li> <li>\u65f6\u95f4\u89e3\u8026\uff1a\u53d1\u5e03/\u8ba2\u9605\u53cc\u65b9\u65e0\u9700\u540c\u65f6\u5728\u7ebf\uff1b\u652f\u6301\u79bb\u7ebf\u6d88\u606f\u5b58\u50a8\u3002</li> <li>\u534f\u8bae\u89e3\u8026\uff1a\u53d1\u5e03\u8005\u4e0e\u8ba2\u9605\u8005\u53ef\u4f7f\u7528\u4e0d\u540c\u7f16\u7a0b\u8bed\u8a00\u3002</li> </ul> </li> <li> <p>\u4e3b\u9898\u8fc7\u6ee4</p> <ul> <li>\u5355\u5c42\u5339\u914d\u7b26\uff1a\u5982<code>home/+/temperature</code>\u5339\u914d<code>home/livingroom/temperature</code>\u221a\uff0c\u4f46\u4e0d\u5339\u914d<code>home/floor1/room2/temperature</code>\u00d7\u3002</li> <li>\u591a\u5c42\u5339\u914d\u7b26\uff1a\u5982<code>factory/#</code> \u5339\u914d<code>factory/machine1</code>\u221a\uff0c\u540c\u6837\u5339\u914d<code>factory/buildingA/machine2/status</code>\u221a\u3002</li> </ul> </li> </ol>"},{"location":"study/OpenHarmony/10.MQTT/#104-mqtt","title":"10.4 MQTT\u53d1\u5e03\u8ba2\u9605\u6a21\u578b","text":""},{"location":"study/OpenHarmony/10.MQTT/#1041-mqtt","title":"10.4.1 MQTT\u53d1\u5e03\u8ba2\u9605\u6a21\u578b","text":"<p>\u76f8\u6bd4\u4e8e\u5e7f\u4e49\u53d1\u5e03\u8ba2\u9605\u6a21\u578b\uff0cMQTT\u8fd8\u6709\u4e00\u4e2a\u540e\u7aef\u8bbe\u5907\uff0c\u5b83\u662f\u4e00\u4e2a\u6570\u636e\u5b58\u50a8\u670d\u52a1\u5668\uff0c\u4ed6\u4eec\u90fd\u8ba2\u9605\u540c\u4e00\u4e2a Address \u4e3b\u9898\u3002</p> <p></p>"},{"location":"study/OpenHarmony/10.MQTT/#1042-mqtt","title":"10.4.2 MQTT\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>MQTT\u5ba2\u6237\u7aef \uff1a\u6307\u8fde\u63a5\u5230MQTT\u4ee3\u7406\u7684\u6240\u4ee5\u8bbe\u5907\uff0c\u8be5\u8bbe\u5907\u53d1\u5e03\u6d88\u606f\u5c31\u662f\u53d1\u5e03\u8005\uff0c\u8ba2\u9605\u6d88\u606f\u4fbf\u662f\u8ba2\u9605\u8005\uff0c\u4e5f\u53ef\u4ee5\u540c\u65f6\u662f\u8ba2\u9605\u8005\u548c\u53d1\u5e03\u8005\u3002</li> <li>MQTT\u4ee3\u7406(Broker) \uff1a\u662f\u4e00\u4e2a\u6d88\u606f\u4e2d\u8f6c\u670d\u52a1\u5668\uff0c\u8d1f\u8d23\u63a5\u6536\u3001\u8fc7\u6ee4\u548c\u8f6c\u53d1\u6d88\u606f\u3002</li> <li>MQTT\u8fde\u63a5 \uff1a\u8ba2\u9605\u8005\u548c\u53d1\u5e03\u8005\u901a\u8fc7TCP/IP\u534f\u8bae\u4e0e\u4ee3\u7406\u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5\u3002</li> <li>MQTT\u4e3b\u9898 \uff1a\u6d88\u606f\u7684\u8def\u7531\u6807\u8bc6\uff0c\u91c7\u7528\u5206\u5c42\u7ed3\u6784\uff0c\u7528<code>/</code>\u5206\u9694\u5c42\u7ea7\u3002</li> <li>\u8ba2\u9605 \uff1a\u5ba2\u6237\u7aef\u5411Broker\u53d1\u9001<code>SUBSCRIBE</code>\u62a5\u6587\uff0c\u58f0\u660e\u5173\u6ce8\u7684\u4e3b\u9898\u3002</li> <li>\u53d1\u5e03 \uff1a\u5ba2\u6237\u7aef\u5411Broker\u53d1\u9001<code>PUBLISH</code>\u62a5\u6587\uff0c\u6d88\u606f\u5305\u542b\u4e3b\u9898\u548c\u8d1f\u8f7d\uff08Payload\uff09\u3002</li> <li>\u53d6\u6d88\u8ba2\u9605 \uff1a\u5ba2\u6237\u7aef\u53d1\u9001<code>UNSUBSCRIBE</code>\u62a5\u6587\uff0c\u79fb\u9664\u5bf9\u6307\u5b9a\u4e3b\u9898\u7684\u8ba2\u9605\u3002</li> <li>\u670d\u52a1\u8d28\u91cf \uff1a<ul> <li>QoS 0\uff1a\u6700\u591a\u4e00\u6b21\uff08\u53ef\u80fd\u4e22\u5931\uff09\u3002</li> <li>QoS 1\uff1a\u81f3\u5c11\u4e00\u6b21\uff08\u53ef\u80fd\u91cd\u590d\uff09\u3002</li> <li>QoS 2\uff1a\u6070\u597d\u4e00\u6b21\uff08\u53ef\u9760\u4f46\u5f00\u9500\u5927\uff09\u3002</li> </ul> </li> </ul>"},{"location":"study/OpenHarmony/10.MQTT/#105-paho-mqtt","title":"10.5 Paho-MQTT","text":""},{"location":"study/OpenHarmony/10.MQTT/#1051-paho-mqtt","title":"10.5.1 Paho-MQTT\u7b80\u4ecb","text":"<p>Paho-MQTT \u662f Eclipse \u57fa\u91d1\u4f1a\u7ef4\u62a4\u7684\u5f00\u6e90 MQTT \u534f\u8bae\u5b9e\u73b0\u5e93\uff0c\u63d0\u4f9b\u8f7b\u91cf\u7ea7\u3001\u8de8\u5e73\u53f0\u7684 MQTT \u5ba2\u6237\u7aef\u652f\u6301\uff0c\u4e13\u4e3a\u7269\u8054\u7f51\u548c\u5206\u5e03\u5f0f\u7cfb\u7edf\u8bbe\u8ba1\u3002</p> \u7279\u6027 \u63cf\u8ff0 \u534f\u8bae\u652f\u6301 MQTT 3.1.1 / 5.0\uff0c\u652f\u6301 QoS 0-2 \u7b49\u7ea7 \u8de8\u5e73\u53f0 \u652f\u6301 Linux/Windows/\u5d4c\u5165\u5f0f\u7cfb\u7edf\uff08FreeRTOS\u3001OpenHarmony \u7b49\uff09 \u591a\u8bed\u8a00\u7ed1\u5b9a \u63d0\u4f9b C/C++\u3001Python\u3001Java\u3001JavaScript \u7b49\u5b9e\u73b0 \u8f7b\u91cf\u5316\u8bbe\u8ba1 C \u5e93\u4f53\u79ef &lt; 100KB\uff08\u88c1\u526a\u540e\uff09\uff0c\u5185\u5b58\u5360\u7528 &lt; 20KB \u5b89\u5168\u6269\u5c55 TLS/SSL \u52a0\u5bc6\u652f\u6301\uff08\u9700\u642d\u914d OpenSSL/mbedTLS\uff09 \u65ad\u7ebf\u7ba1\u7406 \u81ea\u52a8\u91cd\u8fde\u3001\u9057\u5631\u6d88\u606f\uff08LWT\uff09\u3001\u4f1a\u8bdd\u4fdd\u6301 <p>GitHub\u5730\u5740\uff1apaho.mqtt.embedded-c</p> <p>\u4e0b\u8f7d\u6e90\u7801\uff0c\u653e\u7f6e\u5728<code>applications/sample/wifi-iot/app</code>\u76ee\u5f55\uff1a</p> Bash<pre><code>git clone https://github.com/eclipse-paho/paho.mqtt.embedded-c.git\n</code></pre> <p></p> <p>\u540c\u65f6\u5efa\u8bae\u5c06\u6587\u4ef6\u5939\u540d\u79f0\u6539\u4e3a<code>paho_mqtt</code>\uff0c\u65b9\u4fbf\u540e\u7eed\u64cd\u4f5c\u3002</p>"},{"location":"study/OpenHarmony/10.MQTT/#1052","title":"10.5.2 \u6e90\u7801\u914d\u7f6e","text":"<p><code>MQTTClient</code>\u662f\u57fa\u4e8eC++\u7684MQTT\u5e93\uff0c\u800c<code>MQTTClient-C</code>\u5219\u662f\u57fa\u4e8eC\u8bed\u8a00\uff0c\u6545\u6211\u4eec\u4ec5\u4f1a\u4f7f\u7528\u5230\u540e\u8005\u3002</p> <p></p> <p>\u6253\u5f00\u6587\u4ef6\u5939\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u5728<code>src</code>\u76ee\u5f55\u4e2d\u6709\u4e00\u4e9b\u70ed\u95e8\u64cd\u4f5c\u7cfb\u7edf\u9002\u914d\u7684MQTT\u5e93\uff0c\u5b83\u4eec\u5747\u4f9d\u8d56\u4e8e<code>MQTTPacket</code>\u5e93\u3002\u4e0d\u8fc7\u5f88\u9057\u61be\uff0c\u5e76\u6ca1\u6709Open Harmony\u7684\u9002\u914d\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u624b\u52a8\u79fb\u690d\u4e00\u4e9b\u6587\u4ef6\u3002</p> <p></p> <p>\u79fb\u690d\u5b8c\u6210\u7684paho-mqtt\u6e90\u7801(\u6765\u81ea\u4e66\u7c4d\u8d44\u6599)\uff1a</p> Text Only<pre><code>\u94fe\u63a5: https://pan.baidu.com/s/1o-FyN4wB-fxVT8XxQ5zhlQ?pwd=hj55 \n\u63d0\u53d6\u7801: hj55\n</code></pre> <p>Danger</p> <p>ohos\u9002\u914d\u90e8\u5206\u7531\u6c5f\u82cf\u6da6\u5f00\u9e3f\u6570\u5b57\u79d1\u6280\u6709\u9650\u516c\u53f8\u5b8c\u6210\uff0c\u5176\u662f\u6da6\u548c\u8f6f\u4ef6\u6295\u8d44\u7684\u5168\u8d44\u5b50\u516c\u53f8\uff0c\u800c\u6da6\u548c\u8f6f\u4ef6\u4e0e\u534e\u4e3a\u540c\u4e3a\u5f00\u6e90\u9e3f\u8499\u7684A\u7c7b\u6350\u8d60\u8005\uff0c\u5e76\u57fa\u4e8eOpen Harmony\u5f00\u53d1\u4e86HiHopeOS \u64cd\u4f5c\u7cfb\u7edf\u3002</p> <p><code>src</code>\u6dfb\u52a0\u4e86\u4e00\u4e2aohos\u9002\u914d\u76ee\u5f55\u3002</p> <p></p> <p><code>samples</code>\u76ee\u5f55\u4e0b\u6dfb\u52a0\u4e86\u4e00\u4e9bohos\u793a\u4f8b\u7a0b\u5e8f\uff0c\u5305\u62ec\u4e0eAT\u547d\u4ee4\u76f8\u5173\u7684API\u6587\u4ef6\uff0c\u6765\u81eaOpenHarmony1.0\u7248\u672c\u3002</p> <p></p> <p>\u5728vscode\u7684<code>c_cpp_properties.json</code>\u6587\u4ef6\u6dfb\u52a0\u5982\u4e0b<code>includePath</code>\u5185\u5bb9\uff1a</p> JSON<pre><code>\"${workspaceFolder}/applications/sample/wifi-iot/app/paho_mqtt/MQTTPacket/src\",\n\"${workspaceFolder}/applications/sample/wifi-iot/app/paho_mqtt/MQTTClient-C/src\",\n\"${workspaceFolder}/applications/sample/wifi-iot/app/paho_mqtt/MQTTClient-C/src/ohos\"\n</code></pre> <p>APP\u7f16\u8bd1\u811a\u672c</p> Text Only<pre><code>import(\"//build/lite/config/component/lite_component.gni\")\n\nlite_component(\"app\") {\n    features = [\n        \"gn_practice/application:gn_app\",\n        \"gn_practice/driver:gn_driver\",\n        \"gn_practice/library:gn_library\",\n        \"kv_store_demo:kv_store_demo\",\n        \"file_demo:file_demo\",\n        \"thread_demo:thread_demo\",\n        \"timer_demo:timer_demo\",\n        \"mutex_demo:mutex_demo\",\n        # GPIO\u6a21\u5757\n        \"gpio_demo:gpio_demo\",\n        # ADC\u6a21\u5757\n        \"adc_demo:adc_demo\",\n        # OLED\u6a21\u5757\n        \"oled_demo:oled_demo\",\n        # WiFi\u6a21\u5757\n        \"wifi_demo:wifi_demo\",\n        # MQTT\u6a21\u5757\n        \"paho_mqtt/MQTTClient-C:paho-mqttclient\",\n        \"paho_mqtt/MQTTPacket:paho-mqttpacket\",\n    ]\n}\n</code></pre> <p>\u7f16\u8bd1\u70e7\u5f55\u6d4b\u8bd5\u79fb\u690d\u6ca1\u95ee\u9898\u3002</p>"},{"location":"study/OpenHarmony/10.MQTT/#1053-at","title":"10.5.3 AT\u547d\u4ee4\u6d4b\u8bd5","text":"<p>\u6211\u4eec\u7f16\u8bd1\u7684ohos\u793a\u4f8b\u7a0b\u5e8f\u662f\u5bf9Open Harmony\u7684AT\u547d\u4ee4\u7684\u62d3\u5c55\u3002\u5728<code>mqtt_test_cmsis.c</code>\u4e2d\u7684\u5b8f\u5b9a\u4e49\u5b9a\u4e49\u4e86\u589e\u52a0\u7684\u4e00\u4e9bAT\u547d\u4ee4\u3002</p> <p>\u5b66\u4e60AT\u6307\u4ee4</p> <p>\u5728MobaXterm\u4e2d\u8f93\u5165<code>AT+MQTT_CONN=</code>\uff0c\u56de\u8f66\u540e\u4f7f\u7528 Ctrl+J \u7ec4\u5408\u952e\uff0c\u4f1a\u5f97\u5230\u547d\u4ee4\u7684\u4f7f\u7528\u65b9\u6cd5\uff1a</p> <p></p>"},{"location":"study/OpenHarmony/10.MQTT/#1054-easywifi","title":"10.5.4 EasyWiFI\u914d\u7f6e","text":"<p>\u5c06EasyWiFi\u6a21\u5757\u914d\u7f6e\u5230MQTT\u4e2d\uff0c\u8ba9WiFI\u8fde\u63a5\u66f4\u7b80\u5355\u3002</p> <p>\u5728vscode\u7684<code>c_cpp_properties.json</code>\u6587\u4ef6\u6dfb\u52a0\u5982\u4e0b<code>includePath</code>\u5185\u5bb9\uff1a</p> JSON<pre><code>// EasyWiFi\n\"${workspaceFolder}/applications/sample/wifi-iot/app/easy_wifi/src\"\n</code></pre> <p>APP\u7f16\u8bd1\u811a\u672c</p> Text Only<pre><code>import(\"//build/lite/config/component/lite_component.gni\")\n\nlite_component(\"app\") {\n    features = [\n        \"gn_practice/application:gn_app\",\n        \"gn_practice/driver:gn_driver\",\n        \"gn_practice/library:gn_library\",\n        \"kv_store_demo:kv_store_demo\",\n        \"file_demo:file_demo\",\n        \"thread_demo:thread_demo\",\n        \"timer_demo:timer_demo\",\n        \"mutex_demo:mutex_demo\",\n        # GPIO\u6a21\u5757\n        \"gpio_demo:gpio_demo\",\n        # ADC\u6a21\u5757\n        \"adc_demo:adc_demo\",\n        # OLED\u6a21\u5757\n        \"oled_demo:oled_demo\",\n        # WiFi\u6a21\u5757\n        \"wifi_demo:wifi_demo\",\n        # MQTT\u6a21\u5757\n        \"paho_mqtt/MQTTClient-C:paho-mqttclient\",\n        \"paho_mqtt/MQTTPacket:paho-mqttpacket\",\n        # EasyWiFi\u6a21\u5757\n        \"easy_wifi/src:easy_wifi\"\n    ]\n}\n</code></pre> <p>\u7f16\u8bd1\u4ee5\u540e\u53ef\u80fd\u4f1a\u62a5\u4e00\u4e2a\u9519\u8bef\uff0c\u6839\u672c\u539f\u56e0\u662fOpenHarmony\u7248\u672c\u4e0d\u540c\uff0c\u76ee\u5f55\u6709\u6240\u53d8\u5316\uff0c\u6211\u7684\u7248\u672c\u4e3a 3.0.7 \u3002</p> <p>\u5728<code>//applications/sample/wifi-iot/app/easy_wifi/src</code>\u76ee\u5f55\u4e0b\u627e\u5230\u7f16\u8bd1\u811a\u672c\uff0c\u5982\u4e0b\u56fe\u7684\u4f4d\u7f6e\uff0c\u4fee\u6539wifi\u63a5\u53e3\u7684\u00b7\u76ee\u5f55\u4e3a<code>//foundation/communication/wifi_lite/interfaces/wifiservice</code>\uff0c\u7136\u540e\u518d\u6b21\u7f16\u8bd1\u4fbf\u6ca1\u6709\u95ee\u9898\u3002</p> <p></p>"},{"location":"study/OpenHarmony/10.MQTT/#106-mqtt","title":"10.6 MQTT\u8fde\u63a5\u534e\u4e3a\u4e91","text":"<p>\u53d1\u5e03\u4fe1\u606f\u683c\u5f0f</p> JSON<pre><code>{\n    \"services\": [{\n            \"service_id\": \"Upload\",\n            \"properties\": {\n                \"temperature\": 25,\n                \"humidity\": 60,\n        \"MQ2\": 1\n            }\n        }\n    ]\n}\n</code></pre> <p>\u8bf7\u6c42\u8bbe\u5907\u5f71\u5b50\u683c\u5f0f</p> JSON<pre><code>{\n    \"object_device_id\": \"677388cfbab900244b135588_DATAS\",\n    \"service_id\": \"Upload\"\n}\n</code></pre> <p><code>mqtt_task.c</code></p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdint.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\n#include \"cmsis_os2.h\"\n// MQTTClient-C\u5e93\u63a5\u53e3\u6587\u4ef6\n#include \"MQTTClient.h\"\n// OHOS(LiteOS)\u9002\u914d\u63a5\u53e3\u6587\u4ef6\n#include \"mqtt_ohos.h\"\n// \u81ea\u5b9a\u4e49\u7684\u63a5\u53e3\u6587\u4ef6\n#include \"mqtt_task.h\"\n\n\n// \u5b9a\u4e49\u4e00\u4e2a\u5b8f\uff0c\u7528\u4e8e\u8f93\u51fa\u65e5\u5fd7\n#define LOGI(fmt, ...) printf(fmt \"\\n\", ##__VA_ARGS__)\n\n// MQTT\u5ba2\u6237\u7aef(MQTTClient.h)\nstatic MQTTClient client = {0};\n\n// MQTT\u7f51\u7edc\u8fde\u63a5(mqtt_ohos.h)\nstatic Network network = {0};\n\n// \u63a5\u6536\u548c\u53d1\u9001\u6570\u636e\u7684\u7f13\u51b2\u533a\nstatic unsigned char sendbuf[512], readbuf[512];\n\n// \u6807\u8bc6\u4efb\u52a1\u5faa\u73af\u8fd0\u884c\u4e0e\u5426\nstatic int running = 1;\n\n/**\n * @brief MQTT\u4efb\u52a1\u5faa\u73af\n * \n * @param arg MQTT\u5ba2\u6237\u7aef(MQTTClient)\n */\nstatic void MqttTask(void* arg)\n{\n    /* \u8f93\u51fa\u5f00\u59cb\u65e5\u5fd7 */\n    LOGI(\"[INFO] MqttTask start!\");\n    /* \u83b7\u53d6\u4efb\u52a1\u53c2\u6570 */\n    MQTTClient* pClient = (MQTTClient*)arg;\n    /* \u4efb\u52a1\u5faa\u73af */\n    while (pClient)\n    {\n        // paho_mqtt\u5bf9\u4e92\u65a5\u9501\u64cd\u4f5c\u8fdb\u884c\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u5c01\u88c5\n        // \u5f53\u5b8f MQTT_TASK \u88ab\u5b9a\u4e49\u540e\uff0cMQTTClient\u7ed3\u6784\u4f53\u4f1a\u591a\u4e24\u4e2a\u6210\u5458 mutex \u548c thread\n\n        /* \u83b7\u53d6\u4e92\u65a5\u9501(mqtt_ohos_cmsis.c) */\n        mqttMutexLock(&amp;pClient-&gt;mutex);\n        if (!running) {\n            // \u9000\u51fa\u4efb\u52a1\u5faa\u73af \n            LOGI(\"[ERROR] MQTT background thread exit!\");\n            /* \u91ca\u653e\u4e92\u65a5\u9501 */\n            mqttMutexUnlock(&amp;pClient-&gt;mutex);\n            break;\n        }\n        /* \u91ca\u653e\u4e92\u65a5\u9501(mqtt_ohos_cmsis.c) */\n        mqttMutexUnlock(&amp;pClient-&gt;mutex);\n        /* ---------------------------------------- */\n        /* \u83b7\u53d6\u4e92\u65a5\u9501 */\n        mqttMutexLock(&amp;pClient-&gt;mutex);\n        // \u5ba2\u6237\u7aef\u8fde\u63a5\u6210\u529f\n        if (pClient-&gt;isconnected) {\n            // \u7ef4\u6301 MQTT \u5ba2\u6237\u7aef\u7684\u540e\u53f0\u901a\u4fe1(MQTTClient.h)\n            MQTTYield(pClient, 100);\n        }\n        /* \u91ca\u653e\u4e92\u65a5\u9501 */\n        mqttMutexUnlock(&amp;pClient-&gt;mutex);\n        /* ---------------------------------------- */\n        // \u7b49\u5f85 1 s(mqtt_ohos_cmsis.c)\n        Sleep(1000);\n    }\n    // \u8f93\u51fa\u65e5\u5fd7\n    LOGI(\"[ERROR] MqttTask exit!\");\n}\n\n\n/**\n * @brief \u521d\u59cb\u5316 MqttTask,\u57fa\u4e8e MqttTask \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\n * \n */\nvoid MqttTaskInit(void)\n{\n    /* \u521d\u59cb\u5316\u5e76\u542f\u52a8MQTT\u5ba2\u6237\u7aef */\n    // \u7f51\u7edc\u521d\u59cb\u5316(mqtt_ohos_cmsis.c)\n    NetworkInit(&amp;network);\n    // \u5ba2\u6237\u7aef\u521d\u59cb\u5316(MQTTClient.h)\n    MQTTClientInit(&amp;client, &amp;network, 100, sendbuf, sizeof(sendbuf), readbuf, sizeof(readbuf));\n\n    /* \u521b\u5efaMQTT\u7ebf\u7a0b */\n    // paho_mqtt\u5bf9\u521b\u5efa\u7ebf\u7a0b\u64cd\u4f5c\u8fdb\u884c\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u5c01\u88c5\n    ThreadStart(&amp;client.thread, MqttTask, &amp;client);\n    LOGI(\"[INFO] MqttTaskInit done!\");\n}\n\n/**\n * @brief \u505c\u6b62MQTT\u4efb\u52a1\n * \n */\nvoid MqttTaskDeinit(void)\n{\n    // \u83b7\u53d6\u4e92\u65a5\u9501\n    mqttMutexLock(&amp;client.mutex);\n    // \u6807\u8bc6\u53d8\u91cf\u5f52\u96f6\n    running = 0;\n    // \u91ca\u653e\u4e92\u65a5\u9501\n    mqttMutexUnlock(&amp;client.mutex);\n    // \u5220\u9664\u4e92\u65a5\u9501\n    mqttMutexDeinit(&amp;client.mutex);\n}\n\n/**\n * @brief \u8fde\u63a5MQTT\u670d\u52a1\u5668(Broker)\n * \n * @param host \u670d\u52a1\u5668\u5730\u5740\n * @param port \u670d\u52a1\u5668\u7aef\u53e3\n * @param clientId \u5ba2\u6237\u7aefID\n * @param username \u7528\u6237\u540d\n * @param password \u5bc6\u7801\n * @return 0\uff1a\u6210\u529f\uff0c-1\uff1a\u5931\u8d25\n */\nint MqttTaskConnect(const char *host, unsigned short port, \n                    const char *clientId, const char *username, const char *password)\n{\n    /* \u63a5\u6536\u8fd4\u56de\u503c\u53d8\u91cf */\n    int rc = 0;\n\n    /* \u521d\u59cb\u5316MQTT\u8fde\u63a5\u4fe1\u606f(MQTTPacket\\MQTTConnect.h) */\n    MQTTPacket_connectData connectData = MQTTPacket_connectData_initializer;\n\n    /* \u4f7f\u7528TCP socket\u8fde\u63a5MQTT\u670d\u52a1\u5668 */\n    rc = NetworkConnect(&amp;network, (char*)host, port);\n    if (rc != 0) {\n        // \u8fde\u63a5\u5931\u8d25\uff0c\u8f93\u51fa\u65e5\u5fd7\u5e76\u8fd4\u56de-1\n        LOGI(\"[ERROR] NetworkConnect is %d\", rc);\n        return -1;\n    }\n\n    /* \u8bbe\u7f6eMQTT\u8fde\u63a5\u4fe1\u606f */\n    if (username != NULL &amp;&amp; password != NULL) {\n        connectData.username.cstring = (char*)username;\n        connectData.password.cstring = (char*)password;\n        // MQTT\u7248\u672c\uff0c3 = 3.1\uff0c4 = 3.1.1\n        connectData.MQTTVersion = 3;\n        connectData.clientID.cstring = (char*)clientId;\n    }\n\n    /* \u53d1\u9001MQTT\u8fde\u63a5\u5305(MQTTClient.h) */\n    rc = MQTTConnect(&amp;client, &amp;connectData);\n    if (rc != 0) {\n        // \u8fde\u63a5\u5931\u8d25\uff0c\u8f93\u51fa\u65e5\u5fd7\u5e76\u8fd4\u56de-1\n        LOGI(\"[ERROR] MQTTConnect failed: %d\", rc);\n        return -1;\n    }\n\n    /* \u8fde\u63a5\u6210\u529f */\n    LOGI(\"[INFO] MQTT Connected!\");\n    return 0;\n}\n\n/* \u4e3b\u9898\u8ba2\u9605\u56de\u8c03\u51fd\u6570 */\nstatic void MessageHander(MessageData* data)\n{\n    // (MQTTClient.h)\n    printf(\"[INFO] Message Size:%d\\r\\n\", (int)data-&gt;message-&gt;payloadlen);\n    LOGI(\"[INFO] Message arrived on topic:\\r\\nTopic: %.*s\\r\\n\",\n        (int)data-&gt;topicName-&gt;lenstring.len, (char *)data-&gt;topicName-&gt;lenstring.data);\n    LOGI(\"[INFO] payload: %.*s\\r\\n\", (int)data-&gt;message-&gt;payloadlen, (char *)data-&gt;message-&gt;payload);\n}\n\n/**\n * @brief \u8ba2\u9605\u4e3b\u9898\n * \n * @param topic \u4e3b\u9898\n * @return 0\uff1a\u6210\u529f\uff0c-1\uff1a\u5931\u8d25\n */\nint MqttTaskSubscribe(char* topic)\n{\n    /* \u63a5\u6536\u8fd4\u56de\u503c\u53d8\u91cf */\n    int rc = 0;\n\n    /* \u8f93\u51fa\u65e5\u5fd7 */\n    LOGI(\"[INFO] Subscribe: [%s] from broker\", topic);\n\n    /* \u53d1\u9001\u8ba2\u9605\u5305 */\n    rc = MQTTSubscribe(&amp;client, topic, QOS0, MessageHander);\n    if (rc != 0) {\n        // \u8fde\u63a5\u5931\u8d25\uff0c\u8f93\u51fa\u65e5\u5fd7\u5e76\u8fd4\u56de-1\n        LOGI(\"[ERROR] MQTTSubscribe failed: %d\", rc);\n        return -1;\n    }\n\n    /* \u8ba2\u9605\u6210\u529f */\n    return 0;\n}\n\n/**\n * @brief \u53d6\u6d88\u4e3b\u9898\u8ba2\u9605\n * \n * @param topic \u4e3b\u9898\n * @return 0\uff1a\u6210\u529f\uff0c-1\uff1a\u5931\u8d25\n */\nint MqttTaskUnSubscribe(char* topic)\n{\n    /* \u63a5\u6536\u8fd4\u56de\u503c\u53d8\u91cf */\n    int rc = 0;\n\n    /* \u8f93\u51fa\u65e5\u5fd7 */\n    LOGI(\"[INFO] UnSubscribe: [%s] from broker\", topic);\n\n    /* \u53d1\u9001\u8ba2\u9605\u5305 */\n    rc = MQTTUnsubscribe(&amp;client, topic);\n    if (rc != 0) {\n        // \u8fde\u63a5\u5931\u8d25\uff0c\u8f93\u51fa\u65e5\u5fd7\u5e76\u8fd4\u56de-1\n        LOGI(\"[ERROR] MQTTUnsubscribe failed: %d\", rc);\n        return -1;\n    }\n\n    /* \u53d6\u6d88\u8ba2\u9605\u6210\u529f */\n    return 0;\n}\n\n/**\n * @brief \u5411\u6307\u5b9a\u4e3b\u9898\u53d1\u5e03\u6d88\u606f\n * \n * @param topic \u4e3b\u9898\n * @param payload \n * @return 0\uff1a\u6210\u529f\uff0c-1\uff1a\u5931\u8d25\n */\nint MqttTaskPublish(char *topic, char *payload)\n{\n    /* \u63a5\u6536\u8fd4\u56de\u503c\u53d8\u91cf */\n    int rc = 0;\n\n    /* \u5b9a\u4e49MQTT\u6d88\u606f\u6570\u636e\u5305(MQTTClient.h) */\n    MQTTMessage message = {\n        .qos = QOS0,\n        .retained = 0,\n        .payload = payload,\n        .payloadlen = strlen(payload),\n    };\n    LOGI(\"[INFO] Publish: #'%s': '%s' to broker\", topic, payload);\n\n    /* \u53d1\u5e03\u6d88\u606f */\n    rc = MQTTPublish(&amp;client, topic, &amp;message);\n    if (rc != 0) {\n        // \u8fde\u63a5\u5931\u8d25\uff0c\u8f93\u51fa\u65e5\u5fd7\u5e76\u8fd4\u56de-1\n        LOGI(\"[ERROR] MQTTPublish failed: %d\", rc);\n        return -1;\n    }\n\n    /* \u53d1\u5e03\u6210\u529f */\n    return 0;\n}\n\n/**\n * @brief \u65ad\u5f00\u4e0eMQTT\u670d\u52a1\u5668\u7684\u8fde\u63a5\n * \n * @return 0\uff1a\u6210\u529f\uff0c-1\uff1a\u5931\u8d25\n */\nint MqttTaskDisconnect(void)\n{\n    /* \u63a5\u6536\u8fd4\u56de\u503c\u53d8\u91cf */\n    int rc = 0;\n\n    /* \u53d1\u9001\u65ad\u5f00\u8fde\u63a5\u6570\u636e\u5305 */\n    rc = MQTTDisconnect(&amp;client);\n    if (rc != 0) {\n        // \u8fde\u63a5\u5931\u8d25\uff0c\u8f93\u51fa\u65e5\u5fd7\u5e76\u8fd4\u56de-1\n        LOGI(\"[ERROR] MQTTDisconnect failed: %d\", rc);\n        return -1;\n    }\n\n    /* \u65ad\u5f00\u548cMQTT\u670d\u52a1\u5668\u7684TCP socket\u8fde\u63a5 */\n    NetworkDisconnect(&amp;network);\n\n    /* \u65ad\u5f00\u8fde\u63a5\u6210\u529f */\n    return 0;\n}\n</code></pre> <p><code>mqtt_task.h</code></p> C<pre><code>#ifndef MQTT_TASK_H\n#define MQTT_TASK_H\n\n\nvoid MqttTaskInit(void);\nvoid MqttTaskDeinit(void);\nint MqttTaskConnect(const char *host, unsigned short port, \n    const char *clientId, const char *username, const char *password);\nint MqttTaskSubscribe(char* topic);\nint MqttTaskUnSubscribe(char* topic);\nint MqttTaskPublish(char *topic, char *payload);\nint MqttTaskDisconnect(void);\n\n#endif\n</code></pre> <p><code>mqtt_demo.c</code></p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\n#include \"ohos_init.h\"\n#include \"cmsis_os2.h\"\n// STA\u6a21\u5f0f\u5934\u6587\u4ef6\n#include \"wifi_connecter.h\"\n#include \"mqtt_task.h\"\n#include \"cJSON.h\"\n\n/**\n * mqtt_demo/mqtt_demo.c\n * MQTT\u793a\u4f8b\n */\n\n/* WiFi\u4fe1\u606f */\n// \u8d26\u53f7\n#define HOTSPOT_SSID        \"OpenHarmony\"\n// \u5bc6\u7801\n#define HOTSPOT_PASSWD      \"123456789\"\n// \u52a0\u5bc6\u65b9\u5f0f\n#define HOTSPOT_TYPE        WIFI_SEC_TYPE_PSK\n/* \u534e\u4e3a\u4e91\u4fe1\u606f */\n// MQTT\u8fde\u63a5\u53c2\u6570               \n#define   MQTT_HOST             \"9dfa5c258d.st1.iotda-device.cn-east-3.myhuaweicloud.com\"     \n#define   MQTT_PORT             1883\n#define   MQTT_CLIENT_ID        \"xxx\"\n#define   MQTT_USERNAME         \"xxx\"\n#define   MQTT_PASSWD           \"xxx\"\n#define   MQTT_DEVICE_ID        \"677388cfbab900244b135588_DATAS\"\n#define   MQTT_SERVICE_ID       \"Upload\"\n// HUAWEICLOUDE\u5e73\u53f0\u7684\u8bdd\u9898\u5b9a\u4e49  \n#define   MQTT_PublishTopic     \"$oc/devices/677388cfbab900244b135588_DATAS/sys/properties/report\"\n#define   MQTT_RequestTopic     \"$oc/devices/677388cfbab900244b135588_DATAS/sys/shadow/get/request_id={request_id}\"\n#define   MQTT_SubscribeTopic   \"$oc/devices/677388cfbab900244b135588_DATAS/sys/shadow/get/response/#\"\n\n\n/**\n * @brief \u53d1\u5e03\u6d88\u606f\uff0c\u4e0a\u4f20\u6e29\u6e7f\u5ea6\u3001MQ2\u6570\u636e\n * \n * @param temp \u6e29\u5ea6\n * @param humidity \u6e7f\u5ea6\n * @param mq2 MQ2\u662f\u5426\u8d85\u9608\u503c\n * @return \u5f62\u6210\u7684JSON\u53d1\u9001\u683c\u5f0f\n */\nstatic char* MqttPublishPayload(float temp, float humidity, int mq2) {\n    // \u521b\u5efaJSON\u7ed3\u6784\n    cJSON *root = cJSON_CreateObject();\n    cJSON *services = cJSON_CreateArray();\n\n    // \u6784\u5efa\u670d\u52a1\u8282\u70b9\n    cJSON *upload = cJSON_CreateObject();\n    cJSON_AddStringToObject(upload, \"service_id\", \"Upload\");\n\n    // \u6dfb\u52a0\u5c5e\u6027\n    cJSON *props = cJSON_CreateObject();\n    cJSON_AddNumberToObject(props, \"temperature\", temp);\n    cJSON_AddNumberToObject(props, \"humidity\", humidity);\n    cJSON_AddNumberToObject(props, \"MQ2\", mq2);\n    cJSON_AddItemToObject(upload, \"properties\", props);\n\n    // \u7ec4\u5408\u7ed3\u6784\n    cJSON_AddItemToArray(services, upload);\n    cJSON_AddItemToObject(root, \"services\", services);\n\n    // \u751f\u6210\u5b57\u7b26\u4e32\n    char *payload = cJSON_PrintUnformatted(root);\n\n    // \u91ca\u653ecJSON\u6811\uff08\u6ce8\u610f\uff1a\u4e0d\u91ca\u653epayload\u5b57\u7b26\u4e32\uff09\n    cJSON_Delete(root);\n\n    return payload;\n}\n\n/**\n * @brief \n * \n * @param device_id \n * @param service_id \n * @return char* \n */\nstatic char* MqttRequestPayload(const char* device_id, const char* service_id) {\n    // \u53c2\u6570\u6709\u6548\u6027\u68c0\u67e5\n    if (!device_id || !service_id || strlen(device_id) == 0 || strlen(service_id) == 0) {\n        return NULL;\n    }\n\n    // \u521b\u5efaJSON\u6839\u5bf9\u8c61\n    cJSON *root = cJSON_CreateObject();\n    if (!root) return NULL;\n\n    // \u6dfb\u52a0\u8bbe\u5907ID\u5b57\u6bb5\n    cJSON_AddStringToObject(root, \"object_device_id\", device_id);\n    // \u6dfb\u52a0\u670d\u52a1ID\u5b57\u6bb5\n    cJSON_AddStringToObject(root, \"service_id\", service_id);\n\n    // \u751f\u6210\u7d27\u51d1\u578bJSON\n    char *payload = cJSON_PrintUnformatted(root);\n\n    // \u6e05\u7406cJSON\u7ed3\u6784\n    cJSON_Delete(root);\n\n    return payload;\n}\n\n\nstatic void MqttTaskDemo(void* arg)\n{\n    /* \u521d\u59cb\u5316WIFI\u53c2\u6570 */\n    WifiDeviceConfig apConfig = {\n        // \u70ed\u70b9\u540d\u79f0\n        .ssid = HOTSPOT_SSID,\n        // \u70ed\u70b9\u5bc6\u7801\n        .preSharedKey = HOTSPOT_PASSWD,\n        // \u52a0\u5bc6\u65b9\u5f0f(PSK)\n        .securityType = HOTSPOT_TYPE,\n    };\n    /* \u8fde\u63a5WIFI */\n    int netId = ConnectToHotspot(&amp;apConfig);\n    if (netId &lt; 0) {\n        printf(\"[ERROR] Connect to AP failed!\\r\\n\");\n        return;\n    }\n    /* \u521d\u59cb\u5316\u5e76\u542f\u52a8MQTT\u4efb\u52a1\uff0c\u8fde\u63a5MQTT\u670d\u52a1\u5668 */\n    MqttTaskInit(); \n    if (MqttTaskConnect(MQTT_HOST, MQTT_PORT, MQTT_CLIENT_ID, MQTT_USERNAME, MQTT_PASSWD) != 0) {\n        // \u8fde\u63a5\u5931\u8d25\uff0c\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\u5e76\u9000\u51fa\n        printf(\"[ERROR] Connect to MQTT server failed!\\r\\n\");\n        return;\n    }\n    /* \u8ba2\u9605\u4e3b\u9898 */ \n    int rc = MqttTaskSubscribe(MQTT_SubscribeTopic); \n    if (rc != 0) {\n        // \u8ba2\u9605\u5931\u8d25\uff0c\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\u5e76\u9000\u51fa\n        printf(\"[ERROR] MQTT Subscribe failed!\\r\\n\");\n        return;\n    } else {\n        // \u8f93\u51fa\u8ba2\u9605\u6210\u529f\u4fe1\u606f\n        printf(\"[INFO] MQTT Subscribe OK\\r\\n\");\n    }\n\n    /* \u53d1\u5e03\u8bf7\u6c42\u4fe1\u606f */\n    char* payload = MqttRequestPayload(MQTT_DEVICE_ID, MQTT_SERVICE_ID); \n    rc = MqttTaskPublish(MQTT_RequestTopic, payload); \n    if (rc != 0) {\n        // \u53d1\u5e03\u5931\u8d25\uff0c\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\n        printf(\"[ERROR] MQTT Request failed!\\r\\n\"); \n        return;\n    } else {\n        // \u53d1\u5e03\u6210\u529f\uff0c\u8f93\u51fa\u6210\u529f\u4fe1\u606f\n        printf(\"[INFO] MQTT Request OK\\r\\n\"); \n    }\n\n    /* \u53d1\u5e03\u6d88\u606f */\n    payload = MqttPublishPayload(17, 80, 0); \n    rc = MqttTaskPublish(MQTT_PublishTopic, payload); \n    if (rc != 0) {\n        // \u53d1\u5e03\u5931\u8d25\uff0c\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\n        printf(\"[ERROR] MQTT Publish failed!\\r\\n\"); \n        return;\n    } else {\n        // \u53d1\u5e03\u6210\u529f\uff0c\u8f93\u51fa\u6210\u529f\u4fe1\u606f\n        printf(\"[INFO] MQTT Publish OK\\r\\n\"); \n    }                  \n}\n\n/* \u5165\u53e3\u51fd\u6570 */\nstatic void MqttEntry(void)\n{\n     osThreadAttr_t attr = {\n        .name = \"MqttTaskDemo\",\n        .stack_size = 10240,\n        .priority = osPriorityNormal\n    };\n    if (osThreadNew(MqttTaskDemo, NULL, &amp;attr) == NULL) {\n        printf(\"[ERROR] Thread Create Faild.\\r\\n\");\n    }\n}\n\nSYS_RUN(MqttEntry);\n</code></pre>"},{"location":"study/OpenHarmony/2.OHIDE%E5%BC%80%E5%8F%91/","title":"\u7b2c\u4e8c\u7ae0 IDE\u5f00\u53d1","text":""},{"location":"study/OpenHarmony/2.OHIDE%E5%BC%80%E5%8F%91/#21-windows","title":"2.1 Windows\u73af\u5883","text":"<p>\u534e\u4e3a\u96c6\u6210\u5f00\u53d1\u73af\u5883IDE DevEco Device Tool\u4e0b\u8f7d </p> <p>\u4e00\u8def\u9ed8\u8ba4\u914d\u7f6e\u5373\u53ef\uff0c\u7136\u540e\u6253\u5f00Vscode\u5373\u53ef\u770b\u5230\u63d2\u4ef6</p> <p></p>"},{"location":"study/OpenHarmony/2.OHIDE%E5%BC%80%E5%8F%91/#22-ubuntu","title":"2.2 Ubuntu\u73af\u5883","text":""},{"location":"study/OpenHarmony/2.OHIDE%E5%BC%80%E5%8F%91/#221-ubuntu","title":"2.2.1 \u51c6\u5907Ubuntu\u865a\u62df\u673a","text":"<p>\u5b98\u65b9Ubuntu\u7cfb\u7edf\u8981\u6c42\uff1aUbuntu18.04~21.10\u7248\u672c\uff0c\u63a8\u8350\u4e3a 20.04 \u7248\u672c\uff0c\u56e0\u6b64\u6211\u4eec\u4e5f\u662f\u6709\u6b64\u7248\u672c\u3002</p> <p>Ubuntu\u5b89\u88c5\u6307\u5bfc\u94fe\u63a5</p> <p></p>"},{"location":"study/OpenHarmony/2.OHIDE%E5%BC%80%E5%8F%91/#222-ubuntu","title":"2.2.2 \u914d\u7f6eUbuntu\u73af\u5883","text":"<p>\u5c06Ubuntu Shell\u73af\u5883\u4fee\u6539\u4e3abash</p> Bash<pre><code>ls -l /bin/sh\n</code></pre> <p></p> Bash<pre><code>sudo dpkg-reconfigure dash\n</code></pre> <p></p> <p>\u4fee\u6539\u7ed3\u679c\uff1a</p> <p></p> <p>\u4e0b\u8f7dDevEco Device Tool\u6700\u65b0Linux\u7248\u672c\u8f6f\u4ef6\u5305\uff0c\u6ce8\u610f\u548cWindows\u7684\u7248\u672c\u4e00\u6837</p> <p>\u89e3\u538bDevEco Device Tool\u8f6f\u4ef6\u5305\u5e76\u5b89\u88c5\uff0c\u7b2c\u4e09\u6b65\u9700\u8981\u7b7e\u7f72\u540c\u610f\u7528\u6237\u534f\u8bae\u548c\u9690\u79c1\u58f0\u660e\u624d\u80fd\u8fdb\u884c\u4e0b\u4e00\u6b65\u7684\u5b89\u88c5</p> Bash<pre><code>#\u89e3\u538b\nunzip devicetool-linux-tool-{Version}.zip\n#\u8d4b\u6743\nchmod u+x devicetool-linux-tool-{Version}.sh\n#\u6267\u884c\u5b89\u88c5\nsudo ./devicetool-linux-tool-{Version}.sh\n</code></pre>"},{"location":"study/OpenHarmony/2.OHIDE%E5%BC%80%E5%8F%91/#23","title":"2.3 \u914d\u7f6e\u8fdc\u7a0b\u8bbf\u95ee\u73af\u5883","text":""},{"location":"study/OpenHarmony/2.OHIDE%E5%BC%80%E5%8F%91/#231-ubuntussh","title":"2.3.1 Ubuntu\u914d\u7f6eSSH\u670d\u52a1","text":"<p>\u5b89\u88c5ssh\u670d\u52a1</p> Bash<pre><code>sudo apt-get install openssh-server\nsudo systemctl start ssh\n</code></pre> <p>\u67e5\u770b\u865a\u62df\u673aIP\u5730\u5740</p> Bash<pre><code>#\u5b89\u88c5\u63d2\u4ef6\nsudo apt install net-tools\n#\u67e5\u770bIP\nifconfig\n</code></pre> <p></p>"},{"location":"study/OpenHarmony/2.OHIDE%E5%BC%80%E5%8F%91/#232-windows","title":"2.3.2 Windows\u914d\u7f6e\u8fdc\u7a0b\u8bbf\u95ee","text":"<p>Vscode \u5b89\u88c5 Remote SSH \u63d2\u4ef6</p> <p></p> <p>\u8fde\u63a5\u865a\u62df\u673a\uff1a<code>ssh \u7528\u6237\u540d@IP</code></p> <p></p> <p>\u4e00\u8def\u9ed8\u8ba4\uff0c\u8f93\u5165\u5bc6\u7801\u5373\u53ef\u6210\u529f\u8fde\u63a5\uff0c\u70b9\u51fb\u6253\u5f00\u6587\u4ef6\u5c31\u53ef\u4ee5\u9009\u62e9\u8981\u6253\u5f00\u7684\u865a\u62df\u673a\u6587\u4ef6\u5939</p> <p></p>"},{"location":"study/OpenHarmony/2.OHIDE%E5%BC%80%E5%8F%91/#24","title":"2.4 \u521b\u5efa\u5de5\u7a0b\u83b7\u53d6\u6e90\u7801","text":"<p>\u9009\u62e9\u6e90\u7801\u7684\u7248\u672c\uff0c\u8fd9\u91cc\u6211\u9009\u62e9\u4e0e\u5b98\u7f51\u793a\u4f8b\u540c\u6837\u7684OpenHarmony-v3.1-Release \uff0c\u5373OpenHarmony-v3.1\u6b63\u5f0f\u7248\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u7248\u672c\u4e00\u6837\u7684\u64cd\u4f5c\u3002\u5f00\u53d1\u677f\u6211\u9009\u7528\u7684\u5c0f\u718a\u6d3e\uff0c\u82af\u7247HI3861\uff0c\u8fd9\u91ccSOC\u548c\u5f00\u53d1\u677f\u90fd\u9009\u7528hi3861\u3002</p> Danger <p>\u4e4b\u524d\u9009\u7528\u5f00\u53d1\u677f\u4e3aBreaPi\u4f46\u662f\u4e32\u53e3\u8f93\u51fa\u7ed3\u679c\u4e0d\u5bf9\uff0c\u6240\u4ee5\u53c8\u6539\u7528\u8fd9\u4e2a\u6bd4\u8f83\u6b63\u5e38\uff0c\u539f\u56e0\u6682\u672a\u77e5\uff0c\u6240\u4ee5\u5c31\u7528hi3861\u5427\u3002</p> <p></p> <p>\u70b9\u51fb\u786e\u5b9a\uff0c\u4f1a\u81ea\u52a8\u5f00\u59cb\u4e0b\u8f7d\u6e90\u7801\uff0c\u6e90\u7801\u6bd4\u8f83\u5927\u6240\u4ee5\u9700\u8981\u633a\u591a\u7684\u65f6\u95f4\u3002</p> <p></p>"},{"location":"study/OpenHarmony/2.OHIDE%E5%BC%80%E5%8F%91/#25-hi3861","title":"2.5 \u7b2c\u4e00\u4e2a\u7a0b\u5e8f\uff08\u57fa\u4e8eHI3861\uff09","text":""},{"location":"study/OpenHarmony/2.OHIDE%E5%BC%80%E5%8F%91/#251","title":"2.5.1 \u7f16\u5199\u7a0b\u5e8f","text":"<p>\u627e\u5230\u76ee\u5f55<code>./applications/sample/wifi-iot/app</code>\uff0c\u5728app\u6587\u4ef6\u5939\u4e0b\u4e00\u4e2a\u6587\u4ef6\u5939<code>my_first_app</code>\uff0c\u4ee3\u7801\u6587\u4ef6<code>hello_world.c</code>\uff0c\u7f16\u8bd1\u811a\u672c<code>BUILD.gn</code>\u3002\u5177\u4f53\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a</p> Text Only<pre><code>.\n\u2514\u2500\u2500 applications\n    \u2514\u2500\u2500 sample\n        \u2514\u2500\u2500 wifi-iot\n            \u2514\u2500\u2500 app\n                \u2514\u2500\u2500 my_first_app\n                  \u2502\u2500\u2500 hello_world.c\n                  \u2514\u2500\u2500 BUILD.gn\n</code></pre> Note <p>\u5b98\u65b9\u79f0\u547c\uff1a\u65b0\u589e\u4e1a\u52a1my_first_app\uff0c\u5176\u4e2dhello_world.c\u4e3a\u4e1a\u52a1\u4ee3\u7801\uff0cBUILD.gn\u4e3a\u7f16\u8bd1\u811a\u672c\u3002</p> <p>\u5728<code>hello_world.c</code>\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4ee3\u7801</p> C<pre><code>#include &lt;stdio.h&gt;\n#include \"ohos_init.h\"\n#include \"ohos_types.h\"\n\nvoid HelloWorld(void)\n{\n    printf(\"[DEMO] Hello world.\\n\");\n}\nSYS_RUN(HelloWorld);\n</code></pre> <p>\u5728\u7f16\u8bd1\u811a\u672c<code>BUILD.gn</code>\u4e2d\u6dfb\u52a0\u7f16\u8bd1\u914d\u7f6e</p> Text Only<pre><code>static_library(\"myapp\") {\n    sources = [\n        \"hello_world.c\"\n    ]\n    include_dirs = [\n        \"//utils/native/lite/include\"\n    ]\n}\n</code></pre> <p>\u6dfb\u52a0\u65b0\u7ec4\u4ef6\uff0c\u7ec4\u4ef6\u914d\u7f6e\u6587\u4ef6\u4e3a<code>build/lite/components/applications.json</code></p> Danger <p>\u82e5\u6e90\u7801\u7248\u672c\u5927\u4e8e\u7b49\u4e8eOpenHarmony 3.2 Beta2\u65f6\uff0c\u7ec4\u4ef6\u914d\u7f6e\u6587\u4ef6\u4e3a<code>build/lite/components/communication.json</code>\u3002</p> JSON<pre><code>{\n  \"components\": [\n    {\n      \"component\": \"camera_sample_communication\",\n      \"description\": \"Communication related samples.\",\n      \"optional\": \"true\",\n      \"dirs\": [\n        \"applications/sample/camera/communication\"\n      ],\n      \"targets\": [\n        \"//applications/sample/camera/communication:sample\"\n      ],\n      \"rom\": \"\",\n      \"ram\": \"\",\n      \"output\": [],\n      \"adapted_kernel\": [ \"liteos_a\" ],\n      \"features\": [],\n      \"deps\": {\n        \"components\": [],\n        \"third_party\": []\n      }\n    },\n##start##\n    {\n      \"component\": \"hello_world_app\",\n      \"description\": \"hello world samples.\",\n      \"optional\": \"true\",\n      \"dirs\": [\n        \"applications/sample/wifi-iot/app/my_first_app\"\n      ],\n      \"targets\": [\n        \"//applications/sample/wifi-iot/app/my_first_app:myapp\"\n      ],\n      \"rom\": \"\",\n      \"ram\": \"\",\n      \"output\": [],\n      \"adapted_kernel\": [ \"liteos_m\" ],\n      \"features\": [],\n      \"deps\": {\n        \"components\": [],\n        \"third_party\": []\n      }\n    },\n##end##\n    {\n      \"component\": \"camera_sample_app\",\n      \"description\": \"Camera related samples.\",\n      \"optional\": \"true\",\n      \"dirs\": [\n        \"applications/sample/camera/launcher\",\n        \"applications/sample/camera/cameraApp\",\n        \"applications/sample/camera/setting\",\n        \"applications/sample/camera/gallery\",\n        \"applications/sample/camera/media\"\n      ],\n</code></pre> <p>\u4fee\u6539\u5355\u677f\u914d\u7f6e\u6587\u4ef6<code>vendor/hisilicon/hispark_pegasus/config.json</code>\uff0c\u65b0\u589ehello_world_app\u7ec4\u4ef6\u7684\u6761\u76ee</p> JSON<pre><code>      {\n        \"subsystem\": \"applications\",\n        \"components\": [\n##start##\n          { \"component\": \"hello_world_app\", \"features\":[] },\n##end##\n          { \"component\": \"wifi_iot_sample_app\", \"features\":[] }\n        ]\n      },\n</code></pre> <p>Note</p> <p>\u8fd9\u91cc\u5c31\u8ddf\u7740\u4fee\u6539\u6587\u4ef6\u5373\u53ef\uff0c\u5177\u4f53\u5173\u4e8e\u7f16\u8bd1\u811a\u672c\u548c\u7ec4\u4ef6\u6dfb\u52a0\u95ee\u9898\uff0c\u4f1a\u5728\u7f16\u8bd1\u539f\u7406\u7ae0\u8282\u8fdb\u4e00\u6b65\u89e3\u91ca\u3002</p>"},{"location":"study/OpenHarmony/2.OHIDE%E5%BC%80%E5%8F%91/#252","title":"2.5.2 \u7f16\u8bd1","text":"<p>\u70b9\u51fbBuild\u5373\u53ef\u7f16\u8bd1\uff0c\u82e5\u7531\u5de5\u5177\u7f3a\u5931\u5219\u70b9\u51fb\u5de5\u7a0b\u914d\u7f6e\u9009\u62e9\u7f3a\u5931\u5de5\u5177\u94fe\u4f1a\u81ea\u52a8\u4e0b\u8f7d\uff0c\u4e00\u822c\u7b2c\u4e00\u6b21\u4e0d\u4f1a\u51fa\u9519\u3002</p> <p></p>"},{"location":"study/OpenHarmony/2.OHIDE%E5%BC%80%E5%8F%91/#253","title":"2.5.3 \u70e7\u5f55","text":"<p>DevEco Device Tool\u5de6\u4e0b\u89d2\u67e5\u770b\u8fde\u63a5\u72b6\u6001\uff0c\u82e5\u672a\u8fde\u63a5\u5219\u70b9\u51fb\u8fde\u63a5\u6309\u952e\u3002</p> <ul> <li>\u5982\u679cLocal PC\u53f3\u8fb9\u8fde\u63a5\u6309\u94ae\u4e3a\uff0c\u5219\u8fdc\u7a0b\u8ba1\u7b97\u673a\u4e0e\u672c\u5730\u8ba1\u7b97\u673a\u4e3a\u5df2\u8fde\u63a5\u72b6\u6001\uff0c\u4e0d\u9700\u8981\u6267\u884c\u5176\u4ed6\u64cd\u4f5c\u3002</li> <li>\u5982\u679cLocal PC\u53f3\u8fb9\u8fde\u63a5\u6309\u94ae\u4e3a\uff0c\u5219\u70b9\u51fb\u7eff\u8272\u6309\u94ae\u8fdb\u884c\u8fde\u63a5\u3002\u8fde\u63a5\u65f6DevEco Device Tool\u4f1a\u91cd\u542f\u670d\u52a1\uff0c\u56e0\u6b64\u8bf7\u4e0d\u8981\u5728\u4e0b\u8f7d\u6e90\u7801\u6216\u6e90\u7801\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u8fde\u63a5\uff0c\u5426\u5219\u4f1a\u4e2d\u65ad\u4efb\u52a1\u3002</li> </ul> <p></p> <p>\u8fde\u63a5\u4ee5\u540e\u53ef\u4ee5\u770b\u5230\u5de5\u5177\u94fe\u662f\u5b8c\u6574\u7684\uff0c\u6240\u4ee5\u4e0a\u4e00\u6b65\u7f16\u8bd1\uff0c\u6ca1\u95ee\u9898\u3002</p> <p></p> <p>\u9009\u62e9\u70e7\u5f55\u7aef\u53e3\uff0c\u786e\u4fdd\u81ea\u5df1\u5df2\u7ecf\u5b89\u88c5\u76f8\u5173\u5f00\u53d1\u677f\u7684\u4e32\u53e3\u9a71\u52a8\uff0c\u5176\u4ed6\u9ed8\u8ba4\u5373\u53ef\u3002</p> <p></p> <p>\u70b9\u51fbUpload\u70e7\u5f55\uff0c\u6839\u636e\u7ec8\u7aef\u63d0\u793a\u6309\u4e00\u4e0b\u5f00\u53d1\u677f\u7684 \u590d\u4f4d\u952e</p> <p></p> <p>\u70e7\u5f55\u6210\u529f\uff01</p> <p></p>"},{"location":"study/OpenHarmony/2.OHIDE%E5%BC%80%E5%8F%91/#254","title":"2.5.4 \u8fd0\u884c\u67e5\u770b\u7a0b\u5e8f","text":"<p>\u6253\u5f00\u4e32\u53e3\u68c0\u6d4b\u5668\uff0c\u5e76\u590d\u4f4d\u5f00\u53d1\u677f\u3002</p> <p></p> <p>\u5728\u4e32\u53e3\u4e2d\u7aef\u4f9d\u6b21\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\uff0c\u6ce8\u610f\u547d\u4ee4\u524d\u540e\u5747\u4e0d\u53ef\u4ee5\u6709\u591a\u4f59\u7a7a\u683c\uff0c\u8fd4\u56deok\u5373\u5355\u4e2a\u547d\u4ee4\u6267\u884c\u6b63\u786e\u3002</p> Text Only<pre><code>AT+STARTSTA             # \u542f\u52a8STA\u6a21\u5f0f\nAT+SCAN                     # \u626b\u63cf\u5468\u8fb9AP\nAT+SCANRESULT               # \u663e\u793a\u626b\u63cf\u7ed3\u679c\nAT+CONN=\"OpenHarmony\",,2,\"123456789\" # \u8fde\u63a5\u6307\u5b9aAP(\u4fee\u6539\u81ea\u5df1\u70ed\u70b9\u5373\u53ef)\nAT+STASTAT                  # \u67e5\u770b\u8fde\u63a5\u7ed3\u679c\nAT+DHCP=wlan0,1             # \u901a\u8fc7DHCP\u5411AP\u8bf7\u6c42wlan0\u7684IP\u5730\u5740\nAT+IFCFG                    # \u67e5\u770b\u5f00\u53d1\u677f\u7684IP\u5730\u5740\nAT+PING=www.baidu.com\n</code></pre> <p>AT+CONN=\"\",,,\"passwd\" <ul> <li>ssid\uff0cpasswd\u4e3a\u70ed\u70b9\u540d\u79f0\u5bc6\u7801\u3002</li> <li>bssid\u4e3a\u70ed\u70b9\u7684MAC\u5730\u5740\u3002</li> <li>auth_type\u4e3a\u8ba4\u8bc1\u65b9\u5f0f<ul> <li>0\u5373OPEN</li> <li>1\u5373WEP\u52a0\u5bc6</li> <li>2\u5373WPA2_PSK\u52a0\u5bc6</li> <li>3\u5373WPA\u548cWPA2\u6df7\u5408\u52a0\u5bc6</li> </ul> </li> </ul> <p>\u5b8c\u6210\u6700\u540e\u4e00\u6b65\uff0c\u5373WLAN\u6a21\u7ec4\u8054\u7f51\u6210\u529f\uff1a</p> <p></p> <p>\u518d\u6b21\u590d\u4f4d\u53ef\u4ee5\u770b\u5230\u8f93\u51fa\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/","title":"\u7b2c\u4e09\u7ae0 \u7f16\u8bd1\u539f\u7406","text":""},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#31","title":"3.1 \u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf","text":"<p>\u57fa\u4e8e\u8f7b\u91cf\u7cfb\u7edf</p>"},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#311","title":"3.1.1 \u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf\u7b80\u4ecb","text":"<ol> <li>OpenHarmony\u57fa\u4e8egn\u548cninja\uff0c\u4ee5\u652f\u6301\u7ec4\u4ef6\u5316\u5f00\u53d1\u4e3a\u76ee\u6807\u3002</li> <li>\u652f\u6301\u72ec\u7acb\u6784\u5efa\u7ec4\u4ef6\u3001\u5f00\u53d1\u677f\u3001\u7ec4\u4ef6\u62fc\u63a5\u7684\u4ea7\u54c1\u3002</li> </ol> Note <p>\u5173\u4e8e\u7ec4\u4ef6\u8fd9\u4e2a\u540d\u79f0\uff0c\u6211\u67e5\u770b\u5b98\u7f51\u4e3a\u90e8\u4ef6\uff0c\u90fd\u662f\u6307component\uff0c\u7cfb\u7edf\u6700\u5c0f\u529f\u80fd\u5355\u5143\u3002</p> <p>\u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf\u7528\u5230\u7684\u76f8\u5173\u57fa\u7840\u6982\u5ff5</p> \u540d\u79f0 \u6982\u5ff5 \u5b50\u7cfb\u7edf \u5b50\u7cfb\u7edf\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u7ec4\u4ef6\u6784\u6210\u3002 \u7ec4\u4ef6 \u7ec4\u4ef6\u662f\u4e00\u4e2a\u53ef\u590d\u7528\u3001\u53ef\u914d\u7f6e\u3001\u53ef\u88c1\u526a\u7684\u7cfb\u7edf\u6700\u5c0f\u529f\u80fd\u5355\u5143\u3002 ninja ninja\u662f\u4e00\u4e2a\u4e13\u6ce8\u901f\u5ea6\u7684\u5c0f\u578b\u7684\u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf\u3002 gn gn\u5168\u79f0\u4e3a \"generate ninja\"\uff0c\u662f\u4e00\u4e2a\u73b0\u4ee3\u5316\u7f16\u8bd1\u6784\u5efa\u5de5\u5177\u3002 hb hb\u662fOpenHarmony\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u7528\u4e8e\u6267\u884c\u7f16\u8bd1\u547d\u4ee4\u3002 Note <p>\u8054\u7cfb\u4e00\u4e0b\u5e38\u89c1\u7684\u5de5\u5177\u4f1a\u66f4\u597d\u7406\u89e3\uff0c\u6bd4\u5982\u5f53\u6211\u4eec\u4f7f\u7528STM32\u7684Cmake\u5f00\u53d1\u65b9\u5f0f\u65f6\uff0c\u6211\u4eec\u7684\u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf\u4f7f\u7528\u7684\u5c31\u662fCamke\u548cninja\uff0c\u6b64\u65f6Camke\u5c31\u662f\u4e0egn\u4e00\u6837\u7684\u4f5c\u7528\u3002</p> <p>\u5173\u4e8e\u7cfb\u7edf\u3001\u5b50\u7cfb\u7edf\u3001\u7ec4\u4ef6\u7684\u5173\u7cfb\u5982\u4e0b\u56fe\uff0c\u5176\u4e2d\u5b50\u7cfb\u7edf\u548c\u7ec4\u4ef6\u652f\u6301 \u88c1\u526a \u3002</p> <p></p> <p><code>build/lite</code>\u662f\u8f7b\u91cf\u7ea7\u8bbe\u5907\uff08\u5982 IoT \u8bbe\u5907\uff09\u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf\u7684\u6838\u5fc3\u90e8\u5206\uff0c\u76ee\u5f55\u4e3b\u8981\u5185\u5bb9\u5982\u4e0b\uff1a</p> Text Only<pre><code>build/lite            \n\u251c\u2500\u2500 components        # \u7ec4\u4ef6\u63cf\u8ff0\u6587\u4ef6\n\u251c\u2500\u2500 config            # \u7f16\u8bd1\u914d\u7f6e\u6587\u4ef6\n|   \u251c\u2500\u2500 component     # \u7ec4\u4ef6\u76f8\u5173\u6a21\u677f\u5b9a\u4e49\n|   \u251c\u2500\u2500 kernel        # \u5185\u6838\u7684\u7f16\u8bd1\u914d\u7f6e\u53c2\u6570\n|   \u2514\u2500\u2500 subsystem     # \u5b50\u7cfb\u7edf\u7684\u7f16\u8bd1\u914d\u7f6e\u6a21\u677f\n\u251c\u2500\u2500 figures           # readme\u7684\u56fe\u7247\n\u251c\u2500\u2500 hb                # hb\u7684pip\u5b89\u88c5\u5305\u6e90\u7801\n\u251c\u2500\u2500 make_rootfs       # \u6587\u4ef6\u7cfb\u7edf\u955c\u50cf\u5236\u4f5c\u811a\u672c\n\u251c\u2500\u2500 ndk               # Native API\u76f8\u5173\u7f16\u8bd1\u811a\u672c\u4e0e\u914d\u7f6e\u53c2\u6570\n\u251c\u2500\u2500 testfwk           # \u6d4b\u8bd5\u7f16\u8bd1\u6846\u67b6\n\u2514\u2500\u2500 toolchain         # \u7f16\u8bd1\u5de5\u5177\u94fe\u914d\u7f6e\n</code></pre> <p>\u5728\u8f7b\u91cf\u7cfb\u7edf\u4e2d\uff0c\u4e00\u4e2a\u7ec4\u4ef6\u4e0d\u80fd\u5355\u72ec\u7f16\u8bd1\uff0c\u5fc5\u987b\u52a0\u5165\u4e00\u4e2a\u4ea7\u54c1\u6216\u5f00\u53d1\u677f\u65b9\u6848\u3002\u5173\u4e8e\u524d\u9762\u7528\u5230\u7684\u7f16\u8bd1\u6307\u4ee4\uff1a</p> <ul> <li><code>hb set</code>\uff0c\u7528\u4e8e\u9009\u62e9OpenHarmony\u7684\u6e90\u7801\u76ee\u5f55\u548c\u8981\u7f16\u8bd1\u7684\u76ee\u6807\u4fdd\u5b58\u81f3\u76f8\u5e94\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u3002</li> </ul> <ul> <li><code>hb build</code>\uff0c\u7ecf\u5386\u4e00\u4e2a\u8f83\u4e3a\u590d\u6742\u7684\u8fc7\u7a0b<ol> <li>\u8bfb\u53d6\u7f16\u8bd1\u914d\u7f6e\u3002\u6839\u636e\u4ea7\u54c1\u9009\u62e9\u7684\u5f00\u53d1\u677f\uff0c\u8bfb\u53d6\u5f00\u53d1\u677f\u7684<code>config.gni</code>\u6587\u4ef6\u3002</li> <li>\u8c03\u7528gn\u3002\u751f\u6210\u4ece\u4ea7\u54c1\u89e3\u51b3\u65b9\u6848\u7684<code>out</code>\u76ee\u5f55\u548c<code>ninja</code>\u6587\u4ef6\u3002</li> <li>\u8c03\u7528ninja\u3002\u4e5f\u5c31\u662f\u8c03\u7528\u201c<code>ninja -C out/board/product</code>\u201d\u547d\u4ee4\u542f\u52a8\u7f16\u8bd1\u3002</li> <li>\u7cfb\u7edf\u955c\u50cf\u6587\u4ef6\u6253\u5305\u3002\u5c31\u662f\u5c06\u7ec4\u4ef6\u7f16\u8bd1\u4ea7\u7269\u8fdb\u884c\u6253\u5305\uff0c\u8bbe\u7f6e\u6587\u4ef6\u7684\u5c5e\u6027\u548c\u6743\u9650\uff0c\u5236\u4f5c\u6587\u4ef6\u7cfb\u7edf\u7684\u955c\u50cf\u6587\u4ef6\u3002</li> </ol> </li> </ul> <p>\u5173\u4e8e\u7cfb\u7edf\u955c\u50cf\u6587\u4ef6\u6253\u5305\u7b80\u5355\u7406\u89e3\u5c31\u662f\u751f\u6210<code>.bin</code>\u4e8c\u8fdb\u5236\u70e7\u5f55\u6587\u4ef6\u3002</p>"},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#312","title":"3.1.2 \u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf\u7684\u914d\u7f6e\u89c4\u5219","text":"Danger <p>\u8fd9\u91cc\u5f88\u91cd\u8981\u4e5f\u5f88\u96be\uff0c\u82e5\u6b64\u90e8\u5206\u4e0d\u7406\u89e3\uff0c\u5efa\u8bae\u8d2d\u4e70\u4e66\u7c4d\u9605\u8bfb\u3002</p>"},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#1","title":"1. \u6e90\u7801\u7684\u547d\u540d\u89c4\u5219","text":"<ol> <li>\u4e00\u4e2a\u7ec4\u4ef6\u4e00\u4e2a\u5355\u72ec\u7684\u6587\u4ef6\u5939\u3002</li> <li>\u7ec4\u4ef6\u6e90\u7801\u5206\u4e3a\u4e09\u5c42\uff0c\u6700\u5916\u5c42\u4e3a\u9886\u57df\uff0c\u4e5f\u79f0\u4e3a\u5b50\u7cfb\u7edf\u96c6\uff0c\u5185\u5c42\u4f9d\u6b21\u4e3a\u5b50\u7cfb\u7edf\u548c\u7ec4\u4ef6</li> </ol>"},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#2","title":"2. \u6e90\u7801\u76ee\u5f55\u6811\u7684\u6784\u5efa\u89c4\u5219","text":"<ol> <li>\u7ec4\u4ef6\u7684\u76ee\u5f55\u7ed3\u6784\u5e94\u5982\u4e0b\uff1a</li> </ol> Text Only<pre><code>component\n\u251c\u2500\u2500 interfaces       # \u63a5\u53e3\n|   \u251c\u2500\u2500 innerkits    # \u7cfb\u7edf\u5185\u63a5\u53e3\uff0c\u4f9b\u7ec4\u4ef6\u5f00\u53d1\u8005\u4f7f\u7528\n|   \u2514\u2500\u2500 kits         # \u5e94\u7528\u63a5\u53e3\uff0c\u4f9b\u5e94\u7528\u5f00\u53d1\u8005\u4f7f\u7528\n\u251c\u2500\u2500 frameworks       # framework\u7684\u5b9e\u73b0\n\u251c\u2500\u2500 services         # service\u7684\u5b9e\u73b0\n\u2514\u2500\u2500 BUILD.gn         # \u7ec4\u4ef6\u7684\u7f16\u8bd1\u811a\u672c\n</code></pre> <ol> <li>\u4ee5IOT\u5916\u56f4\u8bbe\u5907\u63a7\u5236\u7ec4\u4ef6\u4e3a\u4f8b</li> </ol> <p>IOT\u5916\u56f4\u8bbe\u5907\u63a7\u5236 \u7ec4\u4ef6 \u4ece\u5c5e\u4e8eIOT\u4e13\u7528\u786c\u4ef6\u670d\u52a1 \u5b50\u7cfb\u7edf \uff0cIOT\u4e13\u7528\u786c\u4ef6\u670d\u52a1\u5b50\u7cfb\u7edf\u53c8\u4ece\u5c5e\u4e8e\u786c\u4ef6\u670d\u52a1 \u5b50\u7cfb\u7edf\u96c6 \u3002</p> <ul> <li>\u786c\u4ef6\u670d\u52a1\u5b50\u7cfb\u7edf\u96c6\u7684\u4f4d\u7f6e\u5728\u6e90\u7801\u7684<code>base</code>\u76ee\u5f55\u3002</li> <li>IOT\u4e13\u7528\u786c\u4ef6\u670d\u52a1\u5b50\u7cfb\u7edf\u7684\u4f4d\u7f6e\u5728<code>base\\iot_hardware</code>\u76ee\u5f55\u3002</li> <li>IOT\u5916\u56f4\u8bbe\u5907\u63a7\u5236\u7ec4\u4ef6\u4f4d\u7f6e\u5c31\u5728<code>base\\iot_hardware\\peripheral</code>\u76ee\u5f55\u3002</li> </ul> <p></p> <p>\u7531\u6b64\u9886\u57df\u5373\u5b50\u7cfb\u7edf\u96c6\u3001\u5b50\u7cfb\u7edf\u3001\u7ec4\u4ef6\u7684\u76ee\u5f55\u7ed3\u6784\u5c31\u5f88\u660e\u4e86\u4e86\u3002 \u8fdb\u4e00\u6b65\u5256\u6790\u76ee\u5f55\uff0c\u5728<code>interfaces</code>\u4e0b\u6709<code>kits</code>\u76ee\u5f55\u63d0\u4f9b\u4e86\u5e94\u7528\u63a5\u53e3\uff0c\u4f9b\u5e94\u7528\u5f00\u53d1\u8005\u4f7f\u7528\uff1b\u6ce8\u610f<code>BUILD.gn</code>\u4f4d\u4e8e\u7ec4\u4ef6<code>peripheral</code>\u7684\u6839\u76ee\u5f55\u4e0b\uff0c\u5373\u4e3a\u8fd9\u4e2a\u7ec4\u4ef6\u7684\u7f16\u8bd1\u811a\u672c\u3002</p>"},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#3","title":"3. \u7ec4\u4ef6\u7684\u5b9a\u4e49","text":"<ol> <li>\u65b0\u5efa\u597d\u4e00\u4e2a\u7ec4\u4ef6\u540e\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5176\u5b9a\u4e49\u5230OpenHarmony\u7cfb\u7edf\u4e2d\u3002\u800c\u7ec4\u4ef6\u5b9a\u4e49\u7684\u4f4d\u7f6e\u5c31\u5728<code>build\\lite\\components</code>\u76ee\u5f55\u4e0b\u7684<code>.json</code>\u6587\u4ef6\u3002</li> </ol> <ol> <li>\u7ec4\u4ef6\u5fc5\u987b\u6ce8\u518c\u5230 \u5b50\u7cfb\u7edf \u4e2d\u3002\u7136\u540e\uff0c\u9700\u8981\u628a\u7ec4\u4ef6\u7684\u57fa\u672c\u4fe1\u606f\u544a\u8bc9\u5b50\u7cfb\u7edf\u5c31\u5b8c\u6210\u4e86\u7ec4\u4ef6\u7684\u5b9a\u4e49\u3002</li> </ol> <p>\u4ee5\u4e0b\u5c31\u662f<code>iot_hardware.json</code>\u6587\u4ef6\u7684\u5168\u90e8\u5b9a\u4e49\uff1a</p> JSON<pre><code>{\n  \"components\": [                                               // \u5168\u90e8\u7ec4\u4ef6\n    {                                                           // \u5355\u4e2a\u7ec4\u4ef6\u5b9a\u4e49\n      \"component\": \"iot_controller\",                            // \u7ec4\u4ef6\u540d\u79f0\n      \"description\": \"Iot peripheral controller.\",              // \u7ec4\u4ef6\u7684\u529f\u80fd\u63cf\u8ff0\n      \"optional\": \"false\",                                      // \u7ec4\u4ef6\u662f\u5426\u4e3a\u6700\u5c0f\u7cfb\u7edf\u5fc5\u9009\n      \"dirs\": [ \"base/iot_hardware/peripheral\"],                // \u7ec4\u4ef6\u6e90\u7801\u76ee\u5f55\n      \"targets\": [\"//base/iot_hardware/peripheral:iothardware\"],// \u7ec4\u4ef6\u7f16\u8bd1\u76ee\u6807\n      \"output\": [],                                             // \u7ec4\u4ef6\u7f16\u8bd1\u8f93\u51fa\n      \"rom\": \"\",                                                // \u7ec4\u4ef6\u7684ROM\u5bb9\u91cf\n      \"ram\": \"\",                                                // \u7ec4\u4ef6\u7684RAM\u5bb9\u91cf\n      \"adapted_kernel\": [\"liteos_m\"],                           // \u7ec4\u4ef6\u5df2\u9002\u914d\u7684\u5185\u6838 \n      \"features\": [],                                           // \u7ec4\u4ef6\u53ef\u914d\u7f6e\u7684\u7279\u6027\n      \"deps\": {                                                 // \u7ec4\u4ef6\u4f9d\u8d56  \n        \"components\": [],                                       // \u7ec4\u4ef6\u4f9d\u8d56\u7684\u5176\u4ed6\u7ec4\u4ef6\n        \"third_party\": []                                       // \u7ec4\u4ef6\u4f9d\u8d56\u7684\u7b2c\u4e09\u65b9\u5f00\u6e90\u8f6f\u4ef6\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#4","title":"4. \u7ec4\u4ef6\u7684\u7f16\u8bd1\u76ee\u6807","text":"<ol> <li>\u7f16\u8bd1\u5165\u53e3\u5176\u5b9e\u5c31\u662f\u7ec4\u4ef6\u7684<code>targets</code>\u53c2\u6570\uff0c\u683c\u5f0f\u7ea6\u675f\u5982\u6b64<code>\"targets\":[\"\u8def\u5f84:\u76ee\u6807\u540d\u79f0\"]</code>\u3002\u5176\u4e2d \u8def\u5f84 \u4ee5\u7edd\u5bf9\u8def\u5f84\u8868\u793a\uff0c<code>//</code> \u5f00\u5934\uff0c\u4ee5\u6e90\u7801\u6839\u76ee\u5f55\u5f00\u59cb\uff0c \u76ee\u6807\u540d\u79f0 \u7531\u8def\u5f84\u4e0b\u7684<code>BUILD.gn</code>\u6587\u4ef6\u5b9a\u4e49\u3002</li> <li>OpenHarmony\u7684\u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf\u4f1a\u901a\u8fc7\u8fd9\u4e2a\u8def\u5f84\u627e\u5230\u76ee\u6807\u7684<code>BUILD.gn</code>\u6587\u4ef6\uff0c\u7136\u540e\u6839\u636e\u76ee\u6807\u540d\u79f0\uff0c\u6309\u7167\u8fd9\u90e8\u5206\u7684\u8981\u6c42\u8fdb\u884c\u7f16\u8bd1\u3002</li> </ol>"},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#5","title":"5. \u7ec4\u4ef6\u7684\u7f16\u8bd1\u811a\u672c","text":"<p>\u4ee5\u4e0b\u662f\u51e0\u79cd\u57fa\u7840\u8bed\u6cd5\uff0c\u66f4\u591a\u53ef\u53c2\u8003OpenHarmony\u5b98\u65b9\u5173\u4e8egn\u4ecb\u7ecd\u6216\u8c37\u6b4c\u5b98\u7f51\u3002</p> <ul> <li>\u7f16\u8bd1\u7ed3\u679c\u7c7b\u578b<ul> <li><code>executable</code>\uff0c\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff0c<code>.bin</code>\u6587\u4ef6\u3002</li> <li><code>shared_library</code>\uff0c\u751f\u6210\u52a8\u6001\u94fe\u63a5\u5e93\uff0c<code>.so</code>\u6587\u4ef6\u3002</li> <li><code>static_library</code>\uff0c\u751f\u6210\u9759\u6001\u94fe\u63a5\u5e93\uff0c<code>.a</code>\u6587\u4ef6\u3002</li> <li><code>source_set</code>\uff0c\u751f\u6210\u4e2d\u95f4\u76ee\u6807\uff0c\u4ec5\u7528\u4e8e\u7f16\u8bd1\u6e90\u6587\u4ef6\uff0c\u4e0d\u751f\u6210\u6700\u7ec8\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u6216\u5e93\u3002</li> <li><code>group</code>\uff0c\u805a\u5408\u591a\u4e2a\u76ee\u6807\uff0c\u65e0\u76f4\u63a5\u4ea7\u7269\u3002</li> </ul> </li> <li>\u76ee\u6807\uff1a\u7f16\u8bd1 \u76ee\u6807\u540d\u79f0 \uff0c\u4e0e<code>targets</code>\u53c2\u6570\u7684\u76ee\u6807\u540d\u79f0\u4e00\u81f4\uff0c\u5b98\u65b9\u5efa\u8bae\u4e0e\u7ec4\u4ef6\u540d\u79f0\u4e00\u81f4\u3002</li> <li>sources\uff1a\u9700\u8981\u7f16\u8bd1\u7684\u6e90\u6587\u4ef6\u5217\u8868\uff0c\u5373\u7531\u9017\u53f7\u9694\u5f00\u7684\u591a\u4e2a<code>.c</code>\u6587\u4ef6\u3002</li> <li>include_dirs\uff1a\u5934\u6587\u4ef6\u7684\u8def\u5f84\u5217\u8868\uff0c\u5373\u9017\u53f7\u9694\u5f00\u7684\u5934\u6587\u4ef6\u6240\u5728\u4f4d\u7f6e\uff0c\u7edd\u5bf9\u8def\u5f84\u6216\u76f8\u5bf9\u8def\u5f84\u3002</li> </ul> <p><code>BUILD.gn</code>\u6a21\u677f</p> Text Only<pre><code>\u7c7b\u578b(\"\u76ee\u6807\u540d\u79f0\"){\n    sources = [\n        \".c\",\n        \".c\",\n        ......\n    ]\n    include_dirs = [\n        \"\u8def\u5f84\",\n        \"\u8def\u5f84\",\n        ......\n    ]\n}\n</code></pre> <p>IOT\u5916\u56f4\u8bbe\u5907\u63a7\u5236\u7ec4\u4ef6\u4e3a\u4f8b\uff0c\u76ee\u6807\u5982\u4e0b<code>\"targets\": [\"//base/iot_hardware/peripheral:iothardware\"]</code>\uff0c\u627e\u5230\u4e00\u4e2a\u540d\u4e3a <code>iothardware</code> \u7684\u76ee\u6807\u7ec4\u3002</p> <p></p> <p>\u6ce8\u610f<code>$ohos_board_adapter_dir</code>\u4ee3\u6307\u7684\u76ee\u5f55\u4e3a<code>device\\hisilicon\\hispark_pegasus\\hi3861_adapter</code>\uff0c\u5219\u5728<code>device\\hisilicon\\hispark_pegasus\\hi3861_adapter\\hals\\iot_hardware\\wifiiot_lite:hal_iothardware</code>\u4e0b\u627e\u5230\u53e6\u4e00\u4e2a<code>BUILD.gn</code>\u6587\u4ef6\u3002\u7f16\u8bd1\u7c7b\u578b\u4e3a\u9759\u6001\u5e93\uff0c\u4f1a\u7f16\u8bd1<code>sources</code>\u4e0b\u7684<code>.c</code>\u6587\u4ef6\uff0c<code>include_dirs</code>\u4e3a\u4fdd\u62a4\u7684\u5934\u6587\u4ef6\u3002</p> <p></p> <p>\u518d\u4e3e\u4e00\u4e2a\u4f8b\u5b50<code>\"targets\": [\"//utils/native/lite/kv_store\"]</code>\uff0c\u627e\u5230<code>BUILG.gn</code>\u6587\u4ef6\u3002</p> <p></p> <p>\u8fd9\u4e2a\u811a\u672c\u901a\u8fc7<code>lite_component</code>\u7684<code>feature</code>\u65b9\u5f0f\u6307\u5411<code>utils\\native\\lite\\kv_store\\src</code>\u76ee\u5f55\u4e0b\u7684<code>BUILG.gn</code>\u6587\u4ef6</p> <p></p> <p>\u518d\u770b\u4e00\u4e2a\uff0c<code>`utils\\native\\lite</code>\u76ee\u5f55\u4e0b\u7684<code>BUILD.gn</code>\u6587\u4ef6</p> <p></p> <p>\u8fd9\u4e2a\u7f16\u8bd1\u811a\u672c\u8d1f\u8d23\u6574\u4e2a<code>lite</code>\u5b50\u7cfb\u7edf\u7684\u7f16\u8bd1\uff0c\u901a\u8fc7<code>subsystem_components</code>\u6307\u5411\u7ec4\u4ef6\uff0c\u5176\u4e2d<code>kv_store:kv_store</code>\u4fbf\u662f\u4e0a\u4e00\u4e2a\u793a\u4f8b\u6240\u770b\u7684\u7ec4\u4ef6\u3002</p>"},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#313","title":"3.1.3 \u5b50\u7cfb\u7edf\u6784\u5efa\u6a21\u578b","text":"<p>\u9664\u4e86<code>lite_component</code> \u548c <code>lite_subsystem</code> \uff0c\u4ece\u5b50\u7cfb\u7edf\u5b9a\u4e49\u8ffd\u8e2a\u8fd8\u53ef\u4ee5\u627e\u5230\u5982<code>group</code>\u8fd9\u6837\u7684\u5b9a\u4e49\u4e2a\u4eba\u7406\u89e3\u7528\u6cd5\u76f8\u4f3c\u3002\u7136\u66f4\u591a\u5173\u4e8egn\u8bed\u6cd5\u53ef\u4ee5\u53bb\u5b98\u65b9\u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf\u6307\u5bfc\u4e86\u89e3\u5b66\u4e60\u3002</p> <p></p>"},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#314","title":"3.1.4 \u82af\u7247\u89e3\u51b3\u65b9\u6848\u914d\u7f6e\u89c4\u5219","text":"<p>\u5b98\u65b9\u82af\u7247\u89e3\u51b3\u65b9\u6848\u914d\u7f6e\u89c4\u5219</p> <ul> <li>\u82af\u7247\u89e3\u51b3\u65b9\u6848\u662f\u6307\u57fa\u4e8e\u67d0\u6b3e\u5f00\u53d1\u677f\u7684\u5b8c\u6574\u89e3\u51b3\u65b9\u6848\uff0c\u5305\u542b\u9a71\u52a8\u3001\u8bbe\u5907\u4fa7\u63a5\u53e3\u9002\u914d\u3001\u5f00\u53d1\u677fsdk\u7b49\u3002</li> <li>\u82af\u7247\u89e3\u51b3\u65b9\u6848\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u90e8\u4ef6\uff0c\u6e90\u7801\u8def\u5f84\u89c4\u5219\u4e3a\uff1adevice/{\u5f00\u53d1\u677f}/{\u82af\u7247\u89e3\u51b3\u65b9\u6848\u5382\u5546}\u3002</li> <li>\u82af\u7247\u89e3\u51b3\u65b9\u6848\u90e8\u4ef6\u4f1a\u968f\u4ea7\u54c1\u9009\u62e9\u7684\u5f00\u53d1\u677f\u9ed8\u8ba4\u7f16\u8bd1\u3002</li> <li>\u82af\u7247\u89e3\u51b3\u65b9\u6848\u76ee\u5f55\u6811\u89c4\u5219\u5982\u4e0b\uff1a</li> </ul> Bash<pre><code>  device                                      \n  \u2514\u2500\u2500 board                                   \n      \u2514\u2500\u2500 company                            # \u82af\u7247\u89e3\u51b3\u65b9\u6848\u5382\u5546\n           \u2514\u2500\u2500  hispark_aries                # \u5f00\u53d1\u677f\u540d\u79f0\n                 \u251c\u2500\u2500 BUILD.gn                # \u7f16\u8bd1\u811a\u672c\n                 \u251c\u2500\u2500 hals                    # OS\u5357\u5411\u63a5\u53e3\u9002\u914d\n                 \u251c\u2500\u2500 linux                   # \u53ef\u9009\uff0clinux\u5185\u6838\u7248\u672c\n                 \u2502   \u2514\u2500\u2500 config.gni          # linux\u7248\u672c\u7f16\u8bd1\u914d\u7f6e\n                 \u2514\u2500\u2500 liteos_a                # \u53ef\u9009\uff0cliteos\u5185\u6838\u7248\u672c\n                     \u2514\u2500\u2500 config.gni          # liteos_a\u7248\u672c\u7f16\u8bd1\u914d\u7f6e\n</code></pre> <p>\u6ce8\u610f\uff1aconfig.gni\u4e3a\u5f00\u53d1\u677f\u7f16\u8bd1\u76f8\u5173\u7684\u914d\u7f6e\uff0c\u7f16\u8bd1\u65f6\u4f1a\u91c7\u7528\u8be5\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u53c2\u6570\u7f16\u8bd1\u6240\u6709OS\u90e8\u4ef6\uff0c\u7f16\u8bd1\u9636\u6bb5\u7cfb\u7edf\u5168\u5c40\u53ef\u89c1\u3002</p> <ul> <li>config.gni\u7684\u5173\u952e\u5b57\u6bb5\u4ecb\u7ecd\u5982\u4e0b\uff1a</li> </ul> Bash<pre><code>  kernel_type:            \u5f00\u53d1\u677f\u4f7f\u7528\u7684\u5185\u6838\u7c7b\u578b\uff0c\u4f8b\u5982\uff1a\u201cliteos_a\u201d, \u201cliteos_m\u201d, \u201clinux\u201d\u3002\n  kernel_version:         \u5f00\u53d1\u4f7f\u7528\u7684\u5185\u6838\u7248\u672c\uff0c\u4f8b\u5982\uff1a\u201c4.19\u201d\u3002\n  board_cpu:              \u5f00\u53d1\u677fCPU\u7c7b\u578b\uff0c\u4f8b\u5982\uff1a\u201ccortex-a7\u201d, \u201criscv32\u201d\u3002\n  board_arch:             \u5f00\u53d1\u82af\u7247arch, \u4f8b\u5982\uff1a \u201carmv7-a\u201d, \u201crv32imac\u201d\u3002\n  board_toolchain:        \u5f00\u53d1\u677f\u81ea\u5b9a\u4e49\u7684\u7f16\u8bd1\u5de5\u5177\u94fe\u540d\u79f0\uff0c\u4f8b\u5982\uff1a\u201cgcc-arm-none-eabi\u201d\u3002\u82e5\u4e3a\u7a7a\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u4e3aohos-clang\u3002\n  board_toolchain_prefix\uff1a\u7f16\u8bd1\u5de5\u5177\u94fe\u524d\u7f00\uff0c\u4f8b\u5982\uff1a\u201cgcc-arm-none-eabi\u201d\u3002\n  board_toolchain_type\uff1a  \u7f16\u8bd1\u5de5\u5177\u94fe\u7c7b\u578b\uff0c\u76ee\u524d\u652f\u6301gcc\u548cclang\u3002\u4f8b\u5982\uff1a\u201cgcc\u201d \uff0c\u201cclang\u201d\u3002\n  board_cflags\uff1a          \u5f00\u53d1\u677f\u914d\u7f6e\u7684c\u6587\u4ef6\u7f16\u8bd1\u9009\u9879\u3002\n  board_cxx_flags\uff1a       \u5f00\u53d1\u677f\u914d\u7f6e\u7684cpp\u6587\u4ef6\u7f16\u8bd1\u9009\u9879\u3002\n  board_ld_flags\uff1a        \u5f00\u53d1\u677f\u914d\u7f6e\u7684\u94fe\u63a5\u9009\u9879\u3002\n</code></pre>"},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#315","title":"3.1.5 \u4ea7\u54c1\u89e3\u51b3\u65b9\u6848\u914d\u7f6e\u89c4\u5219","text":"<p>\u5b98\u65b9\u4ea7\u54c1\u914d\u7f6e\u89c4\u5219</p> <p>\u4ea7\u54c1\u89e3\u51b3\u65b9\u6848\u4e3a\u57fa\u4e8e\u5f00\u53d1\u677f\u7684\u5b8c\u6574\u4ea7\u54c1\uff0c\u4e3b\u8981\u5305\u542b\u4ea7\u54c1\u5bf9OS\u7684\u9002\u914d\u3001\u90e8\u4ef6\u62fc\u88c5\u914d\u7f6e\u3001\u542f\u52a8\u914d\u7f6e\u548c\u6587\u4ef6\u7cfb\u7edf\u914d\u7f6e\u7b49\u3002\u4ea7\u54c1\u89e3\u51b3\u65b9\u6848\u7684\u6e90\u7801\u8def\u5f84\u89c4\u5219\u4e3a\uff1a vendor/{\u4ea7\u54c1\u89e3\u51b3\u65b9\u6848\u5382\u5546}/{\u4ea7\u54c1\u540d\u79f0} \u3002</p> <p>\u4ea7\u54c1\u89e3\u51b3\u65b9\u6848\u7684\u76ee\u5f55\u6811\u89c4\u5219\u5982\u4e0b\uff1a</p> Bash<pre><code>vendor                              \n\u2514\u2500\u2500 company                         # \u4ea7\u54c1\u89e3\u51b3\u65b9\u6848\u5382\u5546\n    \u251c\u2500\u2500 product                     # \u4ea7\u54c1\u540d\u79f0\n    \u2502   \u251c\u2500\u2500 init_configs\n    \u2502   \u2502     \u251c\u2500\u2500 etc               # init\u8fdb\u7a0b\u542f\u52a8\u914d\u7f6e\uff08\u53ef\u9009\uff0c\u4ec5linux\u5185\u6838\u9700\u8981\uff09\n    \u2502   \u2502     \u2514\u2500\u2500 init.cfg          # \u7cfb\u7edf\u670d\u52a1\u542f\u52a8\u914d\u7f6e\n    \u2502   \u251c\u2500\u2500 hals                    # \u4ea7\u54c1\u89e3\u51b3\u65b9\u6848OS\u9002\u914d\n    \u2502   \u251c\u2500\u2500 BUILD.gn                # \u4ea7\u54c1\u7f16\u8bd1\u811a\u672c\n    \u2502   \u2514\u2500\u2500 config.json             # \u4ea7\u54c1\u914d\u7f6e\u6587\u4ef6\n    \u2502   \u2514\u2500\u2500 fs.yml                  # \u6587\u4ef6\u7cfb\u7edf\u6253\u5305\u914d\u7f6e\n    \u2514\u2500\u2500 ......\n</code></pre> <p><code>vendor/company/product/config.json</code>\u4e3a\u7f16\u8bd1\u6784\u5efa\u7684\u4e3b\u5165\u53e3\uff0c\u5305\u542b\u4e86\u5f00\u53d1\u677f\u3001OS\u90e8\u4ef6\u548c\u5185\u6838\u7b49\u914d\u7f6e\u4fe1\u606f\u3002</p> <p>\u4ee5\u57fa\u4e8ehispark_taurus\u5f00\u53d1\u677f\u7684ipcamera\u4ea7\u54c1\u4e3a\u4f8b\uff0c\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff1a</p> Bash<pre><code>{\n     \"product_name\": \"ipcamera\",                       # \u4ea7\u54c1\u540d\u79f0\n     \"version\": \"3.0\",                                 # config.json\u7684\u7248\u672c\u53f7, \u56fa\u5b9a\"3.0\"\n     \"type\": \"small\",                                  # \u7cfb\u7edf\u7c7b\u578b, \u53ef\u9009[mini, small, standard]\n     \"ohos_version\": \"OpenHarmony 1.0\",                # \u9009\u62e9\u7684OS\u7248\u672c\n     \"device_company\": \"hisilicon\",                    # \u82af\u7247\u5382\u5546\n     \"board\": \"hispark_taurus\",                        # \u5f00\u53d1\u677f\u540d\u79f0\n     \"kernel_type\": \"liteos_a\",                        # \u9009\u62e9\u7684\u5185\u6838\u7c7b\u578b\n     \"kernel_version\": \"3.0.0\",                        # \u9009\u62e9\u7684\u5185\u6838\u7248\u672c\n     \"subsystems\": [                            \n       {\n         \"subsystem\": \"aafwk\",                         # \u9009\u62e9\u7684\u5b50\u7cfb\u7edf\n         \"components\": [\n           { \n             \"component\": \"ability\", \n             \"features\":[ \"enable_ohos_appexecfwk_feature_ability = true\" ] }   # \u9009\u62e9\u7684\u90e8\u4ef6\u548c\u90e8\u4ef6\u7279\u6027\u914d\u7f6e\n         ]\n       },\n       {\n        ......\n       }\n      ......\n      \u66f4\u591a\u5b50\u7cfb\u7edf\u548c\u90e8\u4ef6\n     }\n }\n</code></pre> <p>\u6211\u4eec\u901a\u8fc7<code>hb set</code>\u5c31\u662f\u9009\u62e9\u4ea7\u54c1\u89e3\u51b3\u65b9\u6848\u3002</p> <p></p>"},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#32","title":"3.2 \u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf\u7684\u4f7f\u7528","text":""},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#321-1","title":"3.2.1 \u6848\u4f8b1\uff1a\u65b0\u589e\u7ec4\u4ef6","text":"<p>\u5728<code>applications\\sample</code>\u76ee\u5f55\u65b0\u5efa<code>component_demo</code>\u6587\u4ef6\u5939\uff0c\u5728\u8be5\u6587\u4ef6\u5939\u4e0b\u65b0\u5efa<code>demo.c</code>\u548c<code>BUILD.gn</code>\u6587\u4ef6\uff0c\u5e76\u7f16\u5199\u4e0b\u5217\u6e90\u7801\uff1a</p> <p><code>demo.c</code></p> C<pre><code>/* \u65b0\u589e\u7ec4\u4ef6\u793a\u4f8b */\n\n# include &lt;stdio.h&gt;\n// OpenHarmony\u7279\u6709\u5934\u6587\u4ef6\n# include \"ohos_init.h\"\n\n// \u5b9a\u4e49\u51fd\u6570\nvoid entry(void)\n{\n    printf(\"This is a component.\\r\\n\");\n}\n\n// \u8ba9entry\u51fd\u6570\u5728\u7cfb\u7edf\u542f\u52a8\u7684\u7b2c\u56db\u9636\u6bb5\u5373system startup\u9636\u6bb5\uff0c\u4ee5\u4f18\u5148\u7ea7\u4e3a 2 \u7684\u7ea7\u522b\u6267\u884c\nSYS_RUN(entry);\n</code></pre> <p><code>BUILD.gn</code></p> C<pre><code>static_library(\"TestComponent\") {\n    sources = [\n        \"demo.c\"\n    ]\n    include_dirs = [\n        # \u4fdd\u62a4 \"ohos_init.h\" \u7b49\u5934\u6587\u4ef6\n        \"//utils/native/lite/include\",\n    ]\n}\n</code></pre> <p>\u5355\u72ec\u7f16\u8bd1\u8be5\u76ee\u6807</p> Bash<pre><code>hb build -f -T //applications/sample/component_demo:TestComponent\n</code></pre> <p>\u6dfb\u52a0\u7ec4\u4ef6\u5230\u5b50\u7cfb\u7edf\u4e2d\uff0c\u5728<code>\\build\\lite\\components\\applications.json</code>\u6587\u4ef6\uff1a</p> <p></p> <p>\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u6709\u6211\u4eec\u7684 \u201d\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u201c \u65f6\u6dfb\u52a0\u7684hello_world_app\u7ec4\u4ef6\uff0c\u53ef\u4ee5\u5728\u5176\u4e0b\u65b9\u7ee7\u7eed\u6dfb\u52a0\u6211\u4eec\u7684\u793a\u4f8b\u7ec4\u4ef6\uff1a</p> JSON<pre><code>{\n      \"component\": \"TestComponent\",\n      \"description\": \"A test component.\",\n      \"optional\": \"true\",\n      \"dirs\": [\n        \"applications/sample/component_demo\"\n      ],\n      \"targets\": [\n        \"//applications/sample/component_demo:TestComponent\"\n      ],\n      \"rom\": \"\",\n      \"ram\": \"\",\n      \"output\": [],\n      \"adapted_kernel\": [ \"liteos_m\" ],\n      \"features\": [],\n      \"deps\": {\n        \"components\": [],\n        \"third_party\": []\n      }\n    },\n</code></pre> <p>\u5c06\u7ec4\u4ef6\u914d\u7f6e\u5230\u4ea7\u54c1\u89e3\u51b3\u65b9\u6848\u4e2d\uff0c\u5373<code>hispark_pegasus</code>\uff0c\u5728<code>\\vendor\\hisilicon\\hispark_pegasus\\config.json</code>\u6587\u4ef6\uff0c\u627e\u5230<code>applications</code>\u5b50\u7cfb\u7edf\u3002</p> <p></p> <p>\u540c\u6837\u6709\u6211\u4eec \u201d\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u201c \u7684\u8eab\u5f71\uff0c\u5728\u4e0b\u65b9\u6dfb\u52a0\u6d4b\u8bd5\u7ec4\u4ef6\uff1a</p> JSON<pre><code>{ \"component\": \"TestComponent\", \"features\":[] },\n</code></pre> <p>\u5355\u72ec\u7f16\u8bd1\u7ec4\u4ef6</p> Bash<pre><code>hb build -f TestComponent\n</code></pre> <p>\u5355\u72ec\u7f16\u8bd1\u7684\u76ee\u6807\u6216\u7ec4\u4ef6\u4e0d\u80fd\u72ec\u7acb\u8fd0\u884c\uff0c\u4f46\u5bb9\u6613\u53d1\u73b0\u9519\u8bef\uff0c\u6211\u4eec\u9700\u8981\u7f16\u8bd1\u6574\u4e2a\u56fa\u4ef6\u624d\u80fd\u70e7\u5f55\u8fd0\u884c\u3002</p> Bash<pre><code>hb build -f\n</code></pre> <p>\u70e7\u5f55\u8fd0\u884c\uff0c\u7531\u4e8e\u6211\u6709\u4e00\u4e2a\u4e4b\u524d\u7684\u7a0b\u5e8f\u6ca1\u5173\uff0c\u6240\u4ee5\u4e0b\u65b9\u8fd8\u6709\u4e00\u4e2a<code>[love].</code>\u8f93\u51fa</p> <p></p>"},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#322-2","title":"3.2.2 \u6848\u4f8b2\uff1a\u65b0\u589e\u4ea7\u54c1\u89e3\u51b3\u65b9\u6848","text":"<p>\u5b98\u65b9\u65b0\u589e\u4ea7\u54c1\u7f16\u8bd1</p> <p>OpenHarmony\u7684\u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf\u652f\u6301\u82af\u7247\u89e3\u51b3\u65b9\u6848\u548c\u90e8\u4ef6\u7684\u7075\u6d3b\u62fc\u88c5\uff0c\u5f62\u6210\u5b9a\u5236\u5316\u7684\u4ea7\u54c1\u89e3\u51b3\u65b9\u6848\u3002\u5728  vendor/{\u4ea7\u54c1\u89e3\u51b3\u65b9\u6848\u5382\u5546}/{\u4ea7\u54c1\u540d\u79f0} \u76ee\u5f55\u4e0b\uff0c\u65b0\u5efa<code>vendor\\cim\\product1</code>\u76ee\u5f55\uff0c\u5728<code>vendor\\hisilicon\\hispark_pegasus</code>\u57fa\u7840\u4e0a\u4fee\u6539\uff0c\u590d\u5236<code>hispark_pegasus</code>\u4e0b\u7684<code>config.json</code>\u81f3<code>vendor\\cim\\product1</code>\u76ee\u5f55\uff0c\u6309\u9700\u88c1\u526a\u5b50\u7cfb\u7edf\u548c\u7ec4\u4ef6\uff0c\u5c06\u6700\u4e0b\u65b9\u53c2\u6570<code>product_adapter_dir</code>\u4fee\u6539\u4e3a <code>//vendor/cim/product1/hals</code>\u3002</p> JSON<pre><code>{\n    \"product_name\": \"cim_product\",\n    \"ohos_version\": \"OpenHarmony 1.0\",\n    \"device_company\": \"cim\",\n    \"board\": \"hispark_pegasus\",\n    \"kernel_type\": \"liteos_m\",\n    \"kernel_version\": \"\",\n    \"subsystems\": [\n      {\n        \"subsystem\": \"applications\",\n        \"components\": [\n          { \"component\": \"hello_world_app\", \"features\":[] }\n        ]\n      },\n      ...\n      {\n         \u66f4\u591a\u5b50\u7cfb\u7edf\u548c\u90e8\u4ef6\n      }\n    ],\n    \"third_party_dir\": \"\",\n    \"product_adapter_dir\": \"\"\n  }\n</code></pre> Danger <p>\u5b98\u65b9\u58f0\u660e  \uff1a\u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf\u7f16\u8bd1\u524d\u4f1a\u5bf9device_company\uff0cboard\uff0ckernel_type\uff0ckernel_version\u3001subsystem\u3001component\u5b57\u6bb5\u8fdb\u884c\u6709\u6548\u6027\u68c0\u67e5\uff0c\u5176\u4e2ddevice_company\uff0cboard\uff0ckernel_type\uff0ckernel_version\u5e94\u4e0e\u5df2\u77e5\u7684\u82af\u7247\u89e3\u51b3\u65b9\u6848\u5339\u914d\uff0csubsystem\u3001component\u5e94\u4e0e<code>build/lite/components</code>\u4e0b\u7684\u90e8\u4ef6\u63cf\u8ff0\u5339\u914d\u3002</p> <p>\u9002\u914dOS\u63a5\u53e3\uff0c\u5728\u4ea7\u54c1\u76ee\u5f55\u4e0b\u521b\u5efahals\u76ee\u5f55\uff0c\u5e76\u5c06\u4ea7\u54c1\u89e3\u51b3\u65b9\u6848\u5bf9OS\u9002\u914d\u7684\u6e90\u7801\u548c\u7f16\u8bd1\u811a\u672c\u653e\u5165hals\u76ee\u5f55\u4e0b\u3002\u53ef\u4ee5\u5c06\u590dhispark_pegasus\u4ea7\u54c1\u60f3\u5e94\u7684\u6587\u4ef6\u5939\uff0c</p> <p>\u65b0\u5efa<code>vendor\\cim\\product1\\BUILD.gn</code>\u6587\u4ef6\uff0c</p> Text Only<pre><code>group(\"product1\") {\n}\n</code></pre> <p>\u7f16\u8bd1\u4ea7\u54c1</p> Text Only<pre><code>hb set\nhb build -f \n</code></pre> <p></p> <p>\u70e7\u5f55\u8fd0\u884c\u4e00\u5207\u6b63\u5e38</p> <p></p>"},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#323-3","title":"3.2.3 \u6848\u4f8b3\uff1a\u7ec4\u4ef6/\u6a21\u5757\u5f00\u53d1","text":"<p>\u672c\u6848\u4f8b\u76ee\u6807\u662f\uff1a\u5b9e\u73b0\u5b50\u7cfb\u7edf<code>applications</code>\u7684<code>wifi_iot_sample_app</code>\u7ec4\u4ef6\u3002</p> <p></p> Danger <p>\u4e2a\u4eba\u7406\u89e3\uff1a\u5224\u65ad\u5b50\u7cfb\u7edf\u548c\u7ec4\u4ef6\u4e0d\u80fd\u5355\u770b\u6587\u4ef6\u5939\u5c42\u7ea7\uff0c\u5e94\u9996\u5148\u5173\u6ce8<code>build\\lite\\components</code>\u76ee\u5f55\u4e0b\u7684<code>.json</code>\u6587\u4ef6\u5747\u662f\u5b50\u7cfb\u7edf\uff0c\u6545application\u662f\u5b50\u7cfb\u7edf\u800c\u975e\u9886\u57df\u6216\u8005\u8bf4\u5b50\u7cfb\u7edf\u96c6\uff0c\u5728<code>application.json</code>\u4e2d\u5b9a\u4e49\u6709<code>wifi_iot_sample_app</code>\u7ec4\u4ef6\u3002</p> <p>\u5206\u6790APP\u67b6\u6784\uff1a</p> <p>zai</p>"},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#1-app","title":"1. APP\u67b6\u6784\u4e0e\u4ee3\u7801","text":"<p>\u65b0\u5efa<code>\\applications\\sample\\wifi-iot\\app\\gn_practice</code>\u76ee\u5f55\uff0c\u5728gn_practice\u6587\u4ef6\u5939\u4e0b\u65b0\u5efaapplication\u3001driver\u3001library\uff0c\u5206\u522b\u5b58\u653e\u5e94\u7528\u7a0b\u5e8f\u6a21\u5757\u3001\u9a71\u52a8\u6a21\u5757\u3001\u5e93\u6a21\u5757\uff0c\u6700\u7ec8\u76ee\u5f55\u7ed3\u6784\uff1a</p> Bash<pre><code>\u251c\u2500\u2500 application\n\u2502   \u251c\u2500\u2500 app_main.c\n\u2502   \u251c\u2500\u2500 component_1.c\n\u2502   \u251c\u2500\u2500 component_1.h\n\u2502   \u251c\u2500\u2500 component_2.c\n\u2502   \u2514\u2500\u2500 component_2.h\n\u251c\u2500\u2500 driver\n\u2502   \u251c\u2500\u2500 drv_1.c\n\u2502   \u2514\u2500\u2500 drv_1.h\n\u2514\u2500\u2500 library\n    \u251c\u2500\u2500 lib_1.c\n    \u251c\u2500\u2500 lib_1.h\n    \u251c\u2500\u2500 lib_2.c\n    \u2514\u2500\u2500 lib_2.h\n</code></pre> <p><code>component_1.c</code></p> C<pre><code># include \"component_1.h\"\n</code></pre> <p><code>component_2.c</code></p> C<pre><code># include \"component_2.h\"\n</code></pre> <p><code>drv_1.c</code></p> C<pre><code># include \"drv_1.h\"\n</code></pre> <p><code>lib_1.c</code></p> C<pre><code># include \"lib_1.h\"\n</code></pre> <p><code>lib_2.c</code></p> Text Only<pre><code># include \"lib_2.h\"\n</code></pre> <p><code>component_1.h</code>\u3001<code>component_2.h</code>\u3001<code>drv_1.h</code>\u3001<code>lib_1.h</code>\u3001<code>lib_2.h</code>\u5747\u4e3a\u7a7a\uff0c\u65e0\u4ee3\u7801\u3002</p> <p>\u6700\u540e\uff0c<code>app_main.c</code></p> C<pre><code># include &lt;stdio.h&gt;\n# include \"ohos_init.h\"\n# include \"component_1.h\"\n# include \"component_2.h\"\n# include \"../driver/drv_1.h\"\n# include \"../library/lib_1.h\"\n# include \"../library/lib_2.h\"\n\nvoid myapp(void){\n    printf(\"app runs!\\r\\n\");\n}\n\n// \u8ba9myapp\u5728\u7cfb\u7edf\u542f\u52a8\u7684\u7b2c\u516b\u4e2a\u9636\u6bb5\u4ee5\u4f18\u5148\u7ea7 2 \u6267\u884c\nAPP_FEATURE_INIT(myapp);\n</code></pre> <p>\u987a\u4fbf\u5c06\u5148\u524d\u7684\u201c\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u201d\u6267\u884c\u9636\u6bb5\u6539\u4e00\u4e0b\uff0c\u6700\u540e\u770b\u4e00\u4e0b\u6267\u884c\u6548\u679c</p> <p></p>"},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#2_1","title":"2. \u7f16\u8bd1\u811a\u672c","text":"<p>\u65b0\u5efa<code>\\applications\\sample\\wifi-iot\\app\\gn_practice\\application\\BUILD.gn</code>\u7f16\u8bd1\u811a\u672c\uff0c\u6e90\u7801\u5982\u4e0b\uff1a</p> Text Only<pre><code>static_library(\"gn_app\") {\n    sources = [\n        \"app_main.c\",\n        \"component_1.c\",\n        \"component_2.c\",\n    ]\n    include_dirs = [\n        \"../driver\",\n        \"../library\",\n        \"//utils/native/lite/include\",\n    ]\n    cflags = [ \"-Wno-unused-variable\" ]\n    cflags += [ \"-Wno-unused-but-set-variable\" ]\n    cflags += [ \"-Wno-unused-parameter\" ]\n}\n</code></pre> <p>\u770b\u5b8c\u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf\u90e8\u5206\u540e\uff0csources\u548cinclude_dirs\u90e8\u5206\u5e94\u8be5\u4e0d\u96be\u7406\u89e3\uff0c\u800c\u540e\u9762\u4e09\u884c\u662f\u7f16\u8bd1\u53c2\u6570\uff0c\u610f\u601d\u5206\u522b\u4e3a \u201c\u672a\u4f7f\u7528\u7684\u53d8\u91cf\u201d \u3001 \u201c\u4ee5\u521d\u59cb\u5316\u672a\u4f7f\u7528\u7684\u53d8\u91cf\u201d \u3001 \u201c\u672a\u4f7f\u7528\u7684\u53c2\u6570\u201d \uff0c\u8fd9\u4e09\u79cd\u60c5\u51b5\u9ed8\u8ba4\u7f16\u8bd1\u65b9\u5f0f\u5e76\u4e0d\u5141\u8bb8\u3002</p> <p>\u65b0\u5efa<code>\\applications\\sample\\wifi-iot\\app\\gn_practice\\driver\\BUILD.gn</code>\u7f16\u8bd1\u811a\u672c\uff0c\u6e90\u7801\u5982\u4e0b\uff1a</p> Text Only<pre><code>static_library(\"gn_driver\") {\n    sources = [\n        \"drv_1.c\",\n    ]\n    include_dirs = [\n        \"//utils/native/lite/include\",\n    ]\n}\n</code></pre> <p>\u65b0\u5efa<code>\\applications\\sample\\wifi-iot\\app\\gn_practice\\library\\BUILD.gn</code>\u7f16\u8bd1\u811a\u672c\uff0c\u6e90\u7801\u5982\u4e0b\uff1a</p> Text Only<pre><code>static_library(\"gn_library\") {\n    sources = [\n        \"lib_1.c\",\n        \"lib_2.c\"\n    ]\n    include_dirs = [\n        \"//utils/native/lite/include\",\n    ]\n}\n</code></pre> <p>\u4ee5\u4e0a\u7f16\u5199\u7684\u6a21\u5757\u662f\u57fa\u4e8e<code>wifi_iot_sample_app</code>\u7ec4\u4ef6\uff0c\u5728<code>\\build\\lite\\components\\applications.json</code>\u6587\u4ef6\u4e2d\u627e\u5230\u7ec4\u4ef6\u3002</p> <p></p> <p>\u901a\u8fc7\u53c2\u6570<code>targets</code>\u53ef\u4ee5\u770b\u5230\u7f16\u8bd1\u76ee\u6807\u662f<code>/applications/sample/wifi-iot/app\"</code>\u76ee\u5f55\u4e0b\u7684<code>BUILD.gn</code>\u6587\u4ef6\uff0c\u5b83\u7684\u9ed8\u8ba4\u4ee3\u7801\u4e3a\uff1a</p> Text Only<pre><code>import(\"//build/lite/config/component/lite_component.gni\")\n\nlite_component(\"app\") {\n    features = [\n        \"startup\",\n    ]\n}\n</code></pre> <p>\u5c06\u5176\u4fee\u6539\u4e3a\u5982\u4e0b\u5185\u5bb9\uff0c\u8fd9\u6837OpenHarmony\u7684\u7f16\u8bd1\u6784\u5efa\u7cfb\u7edf\u5c31\u4f1a\u627e\u5230\u5404\u4e2a\u6a21\u5757\u4e0b\u7684<code>BUILD.gn</code>\u6587\u4ef6\uff0c\u7136\u540e\u6839\u636e<code>BUILD.gn</code>\u6587\u4ef6\u76ee\u6807\u7f16\u8bd1\u3002</p> Text Only<pre><code>import(\"//build/lite/config/component/lite_component.gni\")\n\nlite_component(\"app\") {\n    features = [\n        \"gn_practice/application:gn_app\",\n        \"gn_practice/driver:gn_driver\",\n        \"gn_practice/library:gn_library\",\n    ]\n}\n</code></pre>"},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#3_1","title":"3. \u7f16\u8bd1\u70e7\u5f55\u8fd0\u884c","text":"<p>\u7f16\u8bd1\u4ea7\u54c1</p> Bash<pre><code>hb set\n</code></pre> Bash<pre><code>hb build -f\n</code></pre> <p>\u70e7\u5f55\u8fd0\u884c\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u6253\u5370\u4fe1\u606f\u6309\u7167\u7cfb\u7edf\u542f\u52a8\u9636\u6bb5\u6b63\u786e\u5212\u5206\u3002</p> <p></p>"},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#324","title":"3.2.4 \u7cfb\u7edf\u542f\u52a8\u9636\u6bb5\u4e0e\u5b8f\u547d\u4ee4","text":""},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#33","title":"3.3 \u8f7b\u91cf\u7cfb\u7edf\u7684\u6570\u636e\u6301\u4e45\u5316","text":""},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#331","title":"3.3.1 \u6570\u636e\u6301\u4e45\u5316\u7b80\u4ecb","text":"<p>\u6570\u636e\u6301\u4e45\u5316 \u662f\u6307\u5c06 \u5185\u5b58\u4e2d\u7684\u6570\u636e\u6a21\u578b \u8f6c\u6362\u4e3a \u5b58\u50a8\u6a21\u578b \uff0c\u4ee5\u53ca\u5c06 \u5b58\u50a8\u6a21\u578b \u8f6c\u6362\u56de \u5185\u5b58\u6570\u636e\u6a21\u578b \u7684\u8fc7\u7a0b\u3002\u5176\u4e3b\u8981\u76ee\u7684\u662f\u8ba9\u6570\u636e\u5728\u7a0b\u5e8f\u5173\u95ed\u6216\u7cfb\u7edf\u91cd\u542f\u540e\u4f9d\u7136\u53ef\u4ee5\u4fdd\u5b58\u548c\u6062\u590d\u3002</p> <p>\u6570\u636e\u6a21\u578b \uff1a\u901a\u5e38\u662f\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4f7f\u7528\u7684\u5bf9\u8c61\u6a21\u578b\u6216\u6570\u636e\u7ed3\u6784\uff08\u5982\u7c7b\u3001\u5bf9\u8c61\u3001\u5b57\u5178\u3001\u6570\u7ec4\uff09\u3002</p> <p>\u5b58\u50a8\u6a21\u578b \uff1a\u6307\u6570\u636e\u5728\u6301\u4e45\u5316\u4ecb\u8d28\u4e0a\u7684\u8868\u73b0\u5f62\u5f0f\uff0c\u53ef\u4ee5\u662f\uff1a</p> <ul> <li>\u5173\u7cfb\u6a21\u578b\uff08\u5982\u6570\u636e\u5e93\u4e2d\u7684\u8868\uff09</li> <li>XML\u3001JSON \u7b49\u683c\u5f0f\u5316\u6570\u636e</li> <li>\u952e\u503c\u5bf9\uff08\u5982 Redis\u3001\u5206\u5e03\u5f0f KV \u5b58\u50a8\uff09</li> <li>\u56fe\u5f62\u6a21\u578b\uff08\u5982\u56fe\u6570\u636e\u5e93\uff09</li> <li>\u4e8c\u8fdb\u5236\u6d41 \u6216 \u81ea\u5b9a\u4e49\u683c\u5f0f</li> </ul> <p>\u57fa\u672c\u64cd\u4f5c\uff08CRUD\uff09  \u6570\u636e\u6301\u4e45\u5316\u7684\u6838\u5fc3\u64cd\u4f5c\u5305\u62ec\uff1a</p> <ul> <li>Create \uff08\u521b\u5efa\uff09\uff1a\u5c06\u6570\u636e\u5b58\u50a8\u5230\u6301\u4e45\u5316\u4ecb\u8d28\u3002</li> <li>Read \uff08\u8bfb\u53d6\uff09\uff1a\u4ece\u6301\u4e45\u5316\u4ecb\u8d28\u52a0\u8f7d\u6570\u636e\u3002</li> <li>Update \uff08\u66f4\u65b0\uff09\uff1a\u4fee\u6539\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u3002</li> <li>Delete \uff08\u5220\u9664\uff09\uff1a\u79fb\u9664\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u3002</li> </ul> <p>\u269b\ufe0f\uff1a OpenHarmony \u7684\u8f7b\u91cf\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e24\u79cd\u6570\u636e\u6301\u4e45\u5316\u7684\u65b9\u6cd5\uff0c\u5373 \u952e\u503c\u5b58\u50a8 \u548c \u6587\u4ef6\u64cd\u4f5c \u3002</p>"},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#332","title":"3.3.2 \u952e\u503c\u5b58\u50a8\u4e0e\u6587\u4ef6\u64cd\u4f5c\u7b80\u4ecb","text":"<p>\u952e\u503c\u5b58\u50a8 \uff0c\u952e\u5373 key \uff0c\u503c\u5373 value \uff0c\u6240\u4ee5\u53c8\u79f0 KV\u5b58\u50a8 \u3002\u5176\u4e2d\uff0ckey\u6700\u5927\u4e3a 32 \u5b57\u8282\uff08\u5305\u542b\u5b57\u7b26\u4e32\u505c\u6b62\u7b26\uff09\uff0cvalue\u6700\u5927\u4e3a 128 \u5b57\u8282\uff08\u5305\u542b\u5b57\u7b26\u4e32\u505c\u6b62\u7b26\uff09\u3002</p> Danger <p>\u5728 OpenHarmony \u4e2d\uff0ckey\u662f\u6587\u4ef6\u540d\uff0c\u5c06value\u4fdd\u5b58\u5230\u5bf9\u5e94\u7684\u6587\u4ef6\u4e2d\u3002</p> <p>\u6587\u4ef6\u64cd\u4f5c \uff0c\u6587\u4ef6\u5185\u5bb9\u53ef\u4ee5\u662fXML\u3001JSON\u3001\u952e\u503c\u3001\u81ea\u5b9a\u4e49\u6570\u636e\u7ed3\u6784\u7b49\u3002</p> <p>\u952e\u503c\u5b58\u50a8\u548c\u6587\u4ef6\u64cd\u4f5c\u7ec4\u4ef6\u4f4d\u4e8e\u516c\u5171\u57fa\u7840\u5e93\u5b50\u7cfb\u7edf\uff0c\u5982\u56fe\u6240\u793a\uff1a</p> <p></p>"},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#333","title":"3.3.3 \u952e\u503c\u5b58\u50a8\u6848\u4f8b","text":"<p>\u952e\u503c\u5b58\u50a8\u76f8\u5173API\uff1a</p> API\u540d\u79f0 \u63cf\u8ff0 <code>UtilsGetValue</code> \u4ece\u6587\u4ef6\u7cfb\u7edf\u6216\u7f13\u5b58\u4e2d\u8bfb\u53d6\u4e0ekey\u60f3\u5339\u914d\u7684value <code>UtilsSetValue</code> \u4ece\u6587\u4ef6\u7cfb\u7edf\u6216\u7f13\u5b58\u4e2d\u66f4\u65b0\u6216\u6dfb\u52a0\u4e0ekey\u5339\u914d\u7684value <code>UtilsDeleteValue</code> \u4ece\u6587\u4ef6\u7cfb\u7edf\u6216\u7f13\u5b58\u4e2d\u5220\u9664\u4e0e\u53ef\u4ee5\u5339\u914d\u7684value \u6ce8\u610f <p>\u8fd9\u4e00\u6bb5\u4e66\u4e2d\u660e\u786e\u6307\u51fa\u5e0c\u671b\u5927\u5bb6\u5b66\u4f1a\u9605\u8bfb\u6e90\u7801\u548c\u67e5\u770bAPI\uff0c\u5176\u5b9e\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u4f1a\u67e5\u770b\u51fd\u6570\u7684\u5b9a\u4e49\u548c\u58f0\u660e\u4f4d\u7f6e\uff0c\u9605\u8bfb\u51fd\u6570\u6ce8\u91ca\uff0c\u83b7\u5f97\u51fd\u6570\u7684\u53c2\u6570\u3001\u8fd4\u56de\u503c\u3001\u57fa\u672c\u529f\u80fd\u7b49\u4fe1\u606f\u3002</p> <p>\u6211\u7ed3\u5408STM32HAL\u5e93\u7684\u4ee3\u7801\u548cOpenHarmony\u6e90\u7801\u8c08\u4e00\u8c08\u81ea\u5df1\u7684\u7ecf\u9a8c\uff1a</p> <p>\u9996\u5148\uff0c\u6709\u4e00\u70b9\u4ee3\u7801\u89c4\u8303\u4e0d\u540c\uff0cSTM32\u7684\u51fd\u6570\u6ce8\u91ca\u5199\u5728 \u51fd\u6570\u7684\u5b9a\u4e49\u5904 \uff0c\u800cOpenHarmony\u7684\u51fd\u6570\u6ce8\u91ca\u5199\u5728 \u51fd\u6570\u58f0\u660e\u5904 \u3002</p> <p></p> <p>\u5728Vscode\u4e2d\u51fd\u6570\u4f4d\u7f6e\u53f3\u952e\uff0c\u8f6c\u5230\u58f0\u660e\uff1a</p> <p></p> <p>OpenHarmony\u6e90\u7801\u6ce8\u91ca\u4e0eSTM32\u7c7b\u4f3c\uff0c\u6240\u4ee5\u4e0d\u5728\u89e3\u91ca\uff0c\u81ea\u884c\u9605\u8bfb\u6e90\u7801\u7406\u89e3\u5404\u53c2\u6570\u3002</p> <p></p> <p>API\u8868\u683c\u4fbf\u662f\u6839\u636e\u6e90\u7801\u6ce8\u91ca\u6c47\u603b\uff0c\u800c\u975e\u7167\u642c\u4e66\u4e2d\uff0c\u6211\u4eec\u5e94\u66f4\u597d\u7684\u7406\u89e3\u82f1\u6587\u539f\u610f\uff0c\u7279\u522b\u662f\u50cfkey\u3001value\u8fd9\u79cd\u4e13\u4e1a\u672f\u8bed\u7ffb\u8bd1\u662f\u65e0\u6cd5\u6b63\u786e\u7ffb\u8bd1\u51fa\u6765\u7684\uff0c\u8fd9\u65f6\u6700\u540e\u5c31\u662f\u4e0d\u7ffb\u8bd1\uff0c\u6240\u4ee5\u57fa\u7840\u7684\u82f1\u8bed\u529f\u5e95\u662f\u5fc5\u987b\u7684\u3002</p> <p>\u7531\u4e8evalue\u548ckey\u6d89\u53ca\u5230\u5b57\u8282\u6570\uff0c\u8fd9\u91cc\u8865\u5145\u4e00\u70b9C\u8bed\u8a00\u57fa\u7840\uff1a</p> \u7c7b\u578b \u5b57\u8282\u6570\uff0832 \u4f4d\u7cfb\u7edf\uff09 \u5b57\u8282\u6570\uff0864 \u4f4d\u7cfb\u7edf\uff09 <code>char</code> 1 1 <code>int</code> 4 4 <code>float</code> 4 4 <code>double</code> 8 8 <code>long</code> 4 8 <code>long long</code> 8 8 \u6307\u9488\u7c7b\u578b 4 8 <p>\u6ce8\u610f\uff1a\u5b9e\u9645\u5927\u5c0f\u53ef\u80fd\u56e0\u7f16\u8bd1\u5668\u5b9e\u73b0\u6216\u7cfb\u7edf\u67b6\u6784\u800c\u5f02\uff0c\u5355\u7247\u673a\u591a\u4e3a32\u4f4d\uff0c\u53ef\u7528 <code>sizeof()</code> \u51fd\u6570\u68c0\u67e5\u3002</p> <p>\u6848\u4f8b\u76ee\u6807\uff1a\u82e5\u952e\u503c\u4e0d\u5b58\u5728\u5c31\u5199\u5165\u4e00\u4e2a\u952e\u503c\u5bf9\uff0c\u82e5\u5b58\u5728\u5219\u6253\u5370\u8fd9\u4e2a\u952e\u503c\u5bf9\u3002</p> <p><code>\\applications\\sample\\wifi-iot\\app</code>\u76ee\u5f55\u4e0b\u65b0\u5efakv_store_demo\u6587\u4ef6\u5939\uff0c\u5e76\u5728\u8be5\u6587\u4ef6\u5939\u4e0b\u65b0\u5efa<code>demo.c</code>\u548c<code>BUILD.gn</code>\u6587\u4ef6\uff0c\u6e90\u7801\u5982\u4e0b\uff1a</p> <p><code>demo.c</code></p> C<pre><code># include &lt;stdio.h&gt;\n# include \"ohos_init.h\"\n# include \"kv_store.h\"\nC\nconst char* key = \"name\";\nchar* value[32] = {};\n\n\nvoid kv_storeTest(void)\n{\n    int retGet = UtilsGetValue(key, value, 32);\n    if (retGet &lt; 0)\n    {\n        const char* valueToWrite = \"OpenHarmony.\";\n        int retSet = UtilsSetValue(key, valueToWrite);\n        printf(\"SetValue --&gt; result: %d\\n\", retSet);\n    }\n    else\n    {\n        printf(\"GetValue --&gt; result: %d value: %s\", retGet, value);\n    }\n\n}\n\n\nAPP_FEATURE_INIT(kv_storeTest);\n</code></pre> <p><code>BUILD.gn</code></p> C<pre><code>static_library(\"kv_store_demo\") {\n    sources = [\n        \"demo.c\",\n    ]\n    include_dirs = [\n        \"//utils/native/lite/include\",\n    ]\n}\n</code></pre> <p>\u4fee\u6539<code>\\applications\\sample\\wifi-iot\\app</code>\u76ee\u5f55\u4e0b\u7684<code>BUILD.gn</code>\u6587\u4ef6\uff1a</p> Bash<pre><code>import(\"//build/lite/config/component/lite_component.gni\")\n\nlite_component(\"app\") {\n    features = [\n        \"gn_practice/application:gn_app\",\n        \"gn_practice/driver:gn_driver\",\n        \"gn_practice/library:gn_library\",\n        \"kv_store_demo:kv_store_demo\",   # \u65b0\u589e\u5185\u5bb9\n    ]\n}\n</code></pre> <p>\u7f16\u8bd1\u70e7\u5f55\uff0c\u91cd\u542f\u5f00\u53d1\u677f\uff0c\u952e\u4e2d\u65e0\u6570\u636e\uff0c\u518d\u6b21\u91cd\u542f \u201copenhamony.\u201d\u88ab\u5199\u5165\uff0c\u4e14\u65ad\u7535\u4e0d\u4e22\u5931\u3002</p> <p></p> \u51e0\u70b9\u8bf4\u660e <p>\u5173\u4e8e\u6570\u636e\u5b9a\u4e49\u4e3a\u4ec0\u4e48\u662f<code>const char*</code>\u4e0d\u662f<code>char</code>\uff0c\u4e3a\u4ec0\u4e48\u662f<code>int</code>\u800c\u4e0d\u662f<code>uint16</code>\u7b49\uff0c\u5747\u662f\u6839\u636e\u6e90\u7801\u5b9a\u4e49\u7684\u5f62\u53c2\u51b3\u5b9a\u3002</p>"},{"location":"study/OpenHarmony/3.OH%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/#334","title":"3.3.4 \u6587\u4ef6\u64cd\u4f5c\u6848\u4f8b","text":"<p>\u5982\u679c\u4e0a\u4e00\u8282\u6ce8\u610f\u5230<code>kv_store.h</code>\u5934\u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u5c31\u4f1a\u53d1\u73b0\u8fd9\u8282\u9700\u8981\u7528\u5230\u7684<code>utils_file.h</code>\u5934\u6587\u4ef6\u548c\u5b83\u5728\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6545\u81ea\u884c\u9605\u8bfb\u6e90\u7801\u7406\u89e3\u51fd\u6570\u4f5c\u7528\u3002</p> <p>\u6848\u4f8b\u76ee\u6807\uff1a\u82e5\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5c31\u521b\u5efa\u6587\u4ef6\u3001\u5199\u5165\u5185\u5bb9\uff08ssid\u548cpasswd\uff09\uff0c\u82e5\u6587\u4ef6\u5b58\u5728\u5219\u8bfb\u53d6\u5185\u5bb9\u5e76\u5220\u9664\u6587\u4ef6\u3002</p> <p><code>\\applications\\sample\\wifi-iot\\app</code>\u76ee\u5f55\u4e0b\u65b0\u5efafile_demo\u6587\u4ef6\u5939\uff0c\u5e76\u5728\u8be5\u6587\u4ef6\u5939\u4e0b\u65b0\u5efa<code>demo.c</code>\u548c<code>BUILD.gn</code>\u6587\u4ef6\uff0c\u6e90\u7801\u5982\u4e0b\uff1a</p> <p><code>demo.c</code></p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;     \n#include \"ohos_init.h\" \n#include \"utils_file.h\" \n\n\nvoid file_demo(void)\n{\n    char filename[] = \"wifi_INFO\";\n    unsigned int fileslen=0;\n    int ret = UtilsFileStat(filename, &amp;fileslen);\n    if (ret == -1)\n    {\n        // \u521b\u5efa\u5199\u5165\u7684\u6570\u636e\n        const char* dataWrite= \"openharmony,123456789\";\n        printf(\"%s\u6587\u4ef6\u4e0d\u5b58\u5728\u3002\\n\", filename);\n        // \u6253\u5f00\u6587\u4ef6\n        int fd = UtilsFileOpen(filename, O_WRONLY_FS|O_CREAT_FS|O_TRUNC_FS, 0);\n        printf(\"OpenFile --&gt; result: %d\\n\", fd);\n        // \u5199\u5165\u6570\u636e\n        int data_len = UtilsFileWrite(fd, dataWrite, strlen(dataWrite));\n        printf(\"WriteFile --&gt; result: %d\\n\", data_len);\n        // \u5173\u95ed\u6587\u4ef6\n        UtilsFileClose(fd);\n    }\n    else\n    {\n        printf(\"%s\u6587\u4ef6\u5b58\u5728\u3002\\n\", filename);\n         // \u6253\u5f00\u6587\u4ef6\uff0c\u8bfb\u5199\u6a21\u5f0f\n        int fd = UtilsFileOpen(filename, O_RDWR_FS, 0);\n        printf(\"OpenFile --&gt; result: %d\\n\", fd);\n        // \u5b9a\u4f4d\u8bfb\u5199\u504f\u79fb\u91cf\n        ret = UtilsFileSeek(fd, 0, SEEK_SET_FS);\n        printf(\"SeekFile --&gt; result: %d\\n\", ret);\n        // \u8bfb\u53d6\u6570\u636e\n        char ssid[32] = {};\n        int data_len1 = UtilsFileRead(fd, ssid, 11);\n        printf(\"ReadFile --&gt; result: %d ssid: %s\\n\", data_len1, ssid);\n        // \u91cd\u65b0\u5b9a\u4f4d\u8bfb\u5199\u504f\u79fb\u91cf\n        ret = UtilsFileSeek(fd, 1, SEEK_CUR_FS);\n        printf(\"SeekFile --&gt; result: %d\\n\", ret);\n        // \u8bfb\u53d6\u6570\u636e\n        char passwd[32] = {};\n        int data_len2 = UtilsFileRead(fd, passwd, 9);\n        printf(\"ReadFile --&gt; result: %d passwd: %s\\n\", data_len2, passwd);\n        // \u5173\u95ed\u6587\u4ef6\n        UtilsFileClose(fd);\n\n        // \u5220\u9664\u6587\u4ef6\n        ret = UtilsFileDelete(filename);\n        printf(\"DeleteFile --&gt; result: %d\\n\", ret);\n    }\n\n\n}\n\n\nAPP_FEATURE_INIT(file_demo);\n</code></pre> <p><code>BUILD.gn</code></p> Bash<pre><code>static_library(\"file_demo\") {\n    sources = [\n        \"demo.c\",\n    ]\n    include_dirs = [\n        \"//utils/native/lite/include\",\n    ]\n}\n</code></pre> <p>\u4fee\u6539<code>\\applications\\sample\\wifi-iot\\app</code>\u76ee\u5f55\u4e0b\u7684<code>BUILD.gn</code>\u6587\u4ef6\uff1a</p> Bash<pre><code>import(\"//build/lite/config/component/lite_component.gni\")\n\nlite_component(\"app\") {\n    features = [\n        \"gn_practice/application:gn_app\",\n        \"gn_practice/driver:gn_driver\",\n        \"gn_practice/library:gn_library\",\n        \"kv_store_demo:kv_store_demo\",\n        \"file_demo:file_demo\",\n    ]\n}\n</code></pre> <p>\u7f16\u8bd1\u70e7\u5f55\u8fd0\u884c\uff0c\u590d\u4f4d\uff0c\u6587\u4ef6\u4e3a\u7a7a\uff0c\u5199\u5165\u6587\u4ef6\u3002</p> <p></p> <p>\u518d\u6b21\u590d\u4f4d\uff0c\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u3002</p> <p></p>"},{"location":"study/OpenHarmony/4.%E5%86%85%E6%A0%B8%E6%8E%A5%E5%8F%A3/","title":"\u7b2c\u56db\u7ae0 \u5185\u6838\u63a5\u53e3","text":""},{"location":"study/OpenHarmony/4.%E5%86%85%E6%A0%B8%E6%8E%A5%E5%8F%A3/#41","title":"4.1 \u5185\u6838\u6982\u8ff0","text":""},{"location":"study/OpenHarmony/4.%E5%86%85%E6%A0%B8%E6%8E%A5%E5%8F%A3/#411","title":"4.1.1 \u5185\u6838\u652f\u6301\u8bbe\u5907","text":"<p>OpenHarmony\u6309\u7167\u652f\u6301\u7684\u8bbe\u5907\u53ef\u5206\u4e3a\u5982\u4e0b\u51e0\u79cd\u7cfb\u7edf\u7c7b\u578b\uff1a</p> <ul> <li>\u8f7b\u91cf\u7cfb\u7edf\uff08mini system\uff09 \u9762\u5411MCU\u7c7b\u5904\u7406\u5668\u4f8b\u5982Arm Cortex-M\u3001RISC-V 32\u4f4d\u7684\u8bbe\u5907\uff0c\u786c\u4ef6\u8d44\u6e90\u6781\u5176\u6709\u9650\uff0c\u652f\u6301\u7684\u8bbe\u5907\u6700\u5c0f\u5185\u5b58\u4e3a128KiB\uff0c\u53ef\u4ee5\u63d0\u4f9b\u591a\u79cd\u8f7b\u91cf\u7ea7\u7f51\u7edc\u534f\u8bae\uff0c\u8f7b\u91cf\u7ea7\u7684\u56fe\u5f62\u6846\u67b6\uff0c\u4ee5\u53ca\u4e30\u5bcc\u7684IOT\u603b\u7ebf\u8bfb\u5199\u90e8\u4ef6\u7b49\u3002\u53ef\u652f\u6491\u7684\u4ea7\u54c1\u5982\u667a\u80fd\u5bb6\u5c45\u9886\u57df\u7684\u8fde\u63a5\u7c7b\u6a21\u7ec4\u3001\u4f20\u611f\u5668\u8bbe\u5907\u3001\u7a7f\u6234\u7c7b\u8bbe\u5907\u7b49\u3002</li> <li>\u5c0f\u578b\u7cfb\u7edf\uff08small system\uff09 \u9762\u5411\u5e94\u7528\u5904\u7406\u5668\u4f8b\u5982Arm Cortex-A\u7684\u8bbe\u5907\uff0c\u652f\u6301\u7684\u8bbe\u5907\u6700\u5c0f\u5185\u5b58\u4e3a1MiB\uff0c\u53ef\u4ee5\u63d0\u4f9b\u66f4\u9ad8\u7684\u5b89\u5168\u80fd\u529b\u3001\u6807\u51c6\u7684\u56fe\u5f62\u6846\u67b6\u3001\u89c6\u9891\u7f16\u89e3\u7801\u7684\u591a\u5a92\u4f53\u80fd\u529b\u3002\u53ef\u652f\u6491\u7684\u4ea7\u54c1\u5982\u667a\u80fd\u5bb6\u5c45\u9886\u57df\u7684IP Camera\u3001\u7535\u5b50\u732b\u773c\u3001\u8def\u7531\u5668\u4ee5\u53ca\u667a\u6167\u51fa\u884c\u57df\u7684\u884c\u8f66\u8bb0\u5f55\u4eea\u7b49\u3002</li> <li>\u6807\u51c6\u7cfb\u7edf\uff08standard system\uff09 \u9762\u5411\u5e94\u7528\u5904\u7406\u5668\u4f8b\u5982Arm Cortex-A\u7684\u8bbe\u5907\uff0c\u652f\u6301\u7684\u8bbe\u5907\u6700\u5c0f\u5185\u5b58\u4e3a128MiB\uff0c\u53ef\u4ee5\u63d0\u4f9b\u589e\u5f3a\u7684\u4ea4\u4e92\u80fd\u529b\u30013D GPU\u4ee5\u53ca\u786c\u4ef6\u5408\u6210\u80fd\u529b\u3001\u66f4\u591a\u63a7\u4ef6\u4ee5\u53ca\u52a8\u6548\u66f4\u4e30\u5bcc\u7684\u56fe\u5f62\u80fd\u529b\u3001\u5b8c\u6574\u7684\u5e94\u7528\u6846\u67b6\u3002\u53ef\u652f\u6491\u7684\u4ea7\u54c1\u5982\u9ad8\u7aef\u7684\u51b0\u7bb1\u663e\u793a\u5c4f\u3002</li> </ul> <p>OpenHarmony\u9488\u5bf9\u4e0d\u540c\u91cf\u7ea7\u7684\u7cfb\u7edf\uff0c\u4f7f\u7528\u4e86\u4e0d\u540c\u5f62\u6001\u7684\u5185\u6838\u3002\u8f7b\u91cf\u7cfb\u7edf\u3001\u5c0f\u578b\u7cfb\u7edf\u53ef\u4ee5\u9009\u7528LiteOS\uff1b\u5c0f\u578b\u7cfb\u7edf\u548c\u6807\u51c6\u7cfb\u7edf\u53ef\u4ee5\u9009\u7528Linux\u3002\u5176\u5bf9\u5e94\u5173\u7cfb\u5982\u4e0b\u8868\uff1a</p> <p>\u88681 \u7cfb\u7edf\u5173\u7cfb\u5bf9\u5e94\u8868</p> \u7cfb\u7edf\u7ea7\u522b \u8f7b\u91cf\u7cfb\u7edf \u5c0f\u578b\u7cfb\u7edf \u6807\u51c6\u7cfb\u7edf LiteOS-M \u221a \u00d7 \u00d7 LiteOS-A \u00d7 \u221a \u221a Linux \u00d7 \u221a \u221a"},{"location":"study/OpenHarmony/4.%E5%86%85%E6%A0%B8%E6%8E%A5%E5%8F%A3/#412-liteos-m","title":"4.1.2 LiteOS-M\u5185\u6838","text":"<p>OpenHarmony LiteOS-M\u5185\u6838\u662f\u9762\u5411IoT\u9886\u57df\u6784\u5efa\u7684\u8f7b\u91cf\u7ea7\u7269\u8054\u7f51\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\uff0c\u5177\u6709\u5c0f\u4f53\u79ef\u3001\u4f4e\u529f\u8017\u3001\u9ad8\u6027\u80fd\u7684\u7279\u70b9\uff0c\u5176\u4ee3\u7801\u7ed3\u6784\u7b80\u5355\uff0c\u4e3b\u8981\u5305\u62ec\u5185\u6838\u6700\u5c0f\u529f\u80fd\u96c6\u3001\u5185\u6838\u62bd\u8c61\u5c42\u3001\u53ef\u9009\u7ec4\u4ef6\u4ee5\u53ca\u5de5\u7a0b\u76ee\u5f55\u7b49\uff0c\u5206\u4e3a\u786c\u4ef6\u76f8\u5173\u5c42\u4ee5\u53ca\u786c\u4ef6\u65e0\u5173\u5c42\uff0c\u786c\u4ef6\u76f8\u5173\u5c42\u63d0\u4f9b\u7edf\u4e00\u7684HAL\uff08Hardware Abstraction Layer\uff09\u63a5\u53e3\uff0c\u63d0\u5347\u786c\u4ef6\u6613\u9002\u914d\u6027\uff0c\u4e0d\u540c\u7f16\u8bd1\u5de5\u5177\u94fe\u548c\u82af\u7247\u67b6\u6784\u7684\u7ec4\u5408\u5206\u7c7b\uff0c\u6ee1\u8db3AIoT\u7c7b\u578b\u4e30\u5bcc\u7684\u786c\u4ef6\u548c\u7f16\u8bd1\u5de5\u5177\u94fe\u7684\u62d3\u5c55\u3002</p> <p></p>"},{"location":"study/OpenHarmony/4.%E5%86%85%E6%A0%B8%E6%8E%A5%E5%8F%A3/#413-liteos-a","title":"4.1.3 LiteOS-A\u5185\u6838","text":"<p>LiteOS-A\u5185\u6838\u4e3b\u8981\u5e94\u7528\u4e8e\u5c0f\u578b\u7cfb\u7edf\uff0c\u9762\u5411\u8bbe\u5907\u4e00\u822c\u662fM\u7ea7\u5185\u5b58\uff0c\u53ef\u652f\u6301MMU\uff08Memory Management Unit\uff09\u9694\u79bb\uff0c\u4e1a\u754c\u7c7b\u4f3c\u7684\u5185\u6838\u6709Zircon\u6216Darwin\u7b49\u3002</p> <p>\u8f7b\u91cf\u7ea7\u5185\u6838LiteOS-A\u91cd\u8981\u7684\u65b0\u7279\u6027\u5982\u4e0b\uff1a</p> <ul> <li> <p>\u65b0\u589e\u4e86\u4e30\u5bcc\u7684\u5185\u6838\u673a\u5236\uff1a</p> <ul> <li>\u65b0\u589e\u865a\u62df\u5185\u5b58\u3001\u7cfb\u7edf\u8c03\u7528\u3001\u591a\u6838\u3001\u8f7b\u91cf\u7ea7IPC\uff08Inter-Process Communication\uff0c\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff09\u3001DAC\uff08Discretionary Access Control\uff0c\u81ea\u4e3b\u8bbf\u95ee\u63a7\u5236\uff09\u7b49\u673a\u5236\uff0c\u4e30\u5bcc\u4e86\u5185\u6838\u80fd\u529b\uff1b</li> <li>\u4e3a\u4e86\u66f4\u597d\u7684\u517c\u5bb9\u8f6f\u4ef6\u548c\u5f00\u53d1\u8005\u4f53\u9a8c\uff0c\u65b0\u589e\u652f\u6301\u591a\u8fdb\u7a0b\uff0c\u4f7f\u5f97\u5e94\u7528\u4e4b\u95f4\u5185\u5b58\u9694\u79bb\u3001\u76f8\u4e92\u4e0d\u5f71\u54cd\uff0c\u63d0\u5347\u7cfb\u7edf\u7684\u5065\u58ee\u6027\u3002</li> </ul> </li> </ul> <ul> <li> <p>\u5f15\u5165\u7edf\u4e00\u9a71\u52a8\u6846\u67b6HDF\uff08Hardware Driver Foundation\uff09</p> <p>\u5f15\u5165\u7edf\u4e00\u9a71\u52a8\u6846\u67b6HDF\uff0c\u7edf\u4e00\u9a71\u52a8\u6807\u51c6\uff0c\u4e3a\u8bbe\u5907\u5382\u5546\u63d0\u4f9b\u4e86\u66f4\u7edf\u4e00\u7684\u63a5\u5165\u65b9\u5f0f\uff0c\u4f7f\u9a71\u52a8\u66f4\u52a0\u5bb9\u6613\u79fb\u690d\uff0c\u529b\u6c42\u505a\u5230\u4e00\u6b21\u5f00\u53d1\uff0c\u591a\u7cfb\u7edf\u90e8\u7f72\u3002</p> </li> </ul> <ul> <li> <p>\u652f\u63011200+\u6807\u51c6POSIX\u63a5\u53e3</p> <p>\u66f4\u52a0\u5168\u9762\u7684\u652f\u6301POSIX\u6807\u51c6\u63a5\u53e3\uff0c\u4f7f\u5f97\u5e94\u7528\u8f6f\u4ef6\u6613\u4e8e\u5f00\u53d1\u548c\u79fb\u690d\uff0c\u7ed9\u5e94\u7528\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u66f4\u53cb\u597d\u7684\u5f00\u53d1\u4f53\u9a8c\u3002</p> </li> </ul> <ul> <li> <p>\u5185\u6838\u548c\u786c\u4ef6\u9ad8\u89e3\u8026</p> <p>\u8f7b\u91cf\u7ea7\u5185\u6838\u4e0e\u786c\u4ef6\u9ad8\u5ea6\u89e3\u8026\uff0c\u65b0\u589e\u5355\u677f\uff0c\u5185\u6838\u4ee3\u7801\u4e0d\u7528\u4fee\u6539\u3002</p> </li> </ul> <p></p>"},{"location":"study/OpenHarmony/4.%E5%86%85%E6%A0%B8%E6%8E%A5%E5%8F%A3/#414-linux","title":"4.1.4 Linux\u5185\u6838","text":"<p>OpenHarmony\u7684Linux\u5185\u6838\u57fa\u4e8e\u5f00\u6e90Linux\u5185\u6838LTS 4.19.y / 5.10.y \u5206\u652f\u6f14\u8fdb\uff0c\u5728\u6b64\u57fa\u7ebf\u57fa\u7840\u4e0a\uff0c\u56de\u5408CVE\u8865\u4e01\u53caOpenHarmony\u7279\u6027\uff0c\u4f5c\u4e3aOpenHarmony Common Kernel\u57fa\u7ebf\u3002\u9488\u5bf9\u4e0d\u540c\u7684\u82af\u7247\uff0c\u5404\u5382\u5546\u5408\u5165\u5bf9\u5e94\u7684\u677f\u7ea7\u9a71\u52a8\u8865\u4e01\uff0c\u5b8c\u6210\u5bf9OpenHarmony\u7684\u57fa\u7ebf\u9002\u914d\uff0c\u4e3b\u8981\u7528\u4e8e\u6807\u51c6\u7cfb\u7edf\u3002</p>"},{"location":"study/OpenHarmony/4.%E5%86%85%E6%A0%B8%E6%8E%A5%E5%8F%A3/#42-liteos-m","title":"4.2 \u8f7b\u91cf\u7cfb\u7edf\u5185\u6838(LiteOS-M)","text":""},{"location":"study/OpenHarmony/4.%E5%86%85%E6%A0%B8%E6%8E%A5%E5%8F%A3/#421","title":"4.2.1 \u5185\u6838\u6982\u8ff0","text":"<p>OpenHarmony LiteOS-M\u5185\u6838\u67b6\u6784\u5305\u542b\u786c\u4ef6\u76f8\u5173\u5c42\u4ee5\u53ca\u786c\u4ef6\u65e0\u5173\u5c42\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5176\u4e2d\u786c\u4ef6\u76f8\u5173\u5c42\u6309\u4e0d\u540c\u7f16\u8bd1\u5de5\u5177\u94fe\u3001\u82af\u7247\u67b6\u6784\u5206\u7c7b\uff0c\u63d0\u4f9b\u7edf\u4e00\u7684HAL\uff08Hardware Abstraction Layer\uff09\u63a5\u53e3\uff0c\u63d0\u5347\u4e86\u786c\u4ef6\u6613\u9002\u914d\u6027\uff0c\u6ee1\u8db3AIoT\u7c7b\u578b\u4e30\u5bcc\u7684\u786c\u4ef6\u548c\u7f16\u8bd1\u5de5\u5177\u94fe\u7684\u62d3\u5c55\uff1b\u5176\u4ed6\u6a21\u5757\u5c5e\u4e8e\u786c\u4ef6\u65e0\u5173\u5c42\uff0c\u5176\u4e2d\u57fa\u7840\u5185\u6838\u6a21\u5757\u63d0\u4f9b\u57fa\u7840\u80fd\u529b\uff0c\u6269\u5c55\u6a21\u5757\u63d0\u4f9b\u7f51\u7edc\u3001\u6587\u4ef6\u7cfb\u7edf\u7b49\u7ec4\u4ef6\u80fd\u529b\uff0c\u8fd8\u63d0\u4f9b\u9519\u8bef\u5904\u7406\u3001\u8c03\u6d4b\u7b49\u80fd\u529b\uff0cKAL\uff08Kernel Abstraction Layer\uff09\u6a21\u5757\u63d0\u4f9b\u7edf\u4e00\u7684\u6807\u51c6\u63a5\u53e3\u3002</p> <p></p>"},{"location":"study/OpenHarmony/4.%E5%86%85%E6%A0%B8%E6%8E%A5%E5%8F%A3/#422","title":"4.2.2 \u5185\u6838\u542f\u52a8\u6d41\u7a0b","text":"<p>\u5728\u5f00\u53d1\u677f\u914d\u7f6e\u6587\u4ef6<code>target_config.h</code>\u914d\u7f6e\u7cfb\u7edf\u65f6\u949f\u3001\u6bcf\u79d2<code>Tick</code>\u6570\uff0c\u53ef\u4ee5\u5bf9\u4efb\u52a1\u3001\u5185\u5b58\u3001IPC\u3001\u5f02\u5e38\u5904\u7406\u6a21\u5757\u8fdb\u884c\u88c1\u526a\u914d\u7f6e\u3002\u7cfb\u7edf\u542f\u52a8\u65f6\uff0c\u6839\u636e\u914d\u7f6e\u8fdb\u884c\u6307\u5b9a\u6a21\u5757\u7684\u521d\u59cb\u5316\u3002\u5185\u6838\u542f\u52a8\u6d41\u7a0b\u5305\u542b\u5916\u8bbe\u521d\u59cb\u5316\u3001\u7cfb\u7edf\u65f6\u949f\u914d\u7f6e\u3001\u5185\u6838\u521d\u59cb\u5316\u3001\u64cd\u4f5c\u7cfb\u7edf\u542f\u52a8\u7b49\uff0c\u8be6\u89c1\u4e0b\u56fe\u3002</p> <p></p>"},{"location":"study/OpenHarmony/4.%E5%86%85%E6%A0%B8%E6%8E%A5%E5%8F%A3/#423","title":"4.2.3 \u5185\u6838\u4f7f\u7528","text":"<p>Open Harmony\u5b98\u7f51\u5185\u6838\u4f7f\u7528\u6307\u5bfc</p>"},{"location":"study/OpenHarmony/4.%E5%86%85%E6%A0%B8%E6%8E%A5%E5%8F%A3/#43","title":"4.3 \u5185\u6838\u63a5\u53e3","text":""},{"location":"study/OpenHarmony/4.%E5%86%85%E6%A0%B8%E6%8E%A5%E5%8F%A3/#431","title":"4.3.1 \u8f7b\u91cf\u7cfb\u7edf\u7684\u5185\u6838\u63a5\u53e3","text":"<p>\u8f7b\u91cf\u7cfb\u7edf\u7684\u5185\u6838(LiteOS-M)\u7684\u6807\u51c6\u5316\u63a5\u53e3\u5373KAL\u5185\u6838\u62bd\u8c61\u5c42\u4e2d\u7684<code>CMISIS</code>\u548c<code>POSIX</code>\uff0c\u5176\u4e2d<code>POSIX</code>\u90e8\u5206\u517c\u5bb9 \u65b9\u4fbfLinux\u5f00\u53d1\u8005\u8fc1\u79fb\uff1b<code>CMSIS</code>\u5219\u9002\u914d\u4e86<code>CMSIS-RTOS v2</code>\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf\u901a\u7528\u63a5\u53e3\uff0c\u5f00\u53d1\u8005\u53ef\u57fa\u4e8e\u6b64\u7f16\u5199\u8de8RTOS\uff08\u5982FreeRTOS\u3001RT-Thread\uff09\u7684\u4ee3\u7801\u3002</p> <p></p>"},{"location":"study/OpenHarmony/4.%E5%86%85%E6%A0%B8%E6%8E%A5%E5%8F%A3/#432-cmsis","title":"4.3.2 CMSIS\u6807\u51c6","text":"<p><code>CMSIS</code>\uff08Cortex Microcontroller Software Interface Standard\uff09\u662fARM\u516c\u53f8\u4e3a Cortex-M \u7cfb\u5217\u5fae\u63a7\u5236\u5668\uff08MCU\uff09 \u8bbe\u8ba1\u7684\u6807\u51c6\u5316\u8f6f\u4ef6\u63a5\u53e3\uff0c\u65e8\u5728\u7edf\u4e00\u5e95\u5c42\u786c\u4ef6\u64cd\u4f5c\uff0c\u7b80\u5316\u8de8\u82af\u7247\u5f00\u53d1\u3002</p> <p><code>CMSIS</code>\u4fdd\u62a4\u8bb8\u591a\u7ec4\u4ef6\u5c42\uff0c\u5176\u4e2d\u7684 RTOS \u5c42\u4e3a CMSIS-RTOS \uff0c\u800cLiteOS-M\u4ec5\u652f\u6301 CMSIS-RTOS v2 \u7248\u672c\u7684API\u3002</p>"},{"location":"study/OpenHarmony/4.%E5%86%85%E6%A0%B8%E6%8E%A5%E5%8F%A3/#433-cmsis-rtos-v2","title":"4.3.3 CMSIS-RTOS v2","text":"<p>CMSIS-RTOS v2 \u662f ARM \u751f\u6001\u4e2d \u5d4c\u5165\u5f0f\u5b9e\u65f6\u7cfb\u7edf\u7684\u201c\u901a\u7528\u8bed\u8a00\u201d\uff0c\u5176\u6807\u51c6\u5316\u63a5\u53e3\u8bbe\u8ba1\u5927\u5e45\u7b80\u5316\u4e86\u8de8\u5e73\u53f0\u5f00\u53d1\u3002</p>"},{"location":"study/OpenHarmony/4.%E5%86%85%E6%A0%B8%E6%8E%A5%E5%8F%A3/#44","title":"4.4 \u4f7f\u7528\u5185\u6838\u63a5\u53e3","text":"<p>CMSIS-RTOS v2 \u901a\u7528\u63a5\u53e3\u5c31\u662f\u5728 LiteOS-M \u539f\u751fAPI\u7684\u57fa\u7840\u4e0a\u5c01\u88c5\u540e\u5f97\u5230\u7684API\uff0c\u6240\u4ee5\u53ea\u9700\u719f\u6089API\u5c31\u597d\uff0c\u5173\u4e8e\u4e00\u4e9bRTOS\u7684\u540c\u6b65\u673a\u5236\u7b49\u4f7f\u7528\u65b9\u6cd5\u90fd\u662f\u4e00\u81f4\u7684\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5f88\u591a\u5730\u65b9\u4f1a\u63d0\u5230Tick\u5468\u671f\uff0c\u5728hi3861\u82af\u7247\u4e2d\u9ed8\u8ba4\u7684Tick\u5468\u671f\u4e3a10ms\uff08\u4e0d\u540c\u4e8eFreeRTOS\u9ed8\u8ba4\u76841ms\uff09\u3002</p> Danger <p>\u6b64\u90e8\u5206\u5185\u5bb9\u5efa\u8bae\u5b66\u4e60\u8fc7\u4e00\u79cdRTOS\u518d\u770b\uff0c\u53e6\u5916Tick\u5468\u671f\u5e94\u5f53\u53ef\u4ee5\u81ea\u5df1\u914d\u7f6e\uff0c\u4f46\u6211\u6682\u672a\u627e\u5230\u6e90\u7801\u4e2d\u7684\u914d\u7f6e\u6587\u4ef6\u3002</p>"},{"location":"study/OpenHarmony/4.%E5%86%85%E6%A0%B8%E6%8E%A5%E5%8F%A3/#441","title":"4.4.1 \u7ebf\u7a0b\u7ba1\u7406","text":"<p>\"\u7ebf\u7a0b\"\u6709\u7684\u5730\u65b9\u4e5f\u79f0\"\u4efb\u52a1\"\uff0c\u90fd\u662f\u5dee\u4e0d\u591a\u7684\u610f\u601d\u3002</p> <p>\u5173\u4e8e\u7ebf\u7a0b\uff0c\u6211\u4eec\u5e94\u719f\u6089\u4e24\u4e2a\u6982\u5ff5\uff1a</p> <ul> <li>\u5e76\u53d1 \uff1a\u6307\u7684\u662f\u591a\u4e2a\u4efb\u52a1\u5728\u540c\u4e00\u65f6\u95f4\u6bb5\u5185\u6267\u884c\uff0c\u8fd9\u4e9b\u4efb\u52a1\u53ef\u80fd\u4f1a\u4ea4\u66ff\u8fdb\u884c\u3002\u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7\u5feb\u901f\u5730\u5728\u4e0d\u540c\u4efb\u52a1\u4e4b\u95f4\u8fdb\u884c\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u8ba9\u7528\u6237\u611f\u89c9\u8fd9\u4e9b\u4efb\u52a1\u597d\u50cf\u662f\u540c\u65f6\u5728\u6267\u884c\u3002\u4f46\u5b9e\u9645\u4e0a\uff0c\u5728\u5355 CPU \u6838\u5fc3\u7684\u7cfb\u7edf\u4e2d\uff0c\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u4efb\u52a1\u5728\u8fd0\u884c\u3002</li> <li>\u5e76\u884c\uff1a\u6307\u7684\u662f\u591a\u4e2a\u4efb\u52a1\u5728\u540c\u4e00\u65f6\u523b\u540c\u65f6\u6267\u884c\u3002\u8fd9\u9700\u8981\u7cfb\u7edf\u5177\u5907\u591a\u4e2a CPU \u6838\u5fc3\u6216\u8005\u591a\u4e2a\u5904\u7406\u5668\uff0c\u6bcf\u4e2a\u4efb\u52a1\u53ef\u4ee5\u5206\u914d\u5230\u4e0d\u540c\u7684\u5904\u7406\u5355\u5143\u4e0a\u540c\u65f6\u8fd0\u884c\u3002</li> </ul> C<pre><code>#include &lt;stdio.h&gt;\n#include \"ohos_init.h\"\n#include \"cmsis_os2.h\"\n\n/**\n * thread_basic.c\n * \u7ebf\u7a0b\u7ba1\u7406\u6848\u4f8b\n * \u521b\u5efa\u4e24\u4e2a\u7ebf\u7a0b\uff0c\u5176\u4e2d\u4e00\u4e2a\u4f7f\u7528\u7ebf\u7a0b\u53c2\u6570\u3002\n */\n\ntypedef struct {\n    int value;\n    char str[16];\n}Data;\n\n/* \u7ebf\u7a0b\u8981\u8fd0\u884c\u7684\u51fd\u6570 */ \nvoid Rtosv2Thread1(void* params) \n{\n    /* \u63a5\u6536\u7ebf\u7a0b\u53c2\u6570 */\n    Data* data_;\n    data_ = params;\n    /* \u7cfb\u7edf\u7ea7\u5ef6\u65f6\u51fd\u6570\uff0c\u5ef6\u65f610\u4e2aTick */\n    osDelay(100);\n    /* \u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b\u7684ID */\n    osThreadId_t thread1Id = osThreadGetId();\n    printf(\"[INFO]Thread ID: %p\\r\\n\", thread1Id);\n    /* \u5904\u7406\u53c2\u6570 */\n    printf(\"[INFO]%d    %f\\r\\n\", data_-&gt;value, data_-&gt;str);\n    /* \u4e3b\u7a0b\u5e8f */\n    static int count = 0;\n    while (1) {\n        count++;\n        printf(\"[INFO]Thread1 count: %d\\r\\n\", count);\n        osDelay(10);\n    }\n}\n\nvoid Rtosv2Thread2(void* params) \n{\n    osThreadId_t thread2Id = osThreadGetId();\n    printf(\"[INFO]Thread ID: %p\\r\\n\", thread2Id);\n    while (1) {\n        printf(\"[INFO]Thread2\\r\\n\");\n        osDelay(20);\n    }\n}\n\n/* \u521b\u5efa\u4efb\u52a1\u7ebf\u7a0b */\nvoid ThreadTestTask(void) \n{\n    /* \u5b9a\u4e49\u7ebf\u7a0b\u7684\u5c5e\u6027\u7ed3\u6784\u4f53 */\n    osThreadAttr_t attr_1 = {\n        .name = \"Thread1\",  // \u4e3a\u7ebf\u7a0b\u547d\u540d\uff08\u5fc5\u987b\uff09\n        .attr_bits = 0,      // \u4e00\u822c\u5148\u8bbe\u4e3a 0\uff0c\u6709\u7279\u6b8a\u5c5e\u6027\u9700\u6c42\u65f6\u518d\u6309\u4f4d\u8bbe\u7f6e\n        .cb_mem = NULL,      // \u82e5\u4e0d\u624b\u52a8\u5206\u914d\u63a7\u5236\u5757\u5185\u5b58\uff0c\u53ef\u8bbe\u4e3a NULL\n        .cb_size = 0,        // \u63a7\u5236\u5757\u5185\u5b58\u5927\u5c0f\uff0c\u914d\u5408 cb_mem\u4f7f\u7528\uff0c\u8bbe\u4e3a 0\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u65b9\u5f0f\n        .stack_mem = NULL,   // \u82e5\u4e0d\u624b\u52a8\u5206\u914d\u6808\u5185\u5b58\uff0c\u53ef\u8bbe\u4e3a NULL\n        .stack_size = 1024,  // \u4e3a\u7ebf\u7a0b\u5206\u914d\u6808\u5927\u5c0f\uff0c\u8fd9\u91cc\u8bbe\u4e3a 1024\u5b57\u8282\uff0c\u9700\u6839\u636e\u5b9e\u9645\u9700\u6c42\u8c03\u6574\uff08\u5fc5\u987b\uff09\n        .priority = osPriorityNormal,  // \u8bbe\u7f6e\u7ebf\u7a0b\u4f18\u5148\u7ea7\u4e3a\u6b63\u5e38\u4f18\u5148\u7ea7\uff08\u5fc5\u987b\uff09\n        .tz_module = 0,      // TrustZone\u6a21\u5757\u6807\u8bc6\u7b26\uff0c\u82e5\u65e0\u7279\u6b8a\u9700\u6c42\u8bbe\u4e3a 0\n        .reserved = 0        // \u4fdd\u7559\u5b57\u6bb5\u8bbe\u4e3a 0\n    };\n    osThreadAttr_t attr_2 = {\n        .name = \"Thread2\",\n        .stack_size = 1024,\n        .priority = osPriorityNormal\n    };\n    /* \u5b9a\u4e49\u7ebf\u7a0b\u53c2\u6570 */\n    Data data = { 12, \"OpenHarmony\" };\n    /* \u521b\u5efa\u7ebf\u7a0b */\n    osThreadNew(Rtosv2Thread1, &amp;data, &amp;attr_1);\n    osThreadNew(Rtosv2Thread2, NULL, &amp;attr_2);\n}\n\nAPP_FEATURE_INIT(ThreadTestTask);\n</code></pre>"},{"location":"study/OpenHarmony/4.%E5%86%85%E6%A0%B8%E6%8E%A5%E5%8F%A3/#442","title":"4.4.2 \u8f6f\u4ef6\u5b9a\u65f6\u5668","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include \"ohos_init.h\"\n#include \"cmsis_os2.h\"\n\n/**\n * timer_basic.c\n * \u8f6f\u4ef6\u5b9a\u65f6\u5668\u6848\u4f8b\n * \u521b\u5efa\u5b9a\u65f6\u5668\uff0c\u6bcf 1s \u8c03\u7528\u4e00\u6b21\u56de\u8c03\u51fd\u6570\u4f7f\u5f97\u8ba1\u6570\u503c\u52a0\u4e00\uff0c\u4e3b\u7ebf\u7a0b\u4e2d\u7b49\u5f85 5s \u5220\u9664\u5b9a\u65f6\u5668\u3002\n */\n\nosTimerId_t g_timerID;\nstatic uint8_t g_cnt = 0;\n\n/* \u56de\u8c03\u51fd\u6570 */\nvoid time_out_callback(void* params)\n{\n    g_cnt++;\n    printf(\"[Callback] Timeout! -&gt;%d\\r\\n\", g_cnt);\n}\n\n/* \u4e3b\u7ebf\u7a0b\u51fd\u6570 */\nvoid MainThread(void* params)\n{\n    /* \u5b9a\u65f6\u5668\u5c5e\u6027\u53c2\u6570 */\n    osTimerAttr_t attr_timer = {\n        .name = \"SoftTimer\",\n        .attr_bits = 0,\n        .cb_mem = NULL,\n        .cb_size = 0\n    };\n    /* \u521b\u5efa\u5b9a\u65f6\u5668 */ \n    g_timerID = osTimerNew(time_out_callback, osTimerPeriodic, NULL, &amp;attr_timer);\n    /* \u5224\u65adg_timerID\uff0c\u5b9a\u65f6\u5668\u662f\u5426\u521b\u5efa\u6210\u529f */\n    if (g_timerID != NULL) {\n        printf(\"[Timer Create] \u5b9a\u65f6\u5668\u521b\u5efa\u6210\u529f\uff01\\r\\n\");\n    } else {\n        printf(\"[Timer Create] \u5b9a\u65f6\u5668\u521b\u5efa\u5931\u8d25\uff01\\r\\n\");\n    }\n    /* \u6253\u5f00\u5b9a\u65f6\u5668\uff0c\u5b9a\u65f61s */\n    osTimerStart(g_timerID, 100);\n    /* \u963b\u585e3s */\n    osDelay(500);\n    while(1) {\n        /* \u5224\u65ad\u5b9a\u65f6\u5668\u662f\u5426\u8d85\u65f63\u6b21 */\n        if (g_cnt &gt; 3) {\n            /* \u82e5\u5b9a\u65f6\u5668\u5b58\u5728\uff0c\u505c\u6b62\u5e76\u5220\u9664\u5b9a\u65f6\u5668 */\n            if (g_timerID != NULL) {\n                osTimerStop(g_timerID);\n                osTimerDelete(g_timerID);\n                printf(\"[Timer Delete] \u5b9a\u65f6\u5668\u5220\u9664\u6210\u529f\uff01\\r\\n\");\n                /* \u81ea\u6740\u7ebf\u7a0b */\n                osThreadExit();\n                g_timerID = NULL;\n            }\n        }\n        osDelay(10);\n    }\n\n}\n\n/* \u521b\u5efa\u4efb\u52a1\u7ebf\u7a0b */\nvoid TimerTest(void) \n{\n    /* \u5b9a\u4e49\u7ebf\u7a0b\u7684\u5c5e\u6027\u7ed3\u6784\u4f53 */\n    osThreadAttr_t attr_timer = {\n        .name = \"Thread1\",              // \u4e3a\u7ebf\u7a0b\u547d\u540d\uff08\u5fc5\u987b\uff09\n        .attr_bits = 0,                 // \u4e00\u822c\u5148\u8bbe\u4e3a 0\uff0c\u6709\u7279\u6b8a\u5c5e\u6027\u9700\u6c42\u65f6\u518d\u6309\u4f4d\u8bbe\u7f6e\n        .cb_mem = NULL,                 // \u82e5\u4e0d\u624b\u52a8\u5206\u914d\u63a7\u5236\u5757\u5185\u5b58\uff0c\u53ef\u8bbe\u4e3a NULL\n        .cb_size = 0,                   // \u63a7\u5236\u5757\u5185\u5b58\u5927\u5c0f\uff0c\u914d\u5408 cb_mem\u4f7f\u7528\uff0c\u8bbe\u4e3a 0\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u65b9\u5f0f\n        .stack_mem = NULL,              // \u82e5\u4e0d\u624b\u52a8\u5206\u914d\u6808\u5185\u5b58\uff0c\u53ef\u8bbe\u4e3a NULL\n        .stack_size = 1024,             // \u4e3a\u7ebf\u7a0b\u5206\u914d\u6808\u5927\u5c0f\uff0c\u8fd9\u91cc\u8bbe\u4e3a 1024\u5b57\u8282\uff0c\u9700\u6839\u636e\u5b9e\u9645\u9700\u6c42\u8c03\u6574\uff08\u5fc5\u987b\uff09\n        .priority = osPriorityNormal,   // \u8bbe\u7f6e\u7ebf\u7a0b\u4f18\u5148\u7ea7\u4e3a\u6b63\u5e38\u4f18\u5148\u7ea7\uff08\u5fc5\u987b\uff09\n        .tz_module = 0,                 // TrustZone\u6a21\u5757\u6807\u8bc6\u7b26\uff0c\u82e5\u65e0\u7279\u6b8a\u9700\u6c42\u8bbe\u4e3a 0\n        .reserved = 0                   // \u4fdd\u7559\u5b57\u6bb5\u8bbe\u4e3a 0\n    };\n    /* \u521b\u5efa\u7ebf\u7a0b */\n    osThreadNew(MainThread, NULL, &amp;attr_timer);\n}\n\nAPP_FEATURE_INIT(TimerTest);\n</code></pre>"},{"location":"study/OpenHarmony/4.%E5%86%85%E6%A0%B8%E6%8E%A5%E5%8F%A3/#443","title":"4.4.3 \u4e92\u65a5\u9501","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include \"ohos_init.h\"\n#include \"cmsis_os2.h\"\n\n/** \n * mutex_demo.c\n * \u4e92\u65a5\u9501\u6848\u4f8b\n * \u591a\u7ebf\u7a0b\u8bbf\u95ee\u540c\u4e00\u4e2a\u53d8\u91cf\uff0c\u7528\u4e92\u65a5\u9501\u5b9e\u73b0\u5b89\u5168\u8bbf\u95ee\u3002\u540c\u65f6\u5b9e\u73b0\u591a\u7ebf\u7a0b\u4f7f\u7528\u540c\u4e00\u4e2a\u4efb\u52a1\u51fd\u6570\uff0c\u5224\u65ad\u5168\u5c40\u53d8\u91cf\u7684\u5947\u5076\u6027\u3002\n */\n\n/* \u591a\u4e2a\u7ebf\u7a0b\u9700\u8981\u8bbf\u95ee\u7684\u5168\u5c40\u53d8\u91cf */\nstatic int g_param = 0;\n\n/* \u4efb\u52a1\u51fd\u6570 */\nvoid CountThread(void* params)\n{\n    /* \u63a5\u6536\u7ebf\u7a0b\u53c2\u6570 */\n    osMutexId_t *mid = params;\n    /* \u7ebf\u7a0b\u4e3b\u5faa\u73af */\n    while(1) \n    {\n        /* \u83b7\u53d6\u4e92\u65a5\u9501A\uff0c\u8d85\u65f6\u65f6\u95f4\u4e3a100ms\uff0c\u82e5\u6210\u529f\u8fd4\u56de\"osOK\" */\n        if(osMutexAcquire(*mid, 100) == osOK) {\n            g_param++;\n            /* g_param\u4e3a\u5076\u6570 */\n            if (g_param % 2 == 0) {\n                printf(\"[g_param] \u5076\u6570-&gt; %d\\r\\n\", g_param);\n            } \n            /* g_param\u4e3a\u5947\u6570 */\n            else {\n                printf(\"[g_param] \u5947\u6570-&gt; %d\\r\\n\", g_param);\n            }\n            printf(\"[Info] \u4efb\u52a1\u5904\u7406\u5b8c\u6210\uff01\\r\\n\");\n        }\n        /* \u91ca\u653e\u4e92\u65a5\u9501A */\n        osMutexRelease(*mid);\n        /* \u5b8c\u6210\u4e00\u6b21\u4efb\u52a1\u963b\u585e50ms\uff0c\u7ed9\u5176\u4ed6\u540c\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u6267\u884c\u7684\u65f6\u95f4 */\n        osDelay(50);\n    }\n\n}\n\n/**\n * @brief \u521b\u5efa\u7ebf\u7a0b\uff0c\u5c01\u88c5\u6210\u4e00\u4e2a\u51fd\u6570\uff0c\u4fbf\u4e8e\u8c03\u7528\n * @param name\uff1a\u7ebf\u7a0b\u540d\u79f0\n * @param func\uff1a\u7ebf\u7a0b\u51fd\u6570\n * @param arg\uff1a\u7ebf\u7a0b\u51fd\u6570\u7684\u53c2\u6570\n * @return \u8fd4\u56de\u7ebf\u7a0bID\n */\nosThreadId_t newThread(char *name_, osThreadFunc_t func, void *arg)\n{\n    osThreadAttr_t attr = {\n        .name = name_,\n        .stack_size = 1024,\n        .priority = osPriorityNormal\n    };\n    osThreadId_t tid = osThreadNew(func, arg, &amp;attr);\n    if (tid == NULL) {\n        printf(\"[Thread Create] osThreadNew(%s) failed.\\r\\n\", name_);\n    } else{\n        printf(\"[Thread Create] osThreadNew(%s) success, thread id: %d.\\r\\n\", name_, tid);\n    }\n    return tid;\n}\n\n/* \u4e3b\u51fd\u6570 */\nvoid Main_Mutex(void* params)\n{\n    /* \u5b9a\u4e49\u4e92\u65a5\u9501 */\n    osMutexId_t g_MutexId_A;\n    /* \u4e92\u65a5\u9501\u5c5e\u6027 */\n    osMutexAttr_t attr_mutex = {\n        .name = \"Mutex_A\",\n        .attr_bits = 0,\n        .cb_mem = NULL,\n        .cb_size = 0\n    };\n    /* \u521b\u5efa\u4e92\u65a5\u9501 */\n    g_MutexId_A = osMutexNew(&amp;attr_mutex);\n    /* \u5224\u65ad\u4e92\u65a5\u9501\u662f\u5426\u521b\u5efa\u6210\u529f */\n    if (g_MutexId_A != NULL) {\n        printf(\"[Mutex Create] Ok!\\r\\n\");\n    } else {\n        printf(\"[Mutex Create] Error!\\r\\n\");\n    }\n    /* \u521b\u5efa\u4e09\u4e2a\u7ebf\u7a0b */\n    osThreadId_t tid1 = newThread(\"Thread_1\", CountThread, &amp;g_MutexId_A);\n    osThreadId_t tid2 = newThread(\"Thread_2\", CountThread, &amp;g_MutexId_A);\n    osThreadId_t tid3 = newThread(\"Thread_3\", CountThread, &amp;g_MutexId_A);\n    osDelay(10);\n    /* \u83b7\u5f97\u5f53\u524d\u5360\u7528\u4e92\u65a5\u9501\u7684\u7ebf\u7a0bID */\n    osThreadId_t tid = osMutexGetOwner(g_MutexId_A);\n    printf(\"[Mutex Owner] osMutexGetOwner, thread id: %p, thread name: %s.\\r\\n\", tid, osThreadGetName(tid));\n    osDelay(100);\n    /* \u7ec8\u6b62\u7ebf\u7a0b */\n    osThreadTerminate(tid1);\n    osThreadTerminate(tid2);\n    osThreadTerminate(tid3);\n    /* \u5220\u9664\u4e92\u65a5\u9501A */\n    osMutexDelete(g_MutexId_A);\n}   \n\n/* \u5165\u53e3\u51fd\u6570 */ \nstatic void MutexTestTask(void)\n{\n    /* \u7ebf\u7a0b\u5c5e\u6027 */ \n    osThreadAttr_t attr = {\n        .name = \"MutexTestTask\",\n        .stack_size = 1024,\n        .priority = osPriorityNormal\n    };\n    /* \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5e76\u5c06\u5176\u52a0\u5165\u6d3b\u8dc3\u7ebf\u7a0b\u7ec4\u4e2d */ \n    if (osThreadNew((osThreadFunc_t)Main_Mutex, NULL, &amp;attr) == NULL)\n    {\n        printf(\"[MutexTestTask] Falied to create Main_Mutex!\\n\");\n    }\n}\n\nAPP_FEATURE_INIT(MutexTestTask);\n</code></pre>"},{"location":"study/OpenHarmony/4.%E5%86%85%E6%A0%B8%E6%8E%A5%E5%8F%A3/#444","title":"4.4.4 \u4fe1\u53f7\u91cf","text":"C<pre><code>#include &lt;stdio.h&gt;      \n#include &lt;string.h&gt;     \n#include &lt;malloc.h&gt;    \n\n#include \"ohos_init.h\" \n#include \"cmsis_os2.h\" \n\n// \u5de5\u4eba\u7684\u6570\u91cf\n#define WORKER_NUMBER 7     //3861\u5b9e\u6d4b\u6700\u591a\u5f008\u4e2a\u7ebf\u7a0b\uff0c\u4e3b\u7ebf\u7a0b\u5360\u75281\u4e2a\uff0c\u5269\u4f597\u4e2a\u7ebf\u7a0b\n// \u673a\u5668\u7684\u6570\u91cf\n#define MACHINE_NUMBER 4\n// \u4fe1\u53f7\u91cf\uff1a\u673a\u5668\nosSemaphoreId_t semMachine;\n\n// \u5de5\u4eba\u7ebf\u7a0b\u51fd\u6570\nvoid worker_thread(void *arg)\n{\n    (void)arg;\n    while (1)\n    {\n        // \u83b7\u53d6\u6307\u5b9a\u4fe1\u53f7\u91cf\u7684\u4e00\u4e2a\u4ee4\u724c\uff08token\uff09\uff0c\u82e5\u83b7\u53d6\u5931\u8d25\uff08\u83b7\u53d6\u4e0d\u5230\uff09\uff0c\u5219\u7b49\u5f85\n        // osWaitForever\uff1a\u6c38\u8fdc\u7b49\u5f85\uff0c\u4e0d\u4f1a\u8d85\u65f6\n        // \u5de5\u4eba\u7ebf\u7a0b\u5148\u83b7\u53d6semMachine\u7684\u4e00\u4e2a\u4ee4\u724c\uff0c\u6765\u786e\u8ba4\u662f\u5426\u6709\u7a7a\u95f2\u7684\u673a\u5668\u4f9b\u4f7f\u7528\n        // \u5982\u679c\u6ca1\u6709\u7a7a\u95f2\u7684\u673a\u5668\uff0c\u5219\u5de5\u4eba\u7ebf\u7a0b\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\uff0c\u76f4\u5230\u6709\u7a7a\u95f2\u7684\u673a\u5668\n        osSemaphoreAcquire(semMachine, osWaitForever);\n        // \u4e0a\u9762\u7684\u51fd\u6570\u662f\u963b\u585e\u5f0f\u7684\uff0c\u5982\u679c\u6267\u884c\u5b8c\u6bd5\uff0c\u8bf4\u660e\u6709\u7a7a\u95f2\u673a\u5668\u4e86\uff0c\u5de5\u4eba\u5f00\u59cb\u4f7f\u7528\u673a\u5668\n        // \u8f93\u51fa\u65e5\u5fd7\n        printf(\"%s GOT a machine!\\r\\n\", osThreadGetName(osThreadGetId()));\n        // \u6a21\u62df\u4f7f\u7528\u673a\u5668\u7684\u65f6\u95f4\n        osDelay(100);\n        // \u8f93\u51fa\u65e5\u5fd7\n        printf(\"%s RETURN a machine!\\r\\n\", osThreadGetName(osThreadGetId()));\n        // \u91ca\u653e\uff08\u5f52\u8fd8\uff09\u6307\u5b9a\u4fe1\u53f7\u91cf\u7684\u4e00\u4e2a\u4ee4\u724c\uff0c\u8fd9\u6837\u5176\u5b83\u5de5\u4eba\u7ebf\u7a0b\u5c31\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u673a\u5668\u4e86\n        // \u4ee4\u724c\u7684\u6570\u91cf\uff0c\u4e0d\u8d85\u8fc7\u4fe1\u53f7\u91cf\u53ef\u4ee5\u5bb9\u7eb3\u7684\u4ee4\u724c\u7684\u6700\u5927\u6570\u91cf\n        osSemaphoreRelease(semMachine);\n    }\n}\n\n// \u521b\u5efa\u7ebf\u7a0b\uff0c\u8fd4\u56de\u7ebf\u7a0bID\u3002\u5c01\u88c5\u6210\u4e00\u4e2a\u51fd\u6570\uff0c\u4fbf\u4e8e\u8c03\u7528\n// name\uff1a\u7ebf\u7a0b\u540d\u79f0\n// func\uff1a\u7ebf\u7a0b\u51fd\u6570\n// arg\uff1a\u7ebf\u7a0b\u51fd\u6570\u7684\u53c2\u6570\nosThreadId_t newThread(char *name, osThreadFunc_t func, void *arg)\n{\n    //\u628aname\u53c2\u6570\u5728\u5185\u5b58\u4e2d\u5efa\u7acb\u4e00\u4e2a\u62f7\u8d1d\uff0c\u4f9b\u65b0\u521b\u5efa\u7684\u7ebf\u7a0b\u4f7f\u7528\n    char *threadName = (char *)malloc(strlen(name) + 1);\n    strncpy(threadName, name, strlen(name) + 1);\n\n    osThreadAttr_t attr = {\n        threadName, 0, NULL, 0, NULL, 1024 * 2, osPriorityNormal, 0, 0};\n    osThreadId_t tid = osThreadNew(func, arg, &amp;attr);\n    if (tid == NULL)\n    {\n        printf(\"[Semp Test]osThreadNew(%s) failed.\\r\\n\", name);\n    }\n    else\n    {\n        printf(\"[Semp Test]osThreadNew(%s) success, thread id: %d.\\r\\n\", name, tid);\n    }\n    return tid;\n}\n\n// \u4e3b\u7ebf\u7a0b\u51fd\u6570\nvoid rtosv2_semp_main(void *arg)\n{\n    (void)arg;\n\n    // \u5ef6\u8fdf1\u79d2\uff0c\u907f\u514d\u8ddf\u7cfb\u7edf\u8f93\u51fa\u6df7\u6dc6\u5728\u4e00\u8d77\n    osDelay(100);\n\n    // \u521b\u5efa\u5e76\u4e14\u521d\u59cb\u5316\u4e00\u4e2a\u4fe1\u53f7\u91cfsemMachine\uff0c\u6700\u591a5\u4e2a\u4ee4\u724c\uff0c\u521d\u59cb5\u4e2a\u4ee4\u724c\n    // \u4ee4\u724c\u7684\u6570\u91cf\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u7a7a\u95f2\u7684\u673a\u5668\u7684\u6570\u91cf\u3002\u7ebf\u7a0b\u62ff\u5230\u4ee4\u724c\uff0c\u4f7f\u7528\u673a\u5668\uff0c\u4f7f\u7528\u5b8c\u4e86\uff0c\u7ebf\u7a0b\u5f52\u8fd8\u4ee4\u724c\n    // max_count\uff1a\u4fe1\u53f7\u91cf\u53ef\u4ee5\u5bb9\u7eb3\u7684\u4ee4\u724c\u7684\u6700\u5927\u6570\u91cf\n    // initial_count\uff1a\u4fe1\u53f7\u91cf\u5bb9\u7eb3\u7684\u4ee4\u724c\u7684\u521d\u59cb\u6570\u91cf\n    // attr\uff1a\u4fe1\u53f7\u91cf\u5c5e\u6027\uff0c\u76ee\u524d\u6ca1\u6709\u7528\u5230\n    semMachine = osSemaphoreNew(MACHINE_NUMBER, MACHINE_NUMBER, NULL);\n\n    // \u521b\u5efa\u5de5\u4eba\u7ebf\u7a0b\uff08\u65b9\u5f0f1\uff09\n    for (int i = 0; i &lt; WORKER_NUMBER; i++)\n    {\n        char tname[64] = \"\";\n        snprintf(tname, sizeof(tname), \"worker%d\", i);\n        newThread(tname, worker_thread, NULL);\n        osDelay(50);\n    }\n    // \u521b\u5efa\u5de5\u4eba\u7ebf\u7a0b\uff08\u65b9\u5f0f2\uff09\n    // newThread(\"worker1\", worker_thread, NULL);\n    // newThread(\"worker2\", worker_thread, NULL);\n    // newThread(\"worker3\", worker_thread, NULL);\n    // newThread(\"worker4\", worker_thread, NULL);\n    // newThread(\"worker5\", worker_thread, NULL);\n    // newThread(\"worker6\", worker_thread, NULL);\n    // newThread(\"worker7\", worker_thread, NULL);\n\n    // osDelay(50);\n    // osSemaphoreDelete(empty_id);\n}\n\n// \u5165\u53e3\u51fd\u6570\nstatic void SempTestTask(void)\n{\n    // \u7ebf\u7a0b\u5c5e\u6027\n    osThreadAttr_t attr;\n    attr.name = \"rtosv2_semp_main\";\n    attr.attr_bits = 0U;\n    attr.cb_mem = NULL;\n    attr.cb_size = 0U;\n    attr.stack_mem = NULL;\n    attr.stack_size = 1024;\n    attr.priority = osPriorityNormal;\n\n    // \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5e76\u5c06\u5176\u52a0\u5165\u6d3b\u8dc3\u7ebf\u7a0b\u7ec4\u4e2d\n    if (osThreadNew((osThreadFunc_t)rtosv2_semp_main, NULL, &amp;attr) == NULL)\n    {\n        printf(\"[SempTestTask] Falied to create rtosv2_semp_main!\\n\");\n    }\n}\n\n// \u8fd0\u884c\u5165\u53e3\u51fd\u6570\nAPP_FEATURE_INIT(SempTestTask);\n</code></pre>"},{"location":"study/OpenHarmony/4.%E5%86%85%E6%A0%B8%E6%8E%A5%E5%8F%A3/#445","title":"4.4.5 \u6d88\u606f\u961f\u5217","text":"C<pre><code>#include &lt;stdio.h&gt;      \n#include \"ohos_init.h\"  \n#include \"cmsis_os2.h\" \n\n// \u6d88\u606f\u961f\u5217\u7684\u5927\u5c0f\n#define QUEUE_SIZE 3\n\n// \u5b9a\u4e49\u6d88\u606f\u7684\u6570\u636e\u7ed3\u6784\ntypedef struct\n{\n    osThreadId_t tid;\n    int count;\n} message_entry;\n\n// \u4fdd\u5b58\u6d88\u606f\u961f\u5217\u7684ID\nosMessageQueueId_t qid;\n\n// \u6d88\u606f\u53d1\u9001\u8005\u7ebf\u7a0b\u51fd\u6570\nvoid sender_thread(void *arg)\n{\n    (void)arg;\n    // \u4e00\u4e2a\u516c\u5171\u8ba1\u6570\u5668\n    static int count = 0;\n    // \u5b9a\u4e49\u4e00\u4e2a\u6d88\u606f\n    message_entry sentry;\n    // \u5f00\u59cb\u5de5\u4f5c\u5faa\u73af\n    while (1)\n    {\n        // \u5c06\u5f53\u524d\u7ebf\u7a0b\u7684ID\u653e\u5165\u6d88\u606f\u4e2d\n        sentry.tid = osThreadGetId();\n\n        // \u5c06\u516c\u5171\u8ba1\u6570\u5668\u7684\u503c\u653e\u5165\u6d88\u606f\u4e2d\n        sentry.count = count;\n\n        // \u8f93\u51fa\u65e5\u5fd7\n        printf(\"[Message Test] %s send %d to message queue.\\r\\n\", osThreadGetName(osThreadGetId()), count);\n\n        // \u5c06\u6d88\u606f\u653e\u5165\u6d88\u606f\u961f\u5217\u4e2d\n        // \u5982\u679c\u6d88\u606f\u961f\u5217\u5df2\u6ee1\uff0c\u5219\u4f1a\u7b49\u5f85\u6d88\u606f\u961f\u5217\u7684\u7a7a\u4f4d\uff0c\u76f4\u5230\u6d88\u606f\u961f\u5217\u6709\u7a7a\u4f4d\uff0c\u624d\u4f1a\u653e\u5165\u6d88\u606f\n        //\n        // \u53c2\u6570:\n        // mq_id\uff1a\u901a\u8fc7osMessageQueueNew\u62ff\u5230\u7684\u6d88\u606f\u961f\u5217ID\n        // msg_ptr\uff1a\u8981\u653e\u5165\u6d88\u606f\u961f\u5217\u7684\u6d88\u606f\u7684\u6307\u9488\n        // msg_prio\uff1a\u8981\u653e\u5165\u6d88\u606f\u961f\u5217\u7684\u6d88\u606f\u7684\u4f18\u5148\u7ea7\uff0c\u5f53\u524d\u672a\u4f7f\u7528\n        // timeout\uff1a\u8d85\u65f6\u65f6\u95f4\n        // \u8fd4\u56de:\n        // CMSIS-RTOS\u8fd0\u884c\u7ed3\u679c\uff0c\u53c2\u8003kernel\\liteos_m\\kal\\cmsis\\cmsis_os2.h\n        //\n        // \u6ce8\u610f\uff1a\n        // \u7b2c\u4e8c\u4e2a\u53c2\u6570msg_ptr\u662f\u8981\u653e\u5165\u6d88\u606f\u961f\u5217\u7684\u6d88\u606f\u7684\u6307\u9488\uff0c\u5728\u6d88\u606f\u8fdb\u961f\u5217\u7684\u65f6\u5019\uff0c\u662f\u590d\u5236\u4e00\u4efd\u8fdb\u53bb\u7684\n        // \u53ef\u4ee5\u8ddf\u4e00\u4e0b\u6e90\u7801\uff1aosMessageQueuePut-&gt;LOS_QueueWriteCopy-&gt;OsQueueOperate-&gt;OsQueueBufferOperate-&gt;memcpy_s()\n        // \u6240\u4ee5\u5faa\u73af\u4f7f\u7528sentry\u662f\u4e0d\u4f1a\u6709\u95ee\u9898\u7684\n        //\n        // \u53ef\u4ee5\u4e0d\u53bb\u62ff\u8fd4\u56de\u503c\uff0c\u4f46\u662f\u8fd9\u6837\u505a\u5c31\u65e0\u6cd5\u786e\u4fdd\u6d88\u606f\u53d1\u51fa\u53bb\u4e86\n        osMessageQueuePut(qid, (const void *)&amp;sentry, 0, osWaitForever);\n\n        // \u6bcf\u53d1\u9001\u4e00\u6b21\u6d88\u606f\uff0c\u8ba1\u6570\u5668\u52a01\n        count++;\n        osDelay(5);\n    }\n}\n\n// \u6d88\u606f\u63a5\u6536\u8005\u7ebf\u7a0b\u51fd\u6570\nvoid receiver_thread(void *arg)\n{\n    (void)arg;\n    // \u5b9a\u4e49\u4e00\u4e2a\u6d88\u606f\n    message_entry rentry;\n    // \u5f00\u59cb\u5de5\u4f5c\u5faa\u73af\n    while (1)\n    {\n        // \u4ece\u6d88\u606f\u961f\u5217\u4e2d\u53d6\u51fa\u6d88\u606f\n        // \u5982\u679c\u6d88\u606f\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u4f1a\u7b49\u5f85\u6d88\u606f\u961f\u5217\u7684\u6d88\u606f\uff0c\u76f4\u5230\u6d88\u606f\u961f\u5217\u6709\u6d88\u606f\uff0c\u624d\u4f1a\u53d6\u51fa\u6d88\u606f\n        // \n        // \u53c2\u6570:\n        // mq_id\uff1a\u901a\u8fc7osMessageQueueNew\u62ff\u5230\u7684\u6d88\u606f\u961f\u5217ID\n        // msg_ptr\uff1a\u4e00\u4e2a\u6d88\u606f\u7684\u6307\u9488\uff0c\u7528\u4e8e\u63a5\u6536\u4ece\u6d88\u606f\u961f\u5217\u4e2d\u53d6\u51fa\u7684\u6d88\u606f\n        // msg_prio\uff1a\u4e00\u4e2a\u6d88\u606f\u4f18\u5148\u7ea7\u7684\u6307\u9488\uff0c\u7528\u4e8e\u63a5\u6536\u4ece\u6d88\u606f\u961f\u5217\u4e2d\u53d6\u51fa\u7684\u6d88\u606f\u4f18\u5148\u7ea7\uff0c\u5f53\u524d\u672a\u4f7f\u7528\uff0c\u4f20\u5165NULL\u5373\u53ef\n        // timeout\uff1a\u8d85\u65f6\u65f6\u95f4\n        // \u8fd4\u56de:\n        // CMSIS-RTOS\u8fd0\u884c\u7ed3\u679c\uff0c\u53c2\u8003kernel\\liteos_m\\kal\\cmsis\\cmsis_os2.h\n        osMessageQueueGet(qid, (void *)&amp;rentry, NULL, osWaitForever);\n\n        // \u8f93\u51fa\u65e5\u5fd7\n        printf(\"[Message Test] %s get %d from %s by message queue.\\r\\n\", osThreadGetName(osThreadGetId()), rentry.count, osThreadGetName(rentry.tid));\n        osDelay(3);\n    }\n}\n\n// \u521b\u5efa\u7ebf\u7a0b\uff0c\u8fd4\u56de\u7ebf\u7a0bID\u3002\u5c01\u88c5\u6210\u4e00\u4e2a\u51fd\u6570\uff0c\u4fbf\u4e8e\u8c03\u7528\nosThreadId_t newThread(char *name, osThreadFunc_t func, void *arg)\n{\n    osThreadAttr_t attr = {\n        name, 0, NULL, 0, NULL, 1024 * 2, osPriorityNormal, 0, 0};\n    osThreadId_t tid = osThreadNew(func, arg, &amp;attr);\n    if (tid == NULL)\n    {\n        printf(\"[Message Test] osThreadNew(%s) failed.\\r\\n\", name);\n    }\n    else\n    {\n        printf(\"[Message Test] osThreadNew(%s) success, thread id: %d.\\r\\n\", name, tid);\n    }\n    return tid;\n}\n\n// \u4e3b\u7ebf\u7a0b\u51fd\u6570\nvoid rtosv2_msgq_main(void *arg)\n{\n    (void)arg;\n\n    // \u521b\u5efa\u5e76\u4e14\u521d\u59cb\u5316\u4e00\u4e2a\u6d88\u606f\u961f\u5217\n    // \u53c2\u6570:\n    // msg_count\uff1a\u6d88\u606f\u961f\u5217\u4e2d\u53ef\u4ee5\u5bb9\u7eb3\u7684\u6d88\u606f\u7684\u6700\u5927\u6570\u91cf\n    // msg_size\uff1a\u6d88\u606f\u961f\u5217\u4e2d\u6bcf\u6761\u6d88\u606f\u7684\u6700\u5927\u957f\u5ea6\n    // attr\uff1a\u6d88\u606f\u961f\u5217\u5c5e\u6027\u3002\u5f53\u524d\u672a\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f20\u5165NULL\u3002\n    // \u8fd4\u56de:\n    // \u6210\u529f\u8fd4\u56de\u6d88\u606f\u961f\u5217\u7684ID\uff0c\u5931\u8d25\u8fd4\u56deNULL\u3002\n    qid = osMessageQueueNew(QUEUE_SIZE, sizeof(message_entry), NULL);\n\n    // \u521b\u5efa\u4e24\u4e2a\u6d88\u606f\u63a5\u6536\u8005\u7ebf\u7a0b\uff0c\u4e09\u4e2a\u6d88\u606f\u53d1\u9001\u8005\u7ebf\u7a0b\n    osThreadId_t ctid1 = newThread(\"recevier1\", receiver_thread, NULL);\n    osThreadId_t ctid2 = newThread(\"recevier2\", receiver_thread, NULL);\n    osThreadId_t ptid1 = newThread(\"sender1\", sender_thread, NULL);\n    osThreadId_t ptid2 = newThread(\"sender2\", sender_thread, NULL);\n    osThreadId_t ptid3 = newThread(\"sender3\", sender_thread, NULL);\n\n    // \u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\uff08\u8ba9\u6d88\u606f\u53d1\u9001\u8005\u7ebf\u7a0b\u548c\u6d88\u606f\u63a5\u6536\u8005\u7ebf\u7a0b\u90fd\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\uff09\n    osDelay(100);\n\n    // \u83b7\u53d6\u6d88\u606f\u961f\u5217\u4e2d\u53ef\u4ee5\u5bb9\u7eb3\u7684\u6d88\u606f\u7684\u6700\u5927\u6570\u91cf\n    uint32_t cap = osMessageQueueGetCapacity(qid);\n    printf(\"[Message Test] osMessageQueueGetCapacity, capacity: %d.\\r\\n\", cap);\n    // \u83b7\u53d6\u6d88\u606f\u961f\u5217\u4e2d\u6bcf\u6761\u6d88\u606f\u7684\u6700\u5927\u957f\u5ea6\n    uint32_t msg_size = osMessageQueueGetMsgSize(qid);\n    printf(\"[Message Test] osMessageQueueGetMsgSize, size: %d.\\r\\n\", msg_size);\n    // \u83b7\u53d6\u6d88\u606f\u961f\u5217\u4e2d\u5f53\u524d\u7684\u6d88\u606f\u6570\u91cf\n    uint32_t count = osMessageQueueGetCount(qid);\n    printf(\"[Message Test] osMessageQueueGetCount, count: %d.\\r\\n\", count);\n    // \u83b7\u53d6\u6d88\u606f\u961f\u5217\u4e2d\u5f53\u524d\u8fd8\u53ef\u4ee5\u653e\u7f6e\u7684\u6d88\u606f\u6570\u91cf\n    uint32_t space = osMessageQueueGetSpace(qid);\n    printf(\"[Message Test] osMessageQueueGetSpace, space: %d.\\r\\n\", space);\n\n    osDelay(80);\n\n    // \u7ec8\u6b62\u7ebf\u7a0b\n    osThreadTerminate(ctid1);\n    osThreadTerminate(ctid2);\n    osThreadTerminate(ptid1);\n    osThreadTerminate(ptid2);\n    osThreadTerminate(ptid3);\n\n    // \u5220\u9664\u6d88\u606f\u961f\u5217\n    osMessageQueueDelete(qid);\n}\n\n// \u5165\u53e3\u51fd\u6570\nstatic void MessageTestTask(void)\n{\n    osThreadAttr_t attr;\n\n    attr.name = \"rtosv2_msgq_main\";\n    attr.attr_bits = 0U;\n    attr.cb_mem = NULL;\n    attr.cb_size = 0U;\n    attr.stack_mem = NULL;\n    attr.stack_size = 1024;\n    attr.priority = osPriorityNormal;\n\n    if (osThreadNew((osThreadFunc_t)rtosv2_msgq_main, NULL, &amp;attr) == NULL)\n    {\n        printf(\"[MessageTestTask] Falied to create rtosv2_msgq_main!\\n\");\n    }\n}\n\n// \u8fd0\u884c\u5165\u53e3\u51fd\u6570\nAPP_FEATURE_INIT(MessageTestTask);\n</code></pre>"},{"location":"study/OpenHarmony/5.GPIO/","title":"\u7b2c\u4e94\u7ae0 GPIO","text":""},{"location":"study/OpenHarmony/5.GPIO/#51-ohosiot","title":"5.1 OHOS\u7684IoT\u63a5\u53e3","text":""},{"location":"study/OpenHarmony/5.GPIO/#511-ohos","title":"5.1.1 OHOS\u63a5\u53e3\u7c7b\u578b","text":"<p>\u76ee\u524d\uff0cOpen Harmony \u63d0\u4f9b\u4e86\u4e09\u79cdIoT\u63a5\u53e3\u7c7b\u578b\uff1a</p> <ol> <li>HAL\u63a5\u53e3 \uff1a\u4f4d\u4e8e\u786c\u4ef6\u670d\u52a1\u5b50\u7cfb\u7edf\u96c6\u7684 IoT\u4e13\u7528\u786c\u4ef6\u670d\u52a1\u5b50\u7cfb\u7edf \u3002</li> <li>HDF\u63a5\u53e3 \uff1a\u4f4d\u4e8e\u5185\u6838\u5c42\u7684\u5b50\u7cfb\u7edf\u9a71\u52a8\u4e2d\uff0c\u8fd9\u662f\u672a\u6765 Open Harmony \u4e3b\u63a8\u7684\u63a5\u53e3\u7c7b\u578b\u3002</li> <li>\u6d77\u601dSDK\u63a5\u53e3 \uff1a\u8fd9\u662fHi3861V100\u82af\u7247\u5382\u5546\u6d77\u601d\u63d0\u4f9b\u7684\u539f\u5382\u63a5\u53e3\uff0c\u4e5f\u662fHAL\u548cHDF\u7684\u5e95\u5c42\u63a5\u53e3\u3002</li> </ol> <p>\u76ee\u524d\u6765\u8bf4\uff0cOpenHarmony\u5728\u8f7b\u91cf\u7ea7\u8bbe\u5907\u8fd9\u5757\uff0c\u5c24\u5176\u662f\u5916\u8bbe\u63a5\u53e3\uff0c\u652f\u6301\u7684\u4e0d\u662f\u5f88\u597d\u3002 // \u5b98\u65b9\u4ee5\u540e\u4e3b\u63a8HDF\u63a5\u53e3\uff0c\u5f62\u5f0f\u4e0a\u548c1.0\u7684\u63a5\u53e3\u6bd4\u8f83\u63a5\u8fd1\u3002 \u57282.x\u548c3.0\u9636\u6bb5\uff0c\u5b98\u65b9\u5bf9\u8f7b\u91cf\u7ea7\u8bbe\u5907\u6295\u5165\u7684\u7cbe\u529b\u6bd4\u8f83\u5c11\u3002\u5df2\u77e5\u5230 2021-12-31 \u4e3a\u6b62\uff0cHDF\u8fd8\u6ca1\u6709\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u82af\u7247\u652f\u6301\uff0c\u5305\u62ecHi3861\u3002</p> <p>HAL\u63a5\u53e3 \u6e90\u7801\u76ee\u5f55\u4e3a<code>base\\iot_hardware\\peripheral\\interfaces\\kits</code>\uff0c\u5982\u4e0b\u56fe\u3002\u5176\u4e2d\u6709\u4e9b\u63a5\u53e3\u4ece 1.0.1 \u7248\u672c\u4ee5\u540e\u5df2\u7ecf\u6ca1\u6709\u4e86\uff0c\u5982ADC\u3001AT\u3001I2S\u3001SDIO\u7b49\u3002</p> <p></p> <p>\u6d77\u601dSDK\u63a5\u53e3 \u6e90\u7801\u76ee\u5f55\u4e3a<code>device\\hisilicon\\hispark_pegasus\\sdk_liteos\\include</code>\uff0c\u5982\u4e0b\u56fe\u3002\u6d77\u601d\u539f\u5382\u63a5\u53e3\u53ef\u8c13\u662f\u5f88\u5168\u9762\uff0c\u56e0\u6b64\u5728HAL\u63a5\u53e3\u7f3a\u5931\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c31\u4f7f\u7528\u6d77\u601dSDK\u63a5\u53e3\u3002</p> <p></p> Danger <p>\u6211\u4eec\u5e94\u5f53\u5b66\u4f1a\u533a\u5206HAL\u63a5\u53e3\u548c\u6d77\u601dSDK\u63a5\u53e3\uff0c\u5176\u4e2dHAL\u63a5\u53e3\u4ee5<code>IoT</code>\u5f00\u5934\uff0c\u51fd\u6570\u4e3a\u5927\u9a7c\u5cf0\u6837\u5f0f\uff1b\u800c\u6d77\u601dSDK\u63a5\u53e3\u4ee5<code>hi</code>\u5f00\u5934\uff0c\u51fd\u6570\u5747\u4e3a\u5c0f\u5199\u4ee5<code>-</code>\u8fde\u63a5\u3002</p>"},{"location":"study/OpenHarmony/5.GPIO/#512","title":"5.1.2 \u540e\u7eed\u5f00\u53d1\u6d41\u7a0b(\u5fc5\u770b)","text":"<ul> <li>\u540e\u7eed\u7684\u5916\u8bbe\u9a71\u52a8\u7a0b\u5e8f\u5747\u653e\u5728<code>applications\\sample\\wifi-iot\\app</code>\u76ee\u5f55\u4e0b\uff0c\u4ec5\u9700\u65b0\u5efa \u6a21\u5757\u6587\u4ef6\u5939 \u6dfb\u52a0\u6e90\u4ee3\u7801\u6587\u4ef6\u548c\u7f16\u8bd1\u811a\u672c\u6587\u4ef6\u3002</li> <li>\u7f16\u5199\u5b8c\u6e90\u7a0b\u5e8f\uff0c\u7f16\u5199 \u6a21\u5757\u6587\u4ef6\u5939 \u4e0b\u7684\u7f16\u8bd1\u811a\u672c\u5e76\u4fee\u6539<code>applications\\sample\\wifi-iot\\app</code>\u76ee\u5f55\u4e0b\u7684\u7f16\u8bd1\u811a\u672c\u3002</li> <li>\u9009\u62e9\u5f00\u53d1\u677f\uff0c\u7f16\u8bd1\u3002</li> <li>\u4f7f\u7528\u5feb\u901f\u70e7\u5f55\uff0c\u5c06\u7a0b\u5e8f\u4e0b\u8f7d\u81f3\u5f00\u53d1\u677f\u3002</li> </ul> <p>\u56e0\u6b64\uff0c\u540e\u9762\u7684\u5185\u5bb9\u5c06\u4e0d\u4f1a\u5728\u91cd\u590d\u8bf4\u660e\u65b0\u5efa\u6587\u4ef6\u5939\u7684\u4f4d\u7f6e\uff0c\u4ec5\u63d0\u4f9b\u7f16\u8bd1\u811a\u672c\u548c\u6e90\u7a0b\u5e8f\uff0c\u4e00\u4e9b\u91cd\u8981\u5185\u5bb9\u4f1a\u5728\u6ce8\u91ca\u4e2d\u8bf4\u660e\u3002</p> <p>\u5176\u4e2d\uff0c\u6211\u4f1a\u7b80\u79f0\u4e24\u4e2a\u76ee\u5f55\uff1a</p> <ol> <li>\u6a21\u5757\u7f16\u8bd1\u811a\u672c \uff1a\u5373<code>applications\\sample\\wifi-iot\\app\\\u6a21\u5757\u6587\u4ef6\u5939</code>\u76ee\u5f55\u4e0b\u7684\u7f16\u8bd1\u811a\u672c<code>BUILD.gn</code>\u3002</li> <li>APP\u7f16\u8bd1\u811a\u672c \uff1a\u5373<code>applications\\sample\\wifi-iot\\app</code>\u76ee\u5f55\u4e0b\u7684\u7f16\u8bd1\u811a\u672c<code>BUILD.gn</code>\u3002</li> </ol>"},{"location":"study/OpenHarmony/5.GPIO/#52-gpio","title":"5.2 GPIO","text":""},{"location":"study/OpenHarmony/5.GPIO/#521-gpio","title":"5.2.1 GPIO\u8f93\u51fa","text":"<p>\u6e90\u4ee3\u7801</p> C<pre><code>#include &lt;stdio.h&gt;\n#include \"ohos_init.h\"\n#include \"cmsis_os2.h\"\n#include \"iot_gpio.h\"\n#include \"hi_io.h\"\n\n/** \n * gpio_demo/gpio_output_demo.c\n * GPIO\u8f93\u51fa\u6848\u4f8b\n * \u719f\u6089GPIO\u7684API\u3001\u8f93\u51fa\u914d\u7f6e\u6d41\u7a0b\uff0c\u8ba9LED\u706f\u4ee5500ms\u4e3a\u95f4\u9694\u95ea\u70c1\u3002\n */ \n\n/* LED\u5f15\u811a\u53f7 */\n#define LED_Pin     2\n\n/* LED\u4efb\u52a1 */\nstatic void LedTask(void *params)\n{\n    /* \u521d\u59cb\u5316GPIO */\n    IoTGpioInit(LED_Pin);\n    /* \u8bbe\u7f6e\u5f15\u811a\u4e3aGPIO\u529f\u80fd(\u6d77\u601dSDK) */\n    hi_io_set_func(LED_Pin, HI_IO_FUNC_GPIO_2_GPIO);\n    /* \u8bbe\u7f6e\u5f15\u811a\u4e3a\u8f93\u51fa\u6a21\u5f0f */\n    IoTGpioSetDir(LED_Pin, IOT_GPIO_DIR_OUT);\n    while(1) \n    {\n        /* \u8bbe\u7f6e\u5f15\u811a\u7684\u9ad8\u7535\u5e73\u72b6\u6001 */\n        IoTGpioSetOutputVal(LED_Pin, IOT_GPIO_VALUE1);\n        printf(\"[INFO] LED ON.\\r\\n\");\n        osDelay(50);\n        /* \u8bbe\u7f6e\u5f15\u811a\u7684\u4f4e\u7535\u5e73\u72b6\u6001 */\n        IoTGpioSetOutputVal(LED_Pin, IOT_GPIO_VALUE0);\n        printf(\"[INFO] LED OFF.\\r\\n\");\n        osDelay(50);\n    }\n}\n\n/* LED\u4efb\u52a1\u5165\u53e3\u51fd\u6570 */\nstatic void LedEntry(void)\n{\n    osThreadAttr_t attr = {\n        .name = \"LedThread\",\n        .stack_size = 1024,\n        .priority = osPriorityNormal\n    };\n    if (osThreadNew(LedTask, NULL, &amp;attr) == NULL) {\n        printf(\"[ERROR] Thread Create Faild.\\r\\n\");\n    }\n}\n\nSYS_RUN(LedEntry);\n</code></pre> <p>\u6a21\u5757\u7f16\u8bd1\u811a\u672c</p> Text Only<pre><code>static_library(\"gpio_demo\") {\n    sources = [\n        \"gpio_output_demo.c\",\n    ]\n\n    include_dirs = [\n        # include \"ohos_init.h\"\n        \"//utils/native/lite/include\",\n        # include CMSIS-RTOS API V2 for OpenHarmony1.0+\n        \"//kernel/liteos_m/kal/cmsis\",\n        # include IoT\u786c\u4ef6\u8bbe\u5907\u64cd\u4f5c\u63a5\u53e3 for OpenHarmony1.0+\uff1a\n        \"//base/iot_hardware/peripheral/interfaces/kits\",\n    ]\n}\n</code></pre> <p>APP\u7f16\u8bd1\u811a\u672c</p> Text Only<pre><code>import(\"//build/lite/config/component/lite_component.gni\")\n\nlite_component(\"app\") {\n    features = [\n        \"gn_practice/application:gn_app\",\n        \"gn_practice/driver:gn_driver\",\n        \"gn_practice/library:gn_library\",\n        \"kv_store_demo:kv_store_demo\",\n        \"file_demo:file_demo\",\n        \"thread_demo:thread_demo\",\n        \"timer_demo:timer_demo\",\n        \"mutex_demo:mutex_demo\",\n        # GPIO\u6a21\u5757\n        \"gpio_demo:gpio_demo\",\n    ]\n}\n</code></pre> <p>Danger</p> <p>\u7f16\u8bd1\u811a\u672c\u770b\u4e0d\u5230\u7684\u4e00\u5b9a\u8981\u8981\u53bb\u770b\u770b\u7f16\u8bd1\u539f\u7406\uff0c\u5f88\u91cd\u8981\uff01\uff01\uff01</p>"},{"location":"study/OpenHarmony/5.GPIO/#522-gpio","title":"5.2.2 GPIO\u8f93\u5165","text":"<p>\u6e90\u4ee3\u7801</p> C<pre><code>#include &lt;stdio.h&gt;\n#include \"ohos_init.h\"\n#include \"cmsis_os2.h\"\n#include \"iot_gpio.h\"\n#include \"hi_io.h\"\n\n/** \n * gpio_demo/gpio_input_demo.c\n * GPIO\u8f93\u5165\u6848\u4f8b\n * \u719f\u6089GPIO\u7684API\u3001\u8f93\u5165\u914d\u7f6e\u6d41\u7a0b(\u662f\u5426\u4e0a\u62c9\u6216\u4e0b\u62c9\u7535\u963b)\uff0c\u901a\u8fc7\u6309\u952e\u63a7\u5236LED\u70b9\u4eae\u4e0e\u7184\u706d\u3002\n */ \n\n/* LED\u548cKEY\u5f15\u811a\u53f7 */\n#define LED_Pin         2\n#define KEY1_Pin        11\n#define KEY2_Pin        12\n\n/* \u6309\u952e\u4efb\u52a1 */\nstatic void ButtonTask(void* params)\n{\n    /* \u5c40\u90e8\u53d8\u91cf */\n    IotGpioValue key1_value, key2_value;\n    /* GPIO\u521d\u59cb\u5316 */\n    IoTGpioInit(LED_Pin);\n    IoTGpioInit(KEY1_Pin);\n    IoTGpioInit(KEY2_Pin);\n    /* \u914d\u7f6e\u5f15\u811a\u7684\u590d\u7528\u529f\u80fd(\u6d77\u601dSDK) */\n    hi_io_set_func(LED_Pin, HI_IO_FUNC_GPIO_2_GPIO);\n    hi_io_set_func(KEY1_Pin, HI_IO_FUNC_GPIO_11_GPIO);\n    hi_io_set_func(KEY2_Pin, HI_IO_FUNC_GPIO_12_GPIO);\n    /* \u914d\u7f6e\u5f15\u811a\u7684\u8f93\u5165\u8f93\u51fa\u6a21\u5f0f */\n    IoTGpioSetDir(LED_Pin, IOT_GPIO_DIR_OUT);\n    IoTGpioSetDir(KEY1_Pin, IOT_GPIO_DIR_IN);\n    IoTGpioSetDir(KEY2_Pin, IOT_GPIO_DIR_IN);\n    /* \u8f93\u5165\u6a21\u5f0f\u7684\u5f15\u811a\u8bbe\u7f6e\u4e0a\u62c9\u7535\u963b */\n    hi_io_set_pull(KEY1_Pin, HI_IO_PULL_UP);\n    hi_io_set_pull(KEY2_Pin, HI_IO_PULL_UP);\n    while (1)\n    {\n        /* \u83b7\u53d6\u8f93\u5165\u7535\u5e73 */\n        IoTGpioGetInputVal(KEY1_Pin, &amp;key1_value);\n        IoTGpioGetInputVal(KEY2_Pin, &amp;key2_value);\n        if (key1_value == 0) {\n            osDelay(2);\n            printf(\"[INFO] KEY1\u7684\u7535\u5e73: %d\\r\\n\", key1_value);\n            /* \u70b9\u4eaeLED */\n            IoTGpioSetOutputVal(LED_Pin, IOT_GPIO_VALUE1);\n        }\n        if (key2_value == 0) {\n            osDelay(2);\n            printf(\"[INFO] KEY2\u7684\u7535\u5e73: %d\\r\\n\", key2_value);\n            /* \u7184\u706dLED */\n            IoTGpioSetOutputVal(LED_Pin, IOT_GPIO_VALUE0);\n        }\n        osDelay(20);\n    }\n}\n\nstatic void ButtonEntry(void)\n{\n     osThreadAttr_t attr = {\n        .name = \"ButtonThread\",\n        .stack_size = 4096,\n        .priority = osPriorityNormal\n    };\n    if (osThreadNew(ButtonTask, NULL, &amp;attr) == NULL) {\n        printf(\"[ERROR] Thread Create Faild.\\r\\n\");\n    }\n}\n\nSYS_RUN(ButtonEntry);\n</code></pre> <p>\u6a21\u5757\u7f16\u8bd1\u811a\u672c</p> Text Only<pre><code>static_library(\"gpio_demo\") {\n    sources = [\n        \"gpio_input_demo.c\",\n        \"gpio_output_demo.c\",\n    ]\n\n    include_dirs = [\n        # include \"ohos_init.h\"\n        \"//utils/native/lite/include\",\n        # include CMSIS-RTOS API V2 for OpenHarmony1.0+\n        \"//kernel/liteos_m/kal/cmsis\",\n        # include IoT\u786c\u4ef6\u8bbe\u5907\u64cd\u4f5c\u63a5\u53e3 for OpenHarmony1.0+\uff1a\n        \"//base/iot_hardware/peripheral/interfaces/kits\",\n    ]\n}\n</code></pre> <p>APP\u7f16\u8bd1\u811a\u672c</p> Text Only<pre><code>import(\"//build/lite/config/component/lite_component.gni\")\n\nlite_component(\"app\") {\n    features = [\n        \"gn_practice/application:gn_app\",\n        \"gn_practice/driver:gn_driver\",\n        \"gn_practice/library:gn_library\",\n        \"kv_store_demo:kv_store_demo\",\n        \"file_demo:file_demo\",\n        \"thread_demo:thread_demo\",\n        \"timer_demo:timer_demo\",\n        \"mutex_demo:mutex_demo\",\n        # GPIO\u6a21\u5757\n        \"gpio_demo:gpio_demo\",\n    ]\n}\n</code></pre>"},{"location":"study/OpenHarmony/5.GPIO/#523","title":"5.2.3 \u4f7f\u7528\u4e2d\u65ad","text":"<p>\u6e90\u4ee3\u7801</p> C<pre><code>#include &lt;stdio.h&gt;\n#include \"ohos_init.h\"\n#include \"cmsis_os2.h\"\n#include \"iot_gpio.h\"\n#include \"hi_io.h\"\n\n/** \n * gpio_demo/gpio_interrupt_demo.c\n * GPIO\u4e2d\u65ad\u4f7f\u7528\u6848\u4f8b\n * \u5c06GPIO\u8f93\u5165\u6848\u4f8b\u7684\u6309\u952e\u7a0b\u5e8f\u653e\u5728\u4e2d\u65ad\u6267\u884c\u3002\n */ \n\n/* LED\u548cKEY\u5f15\u811a\u53f7 */\n#define LED_Pin         2\n#define KEY1_Pin        11\n#define KEY2_Pin        12\n\n\nstatic void Key1Callback(char* params)\n{\n    printf(\"[INFO] KEY1\u6309\u952e\u6309\u4e0b\uff01\\r\\n\");\n    IoTGpioSetOutputVal(LED_Pin, IOT_GPIO_VALUE1);\n}\n\nstatic void Key2Callback(char* params)\n{\n    printf(\"[INFO] KEY2\u6309\u952e\u6309\u4e0b\uff01\\r\\n\");\n    IoTGpioSetOutputVal(LED_Pin, IOT_GPIO_VALUE0);\n}\n\nstatic void InterruptTask(void* params)\n{\n    /* GPIO\u521d\u59cb\u5316 */\n    IoTGpioInit(LED_Pin);\n    IoTGpioInit(KEY1_Pin);\n    IoTGpioInit(KEY2_Pin);\n    /* \u914d\u7f6e\u5f15\u811a\u7684\u590d\u7528\u529f\u80fd(\u6d77\u601dSDK) */\n    hi_io_set_func(LED_Pin, HI_IO_FUNC_GPIO_2_GPIO);\n    hi_io_set_func(KEY1_Pin, HI_IO_FUNC_GPIO_11_GPIO);\n    hi_io_set_func(KEY2_Pin, HI_IO_FUNC_GPIO_12_GPIO);\n    /* \u914d\u7f6e\u5f15\u811a\u7684\u8f93\u5165\u8f93\u51fa\u6a21\u5f0f */\n    IoTGpioSetDir(LED_Pin, IOT_GPIO_DIR_OUT);\n    IoTGpioSetDir(KEY1_Pin, IOT_GPIO_DIR_IN);\n    IoTGpioSetDir(KEY2_Pin, IOT_GPIO_DIR_IN);\n    /* \u8f93\u5165\u6a21\u5f0f\u7684\u5f15\u811a\u8bbe\u7f6e\u4e0a\u62c9\u7535\u963b */\n    hi_io_set_pull(KEY1_Pin, HI_IO_PULL_UP);\n    hi_io_set_pull(KEY2_Pin, HI_IO_PULL_UP);\n    /* \u914d\u7f6e\u4e2d\u65ad: \n     * 1.\u8fb9\u6cbf\u89e6\u53d1 2.\u4e0b\u964d\u6cbf\u89e6\u53d1 3.\u56de\u8c03\u51fd\u6570\u4f20\u5165\u4e0d\u540cIoId\u548c\u7535\u5e73\n     */\n    IoTGpioRegisterIsrFunc(\n        KEY1_Pin, \n        IOT_INT_TYPE_EDGE, \n        IOT_GPIO_EDGE_FALL_LEVEL_LOW, \n        Key1Callback,\n        NULL\n        );\n    IoTGpioRegisterIsrFunc(\n        KEY2_Pin, \n        IOT_INT_TYPE_EDGE, \n        IOT_GPIO_EDGE_FALL_LEVEL_LOW, \n        Key2Callback,\n        NULL\n        );\n    while (1)\n    {\n        osDelay(10);\n    }   \n}\n\nstatic void InterruptEntry(void)\n{\n     osThreadAttr_t attr = {\n        .name = \"InterruptThread\",\n        .stack_size = 1024,\n        .priority = osPriorityNormal\n    };\n    if (osThreadNew(InterruptTask, NULL, &amp;attr) == NULL) {\n        printf(\"[ERROR] Thread Create Faild.\\r\\n\");\n    }\n}\n\nSYS_RUN(InterruptEntry);\n</code></pre> <p>\u6a21\u5757\u7f16\u8bd1\u811a\u672c</p> Text Only<pre><code>static_library(\"gpio_demo\") {\n    sources = [\n        \"gpio_interrupt_demo.c\",\n        \"gpio_input_demo.c\",\n        \"gpio_output_demo.c\",\n    ]\n\n    include_dirs = [\n        # include \"ohos_init.h\"\n        \"//utils/native/lite/include\",\n        # include CMSIS-RTOS API V2 for OpenHarmony1.0+\n        \"//kernel/liteos_m/kal/cmsis\",\n        # include IoT\u786c\u4ef6\u8bbe\u5907\u64cd\u4f5c\u63a5\u53e3 for OpenHarmony1.0+\uff1a\n        \"//base/iot_hardware/peripheral/interfaces/kits\",\n    ]\n}\n</code></pre> <p>APP\u7f16\u8bd1\u811a\u672c</p> Text Only<pre><code>import(\"//build/lite/config/component/lite_component.gni\")\n\nlite_component(\"app\") {\n    features = [\n        \"gn_practice/application:gn_app\",\n        \"gn_practice/driver:gn_driver\",\n        \"gn_practice/library:gn_library\",\n        \"kv_store_demo:kv_store_demo\",\n        \"file_demo:file_demo\",\n        \"thread_demo:thread_demo\",\n        \"timer_demo:timer_demo\",\n        \"mutex_demo:mutex_demo\",\n        # GPIO\u6a21\u5757\n        \"gpio_demo:gpio_demo\",\n    ]\n}\n</code></pre>"},{"location":"study/OpenHarmony/5.GPIO/#524-pwm","title":"5.2.4 PWM","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0chi3861_sdk\u4e2d\uff0cPWM\u7684CONFIG\u9009\u9879\u6ca1\u6709\u6253\u5f00\uff0c\u6211\u4eec\u9700\u8981\u5728<code>device\\hisilicon\\hispark_pegasus\\sdk_liteos\\build\\config</code>\u76ee\u5f55\u4e0b\u627e\u5230<code>user_config.mk</code>\u6587\u4ef6\uff0c\u6dfb\u52a0PWM\u7684CONFIG\u9009\u9879<code>CONFIG_PWM_SUPPORT=y</code> \uff0c\u540c\u65f6\u53ef\u4ee5\u770b\u5230UART\u3001SPI\u7b49\u9ed8\u8ba4\u4e5f\u662f\u6ca1\u6709\u5f00\u542f\uff0c\u90fd\u9700\u8981\u6211\u4eec\u624b\u52a8\u5f00\u542f\u3002</p> Makefile<pre><code>#\n# BSP Settings\n#\n# CONFIG_I2C_SUPPORT is not set\n# CONFIG_I2S_SUPPORT is not set\n# CONFIG_SPI_SUPPORT is not set\n# CONFIG_DMA_SUPPORT is not set\n# CONFIG_SDIO_SUPPORT is not set\n# CONFIG_SPI_DMA_SUPPORT is not set\n# CONFIG_UART_DMA_SUPPORT is not set\n# CONFIG_PWM_SUPPORT is not set\nCONFIG_PWM_SUPPORT=y\n# CONFIG_PWM_HOLD_AFTER_REBOOT is not set\nCONFIG_AT_SUPPORT=y\nCONFIG_FILE_SYSTEM_SUPPORT=y\nCONFIG_UART0_SUPPORT=y\nCONFIG_UART1_SUPPORT=y\n# CONFIG_UART2_SUPPORT is not set\n# end of BSP Settings\n</code></pre> <p>\u6e90\u4ee3\u7801(HAL\u63a5\u53e3)</p> C<pre><code>#include &lt;stdio.h&gt;\n#include \"ohos_init.h\"\n#include \"cmsis_os2.h\"\n#include \"iot_gpio.h\"\n#include \"iot_pwm.h\"\n#include \"hi_io.h\"\n#include \"hi_pwm.h\"\n\n/** \n * gpio_demo/gpio_pwm_demo.c\n * PWM\u4f7f\u7528\u6848\u4f8b\n * \u719f\u6089PWM\u7684API\uff0c\u5b9e\u73b0\u547c\u5438\u706f\u3002\n */ \n\n#define LED_Pin         2\n\nstatic void PwmLedTask(void* params)\n{\n    int i;\n    /* GPIO\u521d\u59cb\u5316 */\n    IoTGpioInit(LED_Pin);\n    /* \u914d\u7f6e\u5f15\u811a\u7684\u590d\u7528\u529f\u80fd\u4e3aPWM(\u6d77\u601dSDK) */\n    hi_io_set_func(LED_Pin, HI_IO_FUNC_GPIO_2_PWM2_OUT);\n    /* \u914d\u7f6e\u5f15\u811a\u7684\u8f93\u5165\u8f93\u51fa\u6a21\u5f0f */\n    IoTGpioSetDir(LED_Pin, IOT_GPIO_DIR_OUT);\n    /* PWM\u521d\u59cb\u5316 */\n    IoTPwmInit(LED_Pin);\n    while(1)\n    {\n        /* \u914d\u7f6ePWM\u53c2\u6570\uff0c\u5360\u7a7a\u6bd4\u9012\u589e\u540e\u9012\u51cf\u3001\u9891\u73874000HZ */\n        for (i=0 ; i&lt;100 ; i++) {\n            IoTPwmStart(LED_Pin, i, 4000);\n            osDelay(1);\n        }\n        for (i=0 ; i&lt;100 ; i++) {\n            IoTPwmStart(LED_Pin, 100-i, 4000);\n            osDelay(1);\n        }\n    }\n}\n\nstatic void PwmEntry(void)\n{\n     osThreadAttr_t attr = {\n        .name = \"InterruptThread\",\n        .stack_size = 1024,\n        .priority = osPriorityNormal\n    };\n    if (osThreadNew(PwmLedTask, NULL, &amp;attr) == NULL) {\n        printf(\"[ERROR] Thread Create Faild.\\r\\n\");\n    }\n}\n\nSYS_RUN(PwmEntry);\n</code></pre> <p>\u6e90\u4ee3\u7801(\u6d77\u601dSDK\u63a5\u53e3)</p> <p>\u5173\u4e8e\u6d77\u601dSDK\u63a5\u53e3\u9700\u8981\u6ce8\u610f\u4e00\u70b9\uff0c<code>hi_pwm_start</code>\u867d\u7136\u53c2\u6570\u540d\u79f0\u4e0e<code>IoTPwmStart</code>\u4e00\u81f4\uff0c\u4f46\u542b\u4e49\u5374\u5e76\u4e0d\u4e00\u6837\uff1a</p> <ul> <li>HAL\u63a5\u53e3 <ul> <li><code>duty</code>\uff1a\u5b9e\u9645\u5360\u7a7a\u6bd4\uff0c\u53d6\u503c\u4e3a1-99\u3002</li> <li><code>freq</code>\uff1a\u5b9e\u9645\u9891\u7387\u3002</li> </ul> </li> <li>\u6d77\u601dSDK\u63a5\u53e3 <ul> <li><code>duty</code>\uff1a\u5360\u7a7a\u6bd4\uff0c\u53d6\u503c\u4e3a1-65535\uff0c\u9ed8\u8ba4\u503c\u4e3a750\u3002\u4f46\uff0c\u5b9e\u9645\u5360\u7a7a\u6bd4\u8fd8\u53d6\u51b3\u4e8e\u5206\u914d\u500d\u6570\u3002</li> <li><code>freq</code>\uff1a\u5206\u914d\u500d\u6570\uff0c\u53d6\u503c\u4e3a1-65535\uff0c\u9ed8\u8ba4\u503c\u4e3a1500\u3002</li> </ul> </li> </ul> <p>hi3861\u82af\u7247\u7684\u5185\u90e8\u65f6\u949f(\u9ed8\u8ba4)160MHz\uff0c\u5916\u90e8\u65f6\u949f40MHz\uff1b\u6240\u4ee5\u5bf9\u4e8e\u6d77\u601dSDK\u63a5\u53e3\uff1a</p> <ol> <li> <p>\u5b9e\u9645\u9891\u7387 = \u65f6\u949f\u6e90\u9891\u7387/<code>freq</code> </p> </li> <li> <p>\u5b9e\u9645\u5360\u7a7a\u6bd4 = <code>duty/freq</code>\u3002</p> </li> </ol> C<pre><code>#include &lt;stdio.h&gt;\n#include \"ohos_init.h\"\n#include \"cmsis_os2.h\"\n#include \"iot_gpio.h\"\n#include \"iot_pwm.h\"\n#include \"hi_io.h\"\n#include \"hi_pwm.h\"\n\n/** \n * gpio_demo/gpio_pwm_demo.c\n * PWM\u4f7f\u7528\u6848\u4f8b\n * \u719f\u6089PWM\u7684API\uff0c\u5b9e\u73b0\u547c\u5438\u706f\u3002\n */ \n\n#define LED_Pin         2\n\nstatic void PwmLedTask(void* params)\n{\n    int i;\n    /* GPIO\u521d\u59cb\u5316 */\n    IoTGpioInit(LED_Pin);\n    /* \u914d\u7f6e\u5f15\u811a\u7684\u590d\u7528\u529f\u80fd\u4e3aPWM(\u6d77\u601dSDK) */\n    hi_io_set_func(LED_Pin, HI_IO_FUNC_GPIO_2_PWM2_OUT);\n    /* \u914d\u7f6e\u5f15\u811a\u7684\u8f93\u5165\u8f93\u51fa\u6a21\u5f0f */\n    IoTGpioSetDir(LED_Pin, IOT_GPIO_DIR_OUT);\n    /* PWM\u521d\u59cb\u5316 */\n    // IoTPwmInit(LED_Pin);\n    hi_pwm_init(LED_Pin);\n    while(1)\n    {\n        /* \u914d\u7f6ePWM\u53c2\u6570\uff0c\u5360\u7a7a\u6bd4\u9012\u589e\u540e\u9012\u51cf\u3001\u9891\u73874000HZ */\n        for (i=0 ; i&lt;40000 ; i+=200) {\n            // IoTPwmStart(LED_Pin, i, 4000);\n            /* 4000 = 160,000,000/40000 ,1% = 400/40000 */\n            hi_pwm_start(LED_Pin, i, 40000);\n            osDelay(1);\n        }\n        for (i=0 ; i&lt;40000 ; i+=200) {\n            // IoTPwmStart(LED_Pin, 100-i, 4000);\n            hi_pwm_start(LED_Pin, 40000-i, 40000);\n            osDelay(1);\n        }\n    }\n}\n\nstatic void PwmEntry(void)\n{\n     osThreadAttr_t attr = {\n        .name = \"InterruptThread\",\n        .stack_size = 1024,\n        .priority = osPriorityNormal\n    };\n    if (osThreadNew(PwmLedTask, NULL, &amp;attr) == NULL) {\n        printf(\"[ERROR] Thread Create Faild.\\r\\n\");\n    }\n}\n\nSYS_RUN(PwmEntry);\n</code></pre> <p>\u6a21\u5757\u7f16\u8bd1\u811a\u672c</p> Text Only<pre><code>static_library(\"gpio_demo\") {\n    sources = [\n        \"gpio_pwm_demo.c\",\n        \"gpio_interrupt_demo.c\",\n        \"gpio_input_demo.c\",\n        \"gpio_output_demo.c\",\n    ]\n\n    include_dirs = [\n        # include \"ohos_init.h\"\n        \"//utils/native/lite/include\",\n        # include CMSIS-RTOS API V2 for OpenHarmony1.0+\n        \"//kernel/liteos_m/kal/cmsis\",\n        # include IoT\u786c\u4ef6\u8bbe\u5907\u64cd\u4f5c\u63a5\u53e3 for OpenHarmony1.0+\uff1a\n        \"//base/iot_hardware/peripheral/interfaces/kits\",\n    ]\n}\n</code></pre> <p>APP\u7f16\u8bd1\u811a\u672c</p> Text Only<pre><code>import(\"//build/lite/config/component/lite_component.gni\")\n\nlite_component(\"app\") {\n    features = [\n        \"gn_practice/application:gn_app\",\n        \"gn_practice/driver:gn_driver\",\n        \"gn_practice/library:gn_library\",\n        \"kv_store_demo:kv_store_demo\",\n        \"file_demo:file_demo\",\n        \"thread_demo:thread_demo\",\n        \"timer_demo:timer_demo\",\n        \"mutex_demo:mutex_demo\",\n        # GPIO\u6a21\u5757\n        \"gpio_demo:gpio_demo\",\n    ]\n}\n</code></pre>"},{"location":"study/OpenHarmony/6.ADC/","title":"\u7b2c\u516d\u7ae0 ADC","text":""},{"location":"study/OpenHarmony/6.ADC/#61-hi3861adc","title":"6.1 Hi3861\u7684ADC\u5916\u8bbe","text":"<p>Hi3861V100 \u82af\u7247\u7684ADC\u5177\u6709\u4ee5\u4e0b\u529f\u80fd\u7279\u6027 \u3002</p> <ul> <li>\u8f93\u5165\u65f6\u949f\u9891\u7387\uff1a3MHZ   \u3002</li> <li>\u91c7\u6837\u7cbe\u5ea6\uff1a12bit\u3002</li> <li>\u5355\u901a\u9053\u91c7\u6837\u9891\u7387\uff1a\u5c0f\u4e8e200kHz\u3002</li> <li>\u4e70\u6837\u987a\u5e8f\uff1a\u4ece\u901a\u90530\u5230\u901a\u90537\uff0c\u6bcf\u4e2a\u901a\u9053\u91c7\u6837\u4e00\u4e2a\u6570\u636e,\u5faa\u73af\u91c7\u6837\u3002</li> <li>\u652f\u6301\u91c7\u6837\u6570\u636e\u5e73\u5747\u6ee4\u6ce2\u5904\u7406\uff1a\u5e73\u5747\u6b21\u65701\u30012\u30014\u30018\u3002\u5728\u591a\u901a\u9053\u573a\u666f\u4e0b,\u6bcf\u4e2a\u901a\u9053\u63a5\u6536N\u4e2a\u6570\u636e(\u5e73\u5747\u6ee4\u6ce2\u4e2a\u6570)\u518d\u5207\u6362\u901a\u9053\u3002</li> <li>\u6570\u8f6c\u6362\u7535\u538b\u57fa\u51c6\uff1a\u652f\u6301\u81ea\u52a8\u8bc6\u522b\u6a21\u5f0f\u30011.8V \u57fa\u51c6\u6a21\u5f0f\u30013.3V \u57fa\u51c6\u6a21\u5f0f\u3002</li> </ul>"},{"location":"study/OpenHarmony/6.ADC/#62-adc","title":"6.2 ADC\u8bfb\u53d6\u6a21\u62df\u503c","text":"<p>\u6e90\u4ee3\u7801</p> C<pre><code>#include &lt;stdio.h&gt;\n#include \"ohos_init.h\"\n#include \"cmsis_os2.h\"\n#include \"iot_gpio.h\"\n#include \"hi_io.h\"\n#include \"hi_adc.h\"\n\n\n/**\n * adc_demo/adc_demo.c\n * ADC\u8bfb\u53d6\u6a21\u62df\u503c\u6848\u4f8b\n * HAL\u63a5\u53e3\u7f3a\u5931ADC\u7684API\uff0c\u6545\u672c\u8282API\u5747\u91c7\u7528\u6d77\u601dSDK\u63a5\u53e3\u3002\n * \u5229\u7528ADC\u901a\u9053\u8bfb\u53d6\u7ea2\u5916\u4f20\u611f\u5668\u7684\u6a21\u62df\u503c\uff0c\u4fe1\u53f7\u5f15\u811a\u63a5\u4f20\u611f\u5668\u7684AO(Analog)\u3002\n * \u540c\u65f6\u4e00\u4e9b\u5b8f\u548c\u51fd\u6570\u53c2\u6570\uff0c\u6211\u4eec\u5c3d\u91cf\u4f7f\u7528API\u5b9a\u4e49\u597d\u7684\u679a\u4e3e\u6216\u7ed3\u6784\u4f53\uff0c\u56e0\u6b64\u8981\u5b66\u4f1a\u9605\u8bfb\u6e90\u7801\u6ce8\u91ca\u3002\n */\n\n#define SensorAdcChannel  HI_ADC_CHANNEL_4\n\nstatic void SensorAdcTask(void* params)\n{\n    /* \u5b9a\u4e49ADC\u8bfb\u53d6\u7684\u6a21\u62df\u503c\u7684\u5b58\u50a8\u5730\u5740 */\n    uint16_t value;\n    while(1) \n    {\n        if (hi_adc_read(SensorAdcChannel, &amp;value, HI_ADC_EQU_MODEL_4, HI_ADC_CUR_BAIS_DEFAULT, 0) == HI_ERR_SUCCESS) {\n            printf(\"[INFO]ADC_VALUE = %d\\r\\n\", value);\n        }\n        osDelay(100);\n    }\n\n}\n\nstatic void AdcEntry(void)\n{\n     osThreadAttr_t attr = {\n        .name = \"AdcThread\",\n        .stack_size = 1024,\n        .priority = osPriorityNormal\n    };\n    if (osThreadNew(SensorAdcTask, NULL, &amp;attr) == NULL) {\n        printf(\"[ERROR] Thread Create Faild.\\r\\n\");\n    }\n}\n\nSYS_RUN(AdcEntry);\n</code></pre> <p>\u6a21\u5757\u7f16\u8bd1\u811a\u672c</p> Text Only<pre><code>static_library (\"adc_demo\") {\n    sources = [\n        \"adc_demo.c\"\n    ]\n    include_dirs = [\n        # include \"ohos_init.h\"\n        \"//utils/native/lite/include\",\n        # include CMSIS-RTOS API V2 for OpenHarmony1.0+\n        \"//kernel/liteos_m/kal/cmsis\",\n        # include IoT\u786c\u4ef6\u8bbe\u5907\u64cd\u4f5c\u63a5\u53e3 for OpenHarmony1.0+\uff1a\n        \"//base/iot_hardware/peripheral/interfaces/kits\",\n    ]\n}\n</code></pre> <p>APP\u7f16\u8bd1\u811a\u672c</p> Text Only<pre><code>import(\"//build/lite/config/component/lite_component.gni\")\n\nlite_component(\"app\") {\n    features = [\n        \"gn_practice/application:gn_app\",\n        \"gn_practice/driver:gn_driver\",\n        \"gn_practice/library:gn_library\",\n        \"kv_store_demo:kv_store_demo\",\n        \"file_demo:file_demo\",\n        \"thread_demo:thread_demo\",\n        \"timer_demo:timer_demo\",\n        \"mutex_demo:mutex_demo\",\n        # GPIO\u6a21\u5757\n        \"gpio_demo:gpio_demo\",\n        # ADC\u6a21\u5757\n        \"adc_demo:adc_demo\",\n    ]\n}\n</code></pre>"},{"location":"study/OpenHarmony/6.ADC/#63-dht11","title":"6.3 DHT11\u6e29\u6e7f\u5ea6","text":""},{"location":"study/OpenHarmony/6.ADC/#631-dht11","title":"6.3.1 DHT11\u5355\u603b\u7ebf\u901a\u4fe1","text":"<p>DHT11\u5668\u4ef6\u91c7\u7528\u7b80\u5316\u7684\u5355\u603b\u7ebf\u901a\u4fe1\u3002\u5355\u603b\u7ebf\u5373\u53ea\u6709\u4e00\u6839\u6570\u636e\u7ebf\uff0c\u7cfb\u7edf\u4e2d\u7684\u6570\u636e\u4ea4\u6362\u3001\u63a7\u5236\u5747\u7531\u5355\u603b\u7ebf\u5b8c\u6210\u3002\u5fae\u5904\u7406\u5668\u4e0eDHT11\u4e4b\u95f4\u7684\u901a\u8baf\u548c\u540c\u6b65,\u91c7\u7528\u5355\u603b\u7ebf\u6570\u636e\u683c\u5f0f\uff0c\u4e00\u6b21\u4f20\u900140\u4f4d\u6570\u636e\uff0c \u9ad8\u4f4d\u5148\u51fa \u3002  </p> <p>\u6570\u636e\u683c\u5f0f\uff1a 8bit\u6e7f\u5ea6\u6574\u6570\u6570\u636e+8bit\u6e7f\u5ea6\u5c0f\u6570\u6570\u636e+8bit\u6e29\u5ea6\u6574\u6570\u6570\u636e+8bit\u6e29\u5ea6\u5c0f\u6570\u6570\u636e+8bit\u6821\u9a8c\u4f4d\u3002\u5176\u4e2d\u6e7f\u5ea6\u5c0f\u6570\u90e8\u5206\u4e3a0\uff0c8bit\u6821\u9a8c\u4f4d\u7b49\u4e8e\u6240\u5f97\u7ed3\u679c\u7684\u672b8\u4f4d\u3002  </p> <p>\u7279\u6b8a\u8bf4\u660e\uff1a\u5f53\u6e29\u5ea6\u4f4e\u4e8e0\u2103\u65f6\u6e29\u5ea6\u6570\u636e\u7684\u4f4e8\u4f4d\u7684\u6700\u9ad8\u4f4d\u7f6e\u4e3a1\u3002</p> <p>\u793a\u4f8b\uff1a-10.1 \u2103\u8868\u793a\u4e3a 0000 1010 1000 0001  0000 1010(\u6574\u6570) = 10\u2103  \uff0c00000001(\u5c0f\u6570) = 0.1\u2103  \uff0c\u4f4e8\u4f4d\u7684\u6700\u9ad8\u4f4d\u7f6e\u4e3a 1 \u6240\u4ee5\u6e29\u5ea6\u6570\u636e\u4e3a -10.1\u2103</p> <p>\u901a\u4fe1\u65f6\u5e8f\uff1a</p> <p>\u7528\u6237\u4e3b\u673a\uff08MCU\uff09\u53d1\u9001\u4e00\u6b21\u5f00\u59cb\u4fe1\u53f7\u540e\uff0cDHT11\u4ece\u4f4e\u529f\u8017\u6a21\u5f0f\u8f6c\u6362\u5230\u9ad8\u901f\u6a21\u5f0f\uff0c\u5f85\u4e3b\u673a\u5f00\u59cb\u4fe1\u53f7\u7ed3\u675f\u540e\uff0cDHT11\u53d1\u9001\u54cd\u5e94\u4fe1\u53f7\uff0c\u9001\u51fa40bit\u7684\u6570\u636e\uff0c\u5e76\u89e6\u53d1\u4e00\u6b21\u4fe1\u606f\u91c7\u96c6\u3002  </p> <p></p>"},{"location":"study/OpenHarmony/6.ADC/#632","title":"6.3.2 \u5355\u603b\u7ebf\u901a\u4fe1\u4ee3\u7801","text":"<p>\u82af\u7247\u624b\u518c \u4e2d\u8bfb\u53d6DHT11\u6e29\u6e7f\u5ea6\u6d41\u7a0b\uff1a</p> <ul> <li>DHT11\u4e0a\u7535\u540e\uff08DHT11\u4e0a\u7535\u540e\u8981\u7b49\u5f851S\u4ee5\u8d8a\u8fc7\u4e0d\u7a33\u5b9a\u72b6\u6001\u5728\u6b64\u671f\u95f4\u4e0d\u80fd\u53d1\u9001\u4efb\u4f55\u6307\u4ee4\uff09\uff0c\u6d4b\u8bd5\u73af\u5883\u6e29\u6e7f\u5ea6\u6570\u636e\uff0c\u5e76\u8bb0\u5f55\u6570\u636e\uff0c\u540c\u65f6DHT11\u7684DATA\u6570\u636e\u7ebf\u7531 \u4e0a\u62c9\u7535\u963b \u62c9\u9ad8\u4e00\u76f4\u4fdd\u6301\u9ad8\u7535\u5e73\uff1b\u6b64\u65f6DHT11\u7684DATA\u5f15\u811a\u5904\u4e8e \u8f93\u5165\u72b6\u6001 \uff0c\u65f6\u523b\u68c0\u6d4b\u5916\u90e8\u4fe1\u53f7\u3002  </li> <li>\u5fae\u5904\u7406\u5668\u7684I/O\u8bbe\u7f6e\u4e3a \u8f93\u51fa \u540c\u65f6\u8f93\u51fa\u4f4e\u7535\u5e73\uff0c\u4e14\u4f4e\u7535\u5e73\u4fdd\u6301\u65f6\u95f4\u4e0d\u80fd\u5c0f\u4e8e18ms\uff08\u6700\u5927\u4e0d\u5f97\u8d85\u8fc730ms\uff09\uff0c\u7136\u540e\u5fae\u5904\u7406\u5668\u7684I/O\u8bbe\u7f6e\u4e3a \u8f93\u5165\u72b6\u6001 \uff0c\u7531\u4e8e\u4e0a\u62c9\u7535\u963b\uff0c\u5fae\u5904\u7406\u5668\u7684I/O\u5373DHT11\u7684DATA\u6570\u636e\u7ebf\u4e5f\u968f\u4e4b\u53d8\u9ad8\uff0c\u7b49\u5f85DHT11\u4f5c\u51fa\u56de\u7b54\u4fe1\u53f7\u3002  </li> </ul> <p></p> <ul> <li>DHT11\u7684DATA\u5f15\u811a\u68c0\u6d4b\u5230\u5916\u90e8\u4fe1\u53f7\u6709\u4f4e\u7535\u5e73\u65f6\uff0c\u7b49\u5f85\u5916\u90e8\u4fe1\u53f7\u4f4e\u7535\u5e73\u7ed3\u675f\uff0c\u5ef6\u8fdf\u540eDHT11\u7684DATA\u5f15\u811a\u5904\u4e8e\u8f93\u51fa\u72b6\u6001\uff0c\u8f93\u51fa83\u5fae\u79d2\u7684\u4f4e\u7535\u5e73\u4f5c\u4e3a\u5e94\u7b54\u4fe1\u53f7\uff0c\u7d27\u63a5\u7740\u8f93\u51fa87\u5fae\u79d2\u7684\u9ad8\u7535\u5e73\u901a\u77e5\u5916\u8bbe\u51c6\u5907\u63a5\u6536\u6570\u636e\uff0c\u5fae\u5904\u7406\u5668\u7684I/O\u6b64\u65f6\u5904\u4e8e\u8f93\u5165\u72b6\u6001\uff0c\u68c0\u6d4b\u5230I/O\u6709\u4f4e\u7535\u5e73\uff08DHT11\u56de\u5e94\u4fe1\u53f7\uff09\u540e\uff0c\u7b49\u5f8587\u5fae\u79d2\u7684\u9ad8\u7535\u5e73\u540e\u7684\u6570\u636e\u63a5\u6536 \u3002</li> </ul> <p></p> <ul> <li>\u7531DHT11\u7684DATA\u5f15\u811a\u8f93\u51fa40\u4f4d\u6570\u636e\uff0c\u5fae\u5904\u7406\u5668\u6839\u636eI/O\u7535\u5e73\u7684\u53d8\u5316\u63a5\u653640\u4f4d\u6570\u636e\uff0c\u4f4d\u6570\u636e\u201c0\u201d\u7684\u683c\u5f0f\u4e3a\uff1a54\u5fae\u79d2\u7684\u4f4e\u7535\u5e73\u548c23-27\u5fae\u79d2\u7684\u9ad8\u7535\u5e73\uff0c\u4f4d\u6570\u636e\u201c1\u201d\u7684\u683c\u5f0f\u4e3a\uff1a54\u5fae\u79d2\u7684\u4f4e\u7535\u5e73\u52a068-74\u5fae\u79d2\u7684\u9ad8\u7535\u5e73\u3002  </li> </ul> <ul> <li>\u7ed3\u675f\u4fe1\u53f7\uff1aDHT11\u7684DATA\u5f15\u811a\u8f93\u51fa40\u4f4d\u6570\u636e\u540e\uff0c\u7ee7\u7eed\u8f93\u51fa\u4f4e\u7535\u5e7354\u5fae\u79d2\u540e\u8f6c\u4e3a\u8f93\u5165\u72b6\u6001\uff0c\u7531\u4e8e\u4e0a\u62c9\u7535\u963b\u968f\u4e4b\u53d8\u4e3a\u9ad8\u7535\u5e73\u3002\u4f46DHT11\u5185\u90e8\u91cd\u6d4b\u73af\u5883\u6e29\u6e7f\u5ea6\u6570\u636e\uff0c\u5e76\u8bb0\u5f55\u6570\u636e\uff0c\u7b49\u5f85\u5916\u90e8\u4fe1\u53f7\u7684\u5230\u6765\u3002</li> </ul>"},{"location":"study/OpenHarmony/6.ADC/#633","title":"6.3.3 \u9a71\u52a8\u7a0b\u5e8f","text":"<p>\u5f85\u66f4\u65b0\u3002\u3002\u3002</p>"},{"location":"study/OpenHarmony/7.I2C/","title":"\u7b2c\u4e03\u7ae0 I2C","text":""},{"location":"study/OpenHarmony/7.I2C/#71-i2c","title":"7.1 I2C\u901a\u4fe1","text":"<p>\u63a8\u8350\u9605\u8bfb\uff1aI2C\u7406\u8bba(\u542bstm32\u8f6f\u3001\u786c\u4ef6I2C)</p> <p>\u5efa\u8bae\u638c\u63e1\uff1a\u8f6f\u4ef6\u6a21\u62dfI2C</p>"},{"location":"study/OpenHarmony/7.I2C/#72-oled","title":"7.2 OLED\u663e\u793a\u5c4f","text":""},{"location":"study/OpenHarmony/7.I2C/#721-oled","title":"7.2.1 OLED\u7b80\u4ecb","text":"<p>\u5982\u56fe\u6240\u793a\u4e3a\u4e00\u4e2a0.96\u5bf8\u7684OLED\u663e\u793a\u5c4f\uff0c\u5176\u9a71\u52a8\u82af\u7247\u4e3aSSD1306\uff0c\u4f7f\u7528I2C\u901a\u4fe1\uff0c\u4ece\u673a\u5730\u5740\u4e3a<code>0x78</code>\u3002</p> <p></p> <p>\u672c\u8282\u5173\u4e8eOLED\u7684\u4ecb\u7ecd\u5168\u90e8\u6765\u6e90\u4e8eSSD1306\u82af\u7247\u6570\u636e\u624b\u518c\u3002</p> <p></p>"},{"location":"study/OpenHarmony/7.I2C/#722","title":"7.2.2 \u4ece\u673a\u5730\u5740","text":"<p>\u5185\u5bb9\u6765\u6e90\uff1aSSD1306\u82af\u7247\u6570\u636e\u624b\u518c 8.1.5 MUC  I2C Interface</p> <ol> <li>8Bit\uff0c\u5176\u4e2d\u9ad87\u4f4d\u8868\u793a\u4ece\u673a\u5730\u5740\u3002</li> <li>\u201cSA0\u201d bit  \u662f\u4e3a\u4e86\u4ece\u673a\u5730\u5740\u7684\u7075\u6d3b\u6027\uff0c\u53ef\u4ee5\u9009\u62e9 \u201c0111100\u201d \u6216 \u201c0111101\u201d \u4e3aSSD1306\u82af\u7247\u7684\u4ece\u673a\u5730\u5740\u3002 </li> <li>\u201cR/W#\u201d bit \u662f\u9009\u62e9\u8bfb\u5199\u6a21\u5f0f\uff0cR/W#=1  \u4e3a\u8bfb\u6a21\u5f0f\uff0cR/W#=0  \u4e3a\u5199\u6a21\u5f0f\u3002</li> </ol> <p></p> <p>\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8bf4\u4ece\u673a\u5730\u5740\u662f<code>0x78</code>\u5462\uff1f  </p> <p>\u5b9e\u9645\u4e0a\u6211\u4eec\u8bf4\u4ece\u673a\u5730\u5740\u65f6\uff0c\u5ffd\u7565\u6700\u4f4e\u4f4d\u8865\u96f6\uff0c\u90a3\u4e48\u9ed8\u8ba4\u7684\u5730\u5740\u5c31\u662f 0111100\uff0c\u4e5f\u5c31\u662f<code>0x78</code>\u3002\u7136\u800c\uff0c\u5728\u5b9e\u9645I2C\u901a\u4fe1\u4e2d\u5219\u4e0d\u662f\u76f4\u63a5\u53d1\u4ece\u673a\u5730\u5740 \uff0c\u800c\u662f\u52a0\u4e0a\u8bfb\u5199\u4f4d\u3002\u5982\u4e0b\u56fe\uff0c\u5728I2C\u901a\u4fe1\u65f6\uff0c\u82e5\u6211\u4eec\u8fdb\u5165\u5199\u6a21\u5f0f\uff0c\u5219\u672b\u4f4d\u8865\u96f6\uff0c\u7a0b\u5e8f\u4e2d\u53ef\u4ee5\u4f7f\u7528<code>0x78|0x00</code>\uff0c\u8bfb\u6a21\u5f0f\u5219\u4e3a<code>0x78|0x01</code>\u3002</p> <p></p>"},{"location":"study/OpenHarmony/7.I2C/#723-gddram","title":"7.2.3 \u663e\u5b58(GDDRAM)","text":"<p>\u5185\u5bb9\u6765\u6e90\uff1aSSD1306\u82af\u7247\u6570\u636e\u624b\u518c8.7 Graphic Display Data RAM (GDDRAM)</p> <p>\u5982\u4e0b\u56fe RAM \u5927\u5c0f\u662f 128x64 Bits\uff0c\u88ab\u5212\u5206\u4e3a 8 \u4e2apages\uff0c\u4e00\u4e2apage\u67098\u50cf\u7d20\u70b9\u3002 \u5176\u4e2d\uff0c\u7eff\u8272\u7684\u8ba1\u6570\u65b9\u5f0f\u4e3a\u91cd\u6620\u5c04\u540e\u7684\uff0c\u9ed8\u8ba4\u4e3a\u9ed1\u8272\u5b57\u4f53\u6837\u5f0f\u3002</p> <p></p> <p>\u5f53\u4e00\u4e2a\u5b57\u8282\u7684\u6570\u636e\u88ab\u5199\u5165 GDDRAM (\u4e5f\u5c31\u662f\u901a\u8fc7I2C\u53d1\u9001\u4e00\u4e2a\u5b57\u8282\u6570\u636e)\u65f6\uff0c\u5f53\u524d\u4e00page\u4e00\u5217(8Bit)\u5c31\u4f1a\u88ab\u70b9\u4eae\u3002\u6ce8\u610f\u4f4e\u4f4d\u5728\u4e0a\uff0c\u9ad8\u4f4d\u5728\u4e0b\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p>"},{"location":"study/OpenHarmony/7.I2C/#724","title":"7.2.4 \u547d\u4ee4\u8868","text":"<p>\u5185\u5bb9\u6765\u6e90\uff1aSSD1306\u82af\u7247\u6570\u636e\u624b\u518c9. COMMAND TABLE </p> <p>\u5c55\u793a\u4e00\u4e9b\u5e38\u7528\u7684\u547d\u4ee4\uff1a</p> \u4ee3\u7801\uff0816\u8fdb\u5236\uff09 \u547d\u4ee4 \u8bf4\u660e 81+xx \u8bbe\u7f6e\u5bf9\u6bd4\u5ea6 \u4e24\u4e2a\u5b57\u8282\u7684\u547d\u4ee4\uff0cxx \u7684\u8303\u56f4\u4e3a 0~255\uff0c\u503c\u8d8a\u5927\uff0c\u5bf9\u6bd4\u5ea6\u8d8a\u9ad8\u3002 A4/A5 \u5f00\u542f\uff0f\u5173\u95ed\u6574\u4f53\u663e\u793a A4\uff1a\u5c06\u663e\u5b58\u5185\u5bb9\u8f93\u51fa\u5230\u5c4f\u5e55\u3002  A5\uff1a\u8f93\u51fa\u65f6\u5ffd\u7565\u663e\u5b58\u5185\u5bb9\u3002 A6/A7 \u8bbe\u7f6e\u6b63\u5e38\uff0f\u53cd\u8272\u663e\u793a A6\uff1a\u6b63\u5e38\u663e\u793a\u30020\u5bf9\u5e94\u50cf\u7d20\u7184\u706d\uff0c1\u5bf9\u5e94\u50cf\u7d20\u4eae\u8d77\u3002  A7\uff1a\u53cd\u8272\u663e\u793a\u30020\u5bf9\u5e94\u50cf\u7d20\u4eae\u8d77\uff0c1\u5bf9\u5e94\u50cf\u7d20\u7184\u706d\u3002 AE/AF \u8bbe\u7f6e\u663e\u793a\u5f00\uff0f\u5173 AE\uff1a\u663e\u793a\u5173\u95ed\uff08\u7761\u7720\u6a21\u5f0f\uff0c\u9ed8\u8ba4\u72b6\u6001\uff09\u3002  AF\uff1a\u663e\u793a\u5f00\u542f\uff08\u6b63\u5e38\u6a21\u5f0f\uff09\u3002 B0~B7 \u5728\u9875\u5bfb\u5740\u6a21\u5f0f\u65f6\uff0c\u8bbe\u7f6e\u9875\u9762\u8d77\u59cb\u5730\u5740 \u8bbe\u7f6eGDDRAM\u9875\u9762\u8d77\u59cb\u5730\u5740\uff08PAGE0~PAGE7\uff09\u3002 00~0F \u5728\u9875\u5bfb\u5740\u6a21\u5f0f\u65f6\uff0c\u8bbe\u7f6e\u5217\u5730\u5740\u7684\u4f4e4\u4f4d \u5217\u5730\u5740\u8303\u56f4\u4e3a 0~127\uff0c\u5373 0x00~0x7f\u3002 10~1F \u5728\u9875\u5bfb\u5740\u6a21\u5f0f\u65f6\uff0c\u8bbe\u7f6e\u5217\u5730\u5740\u7684\u9ad84\u4f4d \u5217\u5730\u5740\u7684\u9ad8 4 \u4f4d\u9700\u8981\u548c0x10\u8fdb\u884c\u6309\u4f4d\u6216\u4f5c\u4e3a\u503c\u3002 C<pre><code>0xAE,  // \u663e\u793a\u5173\u95ed\n0x00,  // \u9875\u5bfb\u5740\u6a21\u5f0f\u65f6\uff0c\u8bbe\u7f6e\u5217\u5730\u5740\u7684\u4f4e4\u4f4d\u4e3a0000\n0x10,  // \u9875\u5bfb\u5740\u6a21\u5f0f\u65f6\uff0c\u8bbe\u7f6e\u5217\u5730\u5740\u7684\u9ad84\u4f4d\u4e3a0000\n0x40,  // \u8bbe\u7f6e\u8d77\u59cb\u884c\u5730\u5740\u4e3a\u7b2c0\u884c\n0xB0,  // \u9875\u5bfb\u5740\u6a21\u5f0f\u65f6\uff0c\u8bbe\u7f6e\u9875\u9762\u8d77\u59cb\u5730\u5740\u4e3aPAGE0\n0x81,  // \u8bbe\u7f6e\u5bf9\u6bd4\u5ea6\n0xFF,  // \u5bf9\u6bd4\u5ea6\u503c\n0xA1,  // set segment remap\n0xA6,  // \u8bbe\u7f6e\u6b63\u5e38\u663e\u793a\u30020\u5bf9\u5e94\u50cf\u7d20\u7184\u706d\uff0c1\u5bf9\u5e94\u50cf\u7d20\u4eae\u8d77\n0xA8,  // --set multiplex ratio(1 to 64)\n0x3F,  // --1/32 duty\n0xC0,  // scan direction\n0xD3,  // -set display offset\n0x00,  // set osc division\n0xD5,  // set osc division\n0x80,  \n0xD8,  // set area color mode off\n0x05,  \n0xD9,  // Set Pre-Charge Period\n0xF1,  \n0xDA,  // set com pin configuargtion\n0x12,  \n0xDB,  // set Vcomh\n0x30,  // set charge pump enable\n0x8D,  // set charge pump enable\n0x14,  \n0xAF,  // \u663e\u793a\u5f00\u542f\n</code></pre>"},{"location":"study/OpenHarmony/7.I2C/#725","title":"7.2.5 \u663e\u5b58\u5bfb\u5740\u6a21\u5f0f","text":"<p>\u9875\u5bfb\u5740\u6a21\u5f0f(0x20)</p> <p>\u9875\u5bfb\u5740\u6a21\u5f0f\u5c06\u6574\u4e2a\u663e\u5b58\u5212\u5206\u4e3a\u591a\u4e2a \u201c\u9875\u201d\uff0c\u6bcf\u4e00\u9875\u5305\u542b 8 \u884c\u50cf\u7d20\u3002\u540c\u4e00\u9875\u5185\u7684\u50cf\u7d20\u6309\u5217\u7ec4\u7ec7\uff0c\u5199\u5b8c\u4e00\u5217\u7684 8 \u4e2a\u50cf\u7d20\u540e\uff0c\u5217\u5730\u5740\u81ea\u52a8\u52a0 1\u3002\u5f53\u5217\u5730\u5740\u8fbe\u5230\u8be5\u9875\u7684\u6700\u5927\u5217\u6570\u65f6\uff0c\u5217\u5730\u5740\u4f1a\u56de\u5230\u8d77\u59cb\u5217\uff0c\u4f46\u9875\u5730\u5740\u4e0d\u4f1a\u81ea\u52a8\u6539\u53d8\uff0c\u9700\u8981\u901a\u8fc7\u4e13\u95e8\u7684\u547d\u4ee4\u6765\u5207\u6362\u9875\u3002\u5bf9\u4e8e 128x64 \u7684 SSD1306 \u663e\u793a\u5c4f\uff0c\u4f1a\u88ab\u5212\u5206\u4e3a 8 \u9875\uff08\u7f16\u53f7 0 - 7\uff09\uff0c\u6bcf\u9875\u6709 128 \u5217\u3002\u540c\u65f6\u4e5f\u5bfb\u5740\u6a21\u5f0f\u662f \u9ed8\u8ba4\u7684\u5bfb\u5740\u6a21\u5f0f \u3002</p> <p></p> <p>\u6c34\u5e73\u5bfb\u5740\u6a21\u5f0f(0x21)</p> <p>\u5728\u6c34\u5e73\u5bfb\u5740\u6a21\u5f0f\u4e0b\uff0c\u663e\u5b58\u7684\u8bfb\u5199\u64cd\u4f5c\u662f\u6309\u7167\u4ece\u5de6\u5230\u53f3\u3001\u4ece\u4e0a\u5230\u4e0b\u7684\u987a\u5e8f\u9010\u5217\u8fdb\u884c\u7684\u3002\u5f53\u5199\u5b8c\u4e00\u884c\u7684\u6240\u6709\u5217\u540e\uff0c\u4f1a\u81ea\u52a8\u8df3\u5230\u4e0b\u4e00\u884c\u7684\u8d77\u59cb\u5217\u7ee7\u7eed\u8fdb\u884c\u64cd\u4f5c\u3002\u5982\u679c\u5230\u8fbe\u4e86\u663e\u5b58\u7684\u6700\u540e\u4e00\u5217\uff0c\u5730\u5740\u6307\u9488\u4f1a\u81ea\u52a8\u56de\u5230\u7b2c\u4e00\u5217\uff0c\u540c\u65f6\u884c\u5730\u5740\u52a0 1\uff1b\u82e5\u5230\u8fbe\u6700\u540e\u4e00\u884c\uff0c\u5219\u5730\u5740\u6307\u9488\u56de\u5230\u7b2c\u4e00\u884c\u7b2c\u4e00\u5217\u3002</p> <p></p> <p>\u5782\u76f4\u5bfb\u5740\u6a21\u5f0f(0x22)</p> <p>\u5782\u76f4\u5bfb\u5740\u6a21\u5f0f\u4e0b\uff0c\u663e\u5b58\u7684\u8bfb\u5199\u662f\u6309\u5217\u8fdb\u884c\u7684\uff0c\u5148\u4ece\u4e0a\u5230\u4e0b\u5199\u5b8c\u4e00\u5217\uff0c\u518d\u8df3\u5230\u4e0b\u4e00\u5217\u7ee7\u7eed\u64cd\u4f5c\u3002\u5f53\u5199\u5b8c\u6240\u6709\u5217\u540e\uff0c\u5217\u5730\u5740\u4f1a\u56de\u5230\u8d77\u59cb\u5217\uff0c\u540c\u65f6\u884c\u5730\u5740\u52a0 1\u3002\u5982\u679c\u5230\u8fbe\u6700\u540e\u4e00\u884c\uff0c\u5219\u5730\u5740\u6307\u9488\u56de\u5230\u7b2c\u4e00\u884c\u7b2c\u4e00\u5217\u3002</p> <p></p>"},{"location":"study/OpenHarmony/7.I2C/#726","title":"7.2.6 \u9875\u5bfb\u5740\u6a21\u5f0f","text":"<ul> <li>\u6309\u5217\u5199\uff0c\u4ece\u52170\u5f00\u59cb\uff0c\u5230\u5217127\u7ed3\u675f\u3002\u6bcf\u5217\u4e00\u4e2a\u5b57\u8282\u6570\u636e\uff0c\u4f4e\u4f4d\u5728\u4e0a\uff0c\u9ad8\u4f4d\u5728\u4e0b\u3002</li> <li>\u5217\u5730\u5740\u6307\u9488(RAM access pointer)\uff0c\u6bcf\u8bfb\u53d6\u6216\u5199\u5165\u4e00\u4e2a\u5b57\u8282\u6570\u636e\uff0c\u5217\u5730\u5740\u6307\u9488\u81ea\u52a8+1\uff0c\u5230\u5217127\u540e\u8fd4\u56de\u52170\u3002</li> <li>\u8bbe\u7f6e\u8d77\u59cb\u9875\uff0c\u76f8\u5f53\u4e8eY\u8f74\uff0c\u547d\u4ee40xB0 - 0xB7\u3002</li> <li>\u8bbe\u7f6e\u5217\u5730\u5740\u4f4e\u56db\u4f4d\uff0c\u547d\u4ee40x00 - 0x0F\u3002</li> <li>\u8bbe\u7f6e\u5217\u5730\u5740\u9ad8\u56db\u4f4d\uff0c\u547d\u4ee40x10 - 0x1F\u3002</li> </ul> <p>\u5c01\u88c5\u5bfb\u5740\u4e3a\u51fd\u6570\uff0c\u7528\u4e8e\u786e\u5b9aX\u3001Y\u5750\u6807\uff1a</p> C<pre><code>/** \n * @param x: \u6a2a\u5750\u6807\uff0c\u53d6\u503c\u8303\u56f4\u662f0~127\uff0c\u5bf9\u5e94128\u4e2a\u50cf\u7d20\u70b9\uff0cx\u7684\u5355\u4f4d\u4e3abit\u3002\n * @param y: \u7eb5\u5750\u6807\uff0c\u53d6\u503c\u8303\u56f4\u662f0~7\uff0c\u5bf9\u5e948\u4e2apages\uff0cy\u7684\u5355\u4f4d\u662f\u5b57\u8282(8bits)\u3002\n */\nvoid OledSetPosition(uint8_t x, uint8_t y)\n{\n    /* \u8d77\u59cb\u9875(y\u5750\u6807) */\n    WriteCmd(0xB0 + y);\n    /* \u5217\u5730\u5740\u4f4e\u56db\u4f4d */\n    WriteCmd(0x0F &amp; x);\n    /* \u5217\u5730\u5740\u9ad8\u56db\u4f4d */\n    WriteCmd(0x10 | ((0xF0 &amp; x) &gt;&gt; 4));\n}\n</code></pre> <p>\u4f8b\uff1ax= 0x5D = 93 = 0101 1101\uff0cy = 3</p> C<pre><code>/* \u8d77\u59cb\u9875(y\u5750\u6807) */\n0xB0 + y = 0xB3  =&gt; page3\n/* \u5217\u5730\u5740\u4f4e\u56db\u4f4d */\n0x0F &amp; x = 0000 1101 = 0x0D\n/* \u5217\u5730\u5740\u9ad8\u56db\u4f4d */\n0xF0 &amp; x = 0101 0000\n((0xF0 &amp; x) &gt;&gt; 4) = 0000 0101\n0x10 | ((0xF0 &amp; x) &gt;&gt; 4) = 0001 0101 = 0x15\n</code></pre>"},{"location":"study/OpenHarmony/7.I2C/#727-i2c","title":"7.2.7 I2C\u5199\u6a21\u5f0f","text":"<p>\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u5728\u53d1\u9001\u5b8c\u4ece\u673a\u5730\u5740\u540e\u6211\u4eec\u9700\u8981\u53d1\u9001\u4e00\u4e2a \u63a7\u5236\u5b57\u8282 \u6307\u5b9a\u8981\u53d1\u9001 \u547d\u4ee4 \u8fd8\u662f \u6570\u636e \uff0c\u63a7\u5236\u5b57\u8282\u7531Co\u4f4d\u3001D/C#\u4f4d\u548c\u516d\u4e2a0\u7ec4\u6210\uff1a</p> <p>Co\u4f4d\uff0c\u5f53<code>C0=0</code>\u8868\u793a\u540e\u7eed\u4f20\u8f93\u7684\u4fe1\u606f\u5c06\u4ec5\u5305\u542b\u6570\u636e\u5b57\u8282\uff0c\u5373\u4e0d\u542b\u63a7\u5236\u5b57\u8282\u3002</p> <p>D/C#\u4f4d\uff0c\u5176\u4e2d<code>D/C#=0</code>\u5219\u4e0b\u4e00\u4e2a\u5b57\u8282\u4e3a\u547d\u4ee4\uff0c<code>D/C#=1</code>\u5219\u4e0b\u4e00\u4e2a\u5b57\u8282\u4e3a\u6570\u636e\u3002</p> <p>\u56e0\u6b64\uff0c\u53d1\u9001\u547d\u4ee4\u7684\u63a7\u5236\u5b57\u8282\u4e3a 0x00 (<code>C0=0</code>\u4e14<code>D/C#=0</code>)\uff1b\u53d1\u9001\u6570\u636e\u7684\u63a7\u5236\u5b57\u8282\u4e3a 0x40 (<code>C0=0</code>\u4e14<code>D/C#=1</code>)\u3002</p> <p></p>"},{"location":"study/OpenHarmony/7.I2C/#73-oled","title":"7.3 OLED\u7b80\u6613\u9a71\u52a8","text":""},{"location":"study/OpenHarmony/7.I2C/#731-oled","title":"7.3.1 OLED\u9a71\u52a8\u4ee3\u7801","text":"<p><code>oled_fonts.h</code></p> C<pre><code>#ifndef OLOED_FONTS_H\n#define OLOED_FONTS_H\n\n/************************************6*8\u7684\u70b9\u9635************************************/\n// \u53d6\u6a21\u65b9\u5f0f\uff1a\u7eb5\u54118\u70b9\u4e0b\u9ad8\u4f4d\n// \u91c7\u7528N*6\u7684\u4e8c\u7ef4\u6570\u7ec4\n// \u7b2c\u4e00\u7ef4\u8868\u793a\u5b57\u7b26\n// \u6bcf\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7b2c\u4e8c\u7ef4\u76846\u4e2a\u6570\u7ec4\u5143\u7d20\uff0c\u6bcf\u4e2a\u6570\u7ec4\u5143\u7d201\u5b57\u8282\uff0c\u8868\u793a1\u5217\u50cf\u7d20\uff0c\u4e00\u51716\u52178\u884c\nstatic unsigned char F6x8[][6] =\n{\n    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // \u7a7a\u683c\n    { 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 }, // !\n    { 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 }, // \"\n    { 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 }, // #\n    { 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 }, // $\n    { 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 }, // %\n    { 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 }, // &amp;\n    { 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 }, // '\n    { 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 }, // (\n    { 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 }, // )\n    { 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 }, // *\n    { 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 }, // +\n    { 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 }, // ,\n    { 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 }, // -\n    { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 }, // .\n    { 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 }, // /\n    { 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E }, // 0\n    { 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 }, // 1\n    { 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 }, // 2\n    { 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 }, // 3\n    { 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 }, // 4\n    { 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 }, // 5\n    { 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 }, // 6\n    { 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 }, // 7\n    { 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 }, // 8\n    { 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E }, // 9\n    { 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 }, // :\n    { 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 }, // ;\n    { 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 }, // &lt;\n    { 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 }, // =\n    { 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 }, // &gt;\n    { 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 }, // ?\n    { 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E }, // @\n    { 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C }, // A\n    { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 }, // B\n    { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 }, // C\n    { 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C }, // D\n    { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 }, // E\n    { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 }, // F\n    { 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A }, // G\n    { 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F }, // H\n    { 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 }, // I\n    { 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 }, // J\n    { 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 }, // K\n    { 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 }, // L\n    { 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F }, // M\n    { 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F }, // N\n    { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E }, // O\n    { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 }, // P\n    { 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E }, // Q\n    { 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 }, // R\n    { 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 }, // S\n    { 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 }, // T\n    { 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F }, // U\n    { 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F }, // V\n    { 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F }, // W\n    { 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 }, // X\n    { 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 }, // Y\n    { 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 }, // Z\n    { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 }, // [\n    { 0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55 }, /* \\ */\n    { 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 }, // ]\n    { 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 }, // ^\n    { 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 }, // _\n    { 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 }, // '\n    { 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 }, // a\n    { 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 }, // b\n    { 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 }, // c\n    { 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F }, // d\n    { 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 }, // e\n    { 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 }, // f\n    { 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C }, // g\n    { 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 }, // h\n    { 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 }, // i\n    { 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 }, // j\n    { 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 }, // k\n    { 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 }, // l\n    { 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 }, // m\n    { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 }, // n\n    { 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 }, // o\n    { 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 }, // p\n    { 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC }, // q\n    { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 }, // r\n    { 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 }, // s\n    { 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 }, // t\n    { 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C }, // u\n    { 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C }, // v\n    { 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C }, // w\n    { 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 }, // x\n    { 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C }, // y\n    { 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 }, // z\n    { 0x14, 0x14, 0x14, 0x14, 0x14, 0x14 }, // horiz lines\n};\n\n/****************************************8*16\u7684\u70b9\u9635************************************/\n// \u53d6\u6a21\u65b9\u5f0f\uff1a\u7eb5\u54118\u70b9\u4e0b\u9ad8\u4f4d\n// \u91c7\u7528\u4e00\u7ef4\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5b57\u7b26\u5bf9\u5e9416\u4e2a\u6570\u7ec4\u5143\u7d20\n// \u6bcf16\u4e2a\u6570\u7ec4\u5143\u7d20\u7684\u524d8\u4e2a\u8868\u793a\u5b57\u7b26\u7684\u4e0a\u534a\u90e8\u5206\uff088*8\u70b9\u9635\uff09\uff0c\u540e8\u4e2a\u8868\u793a\u5b57\u7b26\u7684\u4e0b\u534a\u90e8\u5206\uff088*8\u70b9\u9635\uff09\uff0c\u4e00\u51718\u521716\u884c\nstatic const unsigned char F8X16[]=\n{\n    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//\u7a7a\u683c 0\n    0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00,//! 1\n    0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//\" 2\n    0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00,//# 3\n    0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00,//$ 4\n    0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00,//% 5\n    0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10,//&amp; 6\n    0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//' 7\n    0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00,//( 8\n    0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,//) 9\n    0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,//* 10\n    0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00,//+ 11\n    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00,//, 12\n    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,//- 13\n    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,//. 14\n    0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,/// 15\n    0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,//0 16\n    0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//1 17\n    0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,//2 18\n    0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,//3 19\n    0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,//4 20\n    0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,//5 21\n    0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,//6 22\n    0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,//7 23\n    0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,//8 24\n    0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,//9 25\n    0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,//: 26\n    0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00,//; 27\n    0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00,//&lt; 28\n    0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,//= 29\n    0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00,//&gt; 30\n    0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00,//? 31\n    0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00,//@ 32\n    0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,//A 33\n    0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,//B 34\n    0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,//C 35\n    0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,//D 36\n    0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,//E 37\n    0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,//F 38\n    0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,//G 39\n    0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,//H 40\n    0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//I 41\n    0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,//J 42\n    0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,//K 43\n    0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,//L 44\n    0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00,//M 45\n    0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,//N 46\n    0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,//O 47\n    0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,//P 48\n    0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00,//Q 49\n    0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,//R 50\n    0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,//S 51\n    0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//T 52\n    0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//U 53\n    0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,//V 54\n    0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00,//W 55\n    0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,//X 56\n    0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//Y 57\n    0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,//Z 58\n    0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00,//[ 59\n    0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00,//\\ 60\n    0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00,//] 61\n    0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//^ 62\n    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,//_ 63\n    0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//` 64\n    0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20,//a 65\n    0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,//b 66\n    0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,//c 67\n    0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20,//d 68\n    0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00,//e 69\n    0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//f 70\n    0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,//g 71\n    0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//h 72\n    0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//i 73\n    0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,//j 74\n    0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00,//k 75\n    0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//l 76\n    0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,//m 77\n    0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//n 78\n    0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//o 79\n    0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00,//p 80\n    0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80,//q 81\n    0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,//r 82\n    0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,//s 83\n    0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00,//t 84\n    0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,//u 85\n    0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00,//v 86\n    0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00,//w 87\n    0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00,//x 88\n    0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00,//y 89\n    0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,//z 90\n    0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40,//{ 91\n    0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,//| 92\n    0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00,//} 93\n    0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//~ 94\n};\n\n#endif\n</code></pre> <p><code>oled.h</code></p> C<pre><code>#ifndef OLED_H\n#define OLED_H\n\ntypedef enum {\n    FONT6x8 = 1,\n    FONT8x16,\n}Font;\n\nuint32_t OledInit(void);\nvoid OledSetPosition(uint8_t x, uint8_t y);\nvoid OledFillScreen(uint8_t data);\nvoid OledShowChar(uint8_t x, uint8_t y, uint8_t ch, Font font);\nvoid OledShowString(uint8_t x, uint8_t y,  const char *str, Font font);\n\n#endif  // OLED_H\n</code></pre> <p><code>oled.c</code></p> C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdint.h&gt;\n#include \"iot_gpio.h\"\n#include \"iot_i2c.h\"\n#include \"iot_errno.h\"\n#include \"hi_io.h\"\n#include \"oled_fonts.h\"\n#include \"oled.h\"\n\n\n// \u4ece\u673a\u5730\u5740(\u6700\u4f4e\u4f4d\u8865\u96f6\u540e)\n#define OLED_SLAVE_ADDR     0x78\n// I2C\u8bbe\u5907ID\uff0c\u5373\u4f7f\u7528I2C1\n#define OLED_I2C1_ID        1\n// I2C1\u5f15\u811a\n#define OLED_I2C1_SDA       0\n#define OLED_I2C1_SCL       1\n// I2C1\u7684\u6ce2\u7279\u7387\uff0c\u5373\u4f20\u8f93\u901f\u7387 400kHZ\n#define OLED_I2C1_BAUDRATE  (400 * 1000)\n// \u63a7\u5236\u5b57\u8282-\u5199\u547d\u4ee4\n#define OLED_CTR_CMD        0x00\n// \u63a7\u5236\u5b57\u8282-\u5199\u6570\u636e\n#define OLED_CTR_DATA       0x40\n// \u8ba1\u7b97\u6570\u7ec4\u957f\u5ea6\n#define ARRAY_SIZE(a) sizeof(a) / sizeof(a[0])\n\n/* \u5b58\u50a8\u53d1\u9001\u548c\u63a5\u6536\u7684\u6570\u636e */\ntypedef struct\n{\n    // \u8981\u53d1\u9001\u7684\u6570\u636e\u7684\u6307\u9488\n    unsigned char *sendBuf;\n    // \u8981\u53d1\u9001\u7684\u6570\u636e\u957f\u5ea6\n    unsigned int sendLen;\n    // \u8981\u63a5\u6536\u7684\u6570\u636e\u7684\u6307\u9488\n    unsigned char *receiveBuf;\n    // \u8981\u63a5\u6536\u7684\u6570\u636e\u957f\u5ea6\n    unsigned int receiveLen;\n} IotI2cData;\n\n\n/**\n * @brief \u6307\u5b9a\u5185\u5b58\u5730\u5740\u5199\u5165\u4e00\u4e2a\u5b57\u8282\u547d\u4ee4/\u6570\u636e\n * @param memAddr \u5185\u5b58\u5730\u5740\uff0c\u53ef\u4ee5\u9009\u62e9\u5199\u5165\u547d\u4ee4 0x00 \u6216\u5199\u5165\u6570\u636e 0x40 \u6a21\u5f0f\n * @param byte \u9700\u8981\u5199\u5165\u7684\u547d\u4ee4/\u6570\u636e\n * @retval \u6210\u529f\u8fd4\u56de IOT_SUCCESS\uff0c\u5931\u8d25\u8fd4\u56de IOT_FAILURE\n */\nstatic uint32_t I2cMemWriteByte(uint8_t memAddr, uint8_t byte)\n{\n    /* \u5b9a\u4e49\u53d1\u9001\u7684 */\n    uint8_t buffer[] = {memAddr, byte};\n    IotI2cData i2cData = {0};\n    /* \u7528\u7ed3\u6784\u4f53\u5904\u7406\u53d1\u9001\u6570\u636e */\n    i2cData.sendBuf = buffer;\n    i2cData.sendLen = sizeof(buffer) / sizeof(buffer[0]);\n    return IoTI2cWrite(OLED_I2C1_ID, OLED_SLAVE_ADDR, i2cData.sendBuf, i2cData.sendLen);\n}\n\n/**\n * @brief \u5199\u4e00\u4e2a\u5b57\u8282\u547d\u4ee4\n * @param cmd \u9700\u5199\u5165\u7684\u547d\u4ee4\n * @retval \u6210\u529f\u8fd4\u56de IOT_SUCCESS\uff0c\u5931\u8d25\u8fd4\u56de IOT_FAILURE\n */\nstatic uint32_t WriteCmd(uint8_t cmd)\n{\n    return I2cMemWriteByte(OLED_CTR_CMD, cmd);\n}\n\n/**\n * @brief \u5199\u4e00\u4e2a\u5b57\u8282\u6570\u636e\n * @param data \u9700\u5199\u5165\u7684\u6570\u636e\n * @retval \u6210\u529f\u8fd4\u56de IOT_SUCCESS\uff0c\u5931\u8d25\u8fd4\u56de IOT_FAILURE\n */\nstatic uint32_t WriteData(uint8_t data)\n{\n    return I2cMemWriteByte(OLED_CTR_DATA, data);\n}\n\n/**\n * @brief \u521d\u59cb\u5316OLED\n */\nuint32_t OledInit(void)\n{\n    static const uint8_t initCmds[] = {\n        0xAE, // \u663e\u793a\u5173\u95ed\n        0x00, // \u9875\u5bfb\u5740\u6a21\u5f0f\u65f6\uff0c\u8bbe\u7f6e\u5217\u5730\u5740\u7684\u4f4e4\u4f4d\u4e3a0000\n        0x10, // \u9875\u5bfb\u5740\u6a21\u5f0f\u65f6\uff0c\u8bbe\u7f6e\u5217\u5730\u5740\u7684\u9ad84\u4f4d\u4e3a0000\n        0x40, // \u8bbe\u7f6e\u8d77\u59cb\u884c\u5730\u5740\u4e3a\u7b2c0\u884c\n        0xB0, // \u9875\u5bfb\u5740\u6a21\u5f0f\u65f6\uff0c\u8bbe\u7f6e\u9875\u9762\u8d77\u59cb\u5730\u5740\u4e3aPAGE0\n        0x81, // \u8bbe\u7f6e\u5bf9\u6bd4\u5ea6\n        0xFF, // \u5bf9\u6bd4\u5ea6\u6570\u503c\n        0xA1, // set segment remap\n        0xA6, // \u8bbe\u7f6e\u6b63\u5e38\u663e\u793a\u30020\u5bf9\u5e94\u50cf\u7d20\u7184\u706d\uff0c1\u5bf9\u5e94\u50cf\u7d20\u4eae\u8d77\n        0xA8, // --set multiplex ratio(1 to 64)\n        0x3F, // --1/32 duty\n        0xC8, // Com scan direction\n        0xD3, // -set display offset\n        0x00, //\n        0xD5, // set osc division\n        0x80, //\n        0xD8, // set area color mode off\n        0x05, //\n        0xD9, // Set Pre-Charge Period\n        0xF1, //\n        0xDA, // set com pin configuartion\n        0x12, //\n        0xDB, // set Vcomh\n        0x30, //\n        0x8D, // set charge pump enable\n        0x14, //\n        0xAF, // \u663e\u793a\u5f00\u542f\n    };\n    /* \u521d\u59cb\u5316I2C\u7684GPIO\u5f15\u811a */\n    IoTGpioInit(OLED_I2C1_SDA);\n    hi_io_set_func(OLED_I2C1_SDA, HI_IO_FUNC_GPIO_0_I2C1_SDA);\n    IoTGpioInit(OLED_I2C1_SCL);\n    hi_io_set_func(OLED_I2C1_SCL, HI_IO_FUNC_GPIO_1_I2C1_SCL);\n    /* \u521d\u59cb\u5316I2C1\u7684\u6ce2\u7279\u7387 */\n    IoTI2cInit(OLED_I2C1_ID, OLED_I2C1_BAUDRATE);\n    /* \u53d1\u9001\u521d\u59cb\u5316\u547d\u4ee4 */ \n    for (int i=0 ; i &lt; ARRAY_SIZE(initCmds) ; i++) {\n        uint32_t status = WriteCmd(initCmds[i]);\n        if (status != IOT_SUCCESS) {\n            return status;\n        }\n    }\n    return IOT_SUCCESS;\n}\n\n/** \n * @brief \u8bbe\u7f6e\u663e\u793a\u7684\u8d77\u59cb\u4f4d\u7f6e\n * @param x: \u6a2a\u5750\u6807\uff0c\u53d6\u503c\u8303\u56f4\u662f0~127\uff0c\u5bf9\u5e94128\u4e2a\u50cf\u7d20\u70b9\uff0c\u5355\u4f4d\u4e3a1bit\u3002\n * @param y: \u7eb5\u5750\u6807\uff0c\u53d6\u503c\u8303\u56f4\u662f0~7\uff0c\u5bf9\u5e948\u4e2apages\uff0c\u5355\u4f4d\u662f\u5b57\u8282(8bits)\u3002\n */\nvoid OledSetPosition(uint8_t x, uint8_t y)\n{\n    /* \u8d77\u59cb\u9875(y\u5750\u6807) */\n    WriteCmd(0xB0 + y);\n    /* \u5217\u5730\u5740\u4f4e\u56db\u4f4d */\n    WriteCmd(0x0F &amp; x);\n    /* \u5217\u5730\u5740\u9ad8\u56db\u4f4d */\n    WriteCmd(0x10 | ((0xF0 &amp; x) &gt;&gt; 4));\n}\n\n/**\n * @brief \u5168\u5c4f\u586b\u5145\uff0c\u5373\u6309128\u5217\u6570\u636e\u4e00\u81f4\u7684\u65b9\u5f0f\u586b\u5145\n * @param data \u586b\u5145\u76841\u5b57\u8282\u6570\u636e\n */\nvoid OledFillScreen(uint8_t data)\n{\n    uint8_t m=0;\n    uint8_t n=0;\n    /* \u904d\u53868\u4e2apage\uff0c\u4e00\u4e2apage\u67098\u50cf\u7d20\u70b9 */\n    for (m=0 ; m &lt; 8 ; m++) {\n        // \u8bbe\u7f6epage\u5730\u5740\uff1a0~7\n        WriteCmd(0xB0 + m);\n        // \u8bbe\u7f6e\u663e\u793a\u4f4d\u7f6e\u4e3a\u7b2c0\u5217\n        WriteCmd(0x00);\n        WriteCmd(0x10);\n        // \u904d\u5386128\u5217\n        for (n=0 ; n &lt; 128 ; n++) {\n            WriteData(data);\n        }\n    }\n}\n\n/**\n * @brief \u663e\u793a\u4e00\u4e2a\u5b57\u7b26\n * @param x: x\u5750\u6807\uff0c1\u50cf\u7d20\u4e3a\u5355\u4f4d \n * @param y: y\u5750\u6807\uff0c8\u50cf\u7d20\u4e3a\u5355\u4f4d \n * @param ch: \u8981\u663e\u793a\u7684\u5b57\u7b26\n * @param font: \u5b57\u5e93\n */\nvoid OledShowChar(uint8_t x, uint8_t y, uint8_t ch, Font font)\n{\n    /* \u5b57\u5e93\u6570\u7ec4\u4e0b\u6807 */\n    uint8_t c;\n    /* \u5faa\u73af\u8ba1\u6570 */\n    uint8_t i = 0;\n    /* \u7a7a\u683c\u7684ASCII\u7801\u5341\u8fdb\u5236\u6570\u4e3a32,(\u5b57\u7b26-32)\u5373\u4e3a\u5176\u5728\u5b57\u5e93\u6570\u7ec4\u7684\u4e0b\u6807 */\n    c = ch - ' ';\n    /* \u533a\u5206\u5b57\u4f53\u5927\u5c0f, FONT8x16\u9700\u5206\u4e24\u4e2apages */\n    if (font == FONT8x16) {\n        // \u5b9a\u4f4d\n        OledSetPosition(x, y);\n        // \u5199\u7b2c\u4e00\u4e2apage\n        for (i=0 ; i &lt; 8 ; i++) {\n            WriteData(F8X16[c*16 + i]);\n        }\n        // \u91cd\u65b0\u5b9a\u4f4d\n        OledSetPosition(x, y + 1);\n        // \u5199\u7b2c\u4e8c\u4e2apage\n        for (i=0 ; i &lt; 8 ; i++) {\n            WriteData(F8X16[c * 16 + i + 8]);\n        }\n    }\n    /* FONT6x8,\u4e00\u4e2apage\u8db3\u77e3 */ \n    else {\n        // \u5b9a\u4f4d\n        OledSetPosition(x, y);\n        // \u5199\u4e00\u4e2apage\n        for (i=0 ; i &lt; 6 ; i++) {\n            WriteData(F6x8[c][i]);\n        }\n    }\n}\n\n/**\n * @brief \u663e\u793a\u5b57\u7b26\u4e32\n * \n */\nvoid OledShowString(uint8_t x, uint8_t y,  const char *str, Font font)\n{\n    /* \u5b57\u7b26\u6570\u7ec4\uff08\u5b57\u7b26\u4e32\uff09\u4e0b\u6807 */ \n    uint8_t j = 0;\n    if (str == NULL)\n    {\n        printf(\"[ERROR] param is NULL,Please check!!!\\r\\n\");\n        return;\n    }\n     while (str[j])\n    {\n        // \u663e\u793a\u4e00\u4e2a\u5b57\u7b26\n        OledShowChar(x, y, str[j], font);\n        // \u8bbe\u7f6e\u5b57\u7b26\u95f4\u8ddd\n        x += 8;\n        // \u5982\u679c\u4e0b\u4e00\u4e2a\u8981\u663e\u793a\u7684\u5b57\u7b26\u8d85\u51fa\u4e86OLED\u663e\u793a\u7684\u8303\u56f4\uff0c\u5219\u6362\u884c\n        if (x &gt; 120) {\n            x = 0;\n            y += 2;\n        }\n        // \u4e0b\u4e00\u4e2a\u5b57\u7b26\n        j++;\n    }\n}\n</code></pre>"},{"location":"study/OpenHarmony/7.I2C/#732-oled","title":"7.3.2 OLED\u4f7f\u7528\u793a\u4f8b","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdint.h&gt;\n#include \"ohos_init.h\"\n#include \"cmsis_os2.h\"\n#include \"oled.h\"\n\n/**\n * oled_demo/oled_demo.c \n * OLED\u6848\u4f8b\u5206\u6790\n * \u4f7f\u7528\u81ea\u5df1\u7f16\u5199\u7684\u5404\u4e2aOLED\u9a71\u52a8\u663e\u793a\u5b57\u7b26\n */\n\nstatic void OledTask(void* params)\n{\n    /* \u521d\u59cb\u5316 */\n    OledInit();\n    OledFillScreen(0x00);\n    /* FONT6x8 */\n    OledShowChar(0, 0, 'A', FONT6x8);\n    OledShowChar(0, 1, 'B', FONT6x8);\n    OledShowChar(0, 2, 'C', FONT6x8);\n    OledShowChar(0, 3, 'D', FONT6x8);\n    OledShowChar(0, 4, 'E', FONT6x8);\n    OledShowChar(0, 5, 'F', FONT6x8);\n    OledShowChar(0, 6, 'G', FONT6x8);\n    OledShowChar(0, 7, 'H', FONT6x8);\n    /* FONT8x16 */\n    OledShowChar(8, 0, 'I', FONT8x16);\n    OledShowChar(8, 2, 'J', FONT8x16);\n    OledShowChar(8, 4, 'K', FONT8x16);\n    OledShowChar(8, 6, 'L', FONT8x16);\n    /* \u5b57\u7b26\u4e32 */\n    OledShowString(16, 0, \"OpenHarmony\", FONT8x16);\n    while(1)\n    {\n        osDelay(10);\n    } \n}\n\nstatic void OledEntry(void)\n{\n     osThreadAttr_t attr = {\n        .name = \"OledThread\",\n        .stack_size = 1024,\n        .priority = osPriorityNormal\n    };\n    if (osThreadNew(OledTask, NULL, &amp;attr) == NULL) {\n        printf(\"[ERROR] Thread Create Faild.\\r\\n\");\n    } else {\n        printf(\"[INFO] Thread Create Success.\\r\\n\");\n    }\n}\n\nSYS_RUN(OledEntry);\n</code></pre> <p>\u6a21\u5757\u7f16\u8bd1\u811a\u672c</p> Text Only<pre><code>static_library (\"oled_demo\") {\n    sources = [\n        \"oled.c\",\n        \"oled_demo.c\",\n    ]\n    include_dirs = [\n        # include \"ohos_init.h\"\n        \"//utils/native/lite/include\",\n        # include CMSIS-RTOS API V2 for OpenHarmony1.0+\n        \"//kernel/liteos_m/kal/cmsis\",\n        # include IoT\u786c\u4ef6\u8bbe\u5907\u64cd\u4f5c\u63a5\u53e3 for OpenHarmony1.0+\uff1a\n        \"//base/iot_hardware/peripheral/interfaces/kits\",\n    ]\n}\n</code></pre> <p>APP\u7f16\u8bd1\u811a\u672c</p> C<pre><code>import(\"//build/lite/config/component/lite_component.gni\")\n\nlite_component(\"app\") {\n    features = [\n        \"gn_practice/application:gn_app\",\n        \"gn_practice/driver:gn_driver\",\n        \"gn_practice/library:gn_library\",\n        \"kv_store_demo:kv_store_demo\",\n        \"file_demo:file_demo\",\n        \"thread_demo:thread_demo\",\n        \"timer_demo:timer_demo\",\n        \"mutex_demo:mutex_demo\",\n        # GPIO\u6a21\u5757\n        \"gpio_demo:gpio_demo\",\n        # ADC\u6a21\u5757\n        \"adc_demo:adc_demo\",\n        # OLED\u6a21\u5757\n        \"oled_demo:oled_demo\",\n    ]\n}\n</code></pre>"},{"location":"study/OpenHarmony/8.wifi/","title":"\u7b2c\u516b\u7ae0 Wi-Fi","text":""},{"location":"study/OpenHarmony/8.wifi/#81-ieee-80211","title":"8.1 IEEE 802.11 \u6807\u51c6","text":"<p>WiFi \u662f\u4e00\u79cd\u5141\u8bb8\u7535\u5b50\u8bbe\u5907\u8fde\u63a5\u5230\u4e00\u4e2a\u65e0\u7ebf\u5c40\u57df\u7f51\uff08WLAN\uff09\u7684\u6280\u672f\uff0c\u901a\u5e38\u4f7f\u7528 2.4G Hz \u6216 5G Hz \u9891\u6bb5\uff0cWiFi \u6240\u57fa\u4e8e\u7684\u6807\u51c6\u662f IEEE 802.11 \u6807\u51c6\uff0c\u4ee5\u4e0b\u662f\u4e0d\u540c\u7248\u672c\u534f\u8bae\u7684\u7279\u70b9\uff1a</p> <ol> <li>IEEE 802.11</li> </ol> <p>\u8fd9\u662f\u6700\u65e9\u7684 WiFi \u6807\u51c6\uff0c\u4e8e 1997 \u5e74\u53d1\u5e03\uff0c\u5de5\u4f5c\u5728 2.4GHz \u9891\u6bb5\uff0c\u6570\u636e\u4f20\u8f93\u901f\u7387\u6700\u9ad8\u53ef\u8fbe 2Mbps\u3002\u7531\u4e8e\u901f\u7387\u8f83\u4f4e\uff0c\u73b0\u5728\u5df2\u7ecf\u5f88\u5c11\u4f7f\u7528\u3002</p> <ol> <li>IEEE 802.11b</li> </ol> <p>1999 \u5e74\u53d1\u5e03\uff0c\u540c\u6837\u5de5\u4f5c\u5728 2.4GHz \u9891\u6bb5\uff0c\u6700\u9ad8\u6570\u636e\u4f20\u8f93\u901f\u7387\u63d0\u9ad8\u5230 11Mbps\u3002\u91c7\u7528\u4e86\u76f4\u63a5\u5e8f\u5217\u6269\u9891\uff08DSSS\uff09\u6280\u672f\uff0c\u5177\u6709\u8f83\u597d\u7684\u6297\u5e72\u6270\u80fd\u529b\uff0c\u5728\u5f53\u65f6\u5f97\u5230\u4e86\u5e7f\u6cdb\u5e94\u7528\u3002</p> <ol> <li>IEEE 802.11a</li> </ol> <p>\u4e5f\u5728 1999 \u5e74\u53d1\u5e03\uff0c\u5de5\u4f5c\u5728 5GHz \u9891\u6bb5\uff0c\u6700\u9ad8\u6570\u636e\u4f20\u8f93\u901f\u7387\u53ef\u8fbe 54Mbps\u3002\u867d\u7136\u901f\u7387\u6bd4 802.11b \u6709\u4e86\u5f88\u5927\u63d0\u5347\uff0c\u4f46\u7531\u4e8e 5GHz \u9891\u6bb5\u7684\u4fe1\u53f7\u4f20\u64ad\u8ddd\u79bb\u8f83\u77ed\u3001\u7a7f\u5899\u80fd\u529b\u8f83\u5f31\uff0c\u5e94\u7528\u8303\u56f4\u53d7\u5230\u4e00\u5b9a\u9650\u5236\u3002</p> <ol> <li>IEEE 802.11g</li> </ol> <p>2003 \u5e74\u53d1\u5e03\uff0c\u5de5\u4f5c\u5728 2.4GHz \u9891\u6bb5\uff0c\u517c\u5bb9 802.11b \u6807\u51c6\uff0c\u6700\u9ad8\u6570\u636e\u4f20\u8f93\u901f\u7387\u4e5f\u80fd\u8fbe\u5230 54Mbps\u3002\u5b83\u7ed3\u5408\u4e86 802.11b \u7684\u517c\u5bb9\u6027\u548c 802.11a \u7684\u9ad8\u901f\u5ea6\uff0c\u6210\u4e3a\u5f53\u65f6\u5e02\u573a\u4e0a\u7684\u4e3b\u6d41\u6807\u51c6\u3002</p> <ol> <li>IEEE 802.11n</li> </ol> <p>2009 \u5e74\u53d1\u5e03\uff0c\u540c\u65f6\u652f\u6301 2.4GHz \u548c 5GHz \u9891\u6bb5\uff0c\u91c7\u7528\u4e86\u591a\u8f93\u5165\u591a\u8f93\u51fa\uff08MIMO\uff09\u6280\u672f\u548c\u4fe1\u9053\u7ed1\u5b9a\u6280\u672f\uff0c\u6700\u9ad8\u6570\u636e\u4f20\u8f93\u901f\u7387\u53ef\u8fbe\u5230 600Mbps\u3002\u663e\u8457\u63d0\u9ad8\u4e86\u4f20\u8f93\u901f\u7387\u548c\u8986\u76d6\u8303\u56f4\u3002</p> <ol> <li>IEEE 802.11ac</li> </ol> <p>2013 \u5e74\u53d1\u5e03\uff0c\u4ec5\u5de5\u4f5c\u5728 5GHz \u9891\u6bb5\uff0c\u8fdb\u4e00\u6b65\u6269\u5c55\u4e86\u4fe1\u9053\u5e26\u5bbd\uff0c\u91c7\u7528\u4e86\u66f4\u9ad8\u7ea7\u7684\u8c03\u5236\u6280\u672f\u548c MIMO \u6280\u672f\uff0c\u6700\u9ad8\u6570\u636e\u4f20\u8f93\u901f\u7387\u53ef\u8fbe\u6570 Gbps\uff0c\u4e3b\u8981\u5e94\u7528\u4e8e\u5bf9\u901f\u5ea6\u8981\u6c42\u8f83\u9ad8\u7684\u573a\u666f\u3002</p> <ol> <li>IEEE 802.11ax\uff08Wi-Fi 6\uff09</li> </ol> <p>2019 \u5e74\u6b63\u5f0f\u53d1\u5e03\uff0c\u652f\u6301 2.4GHz \u548c 5GHz \u9891\u6bb5\uff0c\u5f15\u5165\u4e86\u6b63\u4ea4\u9891\u5206\u591a\u5740\uff08OFDMA\uff09\u3001\u76ee\u6807\u5524\u9192\u65f6\u95f4\uff08TWT\uff09\u7b49\u6280\u672f\uff0c\u5728\u9ad8\u5bc6\u5ea6\u8fde\u63a5\u573a\u666f\u4e0b\uff0c\u80fd\u663e\u8457\u63d0\u9ad8\u7f51\u7edc\u6548\u7387\u548c\u6027\u80fd\uff0c\u964d\u4f4e\u8bbe\u5907\u529f\u8017\u3002\u534e\u4e3a\u662fWi-Fi 6 \u7684\u4e3b\u8981\u8d21\u732e\u8005\u4e4b\u4e00\uff0c\u4e3a IEEE 802.11ax \u6807\u51c6\u8d21\u732e\u4e86 281 \u4e2a\u63d0\u6848\uff08\u5360\u603b\u6570\u768411.2%\uff09\uff0c\u4ee5\u53ca 477 \u4e2a\u76f8\u5173\u4e13\u5229\uff08\u5360\u603b\u6570\u768418.2%\uff09\u3002</p>"},{"location":"study/OpenHarmony/8.wifi/#82-wi-fi","title":"8.2 Wi-Fi \u4e13\u4e1a\u672f\u8bed","text":"<ul> <li>SSID\uff1aService Set Identifier \u7684\u7f29\u5199\uff0c\u5373\u670d\u52a1\u96c6\u6807\u8bc6\u7b26\uff0c\u901a\u4fd7\u6765\u8bf4\u5c31\u662f WiFi \u7684\u540d\u79f0\u3002\u7528\u6237\u5728\u641c\u7d22 WiFi \u65f6\u770b\u5230\u7684\u540d\u79f0\u5c31\u662f SSID\u3002</li> <li>BSSID\uff1aBasic Service Set Identifier \u7684\u7f29\u5199\uff0c\u662f\u65e0\u7ebf\u63a5\u5165\u70b9\uff08AP\uff09\u7684 MAC \u5730\u5740\uff0c\u7528\u4e8e\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a\u57fa\u672c\u670d\u52a1\u96c6\uff08BSS\uff09\u4e2d\u7684 AP\u3002</li> <li>ESSID\uff1aExtended Service Set Identifier \u7684\u7f29\u5199\uff0c\u6269\u5c55\u670d\u52a1\u96c6\u6807\u8bc6\u7b26\u3002\u5b83\u662f\u5728\u4e00\u4e2a\u7531\u591a\u4e2a\u63a5\u5165\u70b9\u7ec4\u6210\u7684\u65e0\u7ebf\u7f51\u7edc\u4e2d\uff0c\u7528\u4e8e\u6807\u8bc6\u6574\u4e2a\u65e0\u7ebf\u7f51\u7edc\u7684\u540d\u79f0\uff0c\u901a\u5e38\u4e0e SSID \u7c7b\u4f3c\uff0c\u4f46\u7528\u4e8e\u66f4\u590d\u6742\u7684\u7f51\u7edc\u73af\u5883\u3002</li> </ul> <ul> <li>AP\uff1aAccess Point \u7684\u7f29\u5199\uff0c\u5373\u63a5\u5165\u70b9\uff0c\u662f\u4e00\u79cd\u65e0\u7ebf\u7f51\u7edc\u8bbe\u5907\uff0c\u5b83\u5c31\u50cf\u4e00\u4e2a\u6865\u6881\uff0c\u4e00\u65b9\u9762\u63a5\u6536\u6765\u81ea\u6709\u7ebf\u7f51\u7edc\u7684\u4fe1\u53f7\uff0c\u53e6\u4e00\u65b9\u9762\u5411\u5468\u56f4\u7a7a\u95f4\u53d1\u9001\u65e0\u7ebf\u4fe1\u53f7\uff0c\u4f7f\u65e0\u7ebf\u8bbe\u5907\u80fd\u591f\u8fde\u63a5\u5230\u6709\u7ebf\u7f51\u7edc\u3002</li> <li>STA\uff1aStation \u7684\u7f29\u5199\uff0c\u5373\u7ad9\u70b9\uff0c\u5728 WiFi \u7f51\u7edc\u4e2d\u901a\u5e38\u6307\u5ba2\u6237\u7aef\u8bbe\u5907\uff0c\u5982\u624b\u673a\u3001\u7535\u8111\u3001\u5e73\u677f\u7b49\uff0c\u5b83\u4eec\u901a\u8fc7\u8fde\u63a5\u5230 AP \u6765\u8bbf\u95ee\u7f51\u7edc\u3002</li> <li>WEP\uff1aWired Equivalent Privacy \u7684\u7f29\u5199\uff0c\u5373\u6709\u7ebf\u7b49\u6548\u4fdd\u5bc6\uff0c\u662f\u4e00\u79cd\u65e9\u671f\u7684 WiFi \u52a0\u5bc6\u65b9\u5f0f\uff0c\u5b89\u5168\u6027\u8f83\u4f4e\uff0c\u5bb9\u6613\u88ab\u7834\u89e3\u3002</li> <li>WPA\uff1aWi-Fi Protected Access \u7684\u7f29\u5199\uff0c\u5373 WiFi \u4fdd\u62a4\u8bbf\u95ee\uff0c\u662f\u4e00\u79cd\u6bd4 WEP \u66f4\u5b89\u5168\u7684\u52a0\u5bc6\u65b9\u5f0f\uff0c\u5206\u4e3a WPA \u548c WPA2 \u4e24\u4e2a\u7248\u672c\u3002WPA2 \u662f\u76ee\u524d\u5e7f\u6cdb\u4f7f\u7528\u7684\u52a0\u5bc6\u6807\u51c6\uff0c\u91c7\u7528\u4e86\u66f4\u5f3a\u5927\u7684\u52a0\u5bc6\u7b97\u6cd5\u548c\u8ba4\u8bc1\u673a\u5236\u3002</li> <li>WPA3\uff1a\u662f WPA2 \u7684\u5347\u7ea7\u7248\uff0c\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7684\u5b89\u5168\u6027\u548c\u66f4\u5f3a\u7684\u52a0\u5bc6\u80fd\u529b\uff0c\u652f\u6301\u66f4\u5148\u8fdb\u7684\u5bc6\u7801\u5b66\u6280\u672f\u548c\u5b89\u5168\u529f\u80fd\u3002</li> <li>PSK\uff1aPre-Shared Key \u7684\u7f29\u5199\uff0c\u5373\u9884\u5171\u4eab\u5bc6\u94a5\uff0c\u662f\u4e00\u79cd\u5728 WiFi \u7f51\u7edc\u4e2d\u7528\u4e8e\u8eab\u4efd\u9a8c\u8bc1\u7684\u5bc6\u94a5\u3002\u7528\u6237\u5728\u8fde\u63a5 WiFi \u65f6\uff0c\u9700\u8981\u8f93\u5165\u6b63\u786e\u7684 PSK \u624d\u80fd\u63a5\u5165\u7f51\u7edc\u3002</li> <li>Band\uff1a\u9891\u6bb5\uff0cWiFi \u4f7f\u7528\u7684\u65e0\u7ebf\u9891\u6bb5\uff0c\u5e38\u89c1\u7684\u6709 2.4GHz \u548c 5GHz \u9891\u6bb5\u30022.4GHz \u9891\u6bb5\u8986\u76d6\u8303\u56f4\u5e7f\uff0c\u4f46\u4f20\u8f93\u901f\u5ea6\u76f8\u5bf9\u8f83\u6162\uff0c\u4e14\u5bb9\u6613\u53d7\u5230\u5e72\u6270\uff1b5GHz \u9891\u6bb5\u4f20\u8f93\u901f\u5ea6\u5feb\uff0c\u4f46\u8986\u76d6\u8303\u56f4\u76f8\u5bf9\u8f83\u5c0f\uff0c\u7a7f\u5899\u80fd\u529b\u4e5f\u8f83\u5f31\u3002</li> <li>Channel\uff1a\u4fe1\u9053\uff0c\u5728\u9891\u6bb5\u5185\u5212\u5206\u7684\u4e0d\u540c\u4f20\u8f93\u901a\u9053\uff0c\u7c7b\u4f3c\u4e8e\u516c\u8def\u4e0a\u7684\u8f66\u9053\u3002\u5728 2.4GHz \u9891\u6bb5\u6709 13 \u4e2a\u6216 14 \u4e2a\u4fe1\u9053\uff0c5GHz \u9891\u6bb5\u5219\u6709\u66f4\u591a\u4fe1\u9053\u3002\u76f8\u90bb\u4fe1\u9053\u4e4b\u95f4\u53ef\u80fd\u4f1a\u6709\u5e72\u6270\uff0c\u5408\u7406\u9009\u62e9\u4fe1\u9053\u53ef\u4ee5\u63d0\u9ad8\u7f51\u7edc\u6027\u80fd\u3002</li> <li>MIMO\uff1aMultiple-Input Multiple-Output \u7684\u7f29\u5199\uff0c\u5373\u591a\u8f93\u5165\u591a\u8f93\u51fa\u6280\u672f\u3002\u5b83\u5229\u7528\u591a\u4e2a\u5929\u7ebf\u540c\u65f6\u8fdb\u884c\u6570\u636e\u4f20\u8f93\u548c\u63a5\u6536\uff0c\u80fd\u591f\u63d0\u9ad8\u7f51\u7edc\u7684\u4f20\u8f93\u901f\u5ea6\u548c\u7a33\u5b9a\u6027\uff0c\u589e\u52a0\u7cfb\u7edf\u5bb9\u91cf\u548c\u8986\u76d6\u8303\u56f4\u3002</li> </ul>"},{"location":"study/OpenHarmony/8.wifi/#83-hi3861wi-fi","title":"8.3 Hi3861\u7684Wi-Fi\u7279\u6027","text":"<p>Hi3861V100\u82af\u7247\u652f\u6301\u7684Wi-Fi\u7279\u6027\u5982\u4e0b\uff1a</p> <ul> <li>\u652f\u6301\u7684Wi-Fi\u6807\u51c6 \uff1aIEEE 802.11b/g/n\uff0c\u6700\u5927\u901f\u7387\u4e3a 72.2Mb/s\u3002</li> <li>\u5de5\u4f5c\u9891\u6bb5 \uff1a2.4GHz \u9891\u6bb5\uff0c\u652f\u6301\u5168\u90e8 14 \u4e2a\u4fe1\u9053\uff08ch1~ch14\uff09\u3002</li> <li>\u5e26\u5bbd\u652f\u6301 \uff1a\u652f\u6301\u6807\u51c6 20MHz \u5e26\u5bbd\u548c 5MHz/10MHz \u7a84\u5e26\u5bbd\uff0c\u4e0d\u652f\u630140MHz\u5e26\u5bbd\u3002</li> <li>\u6536\u53d1\u7279\u6027 \uff1a\u5355\u6536\u5355\u53d1\uff0c\u4e0d\u652f\u6301MIMO\u3002</li> <li>\u5b89\u5168\u6027 \uff1a\u652f\u6301 WPA \u4e2a\u4eba\u7248/WPA2 \u4e2a\u4eba\u7248\u548c WPS 2.0\u3002</li> <li>\u5de5\u4f5c\u6a21\u5f0f \uff1a\u652f\u6301 STA \u548c AP \u6a21\u5f0f\u3002</li> <li>AP\u6a21\u5f0f\u4e0b\u7684\u63a5\u5165\u80fd\u529b \uff1a\u4f5c\u4e3a AP \u65f6\uff0c\u6700\u5927\u652f\u6301 6 \u4e2a STA \u63a5\u5165\u3002</li> </ul>"},{"location":"study/OpenHarmony/8.wifi/#84-wi-fi","title":"8.4 Wi-Fi \u8fde\u63a5\u8fc7\u7a0b","text":"<p>Wi-Fi \u8fde\u63a5\u8fc7\u7a0b\u4e00\u822c\u53ef\u4ee5\u5206\u4e3a\u626b\u63cf\u3001\u8ba4\u8bc1\u3001\u5173\u8054\u548c\u83b7\u53d6 IP \u5730\u5740\u56db\u4e2a\u4e3b\u8981\u9636\u6bb5\uff0c\u4ee5\u4e0b\u662f\u5177\u4f53\u4ecb\u7ecd\uff1a</p>"},{"location":"study/OpenHarmony/8.wifi/#841","title":"8.4.1 \u626b\u63cf\u9636\u6bb5","text":"<ul> <li>\u4e3b\u52a8\u626b\u63cf\uff1a\u7528\u6237\u8bbe\u5907\uff08\u5982\u624b\u673a\u3001\u7535\u8111\u7b49\uff09\u5f00\u542f WiFi \u529f\u80fd\u540e\uff0c\u4f1a\u4e3b\u52a8\u5411\u5468\u56f4\u7a7a\u95f4\u53d1\u9001\u63a2\u6d4b\u8bf7\u6c42\u5e27\uff0c\u8be5\u5e27\u4e2d\u5305\u542b\u4e86\u8bbe\u5907\u652f\u6301\u7684 WiFi \u534f\u8bae\u7248\u672c\u3001\u9891\u6bb5\u7b49\u4fe1\u606f\uff0c\u4ee5\u641c\u7d22\u9644\u8fd1\u7684\u53ef\u7528 WiFi \u7f51\u7edc\u3002\u6bcf\u4e2a\u4fe1\u9053\u90fd\u4f1a\u53d1\u9001\uff0c\u7c7b\u4f3c\u4e8e\u5728\u4e0d\u540c\u7684\u9891\u7387\u4e0a \u201c\u547c\u558a\u201d\uff0c\u8be2\u95ee\u662f\u5426\u6709 WiFi \u7f51\u7edc\u5b58\u5728\u3002</li> <li>\u88ab\u52a8\u626b\u63cf\uff1a\u9664\u4e86\u4e3b\u52a8\u626b\u63cf\uff0c\u8bbe\u5907\u4e5f\u4f1a\u8fdb\u884c\u88ab\u52a8\u626b\u63cf\u3002\u6b64\u65f6\uff0c\u8bbe\u5907\u4f1a\u76d1\u542c\u5468\u56f4\u65e0\u7ebf\u7f51\u7edc\u4e2d\u63a5\u5165\u70b9\uff08AP\uff09\u5b9a\u671f\u53d1\u9001\u7684\u4fe1\u6807\u5e27\u3002\u4fe1\u6807\u5e27\u4e2d\u5305\u542b\u4e86 AP \u7684\u57fa\u672c\u4fe1\u606f\uff0c\u5982 SSID\u3001\u652f\u6301\u7684\u901f\u7387\u3001\u52a0\u5bc6\u65b9\u5f0f\u7b49\u3002\u8bbe\u5907\u901a\u8fc7\u63a5\u6536\u8fd9\u4e9b\u4fe1\u6807\u5e27\uff0c\u4e86\u89e3\u5468\u56f4\u6709\u54ea\u4e9b\u53ef\u7528\u7684 WiFi \u7f51\u7edc\u53ca\u5176\u76f8\u5173\u53c2\u6570\u3002</li> </ul>"},{"location":"study/OpenHarmony/8.wifi/#842","title":"8.4.2 \u8ba4\u8bc1\u9636\u6bb5","text":"<ul> <li>\u5f00\u653e\u7cfb\u7edf\u8ba4\u8bc1\uff1a\u5982\u679c WiFi \u7f51\u7edc\u6ca1\u6709\u8bbe\u7f6e\u5bc6\u7801\uff0c\u901a\u5e38\u91c7\u7528\u5f00\u653e\u7cfb\u7edf\u8ba4\u8bc1\u65b9\u5f0f\u3002\u8bbe\u5907\u5411 AP \u53d1\u9001\u8ba4\u8bc1\u8bf7\u6c42\uff0cAP \u6536\u5230\u540e\u76f4\u63a5\u56de\u5e94\u8ba4\u8bc1\u6210\u529f\uff0c\u8fd9\u79cd\u8ba4\u8bc1\u65b9\u5f0f\u51e0\u4e4e\u6ca1\u6709\u5b89\u5168\u6027\uff0c\u53ea\u662f\u7b80\u5355\u5730\u786e\u8ba4\u8bbe\u5907\u53ef\u4ee5\u8fde\u63a5\u5230\u7f51\u7edc\u3002</li> <li>\u5171\u4eab\u5bc6\u94a5\u8ba4\u8bc1\uff1a\u5728\u8fd9\u79cd\u8ba4\u8bc1\u65b9\u5f0f\u4e0b\uff0c\u8bbe\u5907\u548c AP \u90fd\u9700\u8981\u4e8b\u5148\u5171\u4eab\u4e00\u4e2a\u5bc6\u94a5\u3002\u8bbe\u5907\u5411 AP \u53d1\u9001\u8ba4\u8bc1\u8bf7\u6c42\uff0cAP \u4f1a\u53d1\u9001\u4e00\u4e2a\u6311\u6218\u6587\u672c\u7ed9\u8bbe\u5907\uff0c\u8bbe\u5907\u4f7f\u7528\u5171\u4eab\u5bc6\u94a5\u5bf9\u6311\u6218\u6587\u672c\u8fdb\u884c\u52a0\u5bc6\u540e\u518d\u53d1\u9001\u7ed9 AP\uff0cAP \u5bf9\u6536\u5230\u7684\u52a0\u5bc6\u4fe1\u606f\u8fdb\u884c\u89e3\u5bc6\u9a8c\u8bc1\uff0c\u5982\u679c\u9a8c\u8bc1\u6210\u529f\u5219\u8ba4\u8bc1\u901a\u8fc7\u3002\u4e0d\u8fc7\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7531\u4e8e\u5bc6\u94a5\u7ba1\u7406\u590d\u6742\u4e14\u5b89\u5168\u6027\u6709\u9650\uff0c\u5df2\u8f83\u5c11\u4f7f\u7528\u3002</li> <li>WPA/WPA2-PSK \u8ba4\u8bc1\uff1a\u8fd9\u662f\u76ee\u524d\u5bb6\u5ead\u548c\u5c0f\u578b\u529e\u516c\u7f51\u7edc\u4e2d\u6700\u5e38\u7528\u7684\u8ba4\u8bc1\u65b9\u5f0f\u3002\u7528\u6237\u5728\u8bbe\u5907\u4e0a\u8f93\u5165 WiFi \u5bc6\u7801\uff08\u5373\u9884\u5171\u4eab\u5bc6\u94a5 PSK\uff09\uff0c\u8bbe\u5907\u5c06\u5bc6\u7801\u8fdb\u884c\u4e00\u5b9a\u7684\u5904\u7406\u540e\u4e0e AP \u8fdb\u884c\u4ea4\u4e92\u9a8c\u8bc1\u3002AP \u4f1a\u6839\u636e\u9884\u5148\u8bbe\u7f6e\u7684\u5bc6\u7801\u5bf9\u8bbe\u5907\u53d1\u9001\u7684\u4fe1\u606f\u8fdb\u884c\u9a8c\u8bc1\uff0c\u5982\u679c\u5bc6\u7801\u5339\u914d\uff0c\u5219\u8ba4\u8bc1\u6210\u529f\u3002</li> <li>WPA2-Enterprise \u8ba4\u8bc1\uff1a\u5728\u4f01\u4e1a\u6216\u5927\u578b\u7f51\u7edc\u73af\u5883\u4e2d\uff0c\u5e38\u91c7\u7528 WPA2-Enterprise \u8ba4\u8bc1\u65b9\u5f0f\u3002\u5b83\u9700\u8981\u4f7f\u7528 Radius \u670d\u52a1\u5668\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\uff0c\u7528\u6237\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\u7b49\u51ed\u8bc1\uff0c\u8bbe\u5907\u5c06\u8fd9\u4e9b\u4fe1\u606f\u53d1\u9001\u7ed9 AP\uff0cAP \u518d\u5c06\u5176\u8f6c\u53d1\u7ed9 Radius \u670d\u52a1\u5668\u8fdb\u884c\u9a8c\u8bc1\uff0c\u9a8c\u8bc1\u901a\u8fc7\u540e\u624d\u5141\u8bb8\u8bbe\u5907\u8fde\u63a5\u7f51\u7edc\u3002</li> </ul>"},{"location":"study/OpenHarmony/8.wifi/#843","title":"8.4.3 \u5173\u8054\u9636\u6bb5","text":"<ul> <li>\u53d1\u9001\u5173\u8054\u8bf7\u6c42\uff1a\u8ba4\u8bc1\u901a\u8fc7\u540e\uff0c\u8bbe\u5907\u4f1a\u5411 AP \u53d1\u9001\u5173\u8054\u8bf7\u6c42\u5e27\uff0c\u5728\u8bf7\u6c42\u5e27\u4e2d\u5305\u542b\u4e86\u8bbe\u5907\u7684\u80fd\u529b\u4fe1\u606f\uff0c\u5982\u652f\u6301\u7684\u6700\u5927\u4f20\u8f93\u901f\u7387\u3001\u662f\u5426\u652f\u6301 MIMO \u6280\u672f\u7b49\uff0c\u4ee5\u53ca\u5e0c\u671b\u4e0e AP \u5efa\u7acb\u8fde\u63a5\u7684\u76f8\u5173\u53c2\u6570\u3002</li> <li>\u63a5\u6536\u5173\u8054\u54cd\u5e94\uff1aAP \u6536\u5230\u5173\u8054\u8bf7\u6c42\u540e\uff0c\u4f1a\u6839\u636e\u81ea\u8eab\u7684\u8d44\u6e90\u60c5\u51b5\u548c\u8bbe\u5907\u7684\u8bf7\u6c42\u4fe1\u606f\uff0c\u51b3\u5b9a\u662f\u5426\u63a5\u53d7\u5173\u8054\u3002\u5982\u679c\u63a5\u53d7\uff0cAP \u4f1a\u5411\u8bbe\u5907\u53d1\u9001\u5173\u8054\u54cd\u5e94\u5e27\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5206\u914d\u7ed9\u8bbe\u5907\u7684\u4e00\u4e9b\u53c2\u6570\uff0c\u5982\u5173\u8054\u6807\u8bc6\u7b26\uff08AID\uff09\u7b49\uff0c\u8bbe\u5907\u6536\u5230\u5173\u8054\u54cd\u5e94\u5e76\u786e\u8ba4\u6210\u529f\u540e\uff0c\u5c31\u4e0e AP \u5efa\u7acb\u4e86\u5173\u8054\u5173\u7cfb\u3002</li> </ul>"},{"location":"study/OpenHarmony/8.wifi/#85-wi-fi","title":"8.5 Wi-Fi \u5de5\u4f5c\u6a21\u5f0f","text":"<p>Wi-Fi \u8bbe\u5907\u53ef\u4ee5\u5de5\u4f5c\u5728\u4e0d\u540c\u7684\u6a21\u5f0f\u4e2d\uff0c\u5728\u6bcf\u4e2a\u6a21\u5f0f\u4e2d\u626e\u6f14\u7684\u89d2\u8272\u90fd\u4e0d\u540c\u3002\u5e38\u7528\u7684Wi-Fi\u5de5\u4f5c\u6a21\u5f0f\u6709\u4e24\u79cd\uff1a\u4e00\u79cd\u662fSTA\u6a21\u5f0f\uff0c\u53e6\u4e00\u79cd\u662fAP\u6a21\u5f0f\u3002\u4e00\u4e2aWi-Fi\u8bbe\u5907\u53ef\u4ee5\u540c\u65f6\u652f\u6301\u591a\u79cd\u6a21\u5f0f\uff0c\u9700\u8981\u901a\u8fc7\u7a0b\u5e8f\u4ee3\u7801\u8ba9Wi-Fi\u8bbe\u5907\u5904\u4e8e\u6307\u5b9a\u7684\u6a21\u5f0f\u4e2d\u3002</p>"},{"location":"study/OpenHarmony/8.wifi/#851-sta","title":"8.5.1 STA\u6a21\u5f0f","text":"<p>\u524d\u9762\u63d0\u5230\u4e86IEEE 802.11\u6807\u51c6\u5c06STA\u5b9a\u4e49\u4e3a\"\u652f\u6301IEEE 802.11\u6807\u51c6\u7684\u8bbe\u5907\"\uff0c\u56e0\u6b64\u7406\u8bba\u4e0a\u6240\u6709\u7684Wi-Fi\u8bbe\u5907\u90fd\u88ab\u79f0\u4e3a STA\uff0c\u6bd4\u5982\u624b\u673a\u3001\u7535\u8111\uff0c\u4e5f\u5305\u62ec AP \u548c\u8def\u7531\u5668\u3002\u4f46\u662f\u4eba\u4eec\u4e60\u60ef\u4e0a\u5c06STA\u8ba4\u4e3a\u662f\u5177\u6709Wi-Fi\u5ba2\u6237\u7aef\u884c\u4e3a\u7684\u8bbe\u5907\uff0c\u53ef\u4ee5\u8fde\u63a5\u5230AP\u6216\u8def\u7531\u5668\u4e0a\u3002\u6240\u4ee5\uff0c\u901a\u5e38\u53ef\u4ee5\u8ba4\u4e3a STA \u6a21\u5f0f\u5c31\u662f Wi-Fi \u5ba2\u6237\u7aef\u6a21\u5f0f\u3002\u540e\u9762\u63d0\u5230 Station \u6216 STA \u7684\u65f6\u5019\uff0c\u4e5f\u662f\u6307Wi-Fi\u5ba2\u6237\u7aef\u8bbe\u5907\u3002</p> <p>STA\u4f1a\u626b\u63cf\u9644\u8fd1\u7684 AP \u6216\u8def\u7531\u5668\uff0c\u9009\u62e9\u5176\u4e2d\u4e00\u4e2a\u60f3\u8981\u8fde\u63a5\u7684\uff0c\u7ecf\u8fc7\u8ba4\u8bc1\u3001\u5173\u8054\u7b49\u6b65\u9aa4\u4e4b\u540e\uff0c\u5c31\u4e0e\u5b83\u5efa\u7acb\u4e86\u8fde\u63a5\u3002</p>"},{"location":"study/OpenHarmony/8.wifi/#852-ap","title":"8.5.2 AP\u6a21\u5f0f","text":"<p>AP\u6a21\u5f0f\u5c31\u662f\u65e0\u7ebf\u63a5\u5165\u70b9\u6a21\u5f0f\uff0c\u5141\u8bb8\u5176\u4ed6 Wi-Fi\u5ba2\u6237\u7aef\u4e0e\u4e4b\u5efa\u7acb\u8fde\u63a5\uff0c\u5e76\u4e14\u63d0\u4f9b\u65e0\u7ebf\u7f51\u7edc\u670d\u52a1\u3002</p> <p>\u65e0\u7ebf\u63a5\u5165\u70b9\u7684\u4e00\u822c\u914d\u7f6e\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li>\u7b2c\u4e00\u6b65\uff0c\u914d\u7f6eSSID\u3002</li> <li>\u7b2c\u4e8c\u6b65\uff0c\u9009\u62e9\u8ba4\u8bc1\u7c7b\u578b\uff0cWPA/PSK \u65b9\u5f0f\u9700\u8981\u8bbe\u7f6e\u5bc6\u7801\uff0cWi-Fi\u5ba2\u6237\u7aef\u5fc5\u987b\u63d0\u4f9b\u5bc6\u7801\u624d\u80fd\u8fde\u63a5\u3002</li> <li>\u7b2c\u4e09\u6b65\uff0c\u9009\u62e9\u4e00\u4e2a\u652f\u6301\u7684\u9891\u6bb5\uff0c\u6bd4\u5982 2.4GHz \u6216 5GHz\u3002</li> <li>\u7b2c\u56db\u6b65\uff0c\u8bbe\u7f6e\u4e00\u4e2a\u652f\u6301\u7684\u4fe1\u9053\u3002</li> <li>\u7b2c\u4e94\u6b65\uff0c\u542f\u52a8AP\u6a21\u5f0f\u3002</li> </ul>"},{"location":"study/OpenHarmony/8.wifi/#86-sta","title":"8.6 STA\u6a21\u5f0f","text":""},{"location":"study/OpenHarmony/8.wifi/#861-wi-fi-api","title":"8.6.1 Wi-Fi API","text":"<p>\u5728vscode\u7684<code>c_cpp_properties.json</code>\u6587\u4ef6\u6dfb\u52a0\u5982\u4e0b<code>includePath</code>\u5185\u5bb9\uff1a</p> JSON<pre><code>// Wi-Fi\u63a5\u53e3\u914d\u7f6e\u8def\u5f84\n\"${workspaceFolder}/foundation/communication/wifi_lite/interfaces/wifiservice\",\n\n// TCP/IP\u534f\u8bae\u6808\u63a5\u53e3\uff08LwIP\uff09\u914d\u7f6e\u8def\u5f84\n\"${workspaceFolder}/third_party/bounds_checking_function/include\",  // \u8fb9\u754c\u68c0\u67e5\u529f\u80fd\u5e93\n\"${workspaceFolder}/device/hisilicon/hispark_pegasus/sdk_liteos/config\",  // SDK\u914d\u7f6e\u6587\u4ef6\n\"${workspaceFolder}/device/hisilicon/hispark_pegasus/sdk_liteos/platform/os/Huawei_LiteOS/arch\",  // Huawei LiteOS\u67b6\u6784\u6587\u4ef6\n\"${workspaceFolder}/device/hisilicon/hispark_pegasus/sdk_liteos/platform/os/Huawei_LiteOS/kernel/include\",  // Huawei LiteOS\u5185\u6838\u5934\u6587\u4ef6\n\"${workspaceFolder}/device/hisilicon/hispark_pegasus/sdk_liteos/platform/os/Huawei_LiteOS/targets/hi3861v100/include\",  // \u7279\u5b9a\u76ee\u6807\u5e73\u53f0\u5934\u6587\u4ef6\n\"${workspaceFolder}/device/hisilicon/hispark_pegasus/sdk_liteos/third_party/lwip_sack/include\"  // LwIP SACK\u6269\u5c55\u5934\u6587\u4ef6\n</code></pre> <p>HAL\u63a5\u53e3\u58f0\u660e\u76ee\u5f55\uff1a</p> <ul> <li><code>foundation\\communication\\wifi_lite\\interfaces\\wifiservice</code></li> </ul> <p>HAL\u63a5\u53e3\u5b9a\u4e49\u76ee\u5f55\uff1a</p> <ul> <li><code>device\\hisilicon\\hispark_pegasus\\hi3861_adapter\\hals\\communication\\wifi_lite\\wifiservice\\source</code></li> </ul> <p>STA\u6a21\u5f0f\u63a5\u53e3\u58f0\u660e\u6587\u4ef6\uff1a</p> <ul> <li><code>foundation\\communication\\wifi_lite\\interfaces\\wifiservice\\wifi_device.h</code></li> </ul> <p></p> <p>\u6d77\u601dSDK\u63a5\u53e3\u58f0\u660e\uff1a</p> <ul> <li><code>device\\hisilicon\\hispark_pegasus\\sdk_liteos\\third_party\\lwip_sack\\include\\lwip</code></li> </ul> <p>\u6d77\u601dSDK\u63a5\u53e3\u5b9e\u73b0\uff1a</p> <ul> <li><code>device\\hisilicon\\hispark_pegasus\\sdk_liteos\\build\\libs\\liblwip.a</code></li> </ul> <p></p>"},{"location":"study/OpenHarmony/8.wifi/#862-wi-fi","title":"8.6.2 \u626b\u63cfWi-Fi\u70ed\u70b9","text":"<p>\u626b\u63cfWi-Fi\u70ed\u70b9\u7684\u6807\u51c6\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <p>\u7b2c1\u6b65\uff0c\u4f7f\u7528<code>RegisterWifiEvent</code>\u63a5\u53e3\u6ce8\u518cWi-Fi\u4e8b\u4ef6\u76d1\u542c\u5668\u3002</p> <p>\u7b2c2\u6b65\uff0c\u4f7f\u7528<code>EnableWifi</code>\u63a5\u53e3\u5f00\u542f Wi-Fi \u8bbe\u5907\u7684 STA \u6a21\u5f0f\u3002</p> <p>\u7b2c3\u6b65\uff0c\u4f7f\u7528<code>Scan</code>\u63a5\u53e3\u5f00\u59cb\u626b\u63cf Wi-Fi \u70ed\u70b9\u3002</p> <p>\u7b2c4\u6b65\uff0c\u5728\u626b\u63cf\u72b6\u6001\u53d8\u5316\u4e8b\u4ef6\uff08<code>OnWifiScanStateChanged</code>\uff09\u7684\u56de\u8c03\u51fd\u6570\u4e2d\u76d1\u6d4b\u626b\u63cf\u662f\u5426\u5b8c\u6210\u3002</p> <p>\u7b2c5\u6b65\uff0c\u7b49\u5f85\u626b\u63cf\u5b8c\u6210\u3002</p> <p>\u7b2c6\u6b65\uff0c\u4f7f\u7528<code>GetScanInfoList</code>\u63a5\u53e3\u83b7\u53d6\u626b\u63cf\u7ed3\u679c\u3002</p> <p>\u7b2c7\u6b65\uff0c\u663e\u793a\u626b\u63cf\u7ed3\u679c\u3002</p> <p>\u7b2c8\u6b65\uff0c\u4f7f\u7528<code>DisableWifi</code>\u63a5\u53e3\u5173\u95ed Wi-Fi\u8bbe \u5907\u7684 STA \u6a21\u5f0f\u3002</p>"},{"location":"study/OpenHarmony/8.wifi/#863","title":"8.6.3 \u7a0b\u5e8f\u5b9e\u73b0","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdint.h&gt;\n#include \"ohos_init.h\"\n#include \"cmsis_os2.h\"\n// HAL\u63a5\u53e3API\n#include \"wifi_device.h\"\n\n/**\n * wifi_demo/wifi_scan_demo.c\n * \u626b\u63cfWi-Fi\u70ed\u70b9\u6848\u4f8b\n * -------------------------------------------------------------------------------\n * \u7b2c1\u6b65\uff0c\u4f7f\u7528`RegisterWifiEvent`\u63a5\u53e3\u6ce8\u518cWi-Fi\u4e8b\u4ef6\u76d1\u542c\u5668\u3002\n * \u7b2c2\u6b65\uff0c\u4f7f\u7528`EnableWifi`\u63a5\u53e3\u5f00\u542f Wi-Fi \u8bbe\u5907\u7684 STA \u6a21\u5f0f\u3002\n * \u7b2c3\u6b65\uff0c\u4f7f\u7528`Scan`\u63a5\u53e3\u5f00\u59cb\u626b\u63cf Wi-Fi \u70ed\u70b9\u3002\n * \u7b2c4\u6b65\uff0c\u5728\u626b\u63cf\u72b6\u6001\u53d8\u5316\u4e8b\u4ef6\uff08`OnWifiScanStateChanged`\uff09\u7684\u56de\u8c03\u51fd\u6570\u4e2d\u76d1\u6d4b\u626b\u63cf\u662f\u5426\u5b8c\u6210\u3002\n * \u7b2c5\u6b65\uff0c\u7b49\u5f85\u626b\u63cf\u5b8c\u6210\u3002\n * \u7b2c6\u6b65\uff0c\u4f7f\u7528`GetScanInfoList`\u63a5\u53e3\u83b7\u53d6\u626b\u63cf\u7ed3\u679c\u3002\n * \u7b2c7\u6b65\uff0c\u663e\u793a\u626b\u63cf\u7ed3\u679c\u3002\n * \u7b2c8\u6b65\uff0c\u4f7f\u7528`DisableWifi`\u63a5\u53e3\u5173\u95ed Wi-Fi\u8bbe \u5907\u7684 STA \u6a21\u5f0f\u3002\n */\n\n/* \u5168\u5c40\u53d8\u91cf */\n// \u7528\u4e8e\u8868\u793a\u70ed\u70b9\u626b\u63cf\u662f\u5426\u627e\u5230\u53ef\u7528\u70ed\u70b9\nint g_scanDone;\n\n/**\n * @brief \u5c01\u88c5wifi_device_config.h\u6587\u4ef6\u4e2d\u7684WifiSecurityType\u6570\u636e\u7c7b\u578b\n * \n * @param param WifiSecurityType\n * @return \u5b57\u7b26\u4e32\u7c7b\u578b\u7684 WifiSecurityType\n */\nstatic char* WifiSecurityTypeName(WifiSecurityType type)\n{\n    switch (type)\n    {\n        case WIFI_SEC_TYPE_OPEN:\n            return \"OPEN\";\n        case WIFI_SEC_TYPE_WEP:\n            return \"WEP\";\n        case WIFI_SEC_TYPE_PSK:\n            return \"PSK\";\n        case WIFI_SEC_TYPE_SAE:\n            return \"SAE\";\n        default:\n            break;\n    }\n    return \"INVALID\";\n}\n\n/**\n * @brief \u8fde\u63a5\u72b6\u6001\u53d8\u5316\u56de\u8c03\u51fd\u6570\uff0c\u63a5\u6536\u7684\u53c2\u6570\u5747\u58f0\u660e\u5728 wifi_linked_info.h\n * \n * @param state \u8fde\u63a5\u72b6\u6001(WifiConnState)\uff0cWIFI_CONNECTED\u8868\u793a\u8fde\u63a5\u6210\u529f\uff0cWIFI_DISCONNECTED\u8868\u793a\u8fde\u63a5\u5931\u8d25\n * @param info \u8fde\u63a5\u4fe1\u606f(WifiLinkedInfo)\uff0c\u6709\u591a\u4e2a\u4fe1\u606f\u53c2\u6570\n * @return \u65e0 \n */\nvoid WifiConnStateCallback(int state, WifiLinkedInfo *info)\n{\n    (void)state;    // \u5ffd\u7565\u53c2\u6570state\n    (void)info;     // \u5ffd\u7565\u53c2\u6570info\n\n    // \u7b80\u5355\u8f93\u51fa\u65e5\u5fd7\u4fe1\u606f\uff0c\u8868\u660e\u51fd\u6570\u88ab\u6267\u884c\u4e86\n    printf(\"[CALLBACK] %s %d\\r\\n\", __FUNCTION__, __LINE__);\n}\n\n/**\n * @brief \u626b\u63cf\u72b6\u6001\u53d8\u5316\u56de\u8c03\u51fd\u6570\n * \n * @param state \u626b\u63cf\u72b6\u6001\n * @param size \u626b\u63cf\u5230\u7684\u70ed\u70b9\u4e2a\u6570\n */\nvoid WifiScanStateCallback(int state, int size)\n{\n    // \u8f93\u51fa\u65e5\u5fd7\n    printf(\"[CALLBACK] %s %d, state = %X, size = %d\\r\\n\", __FUNCTION__, __LINE__, state, size);\n    // \u626b\u63cf\u5b8c\u6210\uff0c\u5e76\u4e14\u627e\u5230\u4e86\u70ed\u70b9\n    if (state == WIFI_STATE_AVALIABLE &amp;&amp; size &gt; 0)\n    {\n        // \u4e0d\u80fd\u76f4\u63a5\u8c03\u7528GetScanInfoList\u51fd\u6570\uff0c\u5426\u5219\u4f1a\u6709\u8fd0\u884c\u65f6\u5f02\u5e38\u62a5\u9519\n        // \u53ef\u4ee5\u66f4\u65b0\u5168\u5c40\u72b6\u6001\u53d8\u91cf\uff0c\u5728\u53e6\u5916\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u8f6e\u8be2\u72b6\u6001\u53d8\u91cf\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5b9e\u73b0\u8d77\u6765\u6bd4\u8f83\u7b80\u5355\n        // \u4f46\u9700\u8981\u4fdd\u8bc1\u66f4\u65b0\u548c\u67e5\u8be2\u64cd\u4f5c\u7684\u539f\u5b50\u6027\uff0c\u903b\u8f91\u624d\u662f\u4e25\u683c\u6b63\u786e\u7684\n        // \u6216\u8005\u4f7f\u7528\u4fe1\u53f7\u91cf\u8fdb\u884c\u901a\u77e5\uff0c\u8fd9\u79cd\u65b9\u5f0f\u66f4\u597d\u4e00\u4e9b\uff0c\u66f4\u4f18\u96c5\n        g_scanDone = 1;\n    }\n}\n\n/**\n * @brief \u6253\u5370\u626b\u63cf\u7ed3\u679c\n * \n */\nvoid WifiPrintScanResult(void) \n{\n    // \u521b\u5efa\u4e00\u4e2aWifiScanInfo\u6570\u7ec4\uff0c\u7528\u4e8e\u5b58\u653e\u626b\u63cf\u7ed3\u679c \n    // WifiScanInfo \u7ed3\u6784\u4f53\u5b9a\u4e49\u5728 wifi_scan_info.h \n    // WIFI_SCAN_HOTSPOT_LIMIT \u58f0\u660e\u5728 wifi_scan_info.h \n    WifiScanInfo wifiScanInfo[WIFI_SCAN_HOTSPOT_LIMIT] = {0};\n\n    // WifiScanInfo\u6570\u7ec4\u5927\u5c0f\n    uint32_t wifiScanInfoSize = WIFI_SCAN_HOTSPOT_LIMIT;\n    // \u83b7\u53d6\u626b\u63cf\u7ed3\u679c\n    WifiErrorCode errCode = GetScanInfoList(wifiScanInfo, &amp;wifiScanInfoSize);\n    // \u5224\u65aderrorCode\n    if (errCode != WIFI_SUCCESS) {\n        printf(\"[ERROR] GetScanInfoList failed -&gt; %d\\r\\n\", errCode);\n        return;\n    }\n    // \u6253\u5370\u626b\u63cf\u7ed3\u679c\n    for (int i=0 ; i &lt; wifiScanInfoSize ; i++) {\n        // \u521b\u5efa\u7f13\u5b58\u533a\uff0c\u5b58\u50a8 MAC \u5730\u5740\u5b57\u7b26\u4e32\n        static char macAddress[32] = {0};\n        // \u53d6\u51fa\u7b2c i \u4e2a\u626b\u63cf\u7ed3\u679c(\u7ed3\u6784\u4f53)\n        WifiScanInfo info = wifiScanInfo[i];\n        // \u83b7\u53d6bssid\uff0c\u5373\u70ed\u70b9\u7684 MAC \u5730\u5740\n        unsigned char *mac = info.bssid;\n        // \u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0cinfo.bssid\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u5927\u5c0f\u4e3a WIFI_MAC_LEN=6\n        snprintf(macAddress, sizeof(macAddress), \"%02X:%02X:%02X:%02X:%02X:%02X\", \n                 mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]);\n        // \u8f93\u51fa\u7ed3\u679c\n        printf(\"[INFO] AP[%d]: %s, %s, %4s, %d, %d, %d\\r\\n\", \n            i,\n            info.ssid,\n            macAddress,\n            WifiSecurityTypeName(info.securityType),\n            info.rssi,\n            info.band,\n            info.frequency);\n    }\n}\n\nstatic void WifiScanTask(void* param)\n{\n    // \u8fd4\u56de\u503c\n    WifiErrorCode errCode;\n    /* \u7ed1\u5b9a\u56de\u8c03\u51fd\u6570 */\n    WifiEvent eventListener = {\n        // \u5728\u8fde\u63a5\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u8c03\u7528WifiConnStateCallback\u56de\u8c03\u51fd\u6570\n        .OnWifiConnectionChanged = WifiConnStateCallback,\n        // \u5728\u626b\u63cf\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u8c03\u7528WifiScanStateCallback\u56de\u8c03\u51fd\u6570\n        .OnWifiScanStateChanged = WifiScanStateCallback };\n    osDelay(10);\n    /* \u4f7f\u7528RegisterWifiEvent\u63a5\u53e3\uff0c\u6ce8\u518cWiFi\u4e8b\u4ef6\u76d1\u542c\u5668 */ \n    errCode = RegisterWifiEvent(&amp;eventListener);\n    printf(\"[INFO] RegisterWifiEvent: %d\\r\\n\", errCode);\n    while(1)\n    {\n        /* \u5f00\u542fWiFi\u8bbe\u5907\u7684STA\u6a21\u5f0f */\n        errCode = EnableWifi();\n        printf(\"[INFO] EnableWifi: %d\\r\\n\", errCode);\n        osDelay(100);\n        /**\n         * \u5f00\u59cb\u626b\u63cfWiFi\u70ed\u70b9\uff0c\u53ea\u662f\u89e6\u53d1\u626b\u63cf\u52a8\u4f5c\uff0c\u5e76\u4e0d\u4f1a\u7b49\u5230\u626b\u63cf\u5b8c\u6210\u624d\u8fd4\u56de\n         * \u56e0\u6b64\u6211\u4eec:\n         * 1.\u5b9a\u4e49\u4e86g_scanDone\u5168\u5c40\u53d8\u91cf\u5224\u65ad\u662f\u5426\u626b\u63cf\u5f97\u5230\u70ed\u70b9\n         * 2.\u5b9a\u4e49\u4e86WifiPrintScanResult\u51fd\u6570\uff0c\u901a\u8fc7GetScanInfoList API\u83b7\u53d6\u626b\u63cf\u7ed3\u679c\n         */\n        g_scanDone = 0;\n        errCode = Scan();\n        printf(\"[INFO] Scan: %d\\r\\n\", errCode);\n        /* \u7b49\u5f85\u626b\u63cf\u5b8c\u6210 */ \n        while (!g_scanDone)\n        {\n            osDelay(5);\n        }\n        /* \u5904\u7406\u626b\u63cf\u7ed3\u679c */\n        WifiPrintScanResult();\n        /* \u5173\u95edWiFi\u8bbe\u5907\u7684STA\u6a21\u5f0f */ \n        errCode = DisableWifi();\n        printf(\"[INFO] DisableWifi: %d\\r\\n\", errCode);\n        printf(\"\\r\\n\");\n        osDelay(500);\n    }\n}\n\n\n/* \u5165\u53e3\u51fd\u6570 */\nstatic void WifiScanEntry(void)\n{\n     osThreadAttr_t attr = {\n        .name = \"WifiScanTask\",\n        .stack_size = 10240,\n        .priority = osPriorityNormal\n    };\n    if (osThreadNew(WifiScanTask, NULL, &amp;attr) == NULL) {\n        printf(\"[ERROR] Thread Create Faild.\\r\\n\");\n    }\n}\n\nSYS_RUN(WifiScanEntry);\n</code></pre> <p>\u6a21\u5757\u7f16\u8bd1\u811a\u672c</p> Text Only<pre><code>static_library(\"wifi_demo\") {\n    sources = [\n        \"wifi_scan_demo.c\",\n    ]\n    include_dirs = [\n         # include \"ohos_init.h\"\n        \"//utils/native/lite/include\",\n        # include CMSIS-RTOS API V2 for OpenHarmony1.0+\n        \"//kernel/liteos_m/kal/cmsis\",\n        # include IoT\u786c\u4ef6\u8bbe\u5907\u64cd\u4f5c\u63a5\u53e3 for OpenHarmony1.0+\uff1a\n        \"//base/iot_hardware/peripheral/interfaces/kits\",\n        # include HAL\u63a5\u53e3\u4e2d\u7684WIFI\u63a5\u53e3\n        \"//foundation\\communication\\wifi_lite\\interfaces\\wifiservice\"\n    ]\n}\n</code></pre> <p>APP\u7f16\u8bd1\u811a\u672c</p> Text Only<pre><code>import(\"//build/lite/config/component/lite_component.gni\")\n\nlite_component(\"app\") {\n    features = [\n        \"gn_practice/application:gn_app\",\n        \"gn_practice/driver:gn_driver\",\n        \"gn_practice/library:gn_library\",\n        \"kv_store_demo:kv_store_demo\",\n        \"file_demo:file_demo\",\n        \"thread_demo:thread_demo\",\n        \"timer_demo:timer_demo\",\n        \"mutex_demo:mutex_demo\",\n        # GPIO\u6a21\u5757\n        \"gpio_demo:gpio_demo\",\n        # ADC\u6a21\u5757\n        \"adc_demo:adc_demo\",\n        # OLED\u6a21\u5757\n        \"oled_demo:oled_demo\",\n        # WiFi\u6a21\u5757\n        \"wifi_demo:wifi_demo\",\n    ]\n}\n</code></pre>"},{"location":"study/OpenHarmony/8.wifi/#864-wi-fi","title":"8.6.4 \u8fde\u63a5Wi-Fi\u70ed\u70b9","text":"<p>\u8fde\u63a5 Wi-Fi\u70ed\u70b9\u7684\u6807\u51c6\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li>\u7b2c1\u6b65\uff0c\u4f7f\u7528<code>RegisterWifiEvent</code>\u63a5\u53e3\u6ce8\u518c Wi-Fi \u4e8b\u4ef6\u76d1\u542c\u5668\u3002</li> <li>\u7b2c2\u6b65\uff0c\u4f7f\u7528<code>EnableWifi</code>\u63a5\u53e3\u5f00\u542f Wi-Fi \u8bbe\u5907\u7684STA\u6a21\u5f0f\u3002</li> <li>\u7b2c3\u6b65\uff0c\u4f7f\u7528<code>AddDeviceConfig</code>\u63a5\u53e3\u5411\u7cfb\u7edf\u6dfb\u52a0\u70ed\u70b9\u914d\u7f6e\uff0c\u4e3b\u8981\u662f SSID\u3001PSK \u548c\u52a0\u5bc6\u65b9\u5f0f\u7b49\u914d\u7f6e\u9879\u3002</li> <li>\u7b2c4\u6b65\uff0c\u4f7f\u7528<code>ConnectTo</code>\u63a5\u53e3\u8fde\u63a5\u5230\u70ed\u70b9\u4e0a\u3002</li> <li>\u7b2c5\u6b65\uff0c\u5728\u8fde\u63a5\u72b6\u6001\u53d8\u5316\uff08<code>OnWifiConnectionChanged</code>\uff09\u4e8b\u4ef6\u7684\u56de\u8c03\u51fd\u6570\u4e2d\u76d1\u6d4b\u8fde\u63a5\u662f\u5426\u6210\u529f\u3002</li> <li>\u7b2c6\u6b65\uff0c\u7b49\u5f85\u8fde\u63a5\u6210\u529f\u3002</li> <li>\u7b2c7\u6b65\uff0c\u4f7f\u7528\u6d77\u601dSDK\u63a5\u53e3\u7684 DHCP \u5ba2\u6237\u7aefAPI\uff0c\u4ece\u70ed\u70b9\u4e2d\u83b7\u53d6IP\u5730\u5740\u3002</li> </ul> <p>\u65ad\u5f00Wi-Fi \u70ed\u70b9\u7684\u6807\u51c6\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li>\u7b2c1\u6b65\uff0c\u4f7f\u7528<code>netifapi_dhcp_stop</code> \u63a5\u53e3\u505c\u6b62 DHCP \u5ba2\u6237\u7aef\u3002</li> <li>\u7b2c2\u6b65\uff0c\u4f7f\u7528<code>Disconnect</code>\u63a5\u53e3\u65ad\u5f00\u70ed\u70b9\u3002</li> <li>\u7b2c3\u6b65\uff0c\u4f7f\u7528<code>RemoveDevice</code>\u63a5\u53e3\u5220\u9664\u70ed\u70b9\u914d\u7f6e\u3002</li> <li>\u7b2c4\u6b65\uff0c\u4f7f\u7528<code>DisableWifi</code>\u63a5\u53e3\u5173\u95ed Wi-Fi \u8bbe\u5907\u7684 STA \u6a21\u5f0f\u3002</li> </ul> <p>\u5173\u4e8e\u6d77\u601dSDK\u63a5\u53e3\uff0c\u9700\u8981\u4e86\u89e3lwip\uff1a</p> <ul> <li>lwIP\uff1aA Lightweight TCPIP stack</li> <li>\u745e\u5178\u8ba1\u7b97\u673a\u79d1\u5b66\u9662(SICS)\u7684 Adam Dunkels \u5f00\u53d1\u7684\u4e00\u4e2a\u5c0f\u578b(\u8f7b\u91cf)\u5f00\u6e90\u7684TCP/IP\u534f\u8bae\u6808</li> <li>\u5b9e\u73b0\u7684\u91cd\u70b9\u662f\u5728\u4fdd\u6301TCP\u534f\u8bae\u4e3b\u8981\u529f\u80fd\u7684\u57fa\u7840\u4e0a\u51cf\u5c11\u5bf9RAM\u7684\u5360\u7528</li> <li>\u4ec5\u5360\u7528\u51e0\u5341KB RAM\u7a7a\u95f4\uff0c40KB ROM\u7a7a\u95f4\uff0c\u975e\u5e38\u9002\u5408\u5728\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u4f7f\u7528</li> </ul>"},{"location":"study/OpenHarmony/8.wifi/#865","title":"8.6.5 \u7a0b\u5e8f\u5b9e\u73b0","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdint.h&gt;\n#include \"ohos_init.h\"\n#include \"cmsis_os2.h\"\n// HAL\u63a5\u53e3API\n#include \"wifi_device.h\"\n// \u6d77\u601dSDK\u63a5\u53e3\n// lwIP TCP/IP\u534f\u8bae\u6808\uff1a\u7f51\u7edc\u63a5\u53e3API\n// netifapi: Network Interface API\n#include \"lwip/netifapi.h\"\n// lwIP TCP/IP\u534f\u8bae\u6808\uff1aSHELL\u547d\u4ee4API\n#include \"lwip/api_shell.h\"\n/**\n * wifi_demo/wifi_connect_demo.c\n * \u8fde\u63a5Wi-Fi\u70ed\u70b9\u6848\u4f8b\n * -------------------------------------------------------------------------------\n * \u7b2c1\u6b65\uff0c\u4f7f\u7528`RegisterWifiEvent`\u63a5\u53e3\u6ce8\u518c Wi-Fi \u4e8b\u4ef6\u76d1\u542c\u5668\u3002\n * \u7b2c2\u6b65\uff0c\u4f7f\u7528`EnableWifi`\u63a5\u53e3\u5f00\u542f Wi-Fi \u8bbe\u5907\u7684STA\u6a21\u5f0f\u3002\n * \u7b2c3\u6b65\uff0c\u4f7f\u7528`AddDeviceConfig`\u63a5\u53e3\u5411\u7cfb\u7edf\u6dfb\u52a0\u70ed\u70b9\u914d\u7f6e\uff0c\u4e3b\u8981\u662f SSID\u3001PSK \u548c\u52a0\u5bc6\u65b9\u5f0f\u7b49\u914d\u7f6e\u9879\u3002\n * \u7b2c4\u6b65\uff0c\u4f7f\u7528`ConnectTo`\u63a5\u53e3\u8fde\u63a5\u5230\u70ed\u70b9\u4e0a\u3002\n * \u7b2c5\u6b65\uff0c\u5728\u8fde\u63a5\u72b6\u6001\u53d8\u5316\uff08`OnWifiConnectionChanged`\uff09\u4e8b\u4ef6\u7684\u56de\u8c03\u51fd\u6570\u4e2d\u76d1\u6d4b\u8fde\u63a5\u662f\u5426\u6210\u529f\u3002\n * \u7b2c6\u6b65\uff0c\u7b49\u5f85\u8fde\u63a5\u6210\u529f\u3002\n * \u7b2c7\u6b65\uff0c\u4f7f\u7528\u6d77\u601dSDK\u63a5\u53e3\u7684 DHCP \u5ba2\u6237\u7aefAPI\uff0c\u4ece\u70ed\u70b9\u4e2d\u83b7\u53d6IP\u5730\u5740\u3002\n */\n\n // \u5168\u5c40\u53d8\u91cf\uff0c\u7528\u4e8e\u6807\u8bc6\u8fde\u63a5\u662f\u5426\u6210\u529f\nstatic int g_connected = 0;\n\n/**\n * @brief \u6253\u5370Wifi\u8fde\u63a5\u4fe1\u606f\n * \n * @param info \u4f20\u5165Wifi\u8fde\u63a5\u4fe1\u606f\uff0cWifiLinkedInfo\u7c7b\u578b\n */\nstatic void WifiPrintConnInfo(WifiLinkedInfo *info)\n{\n    // \u5b58\u50a8MAC\u5730\u5740\u5b57\u7b26\u4e32\n    static char macAddress[32] = {0};\n    // \u83b7\u53d6MAC\u5730\u5740\n    unsigned char *mac = info-&gt;bssid;\n    // mac\u5730\u5740\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\n    snprintf(macAddress, sizeof(macAddress), \"%02X:%02X:%02X:%02X:%02X:%02X\",\n                mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]);\n    // \u6253\u5370\u4fe1\u606f\n    printf(\"[INFO] %d,%d,%d,%d,%d,%d,%s\\r\\n\",\n        info-&gt;rssi,\n        info-&gt;band,\n        info-&gt;frequency,\n        info-&gt;connState,\n        info-&gt;disconnectedReason,\n        info-&gt;ipAddress,\n        macAddress\n    );\n}\n\n/**\n * @brief \u8fde\u63a5\u72b6\u6001\u53d8\u5316\u56de\u8c03\u51fd\u6570\uff0c\u63a5\u6536\u7684\u53c2\u6570\u5747\u58f0\u660e\u5728 wifi_linked_info.h\n * \n * @param state \u8fde\u63a5\u72b6\u6001(WifiConnState)\uff0cWIFI_CONNECTED\u8868\u793a\u8fde\u63a5\u6210\u529f\uff0cWIFI_DISCONNECTED\u8868\u793a\u8fde\u63a5\u5931\u8d25\n * @param info \u8fde\u63a5\u4fe1\u606f(WifiLinkedInfo)\uff0c\u6709\u591a\u4e2a\u4fe1\u606f\u53c2\u6570\n * @return \u65e0 \n */\nstatic void WifiConnStateCallback(int state, WifiLinkedInfo *info)\n{\n    (void)state;    // \u5ffd\u7565\u53c2\u6570state\n    (void)info;     // \u5ffd\u7565\u53c2\u6570info\n\n    // \u7b80\u5355\u8f93\u51fa\u65e5\u5fd7\u4fe1\u606f\uff0c\u8868\u660e\u51fd\u6570\u88ab\u6267\u884c\u4e86\n    printf(\"[CALLBACK] %s %d,state:%d\\r\\n\", __FUNCTION__, __LINE__, state);\n    // \u6253\u5370Wifi\u8fde\u63a5\u4fe1\u606f\n    WifiPrintConnInfo(info);\n    // \u66f4\u65b0\u8fde\u63a5\u72b6\u6001(\u5168\u5c40\u53d8\u91cf)\uff0cWIFI_STATE_AVALIABLE \u58f0\u660e\u5728 wifi_event.h\n    if (state == WIFI_STATE_AVALIABLE) {\n        g_connected = 1;\n    } else {\n        g_connected = 0;\n    }\n}\n\n/**\n * @brief \u626b\u63cf\u72b6\u6001\u53d8\u5316\u56de\u8c03\u51fd\u6570\n * \n * @param state \u626b\u63cf\u72b6\u6001\n * @param size \u626b\u63cf\u5230\u7684\u70ed\u70b9\u4e2a\u6570\n */\nstatic void WifiScanStateCallback(int state, int size)\n{\n    // \u8f93\u51fa\u65e5\u5fd7\n    printf(\"[CALLBACK] %s %d, state = %X, size = %d\\r\\n\", __FUNCTION__, __LINE__, state, size);\n}\n\n/* \u4efb\u52a1\u51fd\u6570 */\nstatic void WifiConnectTask(void* params)\n{\n    /* \u5b9a\u4e49Wifi\u9519\u8bef\u4ee3\u7801\u63a5\u6536\u53d8\u91cf */\n    WifiErrorCode errCode;\n    /* \u521b\u5efaWifi\u4e8b\u4ef6\u76d1\u542c\u5668 */\n    WifiEvent eventListener = {\n        .OnWifiConnectionChanged = WifiConnStateCallback,\n        .OnWifiScanStateChanged = WifiScanStateCallback,\n    };\n    osDelay(10);\n    /* \u6ce8\u518cWiFi\u4e8b\u4ef6\u76d1\u542c\u5668 */\n    errCode = RegisterWifiEvent(&amp;eventListener);\n    printf(\"[INFO] RegisterWifiEvent: %d\\r\\n\", errCode);\n    /* \u5b9a\u4e49\u8981\u8fde\u63a5\u7684\u6307\u5b9aWifi\u7684\u521d\u59cb\u5316*/\n    WifiDeviceConfig apConfig = {\n        // \u70ed\u70b9\u540d\u79f0\n        .ssid = \"OpenHarmony\",\n        // \u70ed\u70b9\u5bc6\u7801\n        .preSharedKey = \"123456789\",\n        // \u52a0\u5bc6\u65b9\u5f0f(PSK)\n        .securityType = WIFI_SEC_TYPE_PSK,\n    };\n    // \u63a5\u6536networkId\n    int netId;\n    /* \u4e3b\u5faa\u73af */\n    while(1)\n    {\n        // \u4f7f\u80fdstation \u6a21\u5f0f.\n        errCode = EnableWifi();\n        printf(\"[INFO] EnableWifi: %d\\r\\n\", errCode);\n        // \u6dfb\u52a0\u70ed\u70b9\u7684\u521d\u59cb\u5316\n        errCode = AddDeviceConfig(&amp;apConfig, &amp;netId);\n        printf(\"[INFO] AddDeviceConfig: %d\\r\\n\", errCode);\n        // \u8fde\u63a5\u5230\u70ed\u70b9\n        ConnectTo(netId);\n        // \u7b49\u5f85\u8fde\u63a5\n        while(!g_connected)\n        {\n            osDelay(10);\n        }\n        printf(\"[INFO] g_connected: %d\\r\\n\", g_connected);\n        osDelay(50);\n        // \u8fde\u63a5\u6210\u529f\u540e\uff0c\u8c03\u7528DHCP\u5ba2\u6237\u7aef\u63a5\u53e3\uff0c\u4ece\u70ed\u70b9\u83b7\u53d6IP\u5730\u5740\n        // \u83b7\u53d6STA\u6a21\u5f0f\u7684\u7f51\u7edc\u63a5\u53e3\n        struct netif *iface = netifapi_netif_find(\"wlan0\");\n        // \u83b7\u53d6\u7f51\u7edc\u63a5\u53e3\u6210\u529f\n        if (iface) {\n            // \u542f\u52a8DHCP\u5ba2\u6237\u7aef\n            err_t ret = netifapi_dhcp_start(iface);\n            printf(\"[INFO] netifapi_dhcp_start: %d\\r\\n\", ret);\n            // \u7b49\u5f85DHCP\u670d\u52a1\u7aef\u5206\u914dIP\u5730\u5740\n            osDelay(200);\n        }\n        // \u6a21\u62df\u4e00\u6bb5\u65f6\u95f4\u7684\u8054\u7f51\u4e1a\u52a1\n        int timeout = 60;\n        printf(\"[Warning] after %d seconds, I'll disconnect WiFi!\\n\", timeout);\n        while (timeout--)\n        {\n            osDelay(100);\n        }\n        // \u65ad\u5f00\u70ed\u70b9\u4e4b\u524d\u9700\u8981\u505c\u6b62DHCP\u5ba2\u6237\u7aef\n        err_t ret = netifapi_dhcp_stop(iface);\n        printf(\"[INFO] netifapi_dhcp_start: %d\\r\\n\", ret);\n        // \u65ad\u5f00\u70ed\u70b9\n        Disconnect();\n        printf(\"[INFO] disconnect!\\r\\n\");\n        // \u5220\u9664\u70ed\u70b9\u914d\u7f6e\n        RemoveDevice(netId);\n        // \u5173\u95edWiFi\u8bbe\u5907\u7684STA\u6a21\u5f0f\n        errCode = DisableWifi();\n        printf(\"DisableWifi: %d\\r\\n\", errCode);\n        // \u7b49\u5f852\u79d2\n        osDelay(200);\n    }\n}\n\n/* \u5165\u53e3\u51fd\u6570 */\nstatic void WifiScanEntry(void)\n{\n     osThreadAttr_t attr = {\n        .name = \"WifiConnectTask\",\n        .stack_size = 10240,\n        .priority = osPriorityNormal\n    };\n    if (osThreadNew(WifiConnectTask, NULL, &amp;attr) == NULL) {\n        printf(\"[ERROR] Thread Create Faild.\\r\\n\");\n    }\n}\n\nSYS_RUN(WifiScanEntry);\n</code></pre> <p>\u6a21\u5757\u7f16\u8bd1\u811a\u672c</p> Text Only<pre><code>static_library(\"wifi_demo\") {\n    sources = [\n        \"wifi_scan_demo.c\",\n        \"wifi_connect_demo.c\",\n    ]\n    include_dirs = [\n         # include \"ohos_init.h\"\n        \"//utils/native/lite/include\",\n        # include CMSIS-RTOS API V2 for OpenHarmony1.0+\n        \"//kernel/liteos_m/kal/cmsis\",\n        # include IoT\u786c\u4ef6\u8bbe\u5907\u64cd\u4f5c\u63a5\u53e3 for OpenHarmony1.0+\uff1a\n        \"//base/iot_hardware/peripheral/interfaces/kits\",\n        # include HAL\u63a5\u53e3\u4e2d\u7684WIFI\u63a5\u53e3\n        \"//foundation\\communication\\wifi_lite\\interfaces\\wifiservice\"\n    ]\n}\n</code></pre> <p>APP\u7f16\u8bd1\u811a\u672c</p> C<pre><code>import(\"//build/lite/config/component/lite_component.gni\")\n\nlite_component(\"app\") {\n    features = [\n        \"gn_practice/application:gn_app\",\n        \"gn_practice/driver:gn_driver\",\n        \"gn_practice/library:gn_library\",\n        \"kv_store_demo:kv_store_demo\",\n        \"file_demo:file_demo\",\n        \"thread_demo:thread_demo\",\n        \"timer_demo:timer_demo\",\n        \"mutex_demo:mutex_demo\",\n        # GPIO\u6a21\u5757\n        \"gpio_demo:gpio_demo\",\n        # ADC\u6a21\u5757\n        \"adc_demo:adc_demo\",\n        # OLED\u6a21\u5757\n        \"oled_demo:oled_demo\",\n        # WiFi\u6a21\u5757\n        \"wifi_demo:wifi_demo\",\n    ]\n}\n</code></pre>"},{"location":"study/OpenHarmony/8.wifi/#87-ap","title":"8.7 AP\u6a21\u5f0f","text":""},{"location":"study/OpenHarmony/8.wifi/#871","title":"8.7.1 \u521b\u5efa\u70ed\u70b9","text":"<p>\u521b\u5efaWi-Fi\u70ed\u70b9\u7684\u6807\u51c6\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li>\u7b2c1\u6b65\uff0c\u4f7f\u7528<code>RegisterWifiEvent</code>\u63a5\u53e3\u6ce8\u518c Wi-Fi \u4e8b\u4ef6\u76d1\u542c\u5668\u3002</li> </ul> <ul> <li>\u7b2c2\u6b65\uff0c\u51c6\u5907AP\u7684\u914d\u7f6e\u53c2\u6570\uff0c\u5305\u62ecSSID\u3001PSK\u3001\u52a0\u5bc6\u65b9\u5f0f\u3001\u9891\u5e26\u7c7b\u578b\u3001\u4fe1\u9053\u7b49\u3002</li> <li>\u7b2c3\u6b65\uff0c\u4f7f\u7528<code>SetHotspotConfig</code>\u63a5\u53e3\u5bf9\u7cfb\u7edf\u8bbe\u7f6e\u5f53\u524d\u70ed\u70b9\u7684\u914d\u7f6e\u4fe1\u606f\u3002</li> </ul> <ul> <li>\u7b2c4\u6b65\uff0c\u4f7f\u7528<code>EnableHotspot</code>\u63a5\u53e3\u5f00\u542f Wi-Fi \u8bbe\u5907\u7684 AP \u6a21\u5f0f\u3002</li> </ul> <ul> <li>\u7b2c5\u6b65\uff0c\u5728\u70ed\u70b9\u72b6\u6001\u53d8\u5316\uff08<code>OnHotspotStateChanged</code>\uff09\u4e8b\u4ef6\u7684\u56de\u8c03\u51fd\u6570\u4e2d\uff0c\u76d1\u6d4b\u70ed\u70b9\u662f\u5426\u6210\u529f\u5f00\u542f\u3002</li> <li>\u7b2c6\u6b65\uff0c\u7b49\u5f85\u70ed\u70b9\u6210\u529f\u5f00\u542f\u3002</li> <li>\u7b2c7\u6b65\uff0c\u4f7f\u7528<code>netifapi_netif_set_addr</code>\u63a5\u53e3\u8bbe\u7f6e\u70ed\u70b9\u7684IP\u5730\u5740\u3001\u5b50\u7f51\u63a9\u7801\u3001\u7f51\u5173\u7b49\u4fe1\u606f\u3002</li> <li>\u7b2c8\u6b65\uff0c\u4f7f\u7528<code>netifapi_dhcps_start</code>\u63a5\u53e3\u542f\u52a8 DHCP \u670d\u52a1\u3002</li> </ul> <p>\u5173\u95edWi-Fi\u70ed\u70b9\u7684\u6807\u51c6\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li>\u7b2c1\u6b65\uff0c\u4f7f\u7528<code>netifapi_dhcps_stop</code>\u63a5\u53e3\u505c\u6b62 DHCP \u670d\u52a1\u3002</li> <li>\u7b2c2\u6b65\uff0c\u4f7f\u7528<code>UnRegisterWifiEvent</code>\u63a5\u53e3\u89e3\u9664\u4e8b\u4ef6\u76d1\u542c\u3002</li> <li>\u7b2c3\u6b65\uff0c\u4f7f\u7528<code>DisableHotspot</code>\u63a5\u53e3\u5173\u95edWi-Fi\u8bbe\u5907\u7684AP\u6a21\u5f0f\u3002</li> </ul>"},{"location":"study/OpenHarmony/8.wifi/#872-dhcp","title":"8.7.2 DHCP\u670d\u52a1","text":"<p>\u5728\u521b\u5efaWi-Fi\u70ed\u70b9\u4e4b\u540e\uff0c\u8fd8\u9700\u8981\u7ed9\u8fde\u63a5\u5230\u70ed\u70b9\u7684Wi-Fi\u5ba2\u6237\u7aef\u5206\u914dIP\u5730\u5740\u3002\u5206\u914dIP\u5730\u5740\u53ef\u4ee5\u4f7f\u7528DHCP\u670d\u52a1\u6765\u5b8c\u6210\u3002</p> <ol> <li>DHCP </li> </ol> <p>DHCP\u662f\u52a8\u6001\u4e3b\u673a\u914d\u7f6e\u534f\u8bae\uff0c\u7528\u4e8e\u81ea\u52a8\u7ed9Wi-Fi\u5ba2\u6237\u7aef\u5206\u914dIP\u5730\u5740\u548c\u5b50\u7f51\u63a9\u7801\u3002OpenHarmony\u8f7b\u91cf\u8bbe\u5907\u7684DHCP\u529f\u80fd\u662f\u7531\u6d77\u601dSDK\u4e2d\u96c6\u6210\u7684\u7b2c\u4e09\u65b9\u7ec4\u4ef6LwIP\u63d0\u4f9b\u7684\u3002</p> <ol> <li>DHCP IP\u5730\u5740\u6c60</li> </ol> <p>DHCP\u63d0\u4f9b\u4e86\u4e00\u4e2aIP\u5730\u5740\u6c60\uff0c\u4f9bWi-Fi\u5ba2\u6237\u7aef\u6765\u4f7f\u7528\u3002\u4f46\u662f\u8bf7\u6ce8\u610f\uff0c\u6d77\u601dSDK\u63a5\u53e3\u5f3a\u5236\u914d\u7f6e\u4e86\u8fd9\u4e2aIP\u5730\u5740\u6c60\u7684\u8d77\u59cbIP\u5730\u5740\u548cIP\u5730\u5740\u7684\u4e2a\u6570\uff0c\u6211\u4eec\u662f\u65e0\u6cd5\u6539\u52a8\u7684\u3002\u6240\u4ee5\uff0c<code>netifapi_dhcps start</code>\u63a5\u53e3\u7684\u76f8\u5e94\u53c2\u6570\u90fd\u8981\u8bbe\u7f6e\u4e3a0\uff08\u4f7f\u7528\u63a5\u53e3\u5185\u90e8\u7684\u9ed8\u8ba4\u503c\uff09\u3002</p>"},{"location":"study/OpenHarmony/8.wifi/#873","title":"8.7.3 \u7a0b\u5e8f\u5b9e\u73b0","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include &lt;stdint.h&gt;\n#include \"ohos_init.h\"\n#include \"cmsis_os2.h\"\n// HAL\u63a5\u53e3API\n#include \"wifi_hotspot.h\"\n// \u6d77\u601dSDK\u63a5\u53e3\n// lwIP TCP/IP\u534f\u8bae\u6808\uff1a\u7f51\u7edc\u63a5\u53e3API\n// netifapi: Network Interface API\n#include \"lwip/netifapi.h\"\n\n/**\n * wifi_demo/wifi_hotspot_demo.c\n * \u521b\u5efaWi-Fi\u70ed\u70b9\u6848\u4f8b\n * -------------------------------------------------------------------------------\n * \u7b2c1\u6b65\uff0c\u4f7f\u7528`RegisterWifiEvent`\u63a5\u53e3\u6ce8\u518c Wi-Fi \u4e8b\u4ef6\u76d1\u542c\u5668\u3002\n * \u7b2c2\u6b65\uff0c\u51c6\u5907AP\u7684\u914d\u7f6e\u53c2\u6570\uff0c\u5305\u62ecSSID\u3001PSK\u3001\u52a0\u5bc6\u65b9\u5f0f\u3001\u9891\u5e26\u7c7b\u578b\u3001\u4fe1\u9053\u7b49\u3002\n * \u7b2c3\u6b65\uff0c\u4f7f\u7528`SetHotspotConfig`\u63a5\u53e3\u5bf9\u7cfb\u7edf\u8bbe\u7f6e\u5f53\u524d\u70ed\u70b9\u7684\u914d\u7f6e\u4fe1\u606f\u3002\n * \u7b2c4\u6b65\uff0c\u4f7f\u7528`EnableHotspot`\u63a5\u53e3\u5f00\u542f Wi-Fi \u8bbe\u5907\u7684 AP \u6a21\u5f0f\u3002\n * \u7b2c5\u6b65\uff0c\u5728\u70ed\u70b9\u72b6\u6001\u53d8\u5316\uff08`OnHotspotStateChanged`\uff09\u4e8b\u4ef6\u7684\u56de\u8c03\u51fd\u6570\u4e2d\uff0c\u76d1\u6d4b\u70ed\u70b9\u662f\u5426\u6210\u529f\u5f00\u542f\u3002\n * \u7b2c6\u6b65\uff0c\u7b49\u5f85\u70ed\u70b9\u6210\u529f\u5f00\u542f\u3002\n * \u7b2c7\u6b65\uff0c\u4f7f\u7528`netifapi_netif_set_addr`\u63a5\u53e3\u8bbe\u7f6e\u70ed\u70b9\u7684IP\u5730\u5740\u3001\u5b50\u7f51\u63a9\u7801\u3001\u7f51\u5173\u7b49\u4fe1\u606f\u3002\n * \u7b2c8\u6b65\uff0c\u4f7f\u7528`netifapi_dhcps_start`\u63a5\u53e3\u542f\u52a8 DHCP \u670d\u52a1\u3002\n */\n\n// \u70ed\u70b9\u8fde\u63a5\u6210\u529f\u6807\u8bc6\nstatic int g_hotspotStarted;\n// \u5df2\u7ecf\u8fde\u63a5\u70ed\u70b9\u7684\u7ad9\u70b9\u4e2a\u6570\nstatic int g_joinedStations;\n// \u7f51\u7edc\u63a5\u53e3\nstatic struct netif *g_iface;\n\n/**\n * @brief \u6253\u5370\u8fde\u63a5\u70ed\u70b9\u7684\u7ad9\u70b9\u4fe1\u606f\n * \n * @param info \u7ad9\u70b9\u4fe1\u606f\n */\nstatic void HotspotPrintStaInfo(StationInfo *info)\n{\n    // \u5b58\u50a8MAC\u5730\u5740\u5b57\u7b26\u4e32\n    static char macAddress[32] = {0};\n    // \u83b7\u53d6MAC\u5730\u5740\n    unsigned char *mac = info-&gt;macAddress;\n    // mac\u5730\u5740\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\n    snprintf(macAddress, sizeof(macAddress), \"%02X:%02X:%02X:%02X:%02X:%02X\",\n             mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]);\n    printf(\"[CALLBACK] HotspotStaJoin: %s,%s\\r\\n\",\n        macAddress,\n        info-&gt;name);\n}\n\n/**\n * @brief \u70ed\u70b9\u72b6\u6001\u53d8\u5316\u56de\u8c03\u51fd\u6570\n * \n * @param state \u70ed\u70b9\u72b6\u6001\n */\nstatic void HotspotStateCallback(int state)\n{\n    /* \u8f93\u51fa\u65e5\u5fd7 */\n    printf(\"[CALLBACK] OnHotspotStateChanged: %d.\\r\\n\", state);\n    /* \u66f4\u65b0\u72b6\u6001\u6807\u8bc6 */\n    if (state == WIFI_HOTSPOT_ACTIVE) {\n        g_hotspotStarted = 1;\n    } else {\n        g_hotspotStarted = 0;\n    }\n}\n\n/**\n * @brief \u7ad9\u70b9\u52a0\u5165\u70ed\u70b9\u56de\u8c03\u51fd\u6570\n * \n * @param info \u7ad9\u70b9\u4fe1\u606f\n */\nstatic void HotspotStaJoinCallback(StationInfo *info)\n{\n    g_joinedStations++;\n    /* \u6253\u5370\u8fde\u63a5\u7ad9\u70b9\u7684\u4fe1\u606f */\n    HotspotPrintStaInfo(info);\n    printf(\"[CALLBACK] +StaJoinCallback: active stations = %d.\\r\\n\", g_joinedStations);\n}\n\n/**\n * @brief \u7ad9\u70b9\u65ad\u5f00\u70ed\u70b9\u56de\u8c03\u51fd\u6570\n * \n * @param info \u7ad9\u70b9\u4fe1\u606f\n */\nstatic void HotspotStaLeaveCallback(StationInfo *info)\n{\n    g_joinedStations--;\n    /* \u6253\u5370\u8fde\u63a5\u7ad9\u70b9\u7684\u4fe1\u606f */\n    HotspotPrintStaInfo(info);\n    printf(\"[CALLBACK] -StaLeaveCallback: active stations = %d.\\r\\n\", g_joinedStations);\n}\n\n/**\n * @brief \u6253\u5f00\u70ed\u70b9\n * \n * @param hsConfig \u70ed\u70b9\u521d\u59cb\u5316\n * @param wifiEvent \u4e8b\u4ef6\u76d1\u542c\u7ed1\u5b9a\u7684\u56de\u8c03\u51fd\u6570\n * \n */\nstatic void HotspotStart(HotspotConfig *hsConfig, WifiEvent* wifiEvent)\n{\n    /* \u63a5\u6536\u9519\u8bef\u4ee3\u7801 */\n    WifiErrorCode errCode;\n    /* \u521b\u5efaWifi\u4e8b\u4ef6\u76d1\u542c\u5668 */\n    errCode = RegisterWifiEvent(wifiEvent);\n    printf(\"[INFO] RegisterWifiEvent: %d\\r\\n\", errCode);\n    /* \u8bbe\u7f6e\u5f53\u524d\u70ed\u70b9\u7684\u914d\u7f6e\u4fe1\u606f */\n    errCode = SetHotspotConfig(hsConfig);\n    printf(\"[INFO] SetHotspotConfig: %d\\r\\n\", errCode);\n    /* \u5f00\u542fAP\u6a21\u5f0f */\n    // \u521d\u59cb\u5316\u70ed\u70b9\u8fde\u63a5\u6210\u529f\u6807\u8bc6\n    g_hotspotStarted = 0;\n    errCode = EnableHotspot();\n    printf(\"[INFO] EnableHotspot: %d\\r\\n\", errCode);\n    /* \u7b49\u5f85\u70ed\u70b9\u5f00\u542f\u6210\u529f */\n    while (!g_hotspotStarted)\n    {\n        osDelay(10);\n    }\n    printf(\"g_hotspotStarted = %d.\\r\\n\", g_hotspotStarted);\n    /**\n     * @brief \u70ed\u70b9\u5f00\u542f\u6210\u529f\u4e4b\u540e\uff0c\u9700\u8981\u542f\u52a8DHCP\u670d\u52a1\u7aef\uff0cHi3861\u4f7f\u7528\u5982\u4e0b\u63a5\u53e3\uff1a\n     * \u4f7f\u7528netifapi_netif_find(\"ap0\")\u83b7\u53d6AP\u6a21\u5f0f\u7684\u7f51\u7edc\u63a5\u53e3\n     * \u4f7f\u7528netifapi_netif_set_addr\u63a5\u53e3\u8bbe\u7f6e\u70ed\u70b9\u672c\u8eab\u7684IP\u5730\u5740\u3001\u7f51\u5173\u3001\u5b50\u7f51\u63a9\u7801\n     * \u4f7f\u7528netifapi_dhcps_start\u63a5\u53e3\u542f\u52a8DHCP\u670d\u52a1\u7aef\n     * \u4f7f\u7528netifapi_dhcps_stop\u63a5\u53e3\u505c\u6b62DHCP\u670d\u52a1\u7aef\n     */\n    // \u83b7\u53d6\u7f51\u7edc\u63a5\u53e3\n    g_iface = netifapi_netif_find(\"ap0\");\n\n    if (g_iface) {\n        // \u5b58\u50a8IP\u5730\u5740\n        ip4_addr_t ipaddr;\n        // \u5b58\u50a8\u7f51\u5173\n        ip4_addr_t gateway;\n        // \u5b58\u50a8\u5b50\u7f51\u63a9\u7801\n        ip4_addr_t netmask;\n        // \u8bbe\u7f6eIP\u5730\u5740\n        IP4_ADDR(&amp;ipaddr, 192, 168, 12, 1);    /* input your IP for example: 192.168.12.1 */\n        // \u8bbe\u7f6e\u5b50\u7f51\u63a9\u7801\n        IP4_ADDR(&amp;netmask, 255, 255, 255, 0); /* input your netmask for example: 255.255.255.0 */\n        // \u8bbe\u7f6e\u7f51\u5173\n        IP4_ADDR(&amp;gateway, 192, 168, 12, 1);   /* input your gateway for example: 192.168.12.1 */\n        // \u8bbe\u7f6e\u70ed\u70b9\u7684IP\u5730\u5740\u3001\u5b50\u7f51\u63a9\u7801\u3001\u7f51\u5173\n        err_t ret = netifapi_netif_set_addr(g_iface, &amp;ipaddr, &amp;netmask, &amp;gateway);\n        // \u6253\u5370\u63a5\u53e3\u8c03\u7528\u7ed3\u679c\n        printf(\"[INFO] netifapi_netif_set_addr: %d\\r\\n\", ret);\n        // \u505c\u6b62DHCP\u670d\u52a1 (DHCP\u670d\u52a1\u6709\u53ef\u80fd\u9ed8\u8ba4\u662f\u5f00\u542f\u72b6\u6001)\n        ret = netifapi_dhcps_stop(g_iface);\n        // \u6253\u5370\u63a5\u53e3\u8c03\u7528\u7ed3\u679c\n        printf(\"[INFO] netifapi_dhcps_stop: %d\\r\\n\", ret);\n        // \u542f\u52a8DHCP\u670d\u52a1\n        ret = netifapi_dhcps_start(g_iface, 0, 0);\n        // \u6253\u5370\u63a5\u53e3\u8c03\u7528\u7ed3\u679c\n        printf(\"[INFO] netifapi_dhcps_start: %d\\r\\n\", ret);\n    }\n}\n\n/**\n * @brief \u5173\u95ed\u70ed\u70b9\n * \n * @param wifiEvent \u4e8b\u4ef6\u76d1\u542c\u7ed1\u5b9a\u7684\u56de\u8c03\u51fd\u6570\n *\n */\nstatic void HotspotStop(WifiEvent* wifiEvent)\n{\n    /* \u5982\u679c\u4e4b\u524d\u5df2\u7ecf\u6210\u529f\u83b7\u53d6\u7f51\u7edc\u63a5\u53e3 */\n    if (g_iface) {\n        // \u505c\u6b62DHCP\u670d\u52a1\n        err_t ret = netifapi_dhcps_stop(g_iface);\n        // \u6253\u5370\u63a5\u53e3\u8c03\u7528\u7ed3\u679c\n        printf(\"netifapi_dhcps_stop: %d\\r\\n\", ret);\n    }\n    /* \u63a5\u89e6Wifi\u4e8b\u4ef6\u76d1\u542c */\n    WifiErrorCode errCode = UnRegisterWifiEvent(&amp;wifiEvent);\n    printf(\"[INFO] UnRegisterWifiEvent: %d\\r\\n\", errCode);\n    /* \u5173\u95ed\u70ed\u70b9 */\n    errCode = DisableHotspot();\n    printf(\"[INFO] DisableHotspot: %d\\r\\n\", errCode);\n}\n\nstatic void WifiHotspotTask(void* params)\n{\n    /* \u63a5\u6536\u9519\u8bef\u4ee3\u7801 */\n    WifiErrorCode errCode;\n    /* \u70ed\u70b9\u521d\u59cb\u5316 */\n    HotspotConfig hsConfig = {\n        .ssid = \"BearPi\",\n        .preSharedKey = \"openharmony\",\n        .securityType = WIFI_SEC_TYPE_PSK,\n        .band = HOTSPOT_BAND_TYPE_2G,\n        .channelNum = 7,\n    };\n    osDelay(10);\n    /* \u7ed1\u5b9a\u56de\u8c03\u51fd\u6570 */\n    WifiEvent eventListener = {\n        // \u70ed\u70b9\u72b6\u6001\u53d8\u5316\n        .OnHotspotStateChanged = HotspotStateCallback,\n        // \u7ad9\u70b9\u5df2\u8fde\u63a5\n        .OnHotspotStaJoin = HotspotStaJoinCallback,\n        // \u7ad9\u70b9\u65ad\u5f00\u8fde\u63a5\n        .OnHotspotStaLeave = HotspotStaLeaveCallback,\n    };\n    /* \u5f00\u542f\u70ed\u70b9 */\n    printf(\"[INFO] starting AP ...\\r\\n\");\n    HotspotStart(&amp;hsConfig, &amp;eventListener);\n    printf(\"[INFO] StartHotspot: %d\\r\\n\", errCode);\n    /* \u70ed\u70b9\u5c06\u5f00\u542f1\u5206\u949f */\n    int timeout = 60;\n    printf(\"After %d seconds Ap will turn off!\\r\\n\", timeout);\n    while (timeout--)\n    {\n        osDelay(100);\n    }\n    /* \u5173\u95ed\u70ed\u70b9 */\n    printf(\"[INFO] stop AP ...\\r\\n\");\n    HotspotStop(&amp;eventListener);\n    printf(\"[INFO] AP stopped.\\r\\n\");\n}\n\n/* \u5165\u53e3\u51fd\u6570 */\nstatic void HotspotEntry(void)\n{\n     osThreadAttr_t attr = {\n        .name = \"WifiHotspotTask\",\n        .stack_size = 10240,\n        .priority = osPriorityNormal\n    };\n    if (osThreadNew(WifiHotspotTask, NULL, &amp;attr) == NULL) {\n        printf(\"[ERROR] Thread Create Faild.\\r\\n\");\n    }\n}\n\nSYS_RUN(HotspotEntry);\n</code></pre> <p>\u6a21\u5757\u7f16\u8bd1\u811a\u672c</p> Text Only<pre><code>static_library(\"wifi_demo\") {\n    sources = [\n        \"wifi_scan_demo.c\",\n        \"wifi_connect_demo.c\",\n        \"wifi_hotspot_demo.c\",\n    ]\n    include_dirs = [\n         # include \"ohos_init.h\"\n        \"//utils/native/lite/include\",\n        # include CMSIS-RTOS API V2 for OpenHarmony1.0+\n        \"//kernel/liteos_m/kal/cmsis\",\n        # include IoT\u786c\u4ef6\u8bbe\u5907\u64cd\u4f5c\u63a5\u53e3 for OpenHarmony1.0+\uff1a\n        \"//base/iot_hardware/peripheral/interfaces/kits\",\n        # include HAL\u63a5\u53e3\u4e2d\u7684WIFI\u63a5\u53e3\n        \"//foundation\\communication\\wifi_lite\\interfaces\\wifiservice\"\n    ]\n}\n</code></pre> <p>APP\u7f16\u8bd1\u811a\u672c</p> C<pre><code>import(\"//build/lite/config/component/lite_component.gni\")\n\nlite_component(\"app\") {\n    features = [\n        \"gn_practice/application:gn_app\",\n        \"gn_practice/driver:gn_driver\",\n        \"gn_practice/library:gn_library\",\n        \"kv_store_demo:kv_store_demo\",\n        \"file_demo:file_demo\",\n        \"thread_demo:thread_demo\",\n        \"timer_demo:timer_demo\",\n        \"mutex_demo:mutex_demo\",\n        # GPIO\u6a21\u5757\n        \"gpio_demo:gpio_demo\",\n        # ADC\u6a21\u5757\n        \"adc_demo:adc_demo\",\n        # OLED\u6a21\u5757\n        \"oled_demo:oled_demo\",\n        # WiFi\u6a21\u5757\n        \"wifi_demo:wifi_demo\",\n    ]\n}\n</code></pre>"},{"location":"study/OpenHarmony/8.wifi/#88-easywifi","title":"8.8 EasyWiFi","text":"<p>\u4f7f\u7528Open Harmony\u7684WiFi\u63a5\u53e3\u8fde\u63a5WiFI\u662f\u6bd4\u8f83\u7e41\u7410\u7684\uff0c\u4f46\u4f9d\u7136\u5efa\u8bae\u8ddf\u7740\u5199\u4e00\u904d\u3002EasyWiFi\u662f\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u7531\u6da6\u5f00\u9e3f\u516c\u53f8\u5f00\u6e90\uff0c\u65e8\u5728 \u8ba9\u9e3f\u8499WiFi\u529f\u80fd\u66f4\u5bb9\u6613\u4f7f\u7528\u3002</p> <p></p> <p>\u5f00\u6e90\u5730\u5740\uff1aeasy_wifi: \u8ba9WiFi IoT\u5957\u4ef6\u7684WiFi\u529f\u80fd\u66f4\u5bb9\u6613\u4f7f\u7528</p> <p>\u4e0b\u8f7d\u6e90\u7801\uff0c\u653e\u7f6e\u5728<code>applications/sample/wifi-iot/app</code>\u76ee\u5f55\uff1a</p> Bash<pre><code>git clone https://gitee.com/hihopeorg/easy_wifi.git\n</code></pre> <p>\u672c\u7ae0\u6682\u4e0d\u4f7f\u7528\u8be5\u6a21\u5757\uff0c\u5230MQTT\u7ae0\u8282\u4f1a\u4ea4\u4ee3\u540e\u7eed\u7684\u4f7f\u7528\u914d\u7f6e\uff0c\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u53bb\u5f00\u6e90\u5730\u5740\u5b66\u4e60API\u4f7f\u7528\u3002</p> <p></p>"},{"location":"study/OpenHarmony/New.UART/","title":"New UART","text":""},{"location":"study/OpenHarmony/New.UART/#1-uart","title":"1. UART\u7406\u8bba","text":"<p>\u63a8\u8350\u9605\u8bfb\uff1a\u7b2c\u4e5d\u7ae0 UART - \u5c0f\u674e \u7684\u77e5\u8bc6\u5e93</p> <p>Hi3861\u5f15\u811a\u53ca\u590d\u7528\u8868\uff1a</p> Pins Group \u9ed8\u8ba4\u529f\u80fd \u590d\u7528\u529f\u80fd 1 IO10 SPI_SCK I2C0_SDA/UART2_CTS_N/SDIO_D3/SPI0_CK/PWM1_OUT/I2S0_TX 2 IO12 SPI_NSS UART2_RXD/SDIO_CLK/SPI0_CSN/PWM3_OUT/RF_RX_EN_EXT/I2S0_BCLK 3 NC - - 4 IO14 GPIO SSI_CLK/UART0_RXD/UART2_CTS_N/SDIO_D1/PWM5_OUT/I2C0_SCL 5 IO13 ADC SSI_DATA/UART0_TXD/UART2_RTS_N/SDIO_D0/PWM4_OUT/I2C0_SDA/I2S0_WS 6 IO02 DAC UART1_RTS_N/SPI1_TXD/JTAG_TRSTN/PWM2_OUT/SSI_CLK 7 IO07 GPIO UART1_CTS_N/SPI0_RXD/PWM0_OUT/I2S0_BCLK 8 IO08 GPIO UART1_RTS_N/SPI0_TXD/PWM1_OUT/I2S0_WS/WLAN_ACTIVE 9 IO01 IIC_SCL UART1_RXD/SPI1_RXD/JTAG_TCK/PWM4_OUT/I2C1_SCL/ 10 IO00 IIC_SDA UART1_TXD/SPI1_CK/JTAG_TDO/PWM3_OUT/I2C1_SDA 11 IO03 GPIO UART0_TXD/UART1_CTS_N/SPI1_CSN/JTAG_TDI/PWM5_OUT/I2C1_SDA/SSI_DATA 12 IO05 UART_RX UART1_RXD/SPI0_CSN/PWM2_OUT/I2S0_MCLK 13 IO06 UART_TX UART1_TXD/SPI0_CK/PWM3_OUT/I2S0_TX 14 IO04 GPIO UART0_RXD/JTAG_TMS/PWM1_OUT/I2C1_SCL 15 IO09 SPI_MOSI I2C0_SCL/UART2_RTS_N/SDIO_D2/SPI0_TXD/PWM0_OUT/I2S0_MCLK 16 IO11 SPI_MISO UART2_TXD/SDIO_CMD/SPI0_RXD/PWM2_OUT/RF_TX_EN_EXT/I2S0_RX"},{"location":"study/OpenHarmony/New.UART/#2-uart","title":"2. UART\u7b80\u5355\u6536\u53d1","text":"C<pre><code>#include &lt;stdio.h&gt;\n#include \"ohos_init.h\"\n#include \"iot_gpio.h\"\n#include \"iot_uart.h\"\n#include \"iot_errno.h\"\n#include \"hi_io.h\"\n#include \"cmsis_os2.h\"\n\n/**\n * uart_demo/uart_demo.c\n * \u4e32\u53e3\u63a5\u6536\u4fe1\u606f\uff0c\u5e76\u5c06\u63a5\u6536\u7684\u4fe1\u606f\u53d1\u9001\u56de\u53bb\n */\n\n#define UART_ID        1\n#define UART_TX_PIN    6\n#define UART_RX_PIN    5\n\nstatic void Uart1Init(void)\n{\n    /* \u590d\u7528UART1\u5230GPIO5\u3001GPIO6 */\n    IoTGpioInit(UART_TX_PIN);\n    IoTGpioInit(UART_RX_PIN);\n    hi_io_set_func(UART_TX_PIN, HI_IO_FUNC_GPIO_6_UART1_TXD);\n    hi_io_set_func(UART_RX_PIN, HI_IO_FUNC_GPIO_5_UART1_RXD);\n    /* \u914d\u7f6eUART1\u7684\u5c5e\u6027 */\n    IotUartAttribute uartAttr = {\n        // \u6ce2\u7279\u7387\n        .baudRate = 9600,\n        // \u6570\u636e\u4f4d\u957f\u5ea6\n        .dataBits = IOT_UART_DATA_BIT_8,\n        // \u505c\u6b62\u4f4d\u957f\u5ea6\n        .stopBits = IOT_UART_STOP_BIT_1,\n        // \u5947\u5076\u6821\u9a8c\n        .parity = IOT_UART_PARITY_NONE,\n        // \u53d1\u9001\u4e14\u63a5\u6536\n        .rxBlock = IOT_UART_BLOCK_STATE_BLOCK,\n        .txBlock = IOT_UART_BLOCK_STATE_BLOCK,\n        .pad = 0,\n    };\n    if (IoTUartInit(UART_ID, &amp;uartAttr) != IOT_SUCCESS) {\n        printf(\"[ERROR] UART INIT ERR.\\r\\n\");\n    }\n}\n\nstatic void UartTask(void* arg)\n{\n    /* \u521d\u59cb\u5316\u4e32\u53e3 */\n    Uart1Init();\n\n    uint8_t data[64] = {0};\n    while (1) \n    {\n        if (IoTUartRead(UART_ID, data, sizeof(data)) &lt; 0) {\n            printf(\"[ERROR] IoTUartRead ERR.\\r\\n\");\n        } else {\n            printf(\"[INFO] IoTUartRead RTT.\\r\\n\");\n        }\n        osDelay(200);\n        if (IoTUartWrite(UART_ID, data, 1) &lt; 0) {\n            printf(\"[ERROR] IoTUartWrite ERR.\\r\\n\");\n        } else {\n            printf(\"[INFO] IoTUartWrite RTT.\\r\\n\");\n        }\n        osDelay(200);\n    }\n}\n\n/* \u5165\u53e3\u51fd\u6570 */\nstatic void UartEntry(void)\n{\n     osThreadAttr_t attr = {\n        .name = \"UartTask\",\n        .stack_size = 1024,\n        .priority = osPriorityNormal\n    };\n    if (osThreadNew(UartTask, NULL, &amp;attr) == NULL) {\n        printf(\"[ERROR] Thread Create Faild.\\r\\n\");\n    } else {\n        printf(\"[INFO] Thread Create RT.\\r\\n\");\n    }\n}\n\nSYS_RUN(UartEntry);\n</code></pre> <p>\u6a21\u5757\u7f16\u8bd1\u811a\u672c</p> Text Only<pre><code>static_library(\"uart_demo\") {\n    sources = [\n        \"uart_demo.c\"\n    ]\n    include_dirs = [\n        # include \"ohos_init.h\"\n        \"//utils/native/lite/include\",\n        # include CMSIS-RTOS API V2 for OpenHarmony1.0+\n        \"//kernel/liteos_m/kal/cmsis\",\n        # include IoT\u786c\u4ef6\u8bbe\u5907\u64cd\u4f5c\u63a5\u53e3 for OpenHarmony1.0+\uff1a\n        \"//base/iot_hardware/peripheral/interfaces/kits\",\n    ]\n}\n</code></pre> <p>APP\u7f16\u8bd1\u811a\u672c</p> Text Only<pre><code>3import(\"//build/lite/config/component/lite_component.gni\")\n\nlite_component(\"app\") {\n    features = [\n        \"gn_practice/application:gn_app\",\n        \"gn_practice/driver:gn_driver\",\n        \"gn_practice/library:gn_library\",\n        \"kv_store_demo:kv_store_demo\",\n        \"file_demo:file_demo\",\n        \"thread_demo:thread_demo\",\n        \"timer_demo:timer_demo\",\n        \"mutex_demo:mutex_demo\",\n        # GPIO\u6a21\u5757\n        \"gpio_demo:gpio_demo\",\n        # ADC\u6a21\u5757\n        \"adc_demo:adc_demo\",\n        # OLED\u6a21\u5757\n        \"oled_demo:oled_demo\",\n        # UART\u6a21\u5757\n        \"uart_demo:uart_demo\"\n    ]\n}\n</code></pre>"},{"location":"study/OpenHarmony/New.UART/#3","title":"3. \u53d1\u9001\u590d\u6742\u4fe1\u606f","text":"<p>\u4f7f\u7528<code>sprintf</code>\u6216<code>snprintf</code>\u51fd\u6570\u5c06\u5b57\u7b26\u3001\u6570\u5b57\u5c01\u88c5\u6210\u4e00\u6bb5\u5b57\u7b26\u4e32\u3002</p> C<pre><code>static void UartTask(void* arg)\n{\n    /* \u521d\u59cb\u5316\u4e32\u53e3 */\n    Uart1Init();\n    int value = 1;\n    unsigned char buffer[64] = {0};\n    snprintf(buffer, sizeof(buffer),\"[INFO] AT+LOCK=%d\\r\\n\", value);\n    while (1) \n    {\n        if (IoTUartWrite(UART_ID, buffer, strlen(buffer)) &lt; 0) {\n            printf(\"[ERROR] IoTUartWrite ERR.\\r\\n\");\n        } else {\n            printf(\"[INFO] IoTUartWrite RTT.\\r\\n\");\n        }\n        osDelay(100);\n    }\n}\n</code></pre>"},{"location":"study/OpenHarmony/others/","title":"\u5176\u4ed6\u5916\u8bbe","text":""},{"location":"study/OpenHarmony/others/#_1","title":"\u5176\u4ed6\u5916\u8bbe","text":"<p>\u76ee\u524d\u5916\u8bbe\u4ec5\u5305\u542b\u4e66\u4e2d\u7ae0\u8282\uff0c\u5176\u4e2d\u5982UART\u3001SPI\u7b49\u5e38\u7528\u5916\u8bbe\u4f1a\u5728\u540e\u7eed\u81ea\u5df1\u63a2\u7d22\uff0c\u5e76\u6dfb\u52a0\u8fdb\u6765\uff0c\u5c3d\u8bf7\u671f\u5f85\uff01</p>"},{"location":"study/ROS2/1-ROS%E4%B8%8EROS2%E4%BB%8B%E7%BB%8D/","title":"\u7b2c\u4e00\u7ae0 ROS\u4e0eROS2\u4ecb\u7ecd","text":"<p>\u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf\u5206\u4e3a\u4e24\u4e2a\u7248\u672c\uff0c\u7b2c\u4e00\u4ee3\u7248\u672c\u5373ROS1\u901a\u5e38\u79f0\u4e3aROS\uff0c\u800c\u65b0\u4e00\u4ee3\u7684\u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf\u79f0\u4e3aROS2\uff0c\u672c\u6587\u7ae0\u662f\u4e2a\u4eba\u7684\u5b66\u4e60\u7b14\u8bb0\uff0c\u7528\u7684\u662fROS2-Humble\u7248\u672c\uff0c\u7ed3\u5408\u5404\u5927\u77e5\u540d\u6559\u7a0b\u603b\u7ed3\u5b66\u4e60\u800c\u6210\uff0c\u5e76\u52a0\u5165\u4e2a\u4eba\u7684\u5b66\u4e60\u7ecf\u9a8c\u548c\u5bf9ROS2\u7684\u4e00\u4e9b\u770b\u6cd5\u3002</p> <p>\u53c2\u8003\u8d44\u6599\u6765\u6e90\uff1a\u8d75\u865a\u5de6\u8001\u5e08\u7684B\u7ad9\u89c6\u9891 \u5fae\u4fe1ROS2\u6587\u6863 \u9c7c\u9999ROS\u793e\u533a</p> <p>ROS\u662f\u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf(Robot Operating System)\u7684\u82f1\u6587\u7f29\u5199\uff0c\u662f\u7528\u4e8e\u6784\u5efa\u673a\u5668\u4eba\u5e94\u7528\u7a0b\u5e8f\u7684\u8f6f\u4ef6\u5f00\u53d1\u5de5\u5177\u5305\u3002\u81eaROS\u8bde\u751f\u4ee5\u6765\uff0c\u7531\u4e8e\u5176\u96c6\u5f00\u6e90\u3001\u514d\u8d39\u3001\u6613\u7528\u3001\u4f4e\u8026\u5408\u3001\u751f\u6001\u4e30\u5bcc......\u8bf8\u591a\u4f18\u70b9\u4e8e\u4e00\u8eab\uff0c\u8fc5\u901f\u6210\u4e3a\u673a\u5668\u4eba\u884c\u4e1a\u5185\u6700\u53d7\u6b22\u8fce\u7684\u5f00\u53d1\u6846\u67b6\u4e4b\u4e00\uff0c\u5728\u5b66\u672f\u3001\u6c11\u7528\u3001\u5546\u4e1a\u3001\u519b\u4e8b\u3001\u822a\u7a7a\u822a\u5929\u7b49\u9886\u57df\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\uff0c\u5e76\u4e14\u968f\u7740ROS2\u5bf9ROS1\u7684\u5168\u9762\u8fed\u4ee3\u5347\u7ea7\uff0c\u4e5f\u4f7f\u5f97ROS\u65e5\u8d8b\u4e8e\u5b8c\u5584\uff0c\u53ef\u9884\u89c1\u7684\uff0c\u672a\u6765\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\uff0cROS\u4ecd\u5c06\u662f\u673a\u5668\u4eba\u5f00\u53d1\u7684\u4e2d\u575a\u529b\u91cf\uff0c\u800c\u5bf9\u4e8eROS\u81ea\u8eab\u800c\u8a00\uff0cROS1\u4f1a\u6162\u6162\u9000\u51fa\uff0cROS2\u5219\u5189\u5189\u5347\u8d77\u3002</p>"},{"location":"study/ROS2/1-ROS%E4%B8%8EROS2%E4%BB%8B%E7%BB%8D/#11-ros","title":"1.1 ROS\u7b80\u4ecb","text":"<p>ROS\u7684\u51fa\u73b0\u573a\u666f</p> <p>\u673a\u5668\u4eba\u662f\u4e00\u79cd\u9ad8\u5ea6\u590d\u6742\u7684\u7cfb\u7edf\u6027\u5b9e\u73b0\uff0c\u673a\u5668\u4eba\u8bbe\u8ba1\u5305\u542b\u4e86\u673a\u68b0\u7ed3\u6784\u8bbe\u8ba1\u3001\u673a\u68b0\u52a0\u5de5\u3001\u786c\u4ef6\u8bbe\u8ba1\u3001\u5d4c\u5165\u5f0f\u8f6f\u4ef6\u8bbe\u8ba1\u3001\u4e0a\u5c42\u8f6f\u4ef6\u8bbe\u8ba1\u7b49\u8bf8\u591a\u6a21\u5757\uff0c\u662f\u5404\u79cd\u786c\u4ef6\u4e0e\u8f6f\u4ef6\u7684\u6709\u673a\u7ed3\u5408\uff0c\u751a\u81f3\u53ef\u4ee5\u8bf4\u673a\u5668\u4eba\u7cfb\u7edf\u662f\u5f53\u4eca\u5de5\u4e1a\u4f53\u7cfb\u7684\u96c6\u5927\u6210\u8005\u3002\u673a\u5668\u4eba\u4f53\u7cfb\u662f\u76f8\u5f53\u5e9e\u5927\u7684\uff0c\u5176\u590d\u6742\u5ea6\u4e4b\u9ad8\uff0c\u4ee5\u81f3\u4e8e\u6ca1\u6709\u4efb\u4f55\u4e2a\u4eba\u3001\u7ec4\u7ec7\u751a\u81f3\u516c\u53f8\u80fd\u591f\u72ec\u7acb\u5b8c\u6210\u7cfb\u7edf\u6027\u7684\u673a\u5668\u4eba\u7814\u53d1\u751f\u4ea7\u4efb\u52a1\u3002</p> <p>\u90a3\u4e48\u95ee\u9898\u968f\u4e4b\u800c\u6765\uff1a\u65e2\u7136\u673a\u5668\u4eba\u5b9e\u73b0\u5982\u6b64\u56f0\u96be\uff0c\u90a3\u4e48\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u5f00\u5c55\u76f8\u5173\u5de5\u4f5c\u5462\uff1f</p> <p>\u4e00\u79cd\u5408\u9002\u7684\u7b56\u7565\u662f\u2014\u2014\u5408\u4f5c\u3002\u8ba9\u673a\u5668\u4eba\u7814\u53d1\u8005\u4e13\u6ce8\u4e8e\u81ea\u5df1\u64c5\u957f\u7684\u9886\u57df\uff0c\u5176\u4ed6\u6a21\u5757\u5219\u76f4\u63a5\u590d\u7528\u76f8\u5173\u9886\u57df\u66f4\u4e13\u4e1a\u7814\u53d1\u56e2\u961f\u7684\u5b9e\u73b0\uff0c\u5f53\u7136\u81ea\u8eab\u7684\u7814\u7a76\u4e5f\u53ef\u4ee5\u88ab\u4ed6\u4eba\u7ee7\u7eed\u590d\u7528\u3002\u8fd9\u79cd\u57fa\u4e8e\u201c\u590d\u7528\u201d\u7684\u5206\u5de5\u534f\u4f5c\uff0c\u9075\u5faa\u4e86 \u4e0d\u91cd\u590d\u53d1\u660e\u8f6e\u5b50 \u7684\u539f\u5219\uff0c\u663e\u7136\u662f\u53ef\u4ee5\u5927\u5927\u63d0\u9ad8\u673a\u5668\u4eba\u7684\u7814\u53d1\u6548\u7387\u7684\uff0c\u5c24\u5176\u662f\u968f\u7740\u673a\u5668\u4eba\u786c\u4ef6\u8d8a\u6765\u8d8a\u4e30\u5bcc\uff0c\u8f6f\u4ef6\u5e93\u8d8a\u6765\u8d8a\u5e9e\u5927\uff0c\u8fd9\u79cd\u590d\u7528\u6027\u548c\u6a21\u5757\u5316\u5f00\u53d1\u9700\u6c42\u4e5f\u6108\u53d1\u5f3a\u70c8\u3002</p> <p>\u5728\u6b64\u5927\u80cc\u666f\u4e0b\uff0c\u4fbf\u8bde\u751f\u4e86ROS\u3002ROS\u662f\u4e00\u5957\u673a\u5668\u4eba\u901a\u7528\u8f6f\u4ef6\u6846\u67b6\uff0c\u53ef\u4ee5\u63d0\u5347\u529f\u80fd\u6a21\u5757\u7684\u590d\u7528\u6027\uff0c\u5e76\u4e14\u968f\u7740ROS2\u7684\u63a8\u51fa\uff0cROS\u65e5\u81fb\u5b8c\u5584\uff0c\u662f\u673a\u5668\u4eba\u8f6f\u4ef6\u5f00\u53d1\u7684\u4e0d\u4e8c\u4e4b\u9009\u3002</p>"},{"location":"study/ROS2/1-ROS%E4%B8%8EROS2%E4%BB%8B%E7%BB%8D/#12-ros","title":"1.2 ROS\u53d1\u5c55\u5386\u7a0b","text":""},{"location":"study/ROS2/1-ROS%E4%B8%8EROS2%E4%BB%8B%E7%BB%8D/#121","title":"1.2.1 \u8d77\u6e90","text":"<p>2007 \u5e74\uff0c\u4e00\u5bb6\u540d\u4e3a \u67f3\u6811\u8f66\u5e93(Willow Garage) \u7684\u673a\u5668\u4eba\u516c\u53f8\u53d1\u5e03\u4e86ROS\uff0cROS\u96c6\u5f00\u6e90\u3001\u514d\u8d39\u3001\u9ad8\u590d\u7528\u3001\u4f4e\u8026\u5408\u3001\u5de5\u5177\u4e30\u5bcc\u7b49\u7b49\u8bf8\u591a\u4f18\u52bf\u4e8e\u4e00\u8eab\uff0c\u4e00\u7ecf\u63a8\u51fa\u4fbf\u8fc5\u901f\u5438\u5f15\u4e86\u5927\u91cf\u7684\u5f00\u53d1\u8005\u3001\u79d1\u7814\u4eba\u5458\u3001\u786c\u4ef6\u4f9b\u5e94\u5546\u7684\u52a0\u5165\uff0c\u5f62\u6210\u4e86\u7a33\u5b9a\u4e14\u591a\u6837\u7684\u673a\u5668\u4eba\u751f\u6001\uff0c\u6c34\u5230\u6e20\u6210\u7684ROS\u4e5f\u6210\u4e3a\u4e86\u673a\u5668\u4eba\u9886\u57df\u7684\u4e3b\u6d41\u8f6f\u4ef6\u6846\u67b6\u5e76\u6d41\u884c\u81f3\u4eca\u3002</p> <p>\u4f46\u662f\u81eaROS\u8bde\u751f\u7684\u5341\u51e0\u5e74\u6765\uff0c\u4e0d\u7ba1\u662f\u673a\u5668\u4eba\u76f8\u5173\u8f6f\u4ef6\u3001\u786c\u4ef6\u8fd8\u662fROS\u793e\u533a\u90fd\u53d1\u751f\u4e86\u5929\u7ffb\u5730\u8986\u7684\u53d8\u5316\uff0c\u52a0\u4e4bROS1\u5b58\u5728\u4e00\u4e9b\u8bbe\u8ba1\u4e0a\u7684\u5148\u5929\u6027\u7f3a\u9677\uff0c\u5404\u79cd\u5185\u5916\u56e0\u7d20\u53e0\u52a0\u4e0b\uff0c\u5bfc\u81f4ROS1\u5728\u8bb8\u591a\u5e94\u7528\u573a\u666f\u4e0b\u90fd\u5df2\u7ecf\u663e\u5f97\u529b\u4e0d\u4ece\u5fc3\u4e86\u3002\u6b64\u80cc\u666f\u4e0b\uff0c\u5b98\u65b9\u4e8e2017\u6b63\u5f0f\u63a8\u51fa\u4e86\u65b0\u4e00\u4ee3\u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf\u2014\u2014ROS2\uff0cROS2\u57fa\u4e8e\u5168\u65b0\u7684\u8bbe\u8ba1\u6846\u67b6\uff0c\u4fdd\u7559\u4e86ROS1\u7684\u4f18\u70b9\u5e76\u6539\u8fdb\u5176\u7f3a\u9677\uff0cROS2\u7684\u76ee\u6807\u662f\u9002\u5e94\u65b0\u65f6\u4ee3\u7684\u65b0\u9700\u6c42\u3002</p>"},{"location":"study/ROS2/1-ROS%E4%B8%8EROS2%E4%BB%8B%E7%BB%8D/#122","title":"1.2.2 \u53d1\u884c\u7248\u672c","text":"<p>ROS\u53d1\u884c\u7248\u662f\u4e00\u7ec4\u7248\u672c\u5316\u7684ROS\u529f\u80fd\u5305\uff0c\u5b83\u7c7b\u4f3c\u4e8eLinux\u53d1\u884c\u7248\uff08\u4f8b\u5982 Ubuntu\uff09\u3002ROS\u53d1\u884c\u7248\u7684\u76ee\u7684\u662f\u8ba9\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5728\u4e00\u4e2a\u76f8\u5bf9\u7a33\u5b9a\u7684\u4ee3\u7801\u5e93\u4e0a\u5de5\u4f5c\uff0c\u76f4\u5230\u65b0\u7684\u53d1\u884c\u7248\u63a8\u51fa\u3002</p> <p>\u4ee5\u4e0b\u5217\u8868\u4e3aROS2\u5404\u4e0d\u540c\u53d1\u5e03\u7248\u672c\u7684\u7b80\u5355\u8bf4\u660e\u3002</p> \u53d1\u884c\u7248 \u53d1\u5e03\u65e5\u671f \u6807\u8bc6 \u505c\u6b62\u7ef4\u62a4\u65e5\u671f Iron Irwini 2023 \u5e74 5 \u6708 23 \u65e5 \u5f85\u5b9a 2024 \u5e74 11 \u6708 Humble Hawksbill 2022 \u5e74 5 \u6708 23 \u65e5 2027 \u5e74 5 \u6708 Galactic Geochelone 2021 \u5e74 5 \u6708 23 \u65e5 2022 \u5e74 11 \u6708 Foxy Fitzroy 2020 \u5e74 6 \u6708 5 \u65e5 2023 \u5e74 5 \u6708 Eloquent Elusor 2019 \u5e74 11 \u6708 22 \u65e5 2020 \u5e74 11 \u6708 Dashing Diademata 2019 \u5e74 5 \u6708 31 \u65e5 2021 \u5e74 5 \u6708 Crystal Clemmys 2018 \u5e74 12 \u6708 14 \u65e5 2019 \u5e74 12 \u6708 Bouncy Bolson 2018 \u5e74 7 \u6708 2 \u65e5 2019 \u5e74 7 \u6708 Ardent Apalone 2017 \u5e74 12 \u6708 8 \u65e5 2018 \u5e74 12 \u6708 beta3 2017 \u5e74 9 \u6708 13 \u65e5 2017 \u5e74 12 \u6708 beta2 2017 \u5e74 7 \u6708 5 \u65e5 2017 \u5e74 9 \u6708 beta1 2016 \u5e74 12 \u6708 19 \u65e5 2017 \u5e74 7 \u6708 alpha1 - alpha8 2015 \u5e74 8 \u6708 31 \u65e5 2016 \u5e74 12 \u6708 <p>ROS2\u7248\u672c\u53d1\u5e03\u7279\u70b9\uff1a</p> <ul> <li>\u53d1\u5e03\u7248\u672c\u4e0eUbuntu\u7248\u672c\u5bf9\u5e94\uff0c\u751f\u547d\u5468\u671f\u4e5f\u6709Ubuntu\u4fdd\u6301\u4e00\u81f4\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u5076\u6570\u5e74\u4efd\u53d1\u5e03\u957f\u652f\u6301\u7248\uff085\u5e74\uff09\uff0c\u5947\u6570\u5e74\u4efd\u53d1\u5e03\u77ed\u652f\u6301\u7248\uff082\u5e74\uff09\uff1b</li> <li>\u7248\u672c\u540d\u79f0\u7531\u5f62\u5bb9\u8bcd+\u540d\u8bcd\u7684\u683c\u5f0f\u7ec4\u6210\uff0c\u8fd9\u4e00\u70b9\u4e0eUbuntu\u7248\u672c\u540d\u79f0\u89c4\u5219\u4e00\u81f4\uff1b</li> <li>\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u6bcf\u5e74\u76845\u670823\u65e5\uff0c\u4e16\u754c\u6d77\u9f9f\u65e5\u53d1\u5e03\u65b0\u7248\u672c\u3002</li> </ul> <p>\u9700\u8981\u53e6\u5916\u8bf4\u660e\u7684\u662f\uff1a</p> <p>\u5b98\u65b9\u4e8e2020\u5e74\u53d1\u5e03\u4e86ROS1\u7684\u6700\u7ec8\u7248\u672c\uff0c\u5e76\u5c06\u4e8e2025\u5e74\u7ec8\u6b62ROS1\u7684\u7ef4\u62a4\u3002\u800c\u65e9\u57282017\u5e74\u5c31\u5df2\u7ecf\u63a8\u51fa\u4e86ROS2\u7684\u7b2c\u4e00\u4e2a\u6b63\u5f0f\u7248\u672c\uff0c\u5e76\u4e14\u968f\u7740ROS2\u7684\u4e0d\u65ad\u5b8c\u5584\uff0c\u4e8e2022\u5e74\u53c8\u63a8\u51faROS2\u7684\u7b2c\u4e00\u4e2a5\u5e74\u957f\u652f\u6301\u7248\uff08Foxy\u7248\u672c\uff09\u3002\u5bf9\u4e8eROS\u800c\u8a00\uff0c\u8fd9\u662f\u4e00\u4e2a\u91cc\u7a0b\u7891\u5f0f\u7684\u4e8b\u4ef6\uff0c\u8fd9\u610f\u5473\u7740\u81ea\u6b64\u5f00\u59cb\uff0cROS2\u5c06\u5168\u9762\u53d6\u4ee3ROS1</p>"},{"location":"study/ROS2/10-TF/","title":"\u7b2c\u5341\u7ae0 TF\u5750\u6807\u53d8\u5316\u5de5\u5177","text":""},{"location":"study/ROS2/10-TF/#101-tf","title":"10.1 TF\u5750\u6807\u53d8\u6362\u5de5\u5177","text":""},{"location":"study/ROS2/10-TF/#1011-tf","title":"10.1.1 TF\u547d\u4ee4\u884c","text":"<ul> <li> \u5047\u8bbe\uff0c\u4e00\u4e2a\u8f6e\u5f0f\u673a\u5668\u4eba\u7684\u4e2d\u5fc3\u5750\u6807\u4e3a (0, 0, 0) \uff0c\u96f7\u8fbe\u7684\u7684\u5750\u6807\u4e3a (0.1, 0, 0.2) \uff0c\u96f7\u8fbe\u68c0\u6d4b\u5230\u969c\u788d\u7269\u5728 (0.3, 0, 0)\u3002</li> <li> \u4e09\u4e2a\u5750\u6807\u5206\u522b\u7528<code>base_link</code>\u3001<code>base_laser</code>\u3001<code>wall_point</code>\u4ee3\u6307\u3002</li> </ul> <p>\u5728ROS2\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528tf2\uff08\u5373\u7b2c\u4e8c\u4ee3\u5750\u6807\u53d8\u6362\u5de5\u5177\uff09\u5904\u7406\u8fd9\u4e9b\u5df2\u77e5\u6570\u636e\u3002</p> <p>\u2460 \u4f7f\u7528\u9759\u6001\u5750\u6807\u53d8\u6362\u53d1\u5e03<code>base_link</code>\u548c<code>base_laser</code>\u4e4b\u95f4\u7684\u5750\u6807\u5173\u7cfb\u3002\u5176\u4e2d\uff0c<code>--frame-id</code>\u4e3a\u7236\u5750\u6807\u7cfb\u540d\u79f0\uff0c<code>-child-frame-id</code>\u4e3a\u5b50\u5750\u6807\u7cfb\u540d\u79f0\u3002</p> Bash<pre><code>ros2 run tf2_ros static_transform_publisher --x 0.1 --y 0.0 --z 0.2 --roll 0.0 --pitch 0.0 --yaw 0.0 --frame-id base_link --child-frame-id base_laser\n</code></pre> <p></p> <p>\u5176\u4e2d<code>--roll 0.0 --pitch 0.0 --yaw 0.0</code>\u662f\u6b27\u62c9\u89d2\uff0c\u5206\u522b\u4e3a\u6a2a\u6eda\u89d2\u3001\u4fef\u4ef0\u89d2\u3001\u504f\u822a\u89d2\u3002\u800c\u547d\u4ee4\u884c\u8fd4\u56de\u7684<code>rotation</code>\u6709\u56db\u4e2a\u6570\uff0c\u8fd9\u91cc\u662f\u4f7f\u7528\u56db\u5143\u6570\u6765\u8868\u793a\u7684\u65cb\u8f6c\u59ff\u6001\u3002\u5176\u4e2dROS\u4e2d\u4f7f\u7528\u56db\u5143\u6570\u5c45\u591a\uff0c\u4e14\u6b27\u62c9\u89d2\u5177\u6709\u4e07\u5411\u9501\u7b49\u786e\u5b9a\uff0c\u4f46\u6613\u4e8e\u770b\u51fa\u65cb\u8f6c\u53d8\u5316\uff0c\u6240\u4ee5\u5728\u56fe\u5f62\u5316\u754c\u9762\u591a\u91c7\u7528\u6b27\u62c9\u89d2\u5c55\u793a\u65cb\u8f6c\u59ff\u6001\u3002</p> <p>\u2461 \u4f7f\u7528\u9759\u6001\u5750\u6807\u53d8\u6362\u53d1\u5e03<code>base_laser</code>\u548c<code>wall_point</code>\u4e4b\u95f4\u7684\u5750\u6807\u5173\u7cfb\u3002</p> Bash<pre><code>ros2 run tf2_ros static_transform_publisher --x 0.3 --y 0.0 --z 0.0 --roll 0.0 --pitch 0.0 --yaw 0.0 --frame-id base_laser --child-frame-id wall_point\n</code></pre> <p></p> <p>\u2462 \u8ba1\u7b97\u5750\u6807\u7cfb\u5173\u7cfb</p> Bash<pre><code>ros2 run tf2_ros tf2_echo base_link wall_point\n</code></pre> <p></p> <p>\u5176\u4e2d\uff0c<code>Translation</code>\u5373\u4e3a\u8f6c\u6362\u7ed3\u679c\uff0c\u76f8\u5bf9\u4e8e<code>base_link</code>\u800c\u8a00\uff0c<code>wall_point</code>\u7684\u5750\u6807\u4f4d\u7f6e\u3002\u5176\u4f59\u56db\u9879\u6570\u636e\u5747\u662f\u8868\u793a\u65cb\u8f6c\u59ff\u6001\uff0c<code>Quaternion</code>\u4e3a\u56db\u5143\u6570\uff0c<code>Matrix</code>\u4e3a\u65cb\u8f6c\u77e9\u9635\uff0c\u5176\u4ed6\u4e24\u9879\u4e3a\u5f27\u5ea6\u3001\u89d2\u5ea6\u5355\u4f4d\u4e0b\u7684\u6b27\u62c9\u89d2\u3002</p>"},{"location":"study/ROS2/10-TF/#1012-mrpt","title":"10.1.2 mrpt\u5de5\u5177","text":"<p>mrpt \u5de5\u5177\u53ef\u4ee5\u53ef\u89c6\u5316\u7684\u770b\u5230\u56db\u5143\u6570\u3001\u6b27\u62c9\u89d2\u4e0b\u7684\u59ff\u6001\u53d8\u5316\u3002</p> <p>\u5b89\u88c5mrpt</p> Bash<pre><code>sudo apt install mrpt-apps\n</code></pre> <p>\u6253\u5f00\u5de5\u5177</p> Bash<pre><code>3d-rotation-converter\n</code></pre> <p></p>"},{"location":"study/ROS2/10-TF/#1013-tf","title":"10.1.3 TF\u6d88\u606f\u63a5\u53e3","text":"<p>\u5728\u53d1\u5e03\u5b8c\u4e24\u4e2a\u5750\u6807\u53d8\u6362\u540e\uff0c\u53ef\u4ee5\u5728\u7ec8\u7aef\u67e5\u770b\u8bdd\u9898\u3002</p> Bash<pre><code>ros2 topic list\n</code></pre> <p></p> <p><code>tf_static</code>\u662f\u4e00\u4e2a\u9759\u6001\u5750\u6807\u53d8\u6362\u8bdd\u9898\uff0c\u53ef\u4ee5\u7528\u6765\u53d1\u5e03\u9759\u6001\u8bbe\u5907\u7684\u5750\u6807\u3002\u4f8b\u5982\uff1a\u96f7\u8fbe\u3001\u76f8\u673a\u7b49\u5750\u6807\u56fa\u5b9a\u7684\u8bbe\u5907\u3002</p> <p>\u8ba1\u7b97\u5750\u6807\u7cfb\u5173\u7cfb\u540e\uff0c\u518d\u6b21\u67e5\u770b\u4f1a\u591a\u4e00\u4e2a<code>tf</code>\u52a8\u6001\u5750\u6807\u53d8\u6362\u8bdd\u9898\uff0c\u53ef\u4ee5\u7528\u6765\u53d1\u5e03\u52a8\u6001\u8bbe\u5907\u7684\u5750\u6807\u3002\u4f8b\u5982\uff1a\u8f6e\u5b50\u8fd9\u7c7b\u5750\u6807\u4f1a\u5b9e\u65f6\u53d8\u5316\u7684\u8bbe\u5907\u3002</p> <p></p> <p>\u4f7f\u7528<code>ros2 topic list -t</code>\u53ef\u4ee5\u67e5\u770b\u8bdd\u9898\u7684\u6d88\u606f\u63a5\u53e3\uff0c\u7136\u540e\u67e5\u770b\u9759\u6001\u5750\u6807\u53d8\u6362\u8bdd\u9898\u7684\u6d88\u606f\u63a5\u53e3\u7684\u5177\u4f53\u5185\u5bb9\u3002</p> Bash<pre><code>ros2 interface show tf2_msgs/msg/TFMessage\n</code></pre> <p></p> <p>\u540c\u65f6\u4e5f\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u884c\u8ba2\u9605\u8bdd\u9898\u83b7\u53d6\u5750\u6807\u8ba1\u7b97\u7ed3\u679c\u3002</p> Bash<pre><code>ros2 topic echo /tf_static \n</code></pre> <p></p>"},{"location":"study/ROS2/10-TF/#102-python","title":"10.2 Python\u624b\u773c\u5750\u6807\u53d8\u6362","text":""},{"location":"study/ROS2/10-TF/#1021","title":"10.2.1 \u6848\u4f8b\u9700\u6c42","text":"<p>\u5982\u56fe\u6240\u793a\uff0c\u673a\u68b0\u81c2\u4f4d\u7f6e<code>base_link</code>\u548c\u76f8\u673a\u4f4d\u7f6e<code>camera_link</code>\u56fa\u5b9a\u4e0d\u53d8\uff0c\u4e14\u56fe\u4e2d\u6709\u5750\u6807\u5173\u7cfb\u548c\u65cb\u8f6c\u89d2\u5ea6\u3002\u76f8\u673a\u8bc6\u522b\u5230<code>bottle_link</code>\u5750\u6807\uff0c\u7136\u540e\u7ecf\u8fc7\u5750\u6807\u53d8\u6362\u8ba9\u673a\u68b0\u81c2\u77e5\u9053<code>bottle_link</code>\u4e0e<code>base_link</code>\u7684\u76f8\u5bf9\u5750\u6807\u5173\u7cfb\uff0c\u5b9e\u73b0\u6293\u53d6\u5de5\u4f5c\u3002</p> <p></p>"},{"location":"study/ROS2/10-TF/#1022","title":"10.2.2 \u529f\u80fd\u5305\u51c6\u5907","text":"<p>\u5b89\u88c5\u9700\u8981\u7684\u5e93\uff0c\u5176\u4e2d<code>$ROS_DISTRO</code>\u6307\u5f53\u524d\u73af\u5883\u7684ROS\u7248\u672c\uff0c\u65e0\u9700\u81ea\u5df1\u66ff\u6362\u3002</p> Bash<pre><code>sudo apt install ros-$ROS_DISTRO-tf-transformations\n</code></pre> <p>\u521b\u5efapython\u529f\u80fd\u5305\uff0c\u5176\u4e2d<code>tf_transformations</code>\u662f\u4e00\u4e2apython\u5e93\u7528\u4e8e\u6b27\u62c9\u89d2\u8f6c\u56db\u5143\u6570\u3002</p> Bash<pre><code>ros2 pkg create py_tf --build-type ament_python --dependencies rclpy geometry_msgs tf2_ros tf_transformations --license Apache-2.0\n</code></pre>"},{"location":"study/ROS2/10-TF/#103-python","title":"10.3 Python\u624b\u773c\u5750\u6807\u53d8\u6362\u793a\u4f8b","text":""},{"location":"study/ROS2/10-TF/#1031","title":"10.3.1 \u53d1\u5e03\u9759\u6001\u5750\u6807\u53d8\u6362","text":"<p>\u529f\u80fd\u5305\u4e0b\u65b0\u5efa<code>static_tf_broadcaster.py</code></p> Python<pre><code>import rclpy\nfrom rclpy.node import Node\nfrom tf2_ros import StaticTransformBroadcaster\nfrom geometry_msgs.msg import TransformStamped\nfrom tf_transformations import quaternion_from_euler\nimport math\n\n\nclass StaticTfBroadcaster(Node):\n    def __init__(self, name):\n        super().__init__(name)\n        self.static_tf = StaticTransformBroadcaster(self)\n        self.publish_static_tf()\n\n    def publish_static_tf(self):\n        \"\"\"\u53d1\u5e03\u9759\u6001\u5750\u6807\u53d8\u6362\"\"\"\n        transform = TransformStamped()\n        # \u6d88\u606f\u5934\n        transform.header.stamp = self.get_clock().now().to_msg()\n        transform.header.frame_id = 'base_link'\n        # \u5b50\u5750\u6807\u540d\u79f0\n        transform.child_frame_id = 'camera_link'\n        # \u5e73\u9762\u5750\u6807\u5173\u7cfb\n        transform.transform.translation.x = 0.5\n        transform.transform.translation.y = 0.3\n        transform.transform.translation.z = 0.6\n\n        # \u6b27\u62c9\u89d2(\u89d2\u5ea6\u8f6c\u5f27\u5ea6)\u8f6c\u56db\u5143\u6570\n        q = quaternion_from_euler(math.radians(180), 0.0, 0.0)\n\n        # \u65cb\u8f6c\u5750\u6807\u5173\u7cfb\n        transform.transform.rotation.x = q[0]\n        transform.transform.rotation.y = q[1]\n        transform.transform.rotation.z = q[2]\n        transform.transform.rotation.w = q[3]\n\n        # \u53d1\u5e03\u9759\u6001\u5750\u6807\u53d8\u6362\n        self.static_tf.sendTransform(transform)\n        self.get_logger().info(f\"\u53d1\u5e03 TF:{transform}\")\n\ndef main():\n    rclpy.init()\n    node = StaticTfBroadcaster(\"static_tf\")\n    rclpy.spin(node)\n    rclpy.shutdown()\n</code></pre> <p>\u4fee\u6539\u7f16\u8bd1\u6587\u4ef6<code>setpu.py</code></p> Python<pre><code>entry_points={\n    'console_scripts': [\n        'static_tf_broadcaster = py_tf.static_tf_broadcaster:main',\n    ],\n},\n</code></pre> <p>\u7f16\u8bd1</p> Bash<pre><code>colcon build --packages-select py_tf\nsource install/setup.bash\n</code></pre>"},{"location":"study/ROS2/10-TF/#1032","title":"10.3.2 \u53d1\u5e03\u52a8\u6001\u5750\u6807\u53d8\u6362","text":"<p>\u529f\u80fd\u5305\u4e0b\u65b0\u5efa<code>dynamic_tf_broadcaster.py</code></p> Python<pre><code>import rclpy\nfrom rclpy.node import Node\nfrom tf2_ros import TransformBroadcaster\nfrom geometry_msgs.msg import TransformStamped\nfrom tf_transformations import quaternion_from_euler\nimport math\n\n\nclass DynamicTfBroadcaster(Node):\n    def __init__(self, name):\n        super().__init__(name)\n        self.dynamic_tf = TransformBroadcaster(self)\n        self.timer = self.create_timer(0.1, self.publish_dynamic_tf)\n\n    def publish_dynamic_tf(self):\n        \"\"\"\u53d1\u5e03\u9759\u6001\u5750\u6807\u53d8\u6362\"\"\"\n        transform = TransformStamped()\n        # \u6d88\u606f\u5934\n        transform.header.stamp = self.get_clock().now().to_msg()\n        transform.header.frame_id = 'camera_link'\n        # \u5b50\u5750\u6807\u540d\u79f0\n        transform.child_frame_id = 'bottle_link'\n        # \u5e73\u9762\u5750\u6807\u5173\u7cfb\n        transform.transform.translation.x = 0.2\n        transform.transform.translation.y = 0.3\n        transform.transform.translation.z = 0.5\n\n        # \u6b27\u62c9\u89d2(\u89d2\u5ea6\u8f6c\u5f27\u5ea6)\u8f6c\u56db\u5143\u6570\n        q = quaternion_from_euler(0, 0.0, 0.0)\n\n        # \u65cb\u8f6c\u5750\u6807\u5173\u7cfb\n        transform.transform.rotation.x = q[0]\n        transform.transform.rotation.y = q[1]\n        transform.transform.rotation.z = q[2]\n        transform.transform.rotation.w = q[3]\n\n        # \u53d1\u5e03\u9759\u6001\u5750\u6807\u53d8\u6362\n        self.dynamic_tf.sendTransform(transform)\n        self.get_logger().info(f\"\u53d1\u5e03 TF:{transform}\")\n\ndef main():\n    rclpy.init()\n    node = DynamicTfBroadcaster(\"dynamic_tf\")\n    rclpy.spin(node)\n    rclpy.shutdown()\n</code></pre> <p>\u4fee\u6539\u7f16\u8bd1\u6587\u4ef6<code>setpu.py</code></p> Python<pre><code>entry_points={\n    'console_scripts': [\n        'static_tf_broadcaster = py_tf.static_tf_broadcaster:main',\n        'dynamic_tf_broadcaster = py_tf.dynamic_tf_broadcaster:main',\n    ],\n},\n</code></pre> <p>\u7f16\u8bd1</p> Bash<pre><code>colcon build --packages-select py_tf\nsource install/setup.bash\n</code></pre>"},{"location":"study/ROS2/10-TF/#1033","title":"10.3.3 \u76d1\u542c\u5750\u6807\u53d8\u6362","text":"<p>\u529f\u80fd\u5305\u4e0b\u65b0\u5efa<code>tf_listener.py</code></p> Python<pre><code>import rclpy\nfrom rclpy.node import Node\nimport rclpy.time\nfrom tf2_ros import TransformListener, Buffer\nfrom geometry_msgs.msg import TransformStamped\nfrom tf_transformations import euler_from_quaternion\n\n\nclass TfListener(Node):\n    def __init__(self, name):\n        super().__init__(name)\n        self.buffer = Buffer()\n        self.tf_listener = TransformListener(node=self, buffer=self.buffer)\n        self.timer = self.create_timer(1, self.get_transform)\n\n    def get_transform(self):\n        \"\"\"\u83b7\u53d6\u5750\u6807\u53d8\u6362\"\"\"\n        try:\n            result = self.buffer.lookup_transform('base_link', 'bottle_link',\n                # \u83b7\u53d6transform\u7684\u65f6\u95f4\u6bb5\uff0c0\u4ee3\u8868\u83b7\u53d6\u6700\u65b0\u7684\n                rclpy.time.Time(seconds=0.0), \n                # \u8d85\u65f6\u65f6\u95f4\n                rclpy.time.Duration(seconds=1.0))\n            # \u89e3\u6790\u7ed3\u679c\n            transform = result.transform\n            # \u56db\u5143\u6570\u8f6c\u6b27\u62c9\u89d2\n            euler = euler_from_quaternion([\n                transform.rotation.x,\n                transform.rotation.y,\n                transform.rotation.z,\n                transform.rotation.w,\n            ])\n            self.get_logger().info(f\"\u5e73\u79fb:{transform.translation}\\n\u65cb\u8f6c\u56db\u5143\u6570:{transform.rotation}\\n\u65cb\u8f6c\u6b27\u62c9\u89d2:{euler}\")\n        except Exception as e:\n            self.get_logger().warn(f\"\u4e0d\u80fd\u591f\u83b7\u53d6\u5750\u6807\u53d8\u6362\uff0c\u539f\u56e0: {str(e)}\")\n\n\ndef main():\n    rclpy.init()\n    node = TfListener(\"tf_listener\")\n    rclpy.spin(node)\n    rclpy.shutdown()\n</code></pre> <p>\u4fee\u6539\u7f16\u8bd1\u6587\u4ef6<code>setpu.py</code></p> Python<pre><code>entry_points={\n    'console_scripts': [\n        'static_tf_broadcaster = py_tf.static_tf_broadcaster:main',\n        'dynamic_tf_broadcaster = py_tf.dynamic_tf_broadcaster:main',\n        'tf_listener = py_tf.tf_listener:main',\n    ],\n},\n</code></pre> <p>\u7f16\u8bd1</p> Bash<pre><code>colcon build --packages-select py_tf\nsource install/setup.bash\n</code></pre> <p>\u4f9d\u6b21\u8fd0\u884c\u4e09\u4e2a\u8282\u70b9</p> <p></p>"},{"location":"study/ROS2/10-TF/#104-cpp","title":"10.4 Cpp\u5730\u56fe\u5750\u6807\u53d8\u6362","text":""},{"location":"study/ROS2/10-TF/#1041","title":"10.4.1 \u6848\u4f8b\u9700\u6c42","text":"<p>\u5730\u56fe\u5750\u6807\u7cfb\u4e3a<code>map</code>\uff0c\u673a\u5668\u4eba\u5750\u6807\u7cfb<code>base_link</code>\uff0c\u76ee\u6807\u4f4d\u7f6e\u70b9\u4e3a<code>target_point</code>\u3002\u5176\u4e2d<code>map</code>\u4e3a\u4e3b\u5750\u6807\u7cfb\uff0c\u5df2\u77e5<code>base_link</code>\u3001<code>target_point</code>\u548c<code>map</code>\u7684\u5750\u6807\u5173\u7cfb\uff0c\u8ba1\u7b97\u673a\u5668\u4eba\u5230\u76ee\u6807\u4f4d\u7f6e\u7684\u5750\u6807\u3002</p> <p></p>"},{"location":"study/ROS2/10-TF/#1042","title":"10.4.2 \u529f\u80fd\u5305\u51c6\u5907","text":"<p><code>tf2_geometry_msgs</code>\u6d89\u53ca\u4e00\u4e9b\u7c7b\u578b\u8f6c\u6362\u3002</p> Bash<pre><code>ros2 pkg create cpp_tf --build-type ament_cmake --dependencies rclcpp geometry_msgs tf2_ros tf2_geometry_msgs --license Apache-2.0\n</code></pre>"},{"location":"study/ROS2/10-TF/#105-cpp","title":"10.5 Cpp\u5730\u56fe\u5750\u6807\u53d8\u6362\u793a\u4f8b","text":""},{"location":"study/ROS2/10-TF/#1051","title":"10.5.1 \u53d1\u5e03\u9759\u6001\u5750\u6807\u53d8\u6362","text":"<p>\u529f\u80fd\u5305\u4e0b\u65b0\u5efa<code>static_tf_broadcaster.cpp</code></p> C++<pre><code>#include \"rclcpp/rclcpp.hpp\"\n#include \"geometry_msgs/msg/transform_stamped.hpp\"\n#include \"tf2_ros/static_transform_broadcaster.h\"\n#include \"tf2/LinearMath/Quaternion.hpp\"\n\nusing StaticTransformBroadcaster = tf2_ros::StaticTransformBroadcaster;\nusing TransformStamped = geometry_msgs::msg::TransformStamped;\n\nclass StaticTfBroadcaster : public rclcpp::Node\n{\npublic:\n    StaticTfBroadcaster(std::string name) : Node(name)\n    {\n        static_tf_ = std::make_shared&lt;StaticTransformBroadcaster&gt;(this);\n        this-&gt;publish_static_tf();\n    }\n\nprivate:\n    void publish_static_tf(void)\n    {\n        TransformStamped transform;\n        // \u65f6\u95f4\u6233\n        transform.header.stamp = this-&gt;get_clock()-&gt;now();\n        // \u7236\u5750\u6807\u7cfb\u540d\u79f0\n        transform.header.frame_id = \"map\";\n        // \u5b50\u5750\u6807\u7cfb\u540d\u79f0\n        transform.child_frame_id = \"target_point\";\n        // \u5e73\u9762\u79fb\u52a8\n        transform.transform.translation.x = 5.0;\n        transform.transform.translation.y = 3.0;\n        transform.transform.translation.z = 0.0;\n        // \u6b27\u62c9\u89d2(\u5f27\u5ea6)\u8f6c\u56db\u5143\u6570\n        tf2::Quaternion quat;\n        quat.setRPY(0.0, 0.0, 60 * M_PI / 180);\n        // \u65cb\u8f6c\n        transform.transform.rotation.x = quat[0];\n        transform.transform.rotation.y = quat[1];\n        transform.transform.rotation.z = quat[2];\n        transform.transform.rotation.w = quat[3];\n        // \u53d1\u5e03\n        static_tf_-&gt;sendTransform(transform);\n        RCLCPP_INFO(this-&gt;get_logger(), \"Static_Transform\u53d1\u9001\u6210\u529f\");\n    }\n\nprivate:\n    std::shared_ptr&lt;StaticTransformBroadcaster&gt; static_tf_;\n};\n\nint main(int argc, char* argv[])\n{\n    rclcpp::init(argc, argv);\n    auto node = std::make_shared&lt;StaticTfBroadcaster&gt;(\"static_tf\");\n    rclcpp::spin(node);\n    rclcpp::shutdown();\n}\n</code></pre> <p>\u914d\u7f6e<code>CmakeLists.txt</code>\u6587\u4ef6</p> CMake<pre><code># \u6dfb\u52a0\u53ef\u6267\u884c\u6587\u4ef6\nadd_executable(static_tf src/static_tf_boradcaster.cpp)\n# \u6dfb\u52a0\u76ee\u6807\u4f9d\u8d56\nament_target_dependencies(\n  static_tf\n  \"rclcpp\"\n  \"geometry_msgs\"\n  \"tf2_ros\"\n)\ninstall(TARGETS\n  static_tf\n  DESTINATION lib/${PROJECT_NAME}\n)\n</code></pre> <p>\u7f16\u8bd1</p> Bash<pre><code>colcon build --packages-select cpp_tf\nsource install/setup.bash\n</code></pre>"},{"location":"study/ROS2/10-TF/#1052","title":"10.5.2 \u53d1\u5e03\u52a8\u6001\u5750\u6807\u53d8\u6362","text":"<p>\u529f\u80fd\u5305\u4e0b\u65b0\u5efa<code>dynamic_tf_broadcaster.cpp</code></p> C++<pre><code>#include \"rclcpp/rclcpp.hpp\"\n#include \"geometry_msgs/msg/transform_stamped.hpp\"\n#include \"tf2_ros/transform_broadcaster.h\"\n#include \"tf2/LinearMath/Quaternion.hpp\"\n\n\nusing namespace std::chrono_literals;\nusing TransformBroadcaster = tf2_ros::TransformBroadcaster;\nusing TransformStamped = geometry_msgs::msg::TransformStamped;\n\nclass DynamicTfBroadcaster : public rclcpp::Node\n{\npublic:\nDynamicTfBroadcaster(std::string name) : Node(name)\n    {\n        dynamic_tf_ = std::make_shared&lt;TransformBroadcaster&gt;(this);\n        timer_ = this-&gt;create_wall_timer(1s, std::bind(&amp;DynamicTfBroadcaster::publish_dynamic_tf, this));\n    }\n\nprivate:\n    void publish_dynamic_tf(void)\n    {\n        TransformStamped transform;\n        // \u65f6\u95f4\u6233\n        transform.header.stamp = this-&gt;get_clock()-&gt;now();\n        // \u7236\u5750\u6807\u7cfb\u540d\u79f0\n        transform.header.frame_id = \"map\";\n        // \u5b50\u5750\u6807\u7cfb\u540d\u79f0\n        transform.child_frame_id = \"base_link\";\n        // \u5e73\u9762\u79fb\u52a8\n        transform.transform.translation.x = 2.0;\n        transform.transform.translation.y = 3.0;\n        transform.transform.translation.z = 0.0;\n        // \u6b27\u62c9\u89d2(\u5f27\u5ea6)\u8f6c\u56db\u5143\u6570\n        tf2::Quaternion quat;\n        quat.setRPY(0.0, 0.0, 30 * M_PI / 180);\n        // \u65cb\u8f6c\n        transform.transform.rotation.x = quat[0];\n        transform.transform.rotation.y = quat[1];\n        transform.transform.rotation.z = quat[2];\n        transform.transform.rotation.w = quat[3];\n        // \u53d1\u5e03\n        dynamic_tf_-&gt;sendTransform(transform);\n        RCLCPP_INFO(this-&gt;get_logger(), \"Static_Transform\u53d1\u9001\u6210\u529f\");\n    }\n\nprivate:\n    std::shared_ptr&lt;TransformBroadcaster&gt; dynamic_tf_;\n    rclcpp::TimerBase::SharedPtr timer_;\n};\n\nint main(int argc, char* argv[])\n{\n    rclcpp::init(argc, argv);\n    auto node = std::make_shared&lt;DynamicTfBroadcaster&gt;(\"dyanmic_tf\");\n    rclcpp::spin(node);\n    rclcpp::shutdown();\n}\n</code></pre> <p>\u914d\u7f6e<code>CmakeLists.txt</code>\u6587\u4ef6</p> CMake<pre><code># \u6dfb\u52a0\u53ef\u6267\u884c\u6587\u4ef6\nadd_executable(dynamic_tf src/dynamic_tf_boradcaster.cpp)\n\n# \u6dfb\u52a0\u76ee\u6807\u4f9d\u8d56\nament_target_dependencies(\n  dynamic_tf  \n  \"rclcpp\"\n  \"geometry_msgs\"\n  \"tf2_ros\"\n)\n\ninstall(TARGETS\n  static_tf\n  dynamic_tf\n  DESTINATION lib/${PROJECT_NAME}\n)\n</code></pre> <p>\u7f16\u8bd1</p> Bash<pre><code>colcon build --packages-select cpp_tf\nsource install/setup.bash\n</code></pre>"},{"location":"study/ROS2/10-TF/#1053","title":"10.5.3 \u76d1\u542c\u5750\u6807\u53d8\u6362","text":"<p>\u529f\u80fd\u5305\u4e0b\u65b0\u5efa<code>tf_listener.cpp</code></p> C++<pre><code>#include \"rclcpp/rclcpp.hpp\"\n#include \"geometry_msgs/msg/transform_stamped.hpp\"\n#include \"tf2_ros/transform_listener.h\"\n#include \"tf2_ros/buffer.h\"\n#include \"tf2/LinearMath/Quaternion.hpp\"\n#include \"tf2/utils.h\"                  // \u63d0\u4f9b tf2::getEulerYPR \u51fd\u6570\n#include \"tf2_geometry_msgs/tf2_geometry_msgs.hpp\" \n\nusing namespace std::chrono_literals;\nusing TransformListener = tf2_ros::TransformListener;\nusing TransformStamped = geometry_msgs::msg::TransformStamped;\n\nclass DynamicTfBroadcaster : public rclcpp::Node\n{\npublic:\nDynamicTfBroadcaster(std::string name) : Node(name)\n    {\n        buffer_  = std::make_unique&lt;tf2_ros::Buffer&gt;(this-&gt;get_clock());\n        tf_listener_ = std::make_shared&lt;TransformListener&gt;(*buffer_, this);\n        timer_ = this-&gt;create_wall_timer(1s, std::bind(&amp;DynamicTfBroadcaster::get_transform, this));\n    }\n\nprivate:\n    void get_transform(void)\n    {   \n        try {\n            auto result = buffer_-&gt;lookupTransform(\"base_link\", \"target_point\",\n                rclcpp::Time(0.0f), rclcpp::Duration::from_seconds(1.0f));\n\n            RCLCPP_INFO(this-&gt;get_logger(), \"\u5e73\u79fb %f %f %f\", \\\n                result.transform.translation.x,\n                result.transform.translation.y,\n                result.transform.translation.z\n            );\n            RCLCPP_INFO(this-&gt;get_logger(), \"\u65cb\u8f6c(\u56db\u5143\u6570) %f %f %f %f\", \\\n                result.transform.rotation.x,\n                result.transform.rotation.y,\n                result.transform.rotation.z,\n                result.transform.rotation.w\n            );\n            double roll, pitch, yaw;\n            const auto &amp;q = result.transform.rotation;\n            tf2::getEulerYPR(q, yaw, pitch, roll);\n            RCLCPP_INFO(this-&gt;get_logger(), \"\u65cb\u8f6c(\u6b27\u62c9\u89d2) %f %f %f\", \\\n                roll,\n                pitch,\n                yaw\n            );\n        } catch(tf2::TransformException &amp;e) {\n            RCLCPP_WARN(this-&gt;get_logger(), \"\u5f02\u5e38: %s\", e.what());\n        }\n\n    }\n\nprivate:\n    std::shared_ptr&lt;TransformListener&gt; tf_listener_;\n    rclcpp::TimerBase::SharedPtr timer_;\n    std::unique_ptr&lt;tf2_ros::Buffer&gt; buffer_;\n};\n\nint main(int argc, char* argv[])\n{\n    rclcpp::init(argc, argv);\n    auto node = std::make_shared&lt;DynamicTfBroadcaster&gt;(\"tf_listener\");\n    rclcpp::spin(node);\n    rclcpp::shutdown();\n}\n</code></pre> <p>\u914d\u7f6e<code>CmakeLists.txt</code>\u6587\u4ef6</p> CMake<pre><code># \u6dfb\u52a0\u53ef\u6267\u884c\u6587\u4ef6\nadd_executable(tf_listener src/tf_listener.cpp)\n\n# \u6dfb\u52a0\u76ee\u6807\u4f9d\u8d56\nament_target_dependencies(\n  tf_listener  \n  \"rclcpp\"\n  \"geometry_msgs\"\n  \"tf2_ros\"\n  tf2_geometry_msgs\n)\n\ninstall(TARGETS\n  static_tf\n  dynamic_tf\n  tf_listener\n  DESTINATION lib/${PROJECT_NAME}\n)\n</code></pre> <p>\u7f16\u8bd1</p> Bash<pre><code>colcon build --packages-select cpp_tf\nsource install/setup.bash\n</code></pre> <p>\u4f9d\u6b21\u8fd0\u884c\u4e09\u4e2a\u8282\u70b9\u5373\u53ef\u5f97\u5230\u8f6c\u6362\u7ed3\u679c\u3002</p>"},{"location":"study/ROS2/2-ROS2%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/","title":"\u7b2c\u4e8c\u7ae0 ROS2\u7cfb\u7edf\u73af\u5883\u5b89\u88c5","text":"<p>ROS2\u5b89\u88c5\u76f8\u5bf9\u6bd4\u8f83\u590d\u6742\uff0c\u4e14\u5bb9\u6613\u51fa\u9519\uff0c\u6240\u4ee5\u5efa\u8bae\u4f7f\u7528\u624b\u52a8\u5b89\u88c5\u8d70\u4e00\u904d\u6d41\u7a0b\uff0c\u540e\u7eed\u53ef\u4ee5\u4f7f\u7528\u9c7c\u9999ROS\u7684\u4e00\u952e\u5b89\u88c5\u547d\u4ee4\u3002</p>"},{"location":"study/ROS2/2-ROS2%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/#21-ubuntu","title":"2.1 \u51c6\u5907Ubuntu\u73af\u5883","text":"<p>\u865a\u62df\u673a\u4e0b\u8f7d\u5b98\u65b9\u7f51\u5740</p> <p>Ubuntu\u5b89\u88c5</p> <p>\u5b89\u88c5\u865a\u62df\u673a\uff08VMware\uff09\u4fdd\u59c6\u7ea7\u6559\u7a0b\uff08\u9644\u5b89\u88c5\u5305\uff09_vmware\u865a\u62df\u673a-CSDN\u535a\u5ba2</p> <p>2.\u5728\u865a\u62df\u673a\u4e2d\u5b89\u88c5Ubuntu (fishros.com)</p>"},{"location":"study/ROS2/2-ROS2%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/#22","title":"2.2 \u624b\u52a8\u5b89\u88c5(\u4e0d\u63a8\u8350)","text":"<p>\u4e86\u89e3\u77e5\u9053\u6709\u8fd9\u79cd\u65b9\u6cd5\u5373\u53ef\uff0c2.3\u7684\u4e00\u952e\u5b89\u88c5\u66f4\u4fbf\u6377</p> <p>\u6253\u5f00\u7ec8\u7aef</p> Bash<pre><code>Ctrl+Alt+T  #ubuntu\u7cfb\u7edf\u4e2d\u6253\u5f00\u7ec8\u7aef\u7684\u5feb\u6377\u952e\n</code></pre> <p>\u6dfb\u52a0\u6e90</p> Bash<pre><code>echo \"deb [arch=$(dpkg --print-architecture)] https://repo.huaweicloud.com/ros2/ubuntu/ $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre> <p>\u6dfb\u52a0\u6e90\u5bf9\u5e94\u7684\u79d8\u94a5</p> Bash<pre><code>sudo apt install curl gnupg2 -y\ncurl -s https://gitee.com/ohhuo/rosdistro/raw/master/ros.asc | sudo apt-key add -\n</code></pre> <p>\u66f4\u65b0</p> Bash<pre><code>sudo apt update \n</code></pre> <p>\u5b89\u88c5ROS2</p> Bash<pre><code>sudo apt install ros-humble-desktop\n</code></pre> <p>\u5b89\u88c5\u989d\u5916\u4f9d\u8d56</p> Bash<pre><code>sudo apt install python3-argcomplete -y\n</code></pre> <p>\u914d\u7f6e\u73af\u5883\u53d8\u91cf</p> Bash<pre><code>source /opt/ros/humble/setup.bash\n</code></pre> <p>\u9632\u6b62\u6bcf\u6b21\u90fd\u9700\u8981\u8fdb\u884csource\uff0c\u628aros2\u52a0\u5165bashrc\u4e2d\u3002\u5c31\u662f\u6bcf\u6b21\u542f\u52a8\u7ec8\u7aef\u90fd\u8ba9\u5b83\u81ea\u52a8\u7684\u8f93\u5165\u8fd9\u53e5\u8bdd\u3002</p> Bash<pre><code>echo \"source /opt/ros/humble/setup.bash\" &gt;&gt; ~/.bashrc\n</code></pre>"},{"location":"study/ROS2/2-ROS2%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/#23","title":"2.3 \u4e00\u952e\u5b89\u88c5(\u63a8\u8350)","text":"<p>\u6700\u540e\u4ecb\u7ecd\u6700\u7b80\u5355\u5feb\u6377\u4e0d\u5bb9\u6613\u51fa\u9519\u7684\u4e00\u952e\u5b89\u88c5\u3002</p> Bash<pre><code>wget http://fishros.com/install -O fishros &amp;&amp; . fishros\n</code></pre> <p>\u8f93\u5165\u5bc6\u7801\uff0c\u5728\u9009\u9879\u754c\u9762\u9009\u62e91-\u4e00\u952e\u5b89\u88c5ROS\uff0c\u63a5\u7740\u6839\u636e\u4f60\u7684\u60c5\u51b5\u9009\u62e9\u662f\u5426\u66f4\u6362\u7cfb\u7edf\u6e90\uff08\u57fa\u7840\u7bc7\u66f4\u6362\u4e86\u5c31\u4e0d\u7528\u4e86\uff09\uff0c\u63a5\u7740\u5c31\u4f1a\u8ba9\u4f60\u9009\u62e9\u8981\u5b89\u88c5\u7684ROS2\u7248\u672c\u4e86\u3002\u8fd9\u91cc\u9009\u62e9humble\u7248\u672c\u7684ROS2\u5373\u53ef\u3002</p> <p>\u6700\u540e\u4f1a\u95ee\u4f60\u5b89\u88c5\u684c\u9762\u7248\u8fd8\u662f\u57fa\u7840\u7248\uff0c\u6211\u4eec\u9009\u62e9\u684c\u9762\u7248\uff0c\u5305\u542b\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u5982\u679c\u662f\u5728\u6811\u8393\u6d3e\u4e0a\u88c5\u53ef\u4ee5\u4f7f\u7528\u57fa\u7840\u7248\u3002</p> <p>\u66f4\u591a\u7684\u4e00\u952e\u5b89\u88c5\u8be6\u60c5\u5728\u9c7c\u9999ROS\u7f51\u5740\uff1a</p> <p>\u5c0f\u9c7c\u7684\u4e00\u952e\u5b89\u88c5\u7cfb\u5217 | \u9c7c\u9999ROS (fishros.org.cn)</p>"},{"location":"study/ROS2/2-ROS2%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/#24-ros2","title":"2.4 ROS2\u521d\u4f53\u9a8c","text":""},{"location":"study/ROS2/2-ROS2%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/#241","title":"2.4.1 \u542f\u52a8\u6d77\u9f9f\u6a21\u62df\u5668","text":"<p>\u6253\u5f00\u4e00\u4e2a\u7ec8\u7aef</p> Bash<pre><code>ros2 run turtlesim turtlesim_node\n</code></pre> <p></p>"},{"location":"study/ROS2/2-ROS2%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/#242","title":"2.4.2 \u542f\u52a8\u6d77\u9f9f\u952e\u76d8\u63a7\u5236","text":"<p>\u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u7ec8\u7aef</p> Bash<pre><code>ros2 run turtlesim turtle_teleop_key\n</code></pre> <p></p> <p>\u53ef\u4ee5\u770b\u5230\u6211\u6709\u4e00\u6b21\u662f\u8f93\u9519\u547d\u4ee4\uff0c\u81ea\u5df1\u6572\u547d\u4ee4\u5408\u7406\u4f7f\u7528<code>Tab</code>\u952e\u53ef\u4ee5\u4fbf\u6377\u6572\u51fa\u547d\u4ee4\u3002</p>"},{"location":"study/ROS2/3-ROS2%E5%B7%A5%E5%85%B7%E5%87%86%E5%A4%87/","title":"\u7b2c\u4e09\u7ae0 ROS2\u5de5\u5177\u51c6\u5907","text":""},{"location":"study/ROS2/3-ROS2%E5%B7%A5%E5%85%B7%E5%87%86%E5%A4%87/#31-terminator","title":"3.1 Terminator","text":"<p>\u5728 ROS 2\u4e2d\uff0c\u9700\u8981\u9891\u7e41\u7684\u4f7f\u7528\u5230\u7ec8\u7aef\uff0c\u4e14\u53ef\u80fd\u9700\u8981\u540c\u65f6\u5f00\u542f\u591a\u4e2a\u7a97\u53e3\uff0c\u63a8\u8350\u4e00\u6b3e\u8f83\u4e3a\u597d\u7528\u7684\u7ec8\u7aef:Terminator\u3002</p> Bash<pre><code>sudo apt install terminator\n</code></pre> <p>\u4e0b\u8f7d\u5b8c\u4ee5\u540eCtrl+Alt+T \u547d\u4ee4\u5c31\u53ef\u4ee5\u6253\u5f00terminator\u7ec8\u7aef\uff0c\u66ff\u6362\u4e86\u9ed8\u8ba4\u7684\u7cfb\u7edf\u7ec8\u7aef\uff0c\u540c\u65f6\u5728\u7ec8\u7aef\u53f3\u952e\u53ef\u4ee5\u9009\u62e9\u4e0a\u4e0b\u5de6\u53f3\u5206\u9694\u591a\u4e2a\u7ec8\u7aef\u3002</p> <p></p> <p>Terminator \u5e38\u7528\u5feb\u6377\u952e</p> <p>\u7b2c\u4e00\u90e8\u5206\uff1a\u5173\u4e8e\u5728\u540c\u4e00\u4e2a\u6807\u7b7e\u5185\u7684\u64cd\u4f5c</p> Text Only<pre><code>Alt+Up                          //\u79fb\u52a8\u5230\u4e0a\u9762\u7684\u7ec8\u7aef\nAlt+Down                        //\u79fb\u52a8\u5230\u4e0b\u9762\u7684\u7ec8\u7aef\nAlt+Left                        //\u79fb\u52a8\u5230\u5de6\u8fb9\u7684\u7ec8\u7aef\nAlt+Right                       //\u79fb\u52a8\u5230\u53f3\u8fb9\u7684\u7ec8\u7aef\nCtrl+Shift+O                    //\u6c34\u5e73\u5206\u5272\u7ec8\u7aef\nCtrl+Shift+E                    //\u5782\u76f4\u5206\u5272\u7ec8\u7aef\nCtrl+Shift+Right                //\u5728\u5782\u76f4\u5206\u5272\u7684\u7ec8\u7aef\u4e2d\u5c06\u5206\u5272\u6761\u5411\u53f3\u79fb\u52a8\nCtrl+Shift+Left                 //\u5728\u5782\u76f4\u5206\u5272\u7684\u7ec8\u7aef\u4e2d\u5c06\u5206\u5272\u6761\u5411\u5de6\u79fb\u52a8\nCtrl+Shift+Up                   //\u5728\u6c34\u5e73\u5206\u5272\u7684\u7ec8\u7aef\u4e2d\u5c06\u5206\u5272\u6761\u5411\u4e0a\u79fb\u52a8\nCtrl+Shift+Down                 //\u5728\u6c34\u5e73\u5206\u5272\u7684\u7ec8\u7aef\u4e2d\u5c06\u5206\u5272\u6761\u5411\u4e0b\u79fb\u52a8\nCtrl+Shift+S                    //\u9690\u85cf/\u663e\u793a\u6eda\u52a8\u6761\nCtrl+Shift+F                    //\u641c\u7d22\nCtrl+Shift+C                    //\u590d\u5236\u9009\u4e2d\u7684\u5185\u5bb9\u5230\u526a\u8d34\u677f\nCtrl+Shift+V                    //\u7c98\u8d34\u526a\u8d34\u677f\u7684\u5185\u5bb9\u5230\u6b64\u5904\nCtrl+Shift+W                    //\u5173\u95ed\u5f53\u524d\u7ec8\u7aef\nCtrl+Shift+Q                    //\u9000\u51fa\u5f53\u524d\u7a97\u53e3\uff0c\u5f53\u524d\u7a97\u53e3\u7684\u6240\u6709\u7ec8\u7aef\u90fd\u5c06\u88ab\u5173\u95ed\nCtrl+Shift+X                    //\u6700\u5927\u5316\u663e\u793a\u5f53\u524d\u7ec8\u7aef\nCtrl+Shift+Z                    //\u6700\u5927\u5316\u663e\u793a\u5f53\u524d\u7ec8\u7aef\u5e76\u4f7f\u5b57\u4f53\u653e\u5927\nCtrl+Shift+N or Ctrl+Tab        //\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u7ec8\u7aef\nCtrl+Shift+P or Ctrl+Shift+Tab  //Crtl+Shift+Tab \u79fb\u52a8\u5230\u4e4b\u524d\u7684\u4e00\u4e2a\u7ec8\u7aef\n</code></pre> <p>\u7b2c\u4e8c\u90e8\u5206\uff1a\u6709\u5173\u5404\u4e2a\u6807\u7b7e\u4e4b\u95f4\u7684\u64cd\u4f5c</p> Bash<pre><code>F11                             //\u5168\u5c4f\u5f00\u5173\nCtrl+Shift+T                    //\u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u6807\u7b7e\nCtrl+PageDown                   //\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u6807\u7b7e\nCtrl+PageUp                     //\u79fb\u52a8\u5230\u4e0a\u4e00\u4e2a\u6807\u7b7e\nCtrl+Shift+PageDown             //\u5c06\u5f53\u524d\u6807\u7b7e\u4e0e\u5176\u540e\u4e00\u4e2a\u6807\u7b7e\u4ea4\u6362\u4f4d\u7f6e\nCtrl+Shift+PageUp               //\u5c06\u5f53\u524d\u6807\u7b7e\u4e0e\u5176\u524d\u4e00\u4e2a\u6807\u7b7e\u4ea4\u6362\u4f4d\u7f6e\nCtrl+Plus (+)                   //\u589e\u5927\u5b57\u4f53\nCtrl+Minus (-)                  //\u51cf\u5c0f\u5b57\u4f53\nCtrl+Zero (0)                   //\u6062\u590d\u5b57\u4f53\u5230\u539f\u59cb\u5927\u5c0f\nCtrl+Shift+R                    //\u91cd\u7f6e\u7ec8\u7aef\u72b6\u6001\nCtrl+Shift+G                    //\u91cd\u7f6e\u7ec8\u7aef\u72b6\u6001\u5e76clear\u5c4f\u5e55\nSuper+g                         //\u7ed1\u5b9a\u6240\u6709\u7684\u7ec8\u7aef\uff0c\u4ee5\u4fbf\u5411\u4e00\u4e2a\u8f93\u5165\u80fd\u591f\u8f93\u5165\u5230\u6240\u6709\u7684\u7ec8\u7aef\nSuper+Shift+G                   //\u89e3\u9664\u7ed1\u5b9a\nSuper+t                         //\u7ed1\u5b9a\u5f53\u524d\u6807\u7b7e\u7684\u6240\u6709\u7ec8\u7aef\uff0c\u5411\u4e00\u4e2a\u7ec8\u7aef\u8f93\u5165\u7684\u5185\u5bb9\u4f1a\u81ea\u52a8\u8f93\u5165\u5230\u5176\u4ed6\u7ec8\u7aef\nSuper+Shift+T                   //\u89e3\u9664\u7ed1\u5b9a\nCtrl+Shift+I                    //\u6253\u5f00\u4e00\u4e2a\u7a97\u53e3\uff0c\u65b0\u7a97\u53e3\u4e0e\u539f\u6765\u7684\u7a97\u53e3\u4f7f\u7528\u540c\u4e00\u4e2a\u8fdb\u7a0b\nSuper+i                         //\u6253\u5f00\u4e00\u4e2a\u65b0\u7a97\u53e3\uff0c\u65b0\u7a97\u53e3\u4e0e\u539f\u6765\u7684\u7a97\u53e3\u4f7f\u7528\u4e0d\u540c\u7684\u8fdb\u7a0b\n</code></pre> <p>\u5176\u5b9e\u8fd9\u4e9b\u547d\u4ee4\u5f88\u5c11\u6709\uff0c\u4f7f\u7528\u865a\u62df\u673a\u5b66\u4e60\u65f6\uff0c\u4f1a\u5f00\u591a\u4e2a\u7ec8\u7aef\u5373\u53ef</p>"},{"location":"study/ROS2/3-ROS2%E5%B7%A5%E5%85%B7%E5%87%86%E5%A4%87/#32-vscode","title":"3.2 Vscode","text":"<p>Vscode\u662fROS2\u5f00\u53d1\u5fc5\u5907\u7684\u4ee3\u7801\u7f16\u8f91\u5de5\u5177</p> <p>ubuntu\u53ef\u4ee5\u4f7f\u7528\u4e00\u952e\u5b89\u88c5\uff0c\u9009\u62e9vscode\u5373\u53ef</p> Bash<pre><code>wget http://fishros.com/install -O fishros &amp;&amp; . fishros\n</code></pre> <p>Windows\u5219\u9700\u8981\u624b\u52a8\u5b89\u88c5\uff08\u7531\u4e8e\u6211\u91c7\u7528Vscode\u548cMobaXterm\u7ed3\u5408\u7684\u8fdc\u7a0b\u8fde\u63a5\u5f00\u53d1\u6a21\u5f0f\uff0c\u6240\u4ee5\u4ecb\u7ecdwindows\u5b89\u88c5\uff09</p> <p>\u4e0b\u8f7d\u5730\u5740\uff1aVisual Studio Code</p>"},{"location":"study/ROS2/3-ROS2%E5%B7%A5%E5%85%B7%E5%87%86%E5%A4%87/#33-mobaxterm","title":"3.3 MobaXterm","text":"<p>MobaXterm\u662f\u4e00\u4e2a\u5f88\u65b9\u4fbf\u7684ssh\u8fde\u63a5\u5de5\u5177\uff0c\u540c\u65f6\u652f\u6301X11\u53ef\u4ee5\u67e5\u770b\u56fe\u5f62\u5316\u7a0b\u5e8f\u7ed3\u679c\u3002\u5b9e\u9645\u5f00\u53d1Linux\u5f00\u53d1\u677f\u65f6\uff0c\u6211\u4e00\u822c\u559c\u6b22\u4f7f\u7528Vscode\u548cMobaXterm\u7ed3\u5408\uff0c\u5747\u4f7f\u7528ssh\u8fdc\u7a0b\u8fde\u63a5\uff0cVscode\u4fee\u6539\u67e5\u770b\u8fd0\u884c\u4e0d\u9700\u8981\u56fe\u5f62\u5316\u7ed3\u679c\u7684\u7a0b\u5e8f\uff0c\u9700\u8981\u67e5\u770b\u56fe\u5f62\u5316\u7ed3\u679c\u7684\u7a0b\u5e8f\uff08\u5982Qt\u3001ROS\u7684RVIZ\u7b49\u5747\u53ef\u67e5\u770b\uff09\u5219\u5207\u6362\u5230MobaXterm\u8fd0\u884c\u3002</p> <p>MobaXterm\u770b\u81ea\u5df1\u5f00\u53d1\u9700\u6c42\uff0c\u5168\u7a0b\u4f7f\u7528\u865a\u62df\u673a\u5219\u4e0d\u9700\u8981\u4e00\u5b9a\u5b89\u88c5\u3002\u7531\u4e8e\u6211\u81ea\u5df1\u7684\u865a\u62df\u673a\u6bd4\u8f83\u5361\uff0c\u4e14\u4e0d\u559c\u6b22\u865a\u62df\u673aubuntu\u4e0a\u4f7f\u7528Vscode\uff0c\u6240\u4ee5\u6211\u7ee7\u7eed\u91c7\u7528Vscode\u548cMobaXterm\u7ed3\u5408\u7684\u8fdc\u7a0b\u8fde\u63a5\u5f00\u53d1\u6a21\u5f0f\u3002</p> <p>\u5b98\u65b9\u4e0b\u8f7d\u8fde\u63a5\uff0c\u9009\u62e9\u514d\u8d39\u7248\u4e0b\u8f7d\u5b89\u88c5\u5373\u53ef\u3002</p> <p>MobaXterm\uff1a MobaXterm\u4e0b\u8f7d\u5730\u5740</p> <p>ubuntu\u6253\u5f00\u7ec8\u7aef\uff0c\u914d\u7f6e\u8fdc\u7a0b\u8fde\u63a5\u670d\u52a1</p> Bash<pre><code>#\u5b89\u88c5SSH\u670d\u52a1\nsudo apt-get install openssh-server\n#\u542f\u52a8SSH\u670d\u52a1\nsudo systemctl start ssh\n</code></pre> <p>\u5728ubuntu\u4e2d\u8f93\u5165\u547d\u4ee4\u67e5\u770b ip\u5730\u5740\uff0c\u7f3a\u5c11\u63d2\u4ef6\u6309\u7167\u7ec8\u7aef\u63d0\u793a\u5b89\u88c5\u5373\u53ef\uff0c</p> Bash<pre><code>ifconfig\n</code></pre> <p></p> <p>\u5b89\u88c5\u4e0b\u56fe\uff0c\u8f93\u5165\u81ea\u5df1\u7684 IP \u548c \u7528\u6237\u540d \u5373\u53ef\u5b8c\u6210\u8fde\u63a5</p> <p></p>"},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/","title":"\u7b2c\u56db\u7ae0 \u5de5\u4f5c\u7a7a\u95f4\u4e0e\u529f\u80fd\u5305","text":""},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#41-ros2","title":"4.1 ROS2\u7684\u8282\u70b9","text":""},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#411","title":"4.1.1 \u8282\u70b9\u4ecb\u7ecd","text":"<p>\u6bcf\u4e00\u4e2a\u8282\u70b9\u5373\u662f\u4e00\u4e2a\u6a21\u5757\u5316\u7684\u529f\u80fd\uff0c\u5404\u4e2a\u8282\u70b9\u901a\u8fc7\u56db\u4e2a\u901a\u4fe1\u673a\u5236\u8fdb\u884c\u4fe1\u606f\u901a\u4fe1\u4ea4\u4e92</p> <p>ROS2\u6709\u56db\u79cd\u901a\u4fe1\u65b9\u5f0f\uff1a</p> <ul> <li>\u8bdd\u9898\uff1a \u662f\u4e00\u79cd\u5355\u5411\u901a\u4fe1\u6a21\u578b\uff0c\u5728\u901a\u4fe1\u53cc\u65b9\u4e2d\uff0c\u53d1\u5e03\u65b9\u53d1\u5e03\u6570\u636e\uff0c\u8ba2\u9605\u65b9\u8ba2\u9605\u6570\u636e\uff0c\u6570\u636e\u6d41\u5355\u5411\u7684\u7531\u53d1\u5e03\u65b9\u4f20\u8f93\u5230\u8ba2\u9605\u65b9\u3002</li> <li>\u670d\u52a1\uff1a \u662f\u4e00\u79cd\u57fa\u4e8e\u8bf7\u6c42\u54cd\u5e94\u7684\u901a\u4fe1\u6a21\u578b\uff0c\u5728\u901a\u4fe1\u53cc\u65b9\u4e2d\uff0c\u5ba2\u6237\u7aef\u53d1\u9001\u8bf7\u6c42\u6570\u636e\u5230\u670d\u52a1\u7aef\uff0c\u670d\u52a1\u7aef\u54cd\u5e94\u7ed3\u679c\u7ed9\u5ba2\u6237\u7aef\u3002</li> <li>\u52a8\u4f5c\uff1a \u662f\u4e00\u79cd\u5e26\u6709\u8fde\u7eed\u53cd\u9988\u7684\u901a\u4fe1\u6a21\u578b\uff0c\u5728\u901a\u4fe1\u53cc\u65b9\u4e2d\uff0c\u5ba2\u6237\u7aef\u53d1\u9001\u8bf7\u6c42\u6570\u636e\u5230\u670d\u52a1\u7aef\uff0c\u670d\u52a1\u7aef\u54cd\u5e94\u7ed3\u679c\u7ed9\u5ba2\u6237\u7aef\uff0c\u4f46\u662f\u5728\u670d\u52a1\u7aef\u63a5\u6536\u5230\u8bf7\u6c42\u5230\u4ea7\u751f\u6700\u7ec8\u54cd\u5e94\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u53d1\u9001\u8fde\u7eed\u7684\u53cd\u9988\u4fe1\u606f\u5230\u5ba2\u6237\u7aef\u3002</li> <li>\u53c2\u6570\uff1a \u662f\u4e00\u79cd\u57fa\u4e8e\u5171\u4eab\u7684\u901a\u4fe1\u6a21\u578b\uff0c\u5728\u901a\u4fe1\u53cc\u65b9\u4e2d\uff0c\u670d\u52a1\u7aef\u53ef\u4ee5\u8bbe\u7f6e\u6570\u636e\uff0c\u800c\u5ba2\u6237\u7aef\u53ef\u4ee5\u8fde\u63a5\u670d\u52a1\u7aef\u5e76\u64cd\u4f5c\u670d\u52a1\u7aef\u6570\u636e\u3002</li> </ul> <p>\u4e0b\u9762\u662f\u5b98\u65b9\u7ed9\u7684\u56fe\uff1a</p> <p></p>"},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#412","title":"4.1.2 \u542f\u52a8\u8282\u70b9","text":"<p>\u7ec8\u7aef\u6307\u4ee4\uff1a</p> Bash<pre><code>ros2 run &lt;package_name&gt; &lt;executable_name&gt;\n</code></pre> <p>package_name--\u529f\u80fd\u5305\u7684\u540d\u79f0       executable_name--\u53ef\u6267\u884c\u6587\u4ef6\uff08\u5373\u529f\u80fd\u5305\u4e0b\u7684 \u8282\u70b9 \uff09</p> <p>\u4e3e\u4f8b\uff1a\u542f\u52a8\u5c0f\u4e4c\u9f9f\u8282\u70b9</p> Bash<pre><code>ros2 run turtlesim turtlesim_node\n</code></pre>"},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#413","title":"4.1.3 \u8282\u70b9\u5e38\u7528\u7684\u547d\u4ee4\u884c\u6307\u4ee4","text":"<p>\u67e5\u770b\u8282\u70b9\u5217\u8868(\u5df2\u7ecf\u542f\u7528\u7684\u8282\u70b9)\uff1a</p> Bash<pre><code>ros2 node list\n</code></pre> <p>\u5982\u4e0b\u56fe\uff0c\u6253\u5f00turtlesim\u4e0b\u7684turtlesim_node\u8282\u70b9\uff0c\u53ef\u4ee5\u67e5\u770b\u5230\u8282\u70b9turtlesim</p> <p></p> <p>\u67e5\u770b\u8282\u70b9\u4fe1\u606f\uff0c\u6ce8\u610f\u8282\u70b9\u540d\u79f0\u6709<code>/</code>\uff1a</p> Bash<pre><code>ros2 node info &lt;node_name&gt; \n</code></pre> <p></p> <p>\u91cd\u6620\u5c04\u8282\u70b9\u540d\u79f0\uff1a</p> Bash<pre><code>ros2 run turtlesim turtlesim_node --ros-args --remap __node:=my_turtle\n</code></pre>"},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#42-ros2","title":"4.2 ROS2\u5de5\u4f5c\u7a7a\u95f4\u4e0e\u7f16\u8bd1\u5de5\u5177","text":"<p>\u6ce8\u610f\uff1a\u4e00\u4e2a\u5de5\u4f5c\u7a7a\u95f4\u4e0b\u53ef\u4ee5\u6709\u591a\u4e2a\u529f\u80fd\u5305\uff0c\u4e00\u4e2a\u529f\u80fd\u5305\u53ef\u4ee5\u6709\u591a\u4e2a\u8282\u70b9\u5b58\u5728</p>"},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#421-ros2colcon","title":"4.2.1 ROS2\u7f16\u8bd1\u5de5\u5177colcon","text":"<p>\u4ec0\u4e48\u662fcolcon</p> <p>colcon\u60f3\u5f53\u4e8eros1\u4e2d\u7684catkin\u7f16\u8bd1\u5de5\u5177\u3002</p> <p>\u5b89\u88c5colcon\u5de5\u5177</p> Bash<pre><code>sudo apt-get install python3-colcon-common-extensions\n</code></pre> <p>colcon\u76f8\u5173\u6307\u4ee4</p> <p>pkg_name\u5c5e\u4e8e \u53d8\u91cf \uff0c\u5373\u529f\u80fd\u5305\u7684\u540d\u79f0</p> <p>\u53ea\u7f16\u8bd1\u4e00\u4e2a\u5305</p> Bash<pre><code>colcon build --packages-select 'pkg_name' \n</code></pre> <p>\u4e0d\u7f16\u8bd1\u6d4b\u8bd5\u5355\u5143</p> Bash<pre><code>colcon build --packages-select 'pkg_name'  --cmake-args -DBUILD_TESTING=0\n</code></pre> <p>\u8fd0\u884c\u7f16\u8bd1\u7684\u5305\u7684\u6d4b\u8bd5</p> Bash<pre><code>colcon test\n</code></pre> <p>\u5141\u8bb8\u901a\u8fc7\u66f4\u6539src\u4e0b\u7684\u90e8\u5206\u6587\u4ef6\u6765\u6539\u53d8install\uff08\u91cd\u8981\uff09\uff0c\u6bcf\u6b21\u8c03\u6574 python \u811a\u672c\u65f6\u90fd\u4e0d\u5fc5\u91cd\u65b0build\u4e86</p> Bash<pre><code>colcon build --symlink-install\n</code></pre>"},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#422","title":"4.2.2 \u521b\u5efa\u5de5\u4f5c\u7a7a\u95f4","text":"<p>\u521b\u5efa \u5de5\u4f5c\u7a7a\u95f4 \u6587\u4ef6\u5939\uff0c\u5e76\u7f16\u8bd1\u6587\u4ef6\u5939\uff0c\u7f16\u8bd1\u4ee5\u540e\uff0c\u4f1a\u591a\u51fa<code>build</code> \u3001<code>install</code>\u3001 <code>log</code> \u4e09\u4e2a\u6587\u4ef6\u5939</p> <p>mkdir\uff1a \u521b\u5efa\u4e00\u4e2a\u76ee\u5f55\uff0cmkdir -p \uff1a\u9012\u5f52\u521b\u5efa\u76ee\u5f55\uff0c\u5373\u4f7f\u4e0a\u7ea7\u76ee\u5f55\u4e0d\u5b58\u5728\uff0c\u4f1a\u6309\u76ee\u5f55\u5c42\u7ea7\u81ea\u52a8\u521b\u5efa\u76ee\u5f55</p> Bash<pre><code>mkdir -p wkspace1/src # \u9012\u5f52\u521b\u5efa\u76ee\u5f55\ncd wkspace1 # \u8fdb\u5165\u6587\u4ef6\u5939\ncolcon build # \u7f16\u8bd1\n</code></pre> <p>\u51c6\u5907\u597d\u5de5\u4f5c\u7a7a\u95f4\u4ee5\u540e\u5c31\u53ef\u4ee5\u8fdb\u884c\u529f\u80fd\u5305\u7684\u521b\u5efa\u548c\u7a0b\u5e8f\u7684\u7f16\u5199\uff0c\u5206\u522b\u4f7f\u7528C++\u548cPython\u7f16\u7a0b\u8bed\u8a00</p>"},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#43","title":"4.3 \u529f\u80fd\u5305\u793a\u4f8b","text":""},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#433-python","title":"4.3.3 Python\u793a\u4f8b","text":"<p>\uff01\uff01\uff01\u8fdb\u5165<code>wkspace1/src</code>\u76ee\u5f55</p> Bash<pre><code>cd src\n</code></pre> <p></p>"},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#1","title":"1. \u521b\u5efa\u529f\u80fd\u5305","text":"Bash<pre><code>ros2 pkg create helloworld_py --build-type ament_python  --dependencies rclpy  --node-name helloworld\n</code></pre> <p>\u53c2\u6570\u4ecb\u7ecd\uff1a</p> <ul> <li><code>helloworld_py</code>----\u529f\u80fd\u5305\u7684\u540d\u79f0</li> <li><code>--build-type</code>----\u7f16\u8bd1\u65b9\u5f0f\uff0cament_python \u548c ament_cmake \u5206\u522b\u7528\u4e8epython\u548cC++</li> <li><code>--dependencies</code>----\u4f9d\u8d56\u540d\u79f0\uff0c rclpy \u548c rclcpp \u5206\u522b\u7528\u4e8epython\u548cC++</li> <li><code>--node-name</code>----\u8282\u70b9\u540d\u79f0 \uff0c\u53ef\u4ee5\u5728\u521b\u5efa\u529f\u80fd\u5305\u7684\u65f6\u5019\u521b\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u81ea\u5df1\u624b\u52a8\u6dfb\u52a0</li> </ul> <p>\u521b\u5efa\u529f\u80fd\u5305\u4ee5\u540e\u4f1a\u51fa\u73b0\u4e00\u4e2a\u8b66\u544a\u201c\u672a\u77e5\u7684\u8bb8\u53ef\u8bc1\u201d</p> <p></p> <p>\u8fd9\u4e2a\u7ecf\u8fc7\u4e0d\u5f71\u54cd\u540e\u7eed\u64cd\u4f5c\uff0c\u611f\u89c9\u4e0d\u8212\u670d\uff0c\u6dfb\u52a0\u4e00\u4e2a\u8bb8\u53ef\u8bc1\u5373\u53ef\u6d88\u9664\u8b66\u544a</p> Bash<pre><code>ros2 pkg create helloworld_py --build-type ament_python  --dependencies rclpy  --node-name helloworld --license Apache-2.0\n</code></pre>"},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#2","title":"2. \u7a0b\u5e8f\u6e90\u7801","text":"Python<pre><code>import rclpy\n\ndef main():\n    # \u521d\u59cb\u5316 ROS2\n    rclpy.init()\n    # \u521b\u5efa\u8282\u70b9\n    node = rclpy.create_node(\"helloworld_node\")\n    # \u8f93\u51fa\u6587\u672c\n    node.get_logger().error(\"damage world!\")\n    rclpy.spin(node)\n    # \u91ca\u653e\u8d44\u6e90\n    rclpy.shutdown()\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#3-setuppy","title":"3. \u4fee\u6539setup.py","text":"<p><code>helloworld = helloworld_py.helloworld:main</code> \u5373 \u6620\u5c04\u540d\u79f0 = \u529f\u80fd\u5305\u540d\u79f0.\u6e90\u4ee3\u7801\u6587\u4ef6\u540d\u79f0:\u51fd\u6570\u540d\u79f0\uff0c\u201d\u6620\u5c04\u540d\u79f0\u201c\u662f\u5728\u7ec8\u7aef\u8fd0\u884c\u53ef\u6267\u884c\u6587\u4ef6\u65f6\u540e\u4f7f\u7528\u7684\u540d\u79f0\u3002</p> Python<pre><code>from setuptools import setup\n\npackage_name = 'pkg02_helloworld_py'\n\nsetup(\n    name=package_name,\n    version='0.0.0',\n    packages=[package_name],\n    data_files=[\n        ('share/ament_index/resource_index/packages',\n            ['resource/' + package_name]),\n        ('share/' + package_name, ['package.xml']),\n    ],\n    install_requires=['setuptools'],\n    zip_safe=True,\n    maintainer='ros2',\n    maintainer_email='ros2@todo.todo',\n    description='TODO: Package description',\n    license='TODO: License declaration',\n    tests_require=['pytest'],\n    entry_points={\n        'console_scripts': [\n            # \u6620\u5c04\u6e90\u6587\u4ef6\u4e0e\u53ef\u6267\u884c\u6587\u4ef6\n            'helloworld = helloworld_py.helloworld:main'\n        ],\n    },\n)\n</code></pre>"},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#4","title":"4. \u7f16\u8bd1\u8fd0\u884c\u8282\u70b9","text":"<p>\u6253\u5f00vscode\u6216\u7ec8\u7aef\uff0c\u8fdb\u5165<code>wkspace1</code>\u76ee\u5f55\uff1a</p> <p>\u7f16\u8bd1\u529f\u80fd\u5305</p> Bash<pre><code>colcon build\n</code></pre> <p>source\u73af\u5883</p> Bash<pre><code>source install/setup.bash\n</code></pre> <p>\u8fd0\u884c\u8282\u70b9</p> Bash<pre><code>ros2 run helloworld_py helloworld\n</code></pre>"},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#5","title":"5. \u8282\u70b9\u6df7\u6dc6\u9519\u8bef\u89e3\u91ca","text":"<p>\u521d\u5b66\u8005\u5f88\u5bb9\u6613\u5f04\u6df7\uff0c<code>setup.py</code>\u4e2d\u7684 \u6620\u5c04\u540d\u79f0 <code>helloworld</code>\uff0c\u548c\u6e90\u4ee3\u7801\u4e2d\u7684<code>rclpy.create_node(\"helloworld_node\")</code>\u4e2d\u7684<code>helloworld_node</code>\u90fd\u662f\u8282\u70b9\u3002\u4f46\u4e8b\u5b9e\u4e0a\uff0c<code>helloworld</code>\u662f\u6620\u5c04\u6e90\u6587\u4ef6\u4e0e\u53ef\u6267\u884c\u6587\u4ef6\u7684\u4e00\u4e2a\u522b\u79f0\uff0c\u4ec5\u7528\u4e8e\u7ec8\u7aef\u8fd0\u884c\u53ef\u6267\u884c\u6587\u4ef6\u65f6\u4f7f\u7528\uff1b\u800c<code>helloworld_node</code>\u624d\u662f\u771f\u6b63\u7684\u8282\u70b9\u540d\u79f0\uff0c\u5373\u53ef\u4ee5\u7528ros2 node list\u67e5\u5230\u7684\u8282\u70b9\uff0c\u5982\u4e0b\u56fe\uff1a</p> <p></p>"},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#434-c","title":"4.3.4 C++\u793a\u4f8b","text":"<p>\uff01\uff01\uff01\u8fdb\u5165<code>wkspace1/src</code>\u76ee\u5f55</p> Bash<pre><code>cd src\n</code></pre> <p></p>"},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#1_1","title":"1. \u521b\u5efa\u529f\u80fd\u5305","text":"Bash<pre><code>ros2 pkg create helloworld_cpp --build-type ament_cmake  --dependencies rclcpp  --node-name helloworld --license Apache-2.0\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u6dfb\u52a0<code>license</code>\u53c2\u6570\u5728python\u90a3\u4e00\u7ae0\u6709\u4ecb\u7ecd\uff0c\u53ef\u4ee5\u5f80\u4e0a\u7ffb\u4e00\u7ffb</p> <p>\u53c2\u6570\u4ecb\u7ecd\uff1a</p> <ul> <li><code>helloworld_cpp</code>----\u529f\u80fd\u5305\u7684\u540d\u79f0</li> <li><code>--build-type</code>----\u7f16\u8bd1\u65b9\u5f0f\uff0c ament_python \u548c ament_cmake \u5206\u522b\u7528\u4e8epython\u548cC++</li> <li><code>--dependencies</code>----\u4f9d\u8d56\u540d\u79f0\uff0crclpy \u548c rclcpp \u5206\u522b\u7528\u4e8epython\u548cC++</li> <li><code>--node-name</code>----\u8282\u70b9\u540d\u79f0 \uff0c\u53ef\u4ee5\u5728\u521b\u5efa\u529f\u80fd\u5305\u7684\u65f6\u5019\u521b\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u81ea\u5df1\u624b\u52a8\u6dfb\u52a0</li> </ul>"},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#2_1","title":"2. \u7a0b\u5e8f\u6e90\u7801","text":"C++<pre><code>#include \"rclcpp/rclcpp.hpp\"\n\nint main(int argc, char ** argv)\n{\n  // \u521d\u59cb\u5316 ROS2\n  rclcpp::init(argc,argv);\n  // \u521b\u5efa\u8282\u70b9\n  auto node = rclcpp::Node::make_shared(\"helloworld_node\");\n  // \u8f93\u51fa\u6587\u672c\n  RCLCPP_INFO(node-&gt;get_logger(),\"hello world!\");\n  rclcpp::spin(node);\n  // \u91ca\u653e\u8d44\u6e90\n  rclcpp::shutdown();\n  return 0;\n}\n</code></pre> <p>\u4ee3\u7801\u590d\u5236\u4ee5\u540e\u4f1a\u53d1\u73b0vscode\u62a5\u9519\uff0c\u5927\u81f4\u539f\u56e0\u5c31\u662f\u627e\u4e0d\u5230\u5934\u6587\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539\u4e00\u4e9b\u63d2\u4ef6\u4e2d\u7684\u8def\u5f84\u3002\u6253\u5f00\u6216\u65b0\u5efa<code>c_cpp_properties.json</code>\u6587\u4ef6\uff0c\u6700\u4fbf\u6377\u7684\u65b9\u5f0f\u5c31\u662f\u9f20\u6807\u653e\u5728\u62a5\u9519\u6ce2\u6d6a\u7ebf\u4f4d\u7f6e\uff0c\u70b9\u51fb\u5feb\u901f\u4fee\u590d\uff0c\u7136\u540e<code>.vscode</code>\u6587\u4ef6\u5939\u4f1a\u591a\u4e00\u4e2a\u6b64\u6587\u4ef6\uff0c\u7136\u540e\u4fee\u6539\u4e3a\u5982\u4e0b\u5185\u5bb9\u3002</p> JSON<pre><code>{\n    \"configurations\": [\n        {\n            \"name\": \"Linux\",\n            \"includePath\": [\n                \"${workspaceFolder}/**\",\n                \"/opt/ros/${ROS_DISTRO}/include/**\"\n            ],\n            \"defines\": [],\n            \"compilerPath\": \"/usr/bin/gcc\",\n            \"cStandard\": \"c17\",\n            \"cppStandard\": \"gnu++17\",\n            \"intelliSenseMode\": \"linux-gcc-x64\"\n        }\n    ],\n    \"version\": 4\n}\n</code></pre> <p></p>"},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#3-cmakeliststxt","title":"3. \u4fee\u6539CMakeLists.txt","text":"<p>\u6211\u4eec\u521b\u5efa\u529f\u80fd\u5305\u65f6\u521b\u5efa\u4e86\u4e00\u4e2a\u8282\u70b9\u6240\u4ee5\u6b64\u90e8\u5206\u53ef\u4ee5\u5ffd\u7565\u3002</p> CMake<pre><code>cmake_minimum_required(VERSION 3.8)\nproject(pkg01_helloworld_cpp)\n\nif(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")\n  add_compile_options(-Wall -Wextra -Wpedantic)\nendif()\n\n# find dependencies\nfind_package(ament_cmake REQUIRED)\n# \u5f15\u5165\u5916\u90e8\u4f9d\u8d56\u5305\nfind_package(rclcpp REQUIRED)\n\n# \u6620\u5c04\u6e90\u6587\u4ef6\u4e0e\u53ef\u6267\u884c\u6587\u4ef6\nadd_executable(helloworld src/helloworld.cpp)\n# \u8bbe\u7f6e\u76ee\u6807\u4f9d\u8d56\u5e93\nament_target_dependencies(\n  helloworld\n  \"rclcpp\"\n)\n# \u5b9a\u4e49\u5b89\u88c5\u89c4\u5219\ninstall(TARGETS helloworld\n  DESTINATION lib/${PROJECT_NAME})\n\nif(BUILD_TESTING)\n  find_package(ament_lint_auto REQUIRED)\n  # the following line skips the linter which checks for copyrights\n  # comment the line when a copyright and license is added to all source files\n  set(ament_cmake_copyright_FOUND TRUE)\n  # the following line skips cpplint (only works in a git repo)\n  # comment the line when this package is in a git repo and when\n  # a copyright and license is added to all source files\n  set(ament_cmake_cpplint_FOUND TRUE)\n  ament_lint_auto_find_test_dependencies()\nendif()\n\nament_package()\n</code></pre>"},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#4_1","title":"4. \u7f16\u8bd1\u8fd0\u884c\u8282\u70b9","text":"<p>\u6253\u5f00vscode\u6216\u7ec8\u7aef\uff0c\u8fdb\u5165<code>wkspace1</code>\u76ee\u5f55\uff1a</p> <p>\u7f16\u8bd1\u5355\u4e2a\u529f\u80fd\u5305</p> Bash<pre><code>colcon build --packages-select helloworld_cpp\n</code></pre> <p></p> <p>source\u73af\u5883</p> Bash<pre><code>source install/setup.bash\n</code></pre> <p>\u8fd0\u884c\u8282\u70b9</p> Bash<pre><code>ros2 run helloworld_cpp helloworld\n</code></pre>"},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#435","title":"4.3.5 \u8fd0\u884c\u4f18\u5316","text":"<p>\u6bcf\u6b21\u7ec8\u7aef\u4e2d\u6267\u884c\u5de5\u4f5c\u7a7a\u95f4\u4e0b\u7684\u8282\u70b9\u65f6\uff0c\u90fd\u9700\u8981\u8c03\u7528<code>. install/setup.bash</code>\u6307\u4ee4\uff0c\u4f7f\u7528\u4e0d\u4fbf\uff0c\u4f18\u5316\u7b56\u7565\u662f\uff0c\u53ef\u4ee5\u5c06\u8be5\u6307\u4ee4\u7684\u8c03\u7528\u6dfb\u52a0\u8fdb<code>~/setup.bash</code>\uff0c\u64cd\u4f5c\u683c\u5f0f\u5982\u4e0b\uff1a</p> Bash<pre><code>echo \"source /{\u5de5\u4f5c\u7a7a\u95f4\u8def\u5f84}/install/setup.bash\" &gt;&gt; ~/.bashrc\n</code></pre> <p>\u793a\u4f8b\uff1a</p> Bash<pre><code>echo \"source /home/lzh/wkspace1/install/setup.bash\" &gt;&gt; ~/.bashrc\n</code></pre>"},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#436","title":"4.3.6 \u9762\u5411\u8fc7\u7a0b\u7f16\u7a0b","text":"<p>\u9762\u5411\u8fc7\u7a0b\u7f16\u7a0b\u5373\u662fC++\u548cPython\u7684\u4e00\u5927\u7279\u70b9\uff0c\u540c\u65f6\u4e5f\u662fROS2\u533a\u5206\u4e8eROS\u7684\u7f16\u7a0b\u98ce\u683c\u5dee\u5f02\u3002</p>"},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#1-python","title":"1. Python","text":"Python<pre><code>#!/usr/bin/env python3\nimport rclpy\nfrom rclpy.node import Node\n\n\nclass TestNode(Node):\n    \"\"\"\n    \u7ee7\u627fNode\u7c7b,\u5e76\u521b\u5efa\u4e00\u4e2a\u8282\u70b9,\u6253\u5370\u8282\u70b9\u540d\u79f0\n    \"\"\"\n    def __init__(self, node):\n        super().__init__(node)\n        self.node = node\n        self.get_logger().info(f\"\u8282\u70b9\u540d\u79f0\u4e3a{self.node}\")\n\n\ndef main(args=None):\n    \"\"\"\n    ros2\u8fd0\u884c\u8be5\u8282\u70b9\u7684\u5165\u53e3\u51fd\u6570\n    \"\"\"\n    rclpy.init(args=args) # \u521d\u59cb\u5316rclpy\n    node = TestNode(\"helloworld_node\")  # \u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\n    rclpy.spin(node) # \u4fdd\u6301\u8282\u70b9\u8fd0\u884c\uff0c\u68c0\u6d4b\u662f\u5426\u6536\u5230\u9000\u51fa\u6307\u4ee4\uff08Ctrl+C\uff09\n    rclpy.shutdown() # \u5173\u95edrclpy\n</code></pre>"},{"location":"study/ROS2/4-%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E4%B8%8E%E5%8A%9F%E8%83%BD%E5%8C%85/#2-c","title":"2. C++","text":"C++<pre><code>#include \"rclcpp/rclcpp.hpp\"\n#include &lt;string&gt;\n\nusing  namespace std;\n/*\n    \u521b\u5efa\u4e00\u4e2a\u7c7b\u8282\u70b9\uff0c\u540d\u5b57\u53eb\u505aTestNode,\u7ee7\u627f\u81eaNode.\n*/\nclass TestNode : public rclcpp::Node\n{\n\npublic:\n    // \u6784\u9020\u51fd\u6570,\u6709\u4e00\u4e2a\u53c2\u6570\u4e3a\u8282\u70b9\u540d\u79f0\n    TestNode(string name) : Node(name)\n    {\n        // \u6253\u5370\u4e00\u53e5\u81ea\u6211\u4ecb\u7ecd\n        RCLCPP_INFO(this-&gt;get_logger(), \"\u8282\u70b9\u7684\u540d\u79f0\u4e3a:%s.\",name.c_str());\n    }\n\n};\n\nint main(int argc, char **argv)\n{\n    rclcpp::init(argc, argv);\n    /*\u4ea7\u751f\u4e00\u4e2aWang2\u7684\u8282\u70b9*/\n    auto node = make_shared&lt;TestNode&gt;(\"helloworld_node\");\n    /* \u8fd0\u884c\u8282\u70b9\uff0c\u5e76\u68c0\u6d4b\u9000\u51fa\u4fe1\u53f7*/\n    rclcpp::spin(node);\n    rclcpp::shutdown();\n    return 0;\n}\n</code></pre>"},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/","title":"\u7b2c\u4e94\u7ae0 \u8bdd\u9898\u901a\u4fe1","text":"<p>\u8bdd\u9898\u901a\u4fe1\u662fROS\u4e2d\u4f7f\u7528\u9891\u7387\u6700\u9ad8\u7684\u4e00\u79cd\u901a\u4fe1\u6a21\u5f0f\uff0c\u8bdd\u9898\u901a\u4fe1\u662f\u57fa\u4e8e \u53d1\u5e03\u8ba2\u9605 \u6a21\u5f0f\u7684\uff0c\u4e5f\u5373\uff1a\u4e00\u4e2a\u8282\u70b9\u53d1\u5e03\u6d88\u606f\uff0c\u53e6\u4e00\u4e2a\u8282\u70b9\u8ba2\u9605\u8be5\u6d88\u606f\u3002\u5982\u4e0b\u56fe\u4e2d\uff0cTopic\u6a21\u5757\u7684\u6570\u636e\u6d41\u52a8\u5373\u662f\u8bdd\u9898\u901a\u4fe1\u6a21\u578b\uff1a</p> <p></p> <p>\u8282\u70b9\u53ef\u4ee5\u5c06\u6570\u636e\u53d1\u5e03\u5230\u4efb\u610f\u6570\u91cf\u7684\u8bdd\u9898\uff0c\u540c\u65f6\u8ba2\u9605\u4efb\u610f\u6570\u91cf\u7684\u8bdd\u9898\u3002</p> <p></p> <p>\u8bdd\u9898\u901a\u4fe1\u7684\u7279\u70b9\uff1a</p> <ul> <li>\u4ee5\u53d1\u5e03\u8ba2\u9605\u7684\u65b9\u5f0f\u5b9e\u73b0\u4e0d\u540c\u8282\u70b9\u7684\u6570\u636e\u4ea4\u6d41\uff0c\u6570\u636e\u53d1\u5e03\u5bf9\u8c61\u79f0\u4e3a \u53d1\u5e03\u8005 \uff0c\u6570\u636e\u8ba2\u9605\u5bf9\u8c61\u79f0\u4e4b\u4e3a \u8ba2\u9605\u8005 \u3002</li> <li>\u53d1\u5e03\u65b9\u5c06\u6d88\u606f\u53d1\u5e03\u5728\u8bdd\u9898\u4e0a\uff0c\u8ba2\u9605\u65b9\u5219\u4ece\u8be5\u8bdd\u9898\u8ba2\u9605\u6d88\u606f\uff0c\u6d88\u606f\u7684\u6d41\u5411\u662f \u5355\u5411 \u7684\u3002</li> <li>\u53d1\u5e03\u65b9\u4e0e\u8ba2\u9605\u65b9\u53ef\u4ee5\u662f \u4e00\u5bf9\u591a \uff0c\u5373\u540c\u4e00\u8bdd\u9898\u4e00\u4e2a\u53d1\u5e03\u8005\u591a\u4e2a\u8ba2\u9605\u8005\u3002</li> <li>\u540c\u65f6\u53d1\u5e03\u65b9\u4e0e\u8ba2\u9605\u65b9\u53ef\u4ee5\u662f \u591a\u5bf9\u591a \uff0c\u5373\u540c\u4e00\u4e2a\u8bdd\u9898\u591a\u4e2a\u53d1\u5e03\u8005\u591a\u4e2a\u8ba2\u9605\u8005\u3002</li> </ul> <p>\u8bdd\u9898\u901a\u4fe1\u4e00\u822c\u5e94\u7528\u4e8e\u4e0d\u65ad\u66f4\u65b0\u7684\u3001\u5c11\u903b\u8f91\u5904\u7406\u7684\u6570\u636e\u4f20\u8f93\u573a\u666f\u3002</p>"},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#51","title":"5.1 \u8bdd\u9898\u539f\u751f\u6d88\u606f\u63a5\u53e3\u793a\u4f8b","text":""},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#511","title":"5.1.1 \u6848\u4f8b\u9700\u6c42","text":"<ul> <li> ROS2\u539f\u751f\u6d88\u606f\u63a5\u53e3\uff1a\u53d1\u5e03\u65b9\u4ee5\u67d0\u4e2a\u9891\u7387\u53d1\u5e03\u4e00\u6bb5\u6587\u672c\uff0c\u8ba2\u9605\u65b9\u8ba2\u9605\u6d88\u606f\uff0c\u5e76\u8f93\u51fa\u5728\u7ec8\u7aef\u3002</li> </ul>"},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#512","title":"5.1.2 \u6848\u4f8b\u5206\u6790","text":"<ul> <li>\u521b\u5efa\u53d1\u5e03\u8005</li> </ul> <ul> <li>\u521b\u5efa\u8ba2\u9605\u8005</li> <li>\u9009\u62e9\u6d88\u606f\u8f7d\u4f53\uff08\u539f\u751f\u6570\u636e\u7c7b\u578b\uff09</li> <li>\u521b\u5efa\u5b9a\u65f6\u5668\uff0c\u4ee5\u4e00\u5b9a\u9891\u7387\u53d1\u9001\u6d88\u606f</li> </ul>"},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#513","title":"5.1.3 \u529f\u80fd\u5305\u51c6\u5907","text":"<p>\u521b\u5efa\u529f\u80fd\u5305<code>cpp_topic</code>\u548c<code>py_topic</code>\uff0c\u6dfb\u52a0 \u539f\u751f\u6d88\u606f\u63a5\u53e3 \u4f9d\u8d56<code>std_msgs</code>\u3002</p> Bash<pre><code>ros2 pkg create cpp_topic --build-type ament_cmake --dependencies rclcpp std_msgs --license Apache-2.0\nros2 pkg create py_topic --build-type ament_python --dependencies rclpy std_msgs --license Apache-2.0\n</code></pre>"},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#52-python","title":"5.2 Python\u539f\u751f\u6570\u636e\u8bdd\u9898\u793a\u4f8b","text":""},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#521","title":"5.2.1 \u53d1\u5e03\u8005","text":"<p>\u529f\u80fd\u5305<code>py_topic</code>\u7684<code>py_topic</code>\u76ee\u5f55\u4e0b\uff0c\u65b0\u5efaPython\u6587\u4ef6<code>publish_py.py</code></p> Python<pre><code>import rclpy\nfrom rclpy.node import Node\nfrom std_msgs.msg import String\n\nclass MiniPublisher(Node):\n    def __init__(self, name):\n        super().__init__(name)\n        self.get_logger().info(f\"\u8bdd\u9898\u540d\u79f0:{name}\")\n        # \u521b\u5efa\u53d1\u5e03\u8005\n        self.publisher1 = self.create_publisher(String, \"TopicTest\", 10)\n        # \u521b\u5efa\u5b9a\u65f6\u5668\n        timer_period = 1\n        self.timer = self.create_timer(timer_period, self.callback)\n        self.cg = 0\n\n    def callback(self):\n        \"\"\"\u5b9a\u65f6\u5668\u53cd\u9988\u51fd\u6570\"\"\"\n        # \u521b\u5efa\u6570\u636e\n        msg = String()\n        msg.data = f\"\u8fd9\u662f\u4e00\u6761\u53d1\u5e03\u8005[{self.cg}]\u4fe1\u606f\"\n        # \u53d1\u5e03\u6570\u636e\n        self.publisher1.publish(msg)\n        self.cg = self.cg + 1\n\ndef main(args=None):\n    rclpy.init(args=args)\n    node = MiniPublisher(\"publisher_py_node\")\n    rclpy.spin(node)\n    rclpy.shutdown()\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>"},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#522","title":"5.2.2 \u8ba2\u9605\u8005","text":"<p>\u529f\u80fd\u5305<code>py_topic</code>\u7684<code>py_topic</code>\u76ee\u5f55\u4e0b\uff0c\u65b0\u5efaPython\u6587\u4ef6<code>subscribe_py.py</code></p> Python<pre><code>import rclpy\nfrom rclpy.node import Node\nfrom std_msgs.msg import String\n\n\nclass MinimalSubscriber(Node):\n\n    def __init__(self, name):\n        super().__init__(name)\n        # \u521b\u5efa\u8ba2\u9605\u65b9\n        self.subscription = self.create_subscription(String, \"TopicTest\", self.listener_callback, 10)\n\n\n    def listener_callback(self, msg):\n        \"\"\"\u5904\u7406\u8ba2\u9605\u5230\u7684\u6d88\u606f\"\"\"\n        self.get_logger().info(f'\u8ba2\u9605\u7684\u6d88\u606f:{msg.data}')\n\n\ndef main(args=None):\n    rclpy.init(args=args)\n    node = MinimalSubscriber(\"subscriber_py_node\")\n    rclpy.spin(node)\n    rclpy.shutdown()\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#523","title":"5.2.3 \u7f16\u8bd1\u8fd0\u884c","text":"<p>\u5728<code>setup.py</code> \u6700\u540e\u4e00\u884c\u6dfb\u52a0\u7f16\u8bd1\u4fe1\u606f</p> Python<pre><code>entry_points={\n        'console_scripts': [\n            # \u6dfb\u52a0\u6620\u5c04\n            \"publisher_py = py_topic.publish_py:main\",\n            \"subscriber_py = py_topic.subscribe_py:main\",\n        ],\n    },\n</code></pre> Bash<pre><code>colcon build --packages-select py_topic\nsource install/setup.bash\n</code></pre> <p>\u6253\u5f00\u7b2c\u4e00\u4e2a\u7ec8\u7aef\uff0c\u8fd0\u884c\u53d1\u5e03\u8005</p> Bash<pre><code>ros2 run py_topic publisher_py\n</code></pre> <p>\u6253\u5f00\u7b2c\u4e8c\u4e2a\u7ec8\u7aef\uff0c\u8fd0\u884c\u8ba2\u9605\u8005</p> Bash<pre><code>source install/setup.bash\nros2 run py_topic subscriber_py\n</code></pre> <p></p> <p>\u7531\u4e8e\u53d1\u5e03\u8005\u5e76\u6ca1\u6709\u4e00\u76f4\u6253\u5370\u65e5\u5fd7\uff0c\u6545\u53ea\u6709\u4e00\u53e5\u4fe1\u606f\uff0c\u4e3a\u8ba2\u9605\u8005\u8fd9\u662f\u8ba2\u9605\u5230\u4ee5\u540e\u5c31\u6253\u5370\u4e00\u53e5\u3002</p>"},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#53-c","title":"5.3 C++\u539f\u751f\u6570\u636e\u8bdd\u9898\u793a\u4f8b","text":""},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#531","title":"5.3.1 \u53d1\u5e03\u8005","text":"<p>\u7531\u4e8eC++\u7684\u8bed\u6cd5\u590d\u6742\u5ea6\u76f8\u8f83\u4e8ePython\u4f1a\u9ad8\u5f88\u591a\uff0c\u6240\u4ee5\u53ef\u4ee5\u591a\u591a\u53c2\u8003\u5b98\u65b9C++API\u6587\u6863</p> <p>\u4e0b\u9762\u662f\u8fd9\u6bb5\u4ee3\u7801\u7528\u5230\u7684API\uff1a</p> <p>\u521b\u5efa\u53d1\u5e03\u8005\uff1a</p> C++<pre><code>rclcpp::Node::create_publisher&lt;MgsT&gt;(   \n    const std::string &amp;     topic_name,\n    const rclcpp::QoS &amp;     qos,\n    const PublisherOptionsWithAllocator&lt; AllocatorT &gt; &amp;     options = PublisherOptionsWithAllocator&lt;AllocatorT&gt;() \n)   \n// MgsT\u662f\u53d1\u5e03\u8005\u7684\u6570\u636e\u7684\u6570\u636e\u7c7b\u578b\n</code></pre> <ul> <li> <p><code>std::string &amp; topic_name</code> \u662f\u6307\u5b57\u7b26\u4e32\u7c7b\u578b\u7684 \u8bdd\u9898\u540d\u79f0</p> <ul> <li>\u4e0d\u5141\u8bb8\u5305\u542b\u8fde\u7eed\u7684\u659c\u6760 <code>//</code> \u6216\u7a7a\u683c</li> <li>\u53ef\u4ee5\u7528<code>/</code>\u5206\u5c42\u7ea7</li> <li>\u4f8b\u5982\uff1a<code>\"/robot/camera/image\"</code></li> </ul> </li> </ul> <ul> <li> <p><code>rclcpp::QoS &amp; qos</code> \u662f\u8d28\u91cf\u670d\u52a1\u8bbe\u7f6e</p> <ul> <li>\u914d\u7f6e\u8bdd\u9898\u7684\u901a\u4fe1\u884c\u4e3a\uff0c\u5f71\u54cd\u6d88\u606f\u4f20\u9012\u7684\u53ef\u9760\u6027\u3001\u5ef6\u8fdf\u548c\u6027\u80fd</li> </ul> <ul> <li> <p>\u53c2\u6570\u9009\u62e9</p> <ul> <li><code>Qos(10)</code> \u8868\u793a\u961f\u5217\u6df1\u5ea6\u4e3a 10 \u7684\u9ed8\u8ba4 QoS\uff0c\u5373 \u5728\u6d88\u606f\u672a\u88ab\u63a5\u6536\u65f6\u6700\u591a\u7f13\u5b58 10 \u6761\u4fe1\u606f\u3002</li> <li><code>QoS(KeepLast(10))</code> \u8868\u793a\u4fdd\u7559\u6700\u540e 5 \u6761\u6d88\u606f\u7684 QoS \u7b56\u7565\u3002</li> <li><code>QoS(KeepAll())</code> \u4e0d\u4e22\u5f03\u4efb\u4f55\u6d88\u606f\uff0c\u9002\u7528\u4e8e\u9ad8\u53ef\u9760\u6027\u573a\u666f\u3002</li> <li><code>QoS(1).best_effort().volatile()</code> <ul> <li>\u961f\u5217\u6df1\u5ea6\u4e3a 1</li> <li><code>.best_effort()</code>  \u914d\u7f6e QoS \u4e3a\u5c3d\u529b\u4f20\u8f93\u6a21\u5f0f\uff08Best Effort\uff09\uff0c\u5141\u8bb8\u4e22\u5931\u6d88\u606f\uff0c\u4ee5\u964d\u4f4e\u5ef6\u8fdf\u3002</li> <li><code>.volatile()</code>\uff1a\u914d\u7f6e QoS \u4e3a\u975e\u6301\u4e45\u6a21\u5f0f\uff08Volatile\uff09\uff0c\u5982\u679c\u65b0\u7684\u8ba2\u9605\u8005\u5728\u53d1\u5e03\u5668\u5df2\u542f\u52a8\u540e\u8fde\u63a5\uff0c\u5b83\u4e0d\u4f1a\u6536\u5230\u4e4b\u524d\u7684\u5386\u53f2\u6d88\u606f\u3002</li> </ul> </li> </ul> </li> </ul> <ul> <li> <p>\u81ea\u5b9a\u4e49QoS \u914d\u7f6e</p> <ul> <li><code>c++   // \u81ea\u5b9a\u4e49QoS \u914d\u7f6e   rclcpp::QoS custom_qos(KeepLast(10), rmw_qos_profile_sensor_data);   // \u4f7f\u7528QoS\u914d\u7f6e   pub = node-&gt;create_publisher&lt;MsgT&gt;(\"chatter\", custom_qos);</code></li> </ul> <ul> <li><code>rmw_qos_profile_sensor_data</code> \u4f7f\u7528\u4e86\u4f20\u611f\u5668\u6570\u636e\u7684\u9884\u5b9a\u4e49 QoS \u914d\u7f6e\u3002</li> </ul> <ul> <li>\u961f\u5217\u6df1\u5ea6\u4e3a 10</li> </ul> </li> </ul> </li> </ul> <p>\u521b\u5efa\u5b9a\u65f6\u5668\uff1a</p> C++<pre><code>rclcpp::NOde::create_wall_timer(\n    std::chrono::duration&lt;DurationRepT, DurationT&gt;  period,\n    CallbackT                                       callback,\n    rclcpp::CallbackGroup::SharedPtr                group = nullptr\n)\n</code></pre> <ul> <li> <p><code>std::chrono::duration&lt;DurationRepT, DurationT&gt;  period</code> \u662f C++ \u6807\u51c6\u5e93\u4e2d\u7528\u4e8e\u8868\u793a\u65f6\u95f4\u95f4\u9694\u7684\u6a21\u677f\u7c7b\u578b\uff0c\u5176\u4e2d\u6a21\u677f\u53c2\u6570 <code>DurationRepT</code> \u548c <code>DurationT</code> \u51b3\u5b9a\u4e86\u65f6\u95f4\u95f4\u9694\u7684\u6570\u503c\u7c7b\u578b\u548c\u65f6\u95f4\u5355\u4f4d\u3002</p> <ul> <li> <p>\u6574\u6570\u65f6\u95f4\u95f4\u9694\uff1a</p> <ul> <li>\u5c0f\u65f6\u5355\u4f4d\uff1a<code>std::chrono::hours</code></li> <li>\u5206\u949f\u5355\u4f4d\uff1a<code>std::chrono::minutes</code></li> <li>\u79d2\u7ea7\u5355\u4f4d\uff1a<code>std::chrono::seconds</code></li> <li>\u6beb\u79d2\u7ea7\u5355\u4f4d\uff1a<code>std::chrono::milliseconds</code></li> <li>\u5fae\u79d2\u7ea7\u5355\u4f4d\uff1a<code>std::chrono::microseconds</code></li> <li>\u7eb3\u79d2\u7ea7\u5355\u4f4d\uff1a<code>std::chrono::nanoseconds</code></li> <li>\u4f8b\u5982<code>std::chrono::seconds(2)</code> \u8868\u793a 2 \u79d2\uff0c\u5176\u4ed6\u4e0e\u6b64\u76f8\u540c</li> </ul> </li> </ul> <ul> <li> <p>\u6d6e\u70b9\u6570\u65f6\u95f4\u95f4\u9694\uff1a</p> <ul> <li><code>std::chrono::duration&lt;double&gt;(0.5)</code>\u8868\u793a 0.5\u79d2</li> </ul> </li> </ul> <ul> <li> <p>\u5b57\u9762\u91cf\uff08C++14 \u5f00\u59cb\u652f\u6301\uff0c\u66f4\u65b9\u4fbf\u4e14\u63a8\u8350\uff09</p> <ul> <li><code>this-&gt;create_wall_timer(500ms, callback);</code></li> </ul> </li> </ul> <ul> <li> <p>\u6df7\u5408\u5355\u4f4d</p> <ul> <li><code>c++   auto period = 1s + 500ms; // 1.5 \u79d2   timer = this-&gt;create_wall_timer(period, callback);</code></li> </ul> </li> </ul> </li> </ul> <p>\u4ece C++14 \u5f00\u59cb\uff0c<code>std::chrono</code> \u63d0\u4f9b\u4e86\u5b57\u9762\u91cf\u540e\u7f00\u6765\u7b80\u5316\u65f6\u95f4\u5355\u4f4d\u7684\u8868\u793a\uff1a</p> \u65f6\u95f4\u5355\u4f4d \u5b57\u9762\u91cf\u540e\u7f00 \u793a\u4f8b \u5c0f\u65f6 <code>h</code> <code>1h</code> \u5206\u949f <code>min</code> <code>30min</code> \u79d2 <code>s</code> <code>2s</code> \u6beb\u79d2 <code>ms</code> <code>500ms</code> \u5fae\u79d2 <code>us</code> <code>100us</code> \u7eb3\u79d2 <code>ns</code> <code>50ns</code> <ul> <li><code>CallbackT  callback</code> \u901a\u5e38\u662f <code>std::function&lt;void()&gt;</code> \u7c7b\u578b\uff0c\u8868\u793a\u4e00\u4e2a\u65e0\u8fd4\u56de\u503c\u4e14\u65e0\u53c2\u6570\u7684\u56de\u8c03\u51fd\u6570\u3002<ul> <li>\u5b9a\u65f6\u5668\u89e6\u53d1\u65f6\uff0cROS 2 \u8c03\u7528\u6b64\u56de\u8c03\u51fd\u6570\u6267\u884c\u76f8\u5e94\u7684\u903b\u8f91\u3002</li> </ul> </li> <li><code>rclcpp::CallbackGroup::SharedPtr  group = nullptr</code> \u662f\u6307\u5411 \u56de\u8c03\u7ec4 \uff08<code>CallbackGroup</code>\uff09\u7684\u667a\u80fd\u6307\u9488\u3002\u9ed8\u8ba4\u503c\u662f <code>nullptr</code>\uff0c\u8868\u793a\u5c06\u56de\u8c03\u6dfb\u52a0\u5230\u9ed8\u8ba4\u7684\u56de\u8c03\u7ec4\u3002<ul> <li>\u56de\u8c03\u7ec4 \u662f ROS 2 \u4e2d\u7528\u4e8e\u7ec4\u7ec7\u548c\u7ba1\u7406\u56de\u8c03\u4efb\u52a1\u7684\u6982\u5ff5\uff0c\u4e3b\u8981\u7528\u4e8e\u5e76\u53d1\u63a7\u5236\u548c\u7ebf\u7a0b\u5b89\u5168\u7ba1\u7406\u3002</li> <li>\u5f53\u4e00\u4e2a\u8282\u70b9\u6709\u591a\u4e2a\u56de\u8c03\u4efb\u52a1\uff08\u4f8b\u5982\u5b9a\u65f6\u5668\u3001\u8ba2\u9605\u8005\u3001\u670d\u52a1\uff09\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u4e0d\u540c\u7684\u56de\u8c03\u7ec4\u6765\u5206\u79bb\u4efb\u52a1\uff0c\u907f\u514d\u7ade\u4e89\u3002</li> </ul> </li> </ul> <p>\u53d1\u5e03\u8005\u6e90\u7801</p> <p><code>src</code>\u76ee\u5f55\u4e0b\u65b0\u5efa\u6587\u4ef6<code>publish_cpp.cpp</code></p> C++<pre><code>#include \"rclcpp/rclcpp.hpp\"\n#include \"std_msgs/msg/string.hpp\"\n\nusing namespace std::chrono_literals;\n\n\nclass MiniPublisher : public rclcpp::Node\n{\n\npublic:\n    // \u521b\u5efa\u6784\u9020\u51fd\u6570\uff0c\u7c7b\u5b9a\u4e49\u65f6\u81ea\u52a8\u8c03\u7528\n    // \u8fd9\u91cc\u7684\u90a3\u4e48\u4e3a\uff1aMiniPublisher\u4f20\u5165\u7684name\u548cNode\u7684name\u4e3a\u540c\u4e00\u4e2a\u503c\n    MiniPublisher(std::string name): Node(name)\n    {\n        RCLCPP_INFO(this-&gt;get_logger(), \"\u8282\u70b9\u7684\u540d\u79f0\u4e3a:%s.\",name.c_str());\n        // \u521b\u5efa\u53d1\u5e03\u8005\uff0c\u8bdd\u9898\u4e3a\"TopicTest\"\uff0c\u53d1\u5e03 std_msgs::msg::String \u6570\u636e\u7c7b\u578b\uff0c \u6d88\u606f\u6df1\u5ea6\u4e3a10\n        publisher_cpp = this-&gt;create_publisher&lt;std_msgs::msg::String&gt;(\"TopicTest\", 10);\n        timer = this-&gt;create_wall_timer(500ms, std::bind(&amp;MiniPublisher::callback, this));\n\n    }\n\n\nprivate:\n    void callback(void)\n    {\n        // \u521b\u5efa\u53d1\u5e03\u7684\u6570\u636e\n        auto msg = std_msgs::msg::String();\n        msg.data = \"\u8fd9\u662f\u4e00\u4e2aC++\u53d1\u5e03\u8005\u4fe1\u606f\" + std::to_string(count++);\n        RCLCPP_INFO(this-&gt;get_logger(), \"%s\", msg.data.c_str());\n        publisher_cpp-&gt;publish(msg);\n    }\n    // \u5b9a\u4e49\u4f7f\u7528\u5230\u7684\u53d8\u91cf\n    int count=0;\n    // \u58f0\u540d\u5b9a\u65f6\u5668\u6307\u9488\n    rclcpp::TimerBase::SharedPtr timer;\n    // \u58f0\u660e\u8bdd\u9898\u53d1\u5e03\u8005\u6307\u9488\n    rclcpp::Publisher&lt;std_msgs::msg::String&gt;::SharedPtr publisher_cpp;\n};\n\n\nint main(int argc, char * argv[])\n{\n    rclcpp::init(argc, argv);\n    auto node = std::make_shared&lt;MiniPublisher&gt;(\"publisher_cpp_node\");\n    rclcpp::spin(node);\n    rclcpp::shutdown();\n    return 0;\n}\n</code></pre>"},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#532","title":"5.3.2 \u8ba2\u9605\u8005","text":"<p>\u8ba2\u9605\u8005API</p> C++<pre><code>rclcpp::Node::create_subscription(\n    const std::string &amp; topic_name,              // \u8981\u8ba2\u9605\u7684\u8bdd\u9898\u540d\u79f0\n    const rclcpp::QoS &amp; qos,                     // QoS \u8bbe\u7f6e\uff08\u670d\u52a1\u8d28\u91cf\uff09\n    CallbackT &amp;&amp; callback,                       // \u63a5\u6536\u5230\u6d88\u606f\u65f6\u7684\u56de\u8c03\u51fd\u6570\n    const SubscriptionOptionsWithAllocator&lt;AllocatorT&gt; &amp; options = SubscriptionOptionsWithAllocator&lt;AllocatorT&gt;(), // \u53ef\u9009\u7684\u8ba2\u9605\u9009\u9879\n    typename MessageMemoryStrategyT::SharedPtr msg_mem_strat = MessageMemoryStrategyT::create_default() \n    // \u53ef\u9009\u7684\u6d88\u606f\u5185\u5b58\u7ba1\u7406\u7b56\u7565\n)\n</code></pre> <ul> <li><code>const std::string &amp; topic_name</code>\uff1a<ul> <li>\u8fd9\u662f\u8ba2\u9605\u7684 \u8bdd\u9898\u540d\u79f0</li> </ul> </li> </ul> <ul> <li><code>const rclcpp::QoS &amp; qos</code>\uff1a<ul> <li>\u8fd9\u662f\u5b9a\u4e49 \u670d\u52a1\u8d28\u91cf\uff08QoS\uff09 \u7684\u8bbe\u7f6e\u3002</li> </ul> </li> </ul> <ul> <li><code>CallbackT &amp;&amp; callback</code>\uff1a<ul> <li>\u4f20\u5165\u4e00\u4e2a \u56de\u8c03\u51fd\u6570\uff0c\u4f7f\u7528<code>std::bind</code> \u7ed1\u5b9a\u8be5\u56de\u8c03\u51fd\u6570\uff0c\u5982 <code>std::bind(&amp;MiniSubscriber::callback, this, std::placeholders::_1))</code> <ul> <li><code>&amp;MiniSubscriber::callback</code> \u4e3a\u56de\u8c03\u51fd\u6570</li> <li><code>this</code> \u5bf9\u8c61\uff0c\u7528this\u6307\u9488\u6307\u5411\u672c\u8eab</li> <li><code>std::placeholders::_1</code> , \u5360\u4f4d\u7b26\uff0c\u8868\u793a <code>callback</code> \u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f1a\u5728\u5b9e\u9645\u8c03\u7528\u65f6\u7531 <code>create_subscription</code> \u63d0\u4f9b\u7684\u53c2\u6570\u66ff\u6362\u3002</li> </ul> </li> <li>\u56de\u8c03\u51fd\u6570\u63a5\u53d7\u8bdd\u9898\u53d1\u5e03\u7684\u6d88\u606f\uff0c\u6d88\u606f\u7c7b\u578b\u4e0e\u53d1\u5e03\u8005\u4e00\u81f4\u3002</li> </ul> </li> </ul> <p>\u8ba2\u9605\u8005\u6e90\u7801</p> <p>\u5728<code>src</code>\u76ee\u5f55\u4e0b\u65b0\u5efa\u6587\u4ef6<code>subscribe_cpp.cpp</code></p> C++<pre><code>#include \"rclcpp/rclcpp.hpp\"\n#include \"std_msgs/msg/string.hpp\"\n\nclass MiniSubscriber : public rclcpp::Node\n{\npublic:\n    MiniSubscriber(std::string name) : Node(name)\n    {\n        // \u521b\u5efa\u8ba2\u9605\u8005\n        subscription = this-&gt;create_subscription&lt;std_msgs::msg::String&gt;(\n            \"TopicTest\",\n            10,\n            std::bind(&amp;MiniSubscriber::callback, this, std::placeholders::_1));\n    }\n\nprivate:\n    void callback(const std_msgs::msg::String &amp; msg) const\n    {\n        // \u8f93\u51fa\u8ba2\u9605\u8bdd\u9898\u7684\u4fe1\u606f\n        RCLCPP_INFO(this-&gt;get_logger(), \"\u8ba2\u9605\u7684\u6d88\u606f:'%s'\", msg.data.c_str());\n    }\n    rclcpp::Subscription&lt;std_msgs::msg::String&gt;::SharedPtr subscription;\n};\n\nint main(int argc, char * argv[])\n{\n    rclcpp::init(argc, argv);\n    auto node = std::make_shared&lt;MiniSubscriber&gt;(\"subscriber_cpp_node\");\n    rclcpp::spin(node);\n    rclcpp::shutdown();\n    return 0;\n}\n</code></pre>"},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#533","title":"5.3.3 \u7f16\u8bd1\u8fd0\u884c","text":"<p>\u5728<code>CMakeLists.txt</code> \u6700\u540e\u4e00\u884c\u6dfb\u52a0\u7f16\u8bd1\u4fe1\u606f</p> <ul> <li><code>publisher_cpp</code> \u548c <code>subscriber_cpp</code> \u5747\u662fPython\u4e2d\u4e00\u6837\u7684 \u6620\u5c04\u540d\u79f0</li> <li>\u4fdd\u6301\u4e09\u90e8\u5206\u5747\u662f\u4e00\u6837\u7684 \u6620\u5c04\u540d\u79f0</li> </ul> CMake<pre><code># \u6dfb\u52a0\u53ef\u6267\u884c\u6587\u4ef6\nadd_executable(publisher_cpp src/publish_cpp.cpp)\nadd_executable(subscriber_cpp src/subscribe_cpp.cpp)\n# \u6dfb\u52a0\u76ee\u6807\u4f9d\u8d56\nament_target_dependencies(\n  publisher_cpp\n  \"rclcpp\"\n  \"std_msgs\"\n)\nament_target_dependencies(\n  subscriber_cpp\n  \"rclcpp\"\n  \"std_msgs\"\n)\n\ninstall(TARGETS\n  publisher_cpp\n  subscriber_cpp\n  DESTINATION lib/${PROJECT_NAME}\n)\n</code></pre> <p>\u7f16\u8bd1</p> Bash<pre><code>colcon build --packages-select cpp_topic\nsource install/setup.bash\n</code></pre> <p>\u6253\u5f00\u7b2c\u4e00\u4e2a\u7ec8\u7aef\uff0c\u8fd0\u884c\u53d1\u5e03\u8005</p> Bash<pre><code>ros2 run cpp_topic publisher_cpp\n</code></pre> <p>\u6253\u5f00\u7b2c\u4e8c\u4e2a\u7ec8\u7aef\uff0c\u8fd0\u884c\u8ba2\u9605\u8005</p> Bash<pre><code>source install/setup.bash\nros2 run cpp_topic subscriber_cpp\n</code></pre> <p></p>"},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#54","title":"5.4 \u8bdd\u9898\u81ea\u5b9a\u4e49\u6d88\u606f\u63a5\u53e3\u5b9e\u8df5","text":""},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#541","title":"5.4.1 \u6848\u4f8b\u9700\u6c42","text":"<ul> <li> \u53d1\u5e03\u8005\uff0c\u53d1\u5e03\u7cfb\u7edf\u72b6\u6001\u4fe1\u606f\uff0cPython\u5177\u5907\u4e30\u5bcc\u7684\u7b2c\u4e09\u65b9\u5e93\uff0c\u6545\u91c7\u7528Python\u7f16\u5199\u53d1\u5e03\u8005\u3002</li> <li> \u8ba2\u9605\u8005\uff0c\u63a5\u6536\u8bdd\u9898\u4fe1\u606f\uff0c\u5e76\u901a\u8fc7QT\u663e\u793a\uff0c\u6b64\u4efb\u52a1C++\u53ef\u4ee5\u5b8c\u7f8e\u80dc\u4efb\u3002</li> </ul>"},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#542","title":"5.4.2 \u6848\u4f8b\u5206\u6790","text":"<ul> <li>\u521b\u5efa\u81ea\u5b9a\u4e49\u6d88\u606f\u63a5\u53e3</li> <li>\u521b\u5efa\u53d1\u5e03\u8005</li> <li>\u521b\u5efa\u8ba2\u9605\u8005</li> <li>\u9009\u62e9\u6d88\u606f\u8f7d\u4f53\uff08\u81ea\u5b9a\u4e49\u6570\u636e\u578b\uff09</li> <li>\u521b\u5efa\u5b9a\u65f6\u5668\uff0c\u4ee5\u4e00\u5b9a\u9891\u7387\u53d1\u9001\u6d88\u606f</li> </ul>"},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#543","title":"5.4.3 \u81ea\u5b9a\u4e49\u6d88\u606f\u63a5\u53e3","text":"<p>\u8bf7\u63d0\u524d\u9605\u8bfb\uff1a\u7279\u522b\u7bc7 \u81ea\u5b9a\u4e49\u63a5\u53e3\u6570\u636e - \u5c0f\u674e \u7684\u77e5\u8bc6\u5e93\uff0c\u6709\u81ea\u5b9a\u4e49\u63a5\u53e3\u6587\u4ef6\u7684\u57fa\u7840\u8bb2\u89e3\u3002</p> <p>\u521b\u5efa<code>status_interfaces</code>\u5b58\u653e\u81ea\u5b9a\u4e49\u6d88\u606f\u63a5\u53e3\uff0c<code>rosidl_default_generators</code>\u7528\u4e8e\u5c06\u81ea\u5b9a\u4e49\u6d88\u606f\u63a5\u53e3\u8f6c\u5316\u4e3a C++\u3001Python \u6e90\u7801\u7684\u6a21\u5757\u3002<code>builtin_interfaces</code>\u662f ROS2 \u5df2\u6709\u7684\u6d88\u606f\u63a5\u53e3\u529f\u80fd\u5305\uff0c\u53ef\u4ee5\u4f7f\u7528\u5176\u65f6\u95f4\u63a5\u53e3 Time \uff0c\u8868\u793a\u8bb0\u5f55\u4fe1\u606f\u7684\u65f6\u95f4\u3002</p> Bash<pre><code>ros2 pkg create status_interfaces --build-type ament_cmake --dependencies rosidl_default_generators builtin_interfaces --license Apache-2.0\n</code></pre> <p>\u65b0\u5efa<code>msg</code>\u6587\u4ef6\u5939\uff0c\u521b\u5efa\u63a5\u53e3\u6587\u4ef6\uff0c\u4f7f\u7528\u5927\u9a7c\u5cf0\u547d\u540d\uff0c\u76ee\u5f55\u5982\u4e0b\uff1a</p> <p></p> <p><code>SystemStatus.msg</code>\u6587\u4ef6\u5185\u5bb9\uff1a</p> Text Only<pre><code>builtin_interfaces/Time stamp   # \u65f6\u95f4\u6233\nstring host_name                # \u7cfb\u7edf\u540d\u79f0\nfloat32 cpu_percent             # CPU\u4f7f\u7528\u7387\nfloat32 memory_percent          # \u5185\u5b58\u4f7f\u7528\u7387\nfloat32 memory_total            # \u5185\u5b58\u603b\u91cf\nfloat32 memory_available        # \u5269\u4f59\u6709\u6548\u5185\u5b58\nfloat64 net_send                # \u7f51\u7edc\u53d1\u9001\u6570\u636e\u91cf\nfloat64 net_receive             # \u7f51\u7edc\u63a5\u6536\u6570\u636e\u91cf\n</code></pre> <p>\u4fee\u6539<code>CMakeLists.txt</code>\uff0c\u6ce8\u518c\u6d88\u606f\u63a5\u53e3\uff1a</p> CMake<pre><code># find dependencies\nfind_package(ament_cmake REQUIRED)\nfind_package(rosidl_default_generators REQUIRED)\nfind_package(builtin_interfaces REQUIRED)\n\n# \u6ce8\u518c\u6d88\u606f\u63a5\u53e3\nrosidl_generate_interfaces(\n  ${PROJECT_NAME}\n  \"msg/SystemStatus.msg\"\n  DEPENDENCIES builtin_interfaces \n)\n</code></pre> <p>\u5728<code>package.xml</code>\u6587\u4ef6\u6dfb\u52a0\u914d\u7f6e\uff0c\u58f0\u660e\u8be5\u529f\u80fd\u5305\u4e3a\u6d88\u606f\u63a5\u53e3\u3002</p> XML<pre><code>&lt;license&gt;Apache-2.0&lt;/license&gt;\n&lt;member_of_group&gt;rosidl_interface_packages&lt;/member_of_group&gt;\n&lt;buildtool_depend&gt;ament_cmake&lt;/buildtool_depend&gt;\n</code></pre> <p>\u7f16\u8bd1\u6784\u5efa\u540e\uff0c\u67e5\u770b\u63a5\u53e3\uff1a</p> Bash<pre><code>colcon build --packages-select status_interfaces\nsource install/setup.bash\n</code></pre> Bash<pre><code>ros2 interface show status_interfaces/msg/SystemStatus\n</code></pre> <p></p>"},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#544","title":"5.4.4 \u529f\u80fd\u5305\u51c6\u5907","text":"<p>\u53d1\u5e03\u8005\u529f\u80fd\u5305</p> Bash<pre><code>ros2 pkg create status_publisher --build-type ament_python --dependencies rclpy status_interfaces --license Apache-2.0\n</code></pre> <p>\u8ba2\u9605\u8005\u529f\u80fd\u5305</p> Bash<pre><code>ros2 pkg create status_subscriber --build-type ament_cmake --dependencies rclcpp status_interfaces --license Apache-2.0\n</code></pre>"},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#55-python","title":"5.5 Python\u81ea\u5b9a\u4e49\u63a5\u53e3\u793a\u4f8b","text":""},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#551","title":"5.5.1 \u53d1\u5e03\u8005","text":"<p>\u65b0\u5efaPython\u6587\u4ef6<code>sys_status_pub.py</code></p> Python<pre><code>import rclpy\nfrom rclpy.node import Node\nfrom status_interfaces.msg import SystemStatus\n# \u52a8\u6001\u76d1\u63a7\u7cfb\u7edf\u8d44\u6e90\uff0c\u5982CPU\u3001\u5185\u5b58\u4f7f\u7528\u7b49\nimport psutil\n# \u9759\u6001\u83b7\u53d6\u7cfb\u7edf\u57fa\u672c\u4fe1\u606f\uff0c\u5982\u64cd\u4f5c\u7cfb\u7edf\u4fe1\u606f\u3001\u786c\u4ef6\u67b6\u6784\u7b49\nimport platform\n\n\nclass SysStatusPub(Node):\n    def __init__(self, name):\n        super().__init__(name)\n        self.get_logger().info(f\"\u8bdd\u9898\u540d\u79f0:{name}\")\n        self.publisher_ = self.create_publisher(SystemStatus, name, 10)\n        self.timer_ = self.create_timer(1, self.timer_callback)\n\n    def timer_callback(self):\n        \"\"\"\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570\"\"\"\n        msg = SystemStatus()\n        msg.stamp = self.get_clock().now().to_msg()\n        msg.host_name = platform.node()\n        msg.cpu_percent = psutil.cpu_percent()\n        msg.memory_percent = psutil.virtual_memory().percent\n        # \u5185\u5b58\u7684\u9ed8\u8ba4\u5355\u4f4d\u5747\u662f\u5b57\u8282\uff0c\u9664\u4e24\u4e2a1024\u5355\u4f4d\u5c31\u53d8\u6210MB\u4e86\n        msg.memory_total = psutil.virtual_memory().total / 1024 / 1024\n        msg.memory_available = psutil.virtual_memory().available / 1024 / 1024\n        msg.net_send = psutil.net_io_counters().bytes_sent / 1024 / 1024\n        msg.net_receive = psutil.net_io_counters().bytes_recv / 1024 / 1024\n        self.get_logger().info(f'\u53d1\u5e03{str(msg)}')\n        self.publisher_.publish(msg)\n\n\ndef main(args=None):\n\n    rclpy.init(args=args)\n    node = SysStatusPub(\"sys_status\")\n    rclpy.spin(node)\n    rclpy.shutdown()\n</code></pre>"},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#552","title":"5.5.2 \u7f16\u8bd1\u8fd0\u884c","text":"<p>\u5728<code>setup.py</code> \u6dfb\u52a0\u7f16\u8bd1\u4fe1\u606f</p> Python<pre><code>entry_points={\n        'console_scripts': [\n            \"sys_status_pub = status_publisher.sys_status_pub:main\"\n        ],\n    },\n</code></pre> <p>\u7f16\u8bd1</p> Bash<pre><code>colcon build --packages-select status_publisher\nsource install/setup.bash\n</code></pre> <p>\u6253\u5f00\u7b2c\u4e00\u4e2a\u7ec8\u7aef\uff0c\u8fd0\u884c\u53d1\u5e03\u8005</p> Bash<pre><code>ros2 run status_publisher sys_status_pub\n</code></pre>"},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#56-c","title":"5.6 C++\u81ea\u5b9a\u4e49\u63a5\u53e3\u793a\u4f8b","text":""},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#561-qt","title":"5.6.1 QT\u6d4b\u8bd5\u7a0b\u5e8f","text":"<p>\u65b0\u5efa\u6587\u4ef6<code>qt_test.cpp</code></p> C++<pre><code>// QT\u5934\u6587\u4ef6\n#include &lt;QApplication&gt;\n#include &lt;QLabel&gt;\n#include &lt;QString&gt;\n\nint main(int argc, char* argv[])\n{\n    QApplication app(argc, argv);\n    QLabel* label = new QLabel();\n    QString message = QString::fromStdString(\"Hello Qt\");\n    label-&gt;setText(message);\n    label-&gt;show();\n\n    app.exec();\n    return 0;\n}\n</code></pre> <p>\u5728<code>CMakeLists.txt</code>\u6587\u4ef6\u6dfb\u52a0QT\u914d\u7f6e\u4fe1\u606f</p> CMake<pre><code># find qt\nfind_package(Qt5 REQUIRED COMPONENTS Widgets)\nadd_executable(qt_test src/qt_test.cpp)\n# \u975eROS\u5e93\uff0c\u4f7f\u7528target_link_libraries\u94fe\u63a5\ntarget_link_libraries(qt_test Qt5::Widgets)\ninstall(TARGETS\n  qt_test\n  DESTINATION lib/${PROJECT_NAME})\n</code></pre> <p>\u7f16\u8bd1</p> Bash<pre><code>colcon build --packages-select status_subscriber\nsource install/setup.bash\n</code></pre> <p>\u8fd0\u884c</p> Bash<pre><code>ros2 run status_subscriber qt_test\n</code></pre>"},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#562","title":"5.6.2 \u8ba2\u9605\u8005","text":"<p>\u65b0\u5efa\u6587\u4ef6<code>sys_status_sub.cpp</code></p> C++<pre><code>#include \"rclcpp/rclcpp.hpp\"\n// \u6ce8\u610f\u5934\u6587\u4ef6\u7684\u683c\u5f0f\uff0c\u81ea\u5b9a\u4e49\u63a5\u53e3\u76ee\u5f55\uff1ainstall/status_interfaces/include\n#include \"status_interfaces/msg/system_status.hpp\"\n// QT\u5934\u6587\u4ef6\n#include &lt;QApplication&gt;\n#include &lt;QLabel&gt;\n#include &lt;QString&gt;\n\n// \u81ea\u5b9a\u4e49\u63a5\u53e3\u7684\u547d\u540d\u7a7a\u95f4\nusing SystemStatus =  status_interfaces::msg::SystemStatus;\n\nclass SysStatusSub : public rclcpp::Node\n{\npublic:\n    /* \u6784\u9020\u51fd\u6570 */\n    SysStatusSub(std::string name) : Node(name)\n    {\n        // \u521b\u5efa\u53d1\u5e03\u8005\n        subscriber_ = this-&gt;create_subscription&lt;SystemStatus&gt;(\n            name, \n            10,\n            std::bind(&amp;SysStatusSub::sub_callback, this, std::placeholders::_1));\n        // \u521b\u5efa\u4e00\u4e2a\u7a7a\u7684 SystemStatus \u5bf9\u8c61\uff0c\u8f6c\u5316\u6210 QString \u8fdb\u884c\u663e\u793a\n        label_ = new QLabel(get_qstr_from_msg(std::make_shared&lt;SystemStatus&gt;()));\n        label_-&gt;show();\n    }\n\n    /* \u663e\u793aQString\u6587\u672c */\n    QString get_qstr_from_msg(SystemStatus::SharedPtr  msg) {\n        std::stringstream show_str;\n        show_str\n            &lt;&lt; \"===========\u7cfb\u7edf\u72b6\u6001\u53ef\u89c6\u5316\u663e\u793a\u5de5\u5177============\\n\"\n            &lt;&lt; \"\u6570 \u636e \u65f6 \u95f4:\\t\" &lt;&lt; msg-&gt;stamp.sec &lt;&lt; \"\\ts\\n\"\n            &lt;&lt; \"\u7528  \u6237  \u540d:\\t\" &lt;&lt; msg-&gt;host_name &lt;&lt; \"\\t\\n\"\n            &lt;&lt; \"CPU\u4f7f\u7528\u7387:\\t\" &lt;&lt; msg-&gt;cpu_percent &lt;&lt; \"\\t%\\n\"\n            &lt;&lt; \"\u5185\u5b58\u4f7f\u7528\u7387:\\t\" &lt;&lt; msg-&gt;memory_percent &lt;&lt; \"\\t%\\n\"\n            &lt;&lt; \"\u5185\u5b58\u603b\u5927\u5c0f:\\t\" &lt;&lt; msg-&gt;memory_total &lt;&lt; \"\\tMB\\n\"\n            &lt;&lt; \"\u5269\u4f59\u6709\u6548\u5185\u5b58:\\t\" &lt;&lt; msg-&gt;memory_available &lt;&lt; \"\\tMB\\n\"\n            &lt;&lt; \"\u7f51\u7edc\u53d1\u9001\u91cf:\\t\" &lt;&lt; msg-&gt;net_receive &lt;&lt; \"\\tMB\\n\"\n            &lt;&lt; \"\u7f51\u7edc\u63a5\u6536\u91cf:\\t\" &lt;&lt; msg-&gt;net_send&lt;&lt; \"\\tMB\\n\"\n            &lt;&lt; \"==========================================\";\n\n        return QString::fromStdString(show_str.str());\n    }\nprivate:\n    /* \u8ba2\u9605\u56de\u8c03\u51fd\u6570 */\n    void sub_callback(const SystemStatus::SharedPtr msg) \n    {\n        label_-&gt;setText(get_qstr_from_msg(msg));\n    }\n    /* \u6307\u9488 */\n    rclcpp::Subscription&lt;SystemStatus&gt;::SharedPtr subscriber_;\n    QLabel* label_;\n};\n\nint main(int argc, char* argv[])\n{\n    rclcpp::init(argc, argv);\n    QApplication app(argc, argv);\n    auto node = std::make_shared&lt;SysStatusSub&gt;(\"sys_status\");\n    // \u4f7f\u7528lamda\u8868\u8fbe\u5f0f\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u5355\u72ec\u6267\u884cROS2\u8282\u70b9\n    std::thread spin_thread([&amp;]() -&gt; void { rclcpp::spin(node); });\n    spin_thread.detach();\n    app.exec();\n    rclcpp::shutdown();\n    return 0;\n}\n</code></pre>"},{"location":"study/ROS2/5-%E8%AF%9D%E9%A2%98%E9%80%9A%E4%BF%A1/#563","title":"5.6.3 \u7f16\u8bd1\u8fd0\u884c","text":"<p>\u5728<code>CMakeLists.txt</code>\u6587\u4ef6\u6dfb\u52a0\u914d\u7f6e\u4fe1\u606f</p> CMake<pre><code>add_executable(sys_status_sub src/sys_status_sub.cpp)\ntarget_link_libraries(sys_status_sub Qt5::Widgets)\n\nament_target_dependencies(\n  sys_status_sub\n  \"status_interfaces\"\n  \"rclcpp\"\n)\n\ninstall(TARGETS\n  sys_status_sub\n  qt_test\n  DESTINATION lib/${PROJECT_NAME})\n</code></pre> <p>\u7f16\u8bd1</p> Bash<pre><code>colcon build --packages-select status_subscriber\nsource install/setup.bash\n</code></pre> <p>\u8fd0\u884c\u8ba2\u9605\u8005</p> Bash<pre><code>ros2 run status_subscriber sys_status_sub\n</code></pre> <p></p> <p>\u8fd0\u884c\u53d1\u5e03\u8005</p> Bash<pre><code>ros2 run status_publisher sys_status_pub\n</code></pre> <p></p> <p>\u8ba2\u9605\u8005\u66f4\u65b0</p> <p></p>"},{"location":"study/ROS2/6-%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/","title":"\u7b2c\u516d\u7ae0 \u670d\u52a1\u901a\u4fe1","text":""},{"location":"study/ROS2/6-%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/#61","title":"6.1 \u670d\u52a1\u901a\u4fe1","text":""},{"location":"study/ROS2/6-%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/#611","title":"6.1.1 \u670d\u52a1\u901a\u4fe1\u4ecb\u7ecd","text":"<p>\u670d\u52a1\u901a\u4fe1\u662f\u4ee5\u8bf7\u6c42\u54cd\u5e94\u7684\u65b9\u5f0f\u5b9e\u73b0\u4e0d\u540c\u8282\u70b9\u4e4b\u95f4\u6570\u636e\u4f20\u8f93\u7684\u901a\u4fe1\u6a21\u5f0f\u3002\u53d1\u9001\u8bf7\u6c42\u6570\u636e\u7684\u5bf9\u8c61\u79f0\u4e3a\u5ba2\u6237\u7aef\uff0c\u63a5\u6536\u8bf7\u6c42\u5e76\u53d1\u9001\u54cd\u5e94\u7684\u5bf9\u8c61\u79f0\u4e4b\u4e3a\u670d\u52a1\u7aef\uff0c\u540c\u8bdd\u9898\u901a\u4fe1\u4e00\u6837\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u4e5f\u901a\u8fc7\u8bdd\u9898\u76f8\u5173\u8054\uff0c\u4e0d\u540c\u7684\u662f\u670d\u52a1\u901a\u4fe1\u7684\u6570\u636e\u4f20\u8f93\u662f\u53cc\u5411\u4ea4\u4e92\u5f0f\u7684\u3002</p> <p></p> <p>\u670d\u52a1\u901a\u4fe1\u4e2d\uff0c\u670d\u52a1\u7aef\u4e0e\u5ba2\u6237\u7aef\u53ef\u4ee5\u662f\u4e00\u5bf9\u591a\u7684\u5173\u7cfb\uff0c\u5373\u540c\u4e00\u670d\u52a1\u8bdd\u9898\u4e0b\uff0c\u5b58\u5728\u591a\u4e2a\u5ba2\u6237\u7aef\uff0c\u6bcf\u4e2a\u5ba2\u6237\u7aef\u90fd\u53ef\u4ee5\u5411\u670d\u52a1\u7aef\u53d1\u9001\u8bf7\u6c42\u3002</p> <p></p>"},{"location":"study/ROS2/6-%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/#612","title":"6.1.2 \u670d\u52a1\u901a\u4fe1\u6307\u4ee4","text":"<p>\u4f7f\u7528<code>ros2 service --help</code>\u53ef\u4ee5\u67e5\u770b ROS2 \u4e0e\u670d\u52a1\u6709\u5173\u7684\u547d\u4ee4\u884c\u6307\u4ee4\uff0c\u6211\u4eec\u540e\u9762\u4f1a\u7ecf\u5e38\u7528\u5230\u3002</p> <p></p> <p>\u2460 \u6253\u5f00\u4e00\u4e2a\u5c0f\u6d77\u9f9f\u6a21\u62df\u5668\u7a97\u53e3</p> Bash<pre><code>ros2 run turtlesim turtlesim_node\n</code></pre> <p></p> <p>\u2461 \u67e5\u8be2\u5c0f\u6d77\u9f9f\u4f7f\u7528\u7684\u670d\u52a1</p> Bash<pre><code>ros2 service list\n</code></pre> <p></p> <p>\u4f7f\u7528<code>ros2 service list --help</code>\u53ef\u4ee5\u8fdb\u4e00\u6b65\u67e5\u8be2\u53ef\u4ee5\u53c2\u6570\u6307\u4ee4</p> <p></p> Bash<pre><code>ros2 service list -t\n</code></pre> <p></p> <p>\u2462 \u67e5\u770b\u670d\u52a1\u7684\u6d88\u606f\u63a5\u53e3</p> Bash<pre><code>ros2 interface show turtlesim/srv/Spawn\n</code></pre> <p></p> <p>Danger</p> <p>\u670d\u52a1\u7684\u6d88\u606f\u63a5\u53e3\u4e0e\u8bdd\u9898\u4e0d\u540c\uff0c\u4e00\u4e2a\u8bf7\u6c42\u548c\u4e00\u4e2a\u54cd\u5e94\u4e24\u90e8\u5206\u7ec4\u6210\uff0c\u5728\u7279\u522b\u7bc7\u6211\u4eec\u8bb2\u8fc7\u3002</p> <p>\u2463 \u4f7f\u7528\u670d\u52a1\u521b\u5efa\u4e00\u53ea\u5c0f\u4e4c\u9f9f</p> <p><code>call</code>\u6307\u4ee4\u7684\u4f7f\u7528\uff0c\u81ea\u884c\u4f7f\u7528<code>--help</code>\u67e5\u770b\u3002</p> Bash<pre><code>ros2 service call /spawn turtlesim/srv/Spawn '{x: 1, y: 2, theta: 1.5}'\n</code></pre> <p></p> <p>\u2464 rqt\u4f7f\u7528</p> Bash<pre><code>rqt\n</code></pre> <p>rqt\u53ef\u89c6\u5316\u914d\u7f6e\u670d\u52a1</p> <p></p> <p></p>"},{"location":"study/ROS2/6-%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/#62-python","title":"6.2 Python\u81ea\u5b9a\u4e49\u670d\u52a1\u6d88\u606f\u63a5\u53e3","text":""},{"location":"study/ROS2/6-%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/#621","title":"6.2.1 \u6848\u4f8b\u9700\u6c42","text":"<ul> <li> \u670d\u52a1\u7aef\uff0c\u8fdb\u884c\u4eba\u8138\u8bc6\u522b\u3002</li> <li> \u5ba2\u6237\u7aef\uff0c\u53d1\u9001\u8bf7\u6c42\uff0c\u5e26\u6709\u56fe\u7247\u4fe1\u606f\u3002</li> </ul>"},{"location":"study/ROS2/6-%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/#622","title":"6.2.2 \u81ea\u5b9a\u4e49\u6d88\u606f\u63a5\u53e3","text":"<p>\u6dfb\u52a0<code>sensor_msgs</code>\u4f9d\u8d56\uff0c\u6b64\u63a5\u53e3\u6709\u56fe\u50cf\u6570\u636e\u63a5\u53e3\uff0c\u4ee5\u53ca\u5fc5\u987b\u7684<code>rosidl_default_generators</code>\u4f9d\u8d56\u3002</p> Bash<pre><code>ros2 pkg create detect_interfaces --build-type ament_cmake --dependencies rosidl_default_generators sensor_msgs --license Apache-2.0\n</code></pre> <p>\u4fee\u6539<code>CMakeLists.txt</code>\uff0c\u6ce8\u518c\u6d88\u606f\u63a5\u53e3\uff1a</p> CMake<pre><code># \u6ce8\u518c\u6d88\u606f\u63a5\u53e3\nrosidl_generate_interfaces(\n  ${PROJECT_NAME}\n  \"srv/FaceDetect.srv\"\n  DEPENDENCIES sensor_msgs \n)\n</code></pre> <p>\u5728<code>package.xml</code>\u6587\u4ef6\u6dfb\u52a0\u914d\u7f6e\uff0c\u58f0\u660e\u8be5\u529f\u80fd\u5305\u4e3a\u6d88\u606f\u63a5\u53e3\u3002</p> XML<pre><code>&lt;license&gt;Apache-2.0&lt;/license&gt;\n&lt;member_of_group&gt;rosidl_interface_packages&lt;/member_of_group&gt;\n&lt;buildtool_depend&gt;ament_cmake&lt;/buildtool_depend&gt;\n</code></pre> <p>\u7f16\u8bd1\u6784\u5efa\u540e\uff0c\u67e5\u770b\u63a5\u53e3\uff1a</p> Bash<pre><code>colcon build --packages-select detect_interfaces\nsource install/setup.bash\n</code></pre> <p>\u67e5\u770b</p> Bash<pre><code>ros2 interface show detect_interfaces/srv/FaceDetect\n</code></pre>"},{"location":"study/ROS2/6-%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/#623","title":"6.2.3 \u529f\u80fd\u5305\u51c6\u5907","text":"<p>\u5b89\u88c5python\u7684\u4eba\u8138\u8bc6\u522b\u5e93</p> Bash<pre><code>pip3 install face_recognition -i https://pypi.tuna.tsinghua.edu.cn/simple\n</code></pre> <p>\u521b\u5efa<code>Python</code>\u529f\u80fd\u5305</p> Bash<pre><code>ros2 pkg create detect_service_py --build-type ament_python --dependencies rclpy detect_interfaces --license Apache-2.0\n</code></pre> <p>\u627e\u4e00\u5f20\u4eba\u8138\u68c0\u6d4b\u7684\u7167\u7247\uff0c\u653e\u5728\u529f\u80fd\u5305\u7684<code>resource</code>\u76ee\u5f55\u4e0b\uff0c\u5e76\u5728<code>setup.py</code>\u4e2d\u6dfb\u52a0\u914d\u7f6e\u4fe1\u606f\u3002</p> Python<pre><code>data_files=[\n    ('share/ament_index/resource_index/packages',\n    ['resource/' + package_name]),\n    ('share/' + package_name, ['package.xml']),\n    ('share/' + package_name + \"/resource\", ['resource/pic1.jpg', 'resource/pic2.jpg'])\n],\n</code></pre>"},{"location":"study/ROS2/6-%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/#63-python","title":"6.3 Python\u81ea\u5b9a\u4e49\u63a5\u53e3\u793a\u4f8b","text":""},{"location":"study/ROS2/6-%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/#631","title":"6.3.1 \u4eba\u8138\u68c0\u6d4b\u793a\u4f8b","text":"<p>\u521b\u5efa<code>detect_demo.py</code>\u6587\u4ef6</p> Python<pre><code>import face_recognition\nimport cv2\n# \u901a\u8fc7\u529f\u80fd\u5305\u7684\u540d\u5b57\u83b7\u53d6\u8be5\u529f\u80fd\u5305\u7684\u5b89\u88c5\u76ee\u5f55\uff0c\u6700\u7ec8\u8fd4\u56de\u5b89\u88c5\u76ee\u5f55\u7684share\u76ee\u5f55\u7684\u7edd\u5bf9\u8def\u5f84\nfrom ament_index_python.packages import get_package_share_directory\n\ndef main():\n    img_path = get_package_share_directory(\"detect_service_py\") + \"/resource/pic1.jpg\"\n\n    img = cv2.imread(img_path)\n    face_location = face_recognition.face_locations(\n        img,\n        number_of_times_to_upsample=1, \n        model='hog')\n    for top, right, bottom, left in face_location:\n        cv2.rectangle(img, (left, top), (right, bottom), color=(0, 255, 0), thickness=8)\n    cv2.imwrite(\"/home/sunrise/wkspace1/src/detect_service_py/resource/out2.jpg\", img)\n    # cv2.imshow(\"img\", img)\n    # cv2.waitKey(0)\n</code></pre> <p>\u7f16\u8bd1\u811a\u672c</p> Python<pre><code>entry_points={\n        'console_scripts': [\n        \"detec_py = detect_service_py.detect_demo:main\"\n        ],\n    },\n</code></pre> Bash<pre><code>colcon build --packages-select detect_service_py\nsource install/setup.bash\n</code></pre> <p></p>"},{"location":"study/ROS2/6-%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/#632","title":"6.3.2 \u670d\u52a1\u7aef","text":"Python<pre><code>import rclpy\nfrom rclpy.node import Node\nfrom detect_interfaces.srv import FaceDetect\nfrom ament_index_python.packages import get_package_share_directory\nimport cv2\n# ROS2\u63d0\u4f9b\uff0c\u7528\u4e8e\u5c06OpenCV\u7684\u56fe\u50cf\u683c\u5f0f\u8f6c\u4e3aROS2\u683c\u5f0f\nfrom cv_bridge import CvBridge\nimport face_recognition\nimport time\n\nclass FaceDetectService(Node):\n    def __init__(self, name):\n        super().__init__(name)\n        # \u683c\u5f0f\u8f6c\u6362\u5bf9\u8c61\n        self.bridge = CvBridge()\n        # \u521b\u5efa\u670d\u52a1\n        self.service = self.create_service(FaceDetect, \"/face_detect\", self.srv_callback)\n        # \u68c0\u6d4b\u53c2\u6570\n        self.upsample_times = 2\n        self.model = \"hog\"\n        # \u9ed8\u8ba4\u56fe\u7247\n        self.default_pic = get_package_share_directory(\"detect_service_py\") + \"/resource/pic1.jpg\"\n\n    def srv_callback(self, request, response):\n        # \u5982\u679c\u6709\u6570\u636e\n        if request.image.data:\n            cv_image = self.bridge.imgmsg_to_cv2(request.image)\n        else:\n            self.get_logger().error(\"\u65e0\u56fe\u50cf\u52a0\u8f7d\")\n            cv_image = cv2.imread(self.default_pic)\n        start_time = time.time()\n        self.get_logger().info(\"\u52a0\u8f7d\u56fe\u50cf\u5b8c\u6210\uff0c\u5f00\u59cb\u68c0\u6d4b\u3002\u3002\u3002\")\n        face_locations = face_recognition.face_locations(\n            cv_image, number_of_times_to_upsample=self.upsample_times, model=self.model)\n        end_time = time.time()\n        self.get_logger().info(f\"\u68c0\u6d4b\u5b8c\u6210\uff0c\u8017\u65f6\uff1a{end_time-start_time}\")\n        response.number = len(face_locations)\n        response.use_time = end_time-start_time\n        # \u63a5\u6536\u54cd\u5e94\u6570\u636e\n        for top, right, bottom, left in face_locations:\n            response.top.append(top)\n            response.right.append(right)\n            response.bottom.append(bottom)\n            response.left.append(left)\n        return response\n\n\ndef main(args=None):\n    rclpy.init(args=args)\n    node = FaceDetectService(\"face_detect\")\n    rclpy.spin(node)\n    rclpy.shutdown()\n</code></pre>"},{"location":"study/ROS2/6-%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/#633","title":"6.3.3 \u5ba2\u6237\u7aef","text":"Python<pre><code>import rclpy\nfrom rclpy.node import Node\n# ROS2\u81ea\u5e26\u56fe\u50cf\u6d88\u606f\u63a5\u53e3\nfrom sensor_msgs.msg import Image\nfrom detect_interfaces.srv import FaceDetect\nfrom ament_index_python.packages import get_package_share_directory\nimport cv2\n# ROS2\u63d0\u4f9b\uff0c\u7528\u4e8e\u5c06OpenCV\u7684\u56fe\u50cf\u683c\u5f0f\u8f6c\u4e3aROS2\u683c\u5f0f\nfrom cv_bridge import CvBridge\n\n\nclass FaceDetectClient(Node):\n    def __init__(self, name):\n        super().__init__(name)\n        # \u683c\u5f0f\u8f6c\u6362\u5bf9\u8c61\n        self.bridge = CvBridge()\n        # \u521b\u5efa\u5ba2\u6237\u7aef\n        self.client = self.create_client(FaceDetect, \"/face_detect\")\n        # \u56fe\u50cf\u8def\u5f84\n        self.pic_path = get_package_share_directory(\"detect_service_py\") + \"/resource/pic1.jpg\"\n        # \u56fe\u50cf\n        self.pic = cv2.imread(self.pic_path)\n\n    def show_face_loactions(self, response):\n        for i in range(response.number):\n            top = response.top[i]\n            right = response.right[i]\n            bottom = response.bottom[i]\n            left = response.left[i]\n            cv2.rectangle(self.pic, (left, top), (right, bottom), (0, 0, 255), 6)\n        cv2.imwrite(\"/home/sunrise/wkspace1/src/detect_service_py/resource/outs.jpg\", self.pic)\n\n    def send_request(self):\n        # \u7b49\u5f85\u670d\u52a1\u4e0a\u7ebf\n        while self.client.wait_for_service(timeout_sec=1) is False:\n            self.get_logger().info(\"\u7b49\u5f85\u670d\u52a1\u4e0a\u7ebf...\")\n        # \u6784\u9020Request\n        request = FaceDetect.Request()\n        request.image = self.bridge.cv2_to_imgmsg(self.pic)\n        # \u53d1\u9001\u8bf7\u6c42\u5e76\u7b49\u5f85\u670d\u52a1\u7aef\u5904\u7406\u5b8c\u6210(\u5f02\u6b65\u83b7\u53d6\u7ed3\u679c)\n        future = self.client.call_async(request)\n        # \u7b49\u5f85future\u4e3a\u5b8c\u6210\n        rclpy.spin_until_future_complete(self, future=future)\n        # \u5f97\u5230\u54cd\u5e94\u6570\u636e\n        response = future.result()\n        self.get_logger().info(\n            f'\u6536\u5230\u54cd\u5e94\uff1a\u56fe\u50cf\u4eba\u8138\u6570\u91cf {response.number}, \u8017\u65f6 {response.use_time}')\n        self.show_face_loactions(response)\n\ndef main(args=None):\n    rclpy.init(args=args)\n    node = FaceDetectClient(\"face_detect_client\")\n    node.send_request()\n    rclpy.shutdown()\n</code></pre>"},{"location":"study/ROS2/6-%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/#634","title":"6.3.4 \u7f16\u8bd1\u8fd0\u884c","text":"Python<pre><code>entry_points={\n        'console_scripts': [\n            \"detec_py = detect_service_py.detect_demo:main\",\n            \"face_detect_service = detect_service_py.detect_service:main\",\n            \"face_detect_client = detect_service_py.detect_client:main\"\n        ],\n    },\n</code></pre> Bash<pre><code>colcon build --packages-select detect_service_py\nsource install/setup.bash\n</code></pre> <p>\u670d\u52a1\u7aef</p> <p></p> <p>\u5ba2\u6237\u7aef</p> <p></p>"},{"location":"study/ROS2/6-%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/#64-c","title":"6.4 C++\u81ea\u5b9a\u4e49\u670d\u52a1\u6d88\u606f\u63a5\u53e3","text":""},{"location":"study/ROS2/6-%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/#641","title":"6.4.1 \u6848\u4f8b\u9700\u6c42","text":"<ul> <li> \u670d\u52a1\u7aef\uff0c\u901a\u8fc7\u8bdd\u9898\u63a7\u5236\u5c0f\u6d77\u9f9f\u8fd0\u52a8\uff0c\u589e\u52a0\u670d\u52a1\u63a5\u6536\u76ee\u6807\u4f4d\u7f6e\u6570\u636e\uff0c\u79fb\u52a8\u81f3\u76ee\u6807\u4f4d\u7f6e\u3002</li> <li> \u5ba2\u6237\u7aef\uff0c\u53d1\u9001\u76ee\u6807\u4f4d\u7f6e\u8bf7\u6c42\uff0c\u5e76\u63a5\u53d7\u54cd\u5e94\u3002</li> </ul>"},{"location":"study/ROS2/6-%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/#642","title":"6.4.2 \u81ea\u5b9a\u4e49\u6d88\u606f\u63a5\u53e3","text":"<p>\u5728python\u7684<code>detect_interfaces</code>\u7684<code>srv</code>\u76ee\u5f55\u4e0b\u65b0\u5efa<code>Patrol.srv</code>\u63a5\u53e3\u6587\u4ef6\uff1a</p> Text Only<pre><code>float32 target_x    # \u76ee\u6807x\u503c\nfloat32 target_y    # \u76ee\u6807y\u503c\n---\nint8 SUCCESS = 1    # \u5b9a\u4e49\u5e38\u91cf\uff0c\u8868\u793a\u6210\u529f\nint8 FAIL = 0       # \u5b9a\u4e49\u5e38\u91cf\uff0c\u8868\u793a\u5931\u8d25\nint8 result         # \u5904\u7406\u7ed3\u679c\n</code></pre>"},{"location":"study/ROS2/6-%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/#643","title":"6.4.3 \u529f\u80fd\u5305\u51c6\u5907","text":"Bash<pre><code>ros2 pkg create patrol_service_cpp --build-type ament_cmake --dependencies rclcpp detect_interfaces turtlesim --license Apache-2.0\n</code></pre>"},{"location":"study/ROS2/6-%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/#65-c","title":"6.5 C++\u81ea\u5b9a\u4e49\u63a5\u53e3\u793a\u4f8b","text":""},{"location":"study/ROS2/6-%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/#651","title":"6.5.1 \u670d\u52a1\u7aef","text":"<p>\u5173\u4e8e<code>/turtle1/cmd_vel</code>\u548c<code>/turtle1/pose</code>\u7684\u6d88\u606f\u63a5\u53e3\uff0c\u81ea\u884c\u4f7f\u7528\u547d\u4ee4\u884c\u67e5\u770b\u3002</p> C++<pre><code>#include \"rclcpp/rclcpp.hpp\"\n// \u5c0f\u6d77\u9f9f /turtle1/cmd_vel \u8bdd\u9898(\u901f\u5ea6\u63a7\u5236)\u6d88\u606f\u63a5\u53e3\n#include \"geometry_msgs/msg/twist.hpp\"\n// \u5c0f\u6d77\u9f9f /turtle1/pose \u8bdd\u9898(\u4f4d\u7f6e\u3001\u901f\u5ea6\u83b7\u53d6)\u6d88\u606f\u63a5\u53e3\n#include \"turtlesim/msg/pose.hpp\"\n#include \"detect_interfaces/srv/patrol.hpp\"\n\nusing Patrol = detect_interfaces::srv::Patrol;\n\nclass TurtleController : public rclcpp::Node\n{\npublic:\n    TurtleController() : Node(\"turtle_controller\")\n    {\n        // \u53d1\u5e03\u8005\uff0c\u53d1\u5e03\u5c0f\u6d77\u9f9f\u7684\u7ebf\u901f\u5ea6\u3001\u89d2\u901f\u5ea6\n        velocity_publisher_ = this-&gt;create_publisher&lt;geometry_msgs::msg::Twist&gt;(\n            \"/turtle1/cmd_vel\", 10);\n        // \u8ba2\u9605\u8005\u8ba2\u9605\u5c0f\u6d77\u9f9f\u7684\u4f4d\u7f6e\u3001\u7ebf\u901f\u5ea6\u3001\u89d2\u901f\u5ea6\n        pose_subscription_ = this-&gt;create_subscription&lt;turtlesim::msg::Pose&gt;(\n            \"/turtle1/pose\", 10,\n            std::bind(&amp;TurtleController::on_pose_received_, this, std::placeholders::_1));\n        patrol_server_ = this-&gt;create_service&lt;Patrol&gt;(\n            \"/patrol\",\n            std::bind(&amp;TurtleController::patrol_callback, this, std::placeholders::_1, std::placeholders::_2)\n        );    \n\n    }\n\nprivate:\n    /* \u670d\u52a1\u7aef\u56de\u8c03\u51fd\u6570 */\n    void patrol_callback(const Patrol::Request::SharedPtr request, const Patrol::Response::SharedPtr response)\n    {\n        // \u5224\u65ad\u8bf7\u6c42\u7684\u76ee\u6807\u4f4d\u7f6e\u662f\u5426\u57280~13\n        if ((0 &lt; request-&gt;target_x &amp;&amp; request-&gt;target_x &lt; 12.0f)\n                &amp;&amp; (0 &lt; request-&gt;target_y &amp;&amp; request-&gt;target_y &lt; 12.0f)) {\n            // \u8bbe\u7f6e\u76ee\u6807\u503c\n            target_x_ = request-&gt;target_x;\n            target_y_ = request-&gt;target_y;\n            // \u8fd4\u56de\u6210\u529f\n            response-&gt;result = Patrol::Response::SUCCESS;\n        } else {\n            // \u8fd4\u56de\u5931\u8d25\n            response-&gt;result = Patrol::Response::FAIL;\n        }\n    }\n\n    void on_pose_received_(const turtlesim::msg::Pose::SharedPtr pose) \n    {\n        auto message = geometry_msgs::msg::Twist();\n        // 1.\u8bb0\u5f55\u5f53\u524d\u4f4d\u7f6e\n        double current_x = pose-&gt;x;\n        double current_y = pose-&gt;y;\n        RCLCPP_INFO(this-&gt;get_logger(), \"\u5f53\u524d\u4f4d\u7f6e:(x=%f,y=%f)\", current_x, current_y);\n\n        // 2.\u8ba1\u7b97\u8ddd\u79bb\u76ee\u6807\u7684\u8ddd\u79bb\uff0c\u4e0e\u5f53\u524d\u6d77\u9f9f\u671d\u5411\u7684\u89d2\u5ea6\u5dee\n        // \u52fe\u80a1\u5b9a\u7406\u8ba1\u7b97\u76f4\u7ebf\u8ddd\u79bb\n        double distance =\n            std::sqrt((target_x_ - current_x) * (target_x_ - current_x) +\n                    (target_y_ - current_y) * (target_y_ - current_y));\n        // \u76ee\u6807\u65b9\u5411\u7684\u89d2\u5ea6 - \u5f53\u524d\u671d\u5411\u89d2\u5ea6\uff0c\u5f97\u5230\u5939\u89d2\u5dee\n        double angle =\n            std::atan2(target_y_ - current_y, target_x_ - current_x) - pose-&gt;theta;\n\n        // 3.\u63a7\u5236\u7b56\u7565\uff1a\u8ddd\u79bb\u5927\u4e8e0.1\u7ee7\u7eed\u8fd0\u52a8\uff0c\u89d2\u5ea6\u5dee\u5927\u4e8e0.2\u5219\u539f\u5730\u65cb\u8f6c\uff0c\u5426\u5219\u76f4\u884c\n        if (distance &gt; 0.1) {\n            if(fabs(angle) &gt; 0.2) {\n                // \u4ee5\u89d2\u5ea6\u5dee\u7684\u7edd\u5bf9\u503c\u4e3a\u89d2\u901f\u5ea6\u8fdb\u884c\u539f\u5730\u65cb\u8f6c\n                message.angular.z = fabs(angle);\n            } else {\n                // \u901a\u8fc7\u6bd4\u4f8b\u63a7\u5236\u5668\u8ba1\u7b97\u8f93\u51fa\u7ebf\u901f\u5ea6\n                message.linear.x = k_ * distance;\n            }\n        }\n\n        // 4.\u9650\u5236\u6700\u5927\u503c\u5e76\u53d1\u5e03\u6d88\u606f\n        if (message.linear.x &gt; max_speed_) {\n            message.linear.x = max_speed_;\n        }\n        velocity_publisher_-&gt;publish(message);\n    }\n    rclcpp::Subscription&lt;turtlesim::msg::Pose&gt;::SharedPtr pose_subscription_;\n    rclcpp::Publisher&lt;geometry_msgs::msg::Twist&gt;::SharedPtr velocity_publisher_;\n    rclcpp::Service&lt;Patrol&gt;::SharedPtr patrol_server_;\n    double target_x_{1.0};  // \u76ee\u6807\u4f4d\u7f6eX,\u8bbe\u7f6e\u9ed8\u8ba4\u503c1.0\n    double target_y_{2.0};  // \u76ee\u6807\u4f4d\u7f6eY,\u8bbe\u7f6e\u9ed8\u8ba4\u503c1.0\n    double k_{1.0};         // \u6bd4\u4f8b\u7cfb\u6570\uff0c\u63a7\u5236\u8f93\u51fa=\u8bef\u5dee*\u6bd4\u4f8b\u7cfb\u6570\n    double max_speed_{3.0}; // \u6700\u5927\u7ebf\u901f\u5ea6\uff0c\u8bbe\u7f6e\u9ed8\u8ba4\u503c3.0\n};\n\nint main(int argc, char* argv[])\n{\n    rclcpp::init(argc, argv);\n    auto node = std::make_shared&lt;TurtleController&gt;();\n    rclcpp::spin(node);\n    rclcpp::shutdown();\n    return 0;\n}\n</code></pre>"},{"location":"study/ROS2/6-%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/#652","title":"6.5.2 \u5ba2\u6237\u7aef","text":"C++<pre><code>#include \"rclcpp/rclcpp.hpp\"\n#include \"detect_interfaces/srv/patrol.hpp\"\n\nusing namespace std::chrono_literals;\nusing Patrol = detect_interfaces::srv::Patrol;\n\nclass PatrolClient : public rclcpp::Node\n{\npublic:\n    PatrolClient(std::string name) : Node(name)\n    {\n        patrol_client_ = this-&gt;create_client&lt;Patrol&gt;(\"/patrol\");\n        timer_ = this-&gt;create_wall_timer(10s, std::bind(&amp;PatrolClient::timer_callback, this));\n    }\n\n\nprivate:\n    void timer_callback(void)\n    {\n        while(!patrol_client_-&gt;wait_for_service(1s)) {\n            if (!rclcpp::ok()) {\n                RCLCPP_ERROR(this-&gt;get_logger(), \"\u7b49\u5f85\u670d\u52a1\u88ab\u6253\u65ad\u3002\u3002\u3002\");\n                return;\n            } else {\n                RCLCPP_INFO(this-&gt;get_logger(), \"\u7b49\u5f85\u670d\u52a1\u4e0a\u7ebf\u3002\u3002\u3002\");\n            }\n        }\n        auto request = std::make_shared&lt;Patrol::Request&gt;();\n        request-&gt;target_x = rand()%15;\n        request-&gt;target_y = rand()%15;\n        RCLCPP_INFO(this-&gt;get_logger(), \"\u8bf7\u6c42\u5de1\u903b\uff1a(%f,%f)\", request-&gt;target_x, request-&gt;target_y);\n        // \u5f02\u6b65\u53d1\u9001\u8bf7\u6c42\n        patrol_client_-&gt;async_send_request(\n            request,\n            // lamda\u8868\u793a\u5f0f\u56de\u8c03\u51fd\u6570\n            [&amp;](rclcpp::Client&lt;Patrol&gt;::SharedFuture result_future) -&gt; void\n            {\n                auto response = result_future.get();\n                if (response-&gt;result == Patrol::Response::SUCCESS)\n                {\n                    RCLCPP_INFO(this-&gt;get_logger(), \"\u76ee\u6807\u70b9\u5904\u7406\u6210\u529f\");\n                }\n                else if (response-&gt;result == Patrol::Response::FAIL)\n                {\n                    RCLCPP_INFO(this-&gt;get_logger(), \"\u76ee\u6807\u70b9\u5904\u7406\u5931\u8d25\");\n                }\n            });\n    }\n\nprivate:\n    rclcpp::Client&lt;Patrol&gt;::SharedPtr patrol_client_;\n    rclcpp::TimerBase::SharedPtr timer_; \n};\n\nint main(int argc, char* argv[])\n{\n    rclcpp::init(argc, argv);\n    auto node = std::make_shared&lt;PatrolClient&gt;(\"patrol_client\");\n    rclcpp::spin(node);\n    rclcpp::shutdown();\n    return 0;\n}\n</code></pre>"},{"location":"study/ROS2/6-%E6%9C%8D%E5%8A%A1%E9%80%9A%E4%BF%A1/#653","title":"6.5.3 \u7f16\u8bd1\u8fd0\u884c","text":"<p>\u5728<code>CMakeLists.txt</code>\u6587\u4ef6\u6dfb\u52a0\u914d\u7f6e\u4fe1\u606f</p> CMake<pre><code>add_executable(patrol_service src/patrol_service.cpp)\nadd_executable(patrol_client src/patrol_client.cpp)\n\nament_target_dependencies(\n  patrol_service\n  \"rclcpp\"\n  \"detect_interfaces\"\n  \"turtlesim\"\n)\n\nament_target_dependencies(\n  patrol_client\n  \"rclcpp\"\n  \"detect_interfaces\"\n  \"turtlesim\"\n)\n\ninstall(TARGETS\n  patrol_service\n  patrol_client\n  DESTINATION lib/${PROJECT_NAME}\n)\n</code></pre> <p>\u7f16\u8bd1</p> Bash<pre><code>colcon build --packages-select patrol_service_cpp\nsource install/setup.bash\n</code></pre> <p>\u5148\u6253\u5f00\u5c0f\u6d77\u9f9f\uff0c\u63a5\u7740\u6253\u5f00\u670d\u52a1\u7aef\uff0c\u6700\u540e\u6253\u5f00\u5ba2\u6237\u7aef\uff0c\u8fd0\u884c\u6548\u679c\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"study/ROS2/7-%E5%8F%82%E6%95%B0%E9%80%9A%E4%BF%A1/","title":"\u7b2c\u4e03\u7ae0 \u53c2\u6570\u901a\u4fe1","text":""},{"location":"study/ROS2/7-%E5%8F%82%E6%95%B0%E9%80%9A%E4%BF%A1/#71","title":"7.1 \u53c2\u6570\u901a\u4fe1","text":"<p>\u5728 ROS2 \u4e2d\u53c2\u6570\u88ab\u89c6\u4e3a\u8282\u70b9\u7684\u8bbe\u7f6e\uff0c\u800c\u53c2\u6570\u901a\u4fe1\u673a\u5236\u662f\u57fa\u4e8e\u670d\u52a1\u901a\u4fe1\u5b9e\u73b0\u7684\u3002</p> <p>\u2460 \u6253\u5f00\u4e00\u4e2a\u5c0f\u6d77\u9f9f\u6a21\u62df\u5668\u7a97\u53e3</p> Bash<pre><code>ros2 run turtlesim turtlesim_node\n</code></pre> <p></p> <p>\u2461 \u67e5\u770b\u5e26\u6709<code>parameter</code>\u7684\u670d\u52a1\uff0c\u8fd9\u4e9b\u662f\u4e0e\u53c2\u6570\u76f8\u5173\u7684\u670d\u52a1\uff0c\u63d0\u4f9b\u53c2\u6570\u7684\u67e5\u8be2\u4e0e\u8bbe\u7f6e</p> Bash<pre><code>ros2 service list -t | grep parameter\n</code></pre> <p></p> <p>\u2462 \u67e5\u770b\u53c2\u6570\u5217\u8868\uff0c\u5176\u4e2d\u80cc\u666f\u76f8\u5173\u4e09\u4e2a\u53c2\u6570\u662f\u663e\u793a\u58f0\u660e\u7684\uff0c\u5176\u4f59\u662f\u9ed8\u8ba4\u53c2\u6570</p> Bash<pre><code>ros2 param list\n</code></pre> <p></p> <p>\u2463 \u67e5\u770b\u53c2\u6570\u7684\u5177\u4f53\u63cf\u8ff0</p> Bash<pre><code>ros2 param describe /turtlesim background_r\n</code></pre> <p></p> <p>\u2464 \u83b7\u53d6\u5f53\u524d\u8282\u70b9\u7684\u53c2\u6570\u503c</p> Bash<pre><code>ros2 param get /turtlesim background_r\n</code></pre> <p></p> <p>\u2465 \u4fee\u6539\u53c2\u6570\u503c</p> Text Only<pre><code>ros2 param set /turtlesim background_r 255\n</code></pre> <p></p> <p>\u2466 \u5c06\u53c2\u6570\u5bfc\u51fa\u4e3a<code>yaml</code>\u6587\u4ef6\uff0c\u4ee5\u4fbf\u4fee\u6539\u591a\u4e2a\u53c2\u6570</p> Bash<pre><code>ros2 param dump /turtlesim &gt; turtlesim_param.yaml\n</code></pre> <p></p> <p>\u76f4\u63a5\u4fee\u6539<code>yaml</code>\u6587\u4ef6\uff0c\u7136\u540e\u4e0b\u6b21\u8fd0\u884c\u65f6\u5e26\u4e0a\u8be5\u6587\u4ef6</p> Bash<pre><code>ros2 run turtlesim turtlesim_node --ros-args --params-file turtlesim_param.yaml\n</code></pre> <p></p>"},{"location":"study/ROS2/7-%E5%8F%82%E6%95%B0%E9%80%9A%E4%BF%A1/#72-python","title":"7.2 Python\u53c2\u6570\u670d\u52a1","text":""},{"location":"study/ROS2/7-%E5%8F%82%E6%95%B0%E9%80%9A%E4%BF%A1/#721","title":"7.2.1 \u53c2\u6570\u58f0\u660e\u4e0e\u8bbe\u7f6e","text":"<p>\u4fee\u6539<code>detect_service_py/detect_service_py/detect_service.py</code>\uff0c\u4f7f\u7528\u53c2\u6570\u58f0\u660e\uff1a</p> Python<pre><code>class FaceDetectService(Node):\n    def __init__(self, name):\n        super().__init__(name)\n        # ... #\n        \"\"\"\u6dfb\u52a0\u53c2\u6570\u58f0\u660e\"\"\"\n        # \u68c0\u6d4b\u53c2\u6570(\u672a\u4f7f\u7528\u53c2\u6570\u901a\u4fe1)\n        # self.upsample_times = 1\n        # self.model = \"hog\"\n        # \u58f0\u660e\u53c2\u6570\n        self.declare_parameter(\"face_locations_upsample_times\", 1)\n        self.declare_parameter(\"face_locations_model\", \"hog\")\n        # \u8bbe\u7f6e\u53c2\u6570\n        self.upsample_times = self.get_parameter(\"face_locations_upsample_times\").value\n        self.model = self.get_parameter(\"face_locations_model\").value\n</code></pre> <p>\u91cd\u65b0\u7f16\u8bd1\u8fd0\u884c\u8282\u70b9\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u67e5\u770b\u53c2\u6570\u5df2\u7ecf\u8bc6\u522b\uff1a</p> Bash<pre><code>ros2 param list\n</code></pre> <p></p> <p>\u53ef\u4ee5\u5728\u542f\u52a8\u8282\u70b9\u65f6\u4f7f\u7528\u53c2\u6570\uff0c\u52a0\u4e0a<code>--ros-args -p</code>\uff1a</p> Bash<pre><code>ros2 run detect_service_py face_detect_service --ros-args -p face_locations_upsample_times:=2\n</code></pre>"},{"location":"study/ROS2/7-%E5%8F%82%E6%95%B0%E9%80%9A%E4%BF%A1/#722","title":"7.2.2 \u8ba2\u9605\u53c2\u6570\u66f4\u65b0","text":"<p>\u5728\u547d\u4ee4\u884c\u3001\u5176\u4ed6\u8282\u70b9\u4fee\u6539\u8fc7\u53c2\u6570\u540e\uff0c\u9700\u8981\u540c\u65f6\u4fee\u6539\u5c5e\u6027\u8d4b\u503c\u3002\u6b64\u65f6\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u53c2\u6570\u56de\u8c03\u51fd\u6570\uff1a</p> Python<pre><code>from rcl_interfaces.msg import SetParametersResult\n\nclass FaceDetectService(Node):\n    def __init__(self, name):\n        super().__init__(name)\n        # ... #\n        # \u6dfb\u52a0\u53c2\u6570\u56de\u8c03\u51fd\u6570\n        self.add_on_set_parameters_callback(self.parameters_callback)\n\n    def parameters_callback(self, parameters):\n        for parameter in parameters:\n            self.get_logger().info(f\"\u53c2\u6570{parameter.name}\u88ab\u8bbe\u7f6e\u4e3a{parameter.value}\")\n            if parameter.name == \"face_locations_upsample_times\":\n                self.upsample_times = self.get_parameter(\"face_locations_upsample_times\").value\n            elif parameter.name == \"face_locations_model\":\n                self.model = self.get_parameter(\"face_locations_model\").value\n        return SetParametersResult(successful=True)\n</code></pre> <p>\u7f16\u8bd1\u8fd0\u884c</p> Bash<pre><code>colcon build --packages-select detect_service_py\nsource install/setup.bash\n</code></pre> Bash<pre><code>ros2 run detect_service_py face_detect_service --ros-args -p face_locations_upsample_times:=2\n</code></pre> <p>\u53e6\u4e00\u4e2a\u7ec8\u7aef\uff0c\u4fee\u6539\u53c2\u6570</p> Bash<pre><code>ros2 param set /face_detect face_locations_upsample_times 1\n</code></pre> <p>\u4fee\u6539\u7ed3\u679c</p> <p></p>"},{"location":"study/ROS2/7-%E5%8F%82%E6%95%B0%E9%80%9A%E4%BF%A1/#723","title":"7.2.3 \u4fee\u6539\u5176\u4ed6\u8282\u70b9\u7684\u53c2\u6570","text":"<p>\u4fee\u6539\u5176\u4ed6\u8282\u70b9\u7684\u53c2\u6570\uff0c\u9700\u8981\u7528\u5230\u670d\u52a1\u901a\u4fe1\u53d1\u9001\u8bf7\u6c42\uff0c\u539f\u56e0\u770b\u4e0b\u56fe\uff0c\u5f53\u6211\u4eec\u8fd0\u884c\u670d\u52a1\u7aef\u65f6\uff0c\u6709\u5f88\u591a\u5173\u4e8e\u53c2\u6570\u7684\u670d\u52a1\uff0c\u5176\u4e2d\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528<code>/face_detect/set_parameters</code>\u670d\u52a1\u8bbe\u7f6e\u53c2\u6570\u3002</p> <p></p> <p>\u67e5\u770b\u6d88\u606f\u63a5\u53e3\u5185\u5bb9</p> Bash<pre><code>ros2 interface show rcl_interfaces/srv/SetParameters\n</code></pre> <p></p> <p>\u4fee\u6539<code>detect_service_py/detect_service_py/detect_client.py</code></p> Python<pre><code># \u5bfc\u5165\u8bbe\u7f6e\u53c2\u6570\u7684\u670d\u52a1\u6d88\u606f\u63a5\u53e3\nfrom rcl_interfaces.srv import SetParameters\n# \u5bfc\u5165\u8bbe\u7f6e\u53c2\u6570\u7684\u8bdd\u9898\u6d88\u606f\u63a5\u53e3\nfrom rcl_interfaces.msg import Parameter, ParameterValue, SetParametersResult\n\nclass FaceDetectService(Node):\n    def __init__(self, name):\n        super().__init__(name)\n        # ... #\n\n    def call_set_parameter(self, parameters):\n        # 1.\u521b\u5efa\u5ba2\u6237\u7aef\uff0c\u5e76\u7b49\u5f85\u670d\u52a1\u4e0a\u7ebf\n        client = self.create_client(SetParameters, \"/face_detect/set_parameters\")\n        while client.wait_for_service(timeout_sec=1) is False:\n             self.get_logger().info(\"\u7b49\u5f85\u670d\u52a1\u4e0a\u7ebf...\")\n        # 2.\u6784\u9020Request(\u7531\u4e8e\u6d88\u606f\u63a5\u53e3\u590d\u6742\uff0c\u6545\u6d88\u606f\u8d4b\u503c\u5355\u5f00\u4e00\u4e2a\u51fd\u6570\u5b8c\u6210)\n        request = SetParameters.Request()\n        request.parameters = parameters\n        # 3.\u53d1\u9001\u8bf7\u6c42\u5e76\u7b49\u5f85\u670d\u52a1\u7aef\u5904\u7406\u5b8c\u6210(\u5f02\u6b65\u83b7\u53d6\u7ed3\u679c)\n        future = client.call_async(request)\n        rclpy.spin_until_future_complete(self, future=future)\n        response = future.result()\n        return response\n\n    def update_detect_parameter(self, times=1):\n        # 1.\u521b\u5efa\u4e00\u4e2a\u53c2\u6570\u5bf9\u8c61\n        param = Parameter()\n        param.name = \"face_locations_upsample_times\"\n        # 2.\u521b\u5efa\u53c2\u6570\u503c\u5bf9\u8c61\n        param_value = ParameterValue()\n        # \u6574\u6570\u6570\u636e\n        param_value.type = ParameterType.PARAMETER_INTEGER\n        param_value.integer_value = times\n        # 3.\u8d4b\u503c\u53c2\u6570\u5bf9\u8c61\n        param.value = param_value\n        # 4.\u53d1\u9001\u66f4\u65b0\u53c2\u6570\u8bf7\u6c42\n        response = self.call_set_parameter([param])\n        for result in response.results:\n            if result.successful:\n                self.get_logger().info(f\"\u53c2\u6570{param.name}\u88ab\u8bbe\u7f6e\u4e3a{times}\")     \n            else:\n                self.get_logger().error(f\"\u53c2\u6570\u8bbe\u7f6e\u9519\u8bef{result.reason}\")\n\ndef main(args=None):\n    rclpy.init(args=args)\n    node = FaceDetectClient(\"face_detect_client\")\n    node.update_detect_parameter(times=1)\n    node.send_request()\n    node.update_detect_parameter(times=2)\n    node.send_request()\n    rclpy.shutdown()                \n</code></pre> <p>\u7f16\u8bd1\u8fd0\u884c</p> Bash<pre><code>colcon build --packages-select detect_service_py\nsource install/setup.bash\n</code></pre> <p>\u6253\u5f00\u670d\u52a1\u7aef</p> Bash<pre><code>ros2 run detect_service_py face_detect_service\n</code></pre> <p>\u6253\u5f00\u5ba2\u6237\u7aef</p> Bash<pre><code>ros2 run detect_service_py face_detect_client\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c</p> <p></p>"},{"location":"study/ROS2/7-%E5%8F%82%E6%95%B0%E9%80%9A%E4%BF%A1/#73-c","title":"7.3 C++\u53c2\u6570\u670d\u52a1","text":""},{"location":"study/ROS2/7-%E5%8F%82%E6%95%B0%E9%80%9A%E4%BF%A1/#731","title":"7.3.1 \u53c2\u6570\u58f0\u660e\u4e0e\u8bbe\u7f6e","text":"<p>\u4fee\u6539<code>patrol_service_cpp/src/patrol_service.cpp</code>\uff0c\u4f7f\u7528\u53c2\u6570\u58f0\u660e\uff1a</p> C++<pre><code>class TurtleController : public rclcpp::Node\n{\npublic:\n    TurtleController() : Node(\"turtle_controller\")\n    {\n        // \u58f0\u660e\u548c\u8bbe\u7f6e\u53c2\u6570\n        this-&gt;declare_parameter(\"k\", 1.0);\n        this-&gt;declare_parameter(\"max_speed\", 3);\n        this-&gt;get_parameter(\"k\", k_);\n        this-&gt;get_parameter(\"max_speed\", max_speed_);\n        // ...\n    }\n};\n</code></pre> <p>\u91cd\u65b0\u7f16\u8bd1\u8fd0\u884c\u8282\u70b9\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u67e5\u770b\u53c2\u6570\u5df2\u7ecf\u8bc6\u522b\uff1a</p> <p></p>"},{"location":"study/ROS2/7-%E5%8F%82%E6%95%B0%E9%80%9A%E4%BF%A1/#732","title":"7.3.2 \u8ba2\u9605\u53c2\u6570\u66f4\u65b0","text":"<p>\u65b9\u6cd5\u4e0ePython\u4fdd\u6301\u4e00\u81f4\uff0cAPI\u540d\u79f0\u6709\u6240\u4e0d\u540c\u3002</p> C++<pre><code>class TurtleController : public rclcpp::Node\n{\npublic:\n    TurtleController() : Node(\"turtle_controller\")\n    {\n        // ...\n        // \u6dfb\u52a0\u53c2\u6570\u56de\u8c03\u51fd\u6570\n        this-&gt;add_on_set_parameters_callback(\n            [&amp;] (const std::vector&lt;rclcpp::Parameter&gt; &amp;params) -&gt; SetParametersResult {\n                for (const auto &amp;param : params) {\n                    // \u6253\u5370\u65e5\u5fd7\n                    RCLCPP_INFO(this-&gt;get_logger(), \"\u66f4\u65b0\u53c2\u6570 %s \u503c\u4e3a\uff1a%f\",param.get_name().c_str(), param.as_double());\n                    // \u5224\u65ad\u53c2\u6570\u540d\u79f0\n                    if (param.get_name() == \"k\") {\n                        k_ = param.as_double();\n                    } else if (param.get_name() == \"max_speed\") {\n                        max_speed_ = param.as_double();\n                    }\n                }\n                // \u8fd4\u56de\u7ed3\u679c\n                auto result = SetParametersResult();\n                result.successful = true;\n                return result;\n            }\n        );\n    }\n};\n</code></pre> <p>\u7f16\u8bd1\u8fd0\u884c</p> Bash<pre><code>colcon build --packages-select patrol_service_cpp\nsource install/setup.bash\n</code></pre> <p></p>"},{"location":"study/ROS2/7-%E5%8F%82%E6%95%B0%E9%80%9A%E4%BF%A1/#733","title":"7.3.3 \u4fee\u6539\u5176\u4ed6\u8282\u70b9\u7684\u53c2\u6570","text":"<p>\u4fee\u6539<code>patrol_service_cpp/src/patrol_client.cpp</code></p> C++<pre><code>#include \"rcl_interfaces/msg/parameter.hpp\"\n#include \"rcl_interfaces/msg/parameter_value.hpp\"\n#include \"rcl_interfaces/msg/parameter_type.hpp\"\n#include \"rcl_interfaces/srv/set_parameters.hpp\"\n\nusing SetParameters = rcl_interfaces::srv::SetParameters;\nusing Parameter = rcl_interfaces::msg::Parameter;\nusing ParameterValue = rcl_interfaces::msg::ParameterValue;\n\nclass TurtleController : public rclcpp::Node\n{\npublic:\n    /* \u8bbe\u7f6e\u53c2\u6570 */\n    std::shared_ptr&lt;SetParameters::Response&gt; set_patrol_parameter(\n        rcl_interfaces::msg::Parameter &amp;parameters)\n    {\n        // 1.\u521b\u5efa\u53c2\u6570\u5ba2\u6237\u7aef\uff0c\u5e76\u7b49\u5f85\u670d\u52a1\u4e0a\u7ebf\n        auto param_client = this-&gt;create_client&lt;SetParameters&gt;(\"/turtle_controller/set_parameters\");\n        while(!param_client-&gt;wait_for_service(1s)) {\n            if (!rclcpp::ok()) {\n                RCLCPP_ERROR(this-&gt;get_logger(), \"\u7b49\u5f85\u670d\u52a1\u88ab\u6253\u65ad\u3002\u3002\u3002\");\n                return;\n            } else {\n                RCLCPP_INFO(this-&gt;get_logger(), \"\u7b49\u5f85\u53c2\u6570\u670d\u52a1\u4e0a\u7ebf\u3002\u3002\u3002\");\n            }\n        }\n        // 2.\u6784\u9020Request(\u7531\u4e8e\u6d88\u606f\u63a5\u53e3\u590d\u6742\uff0c\u6545\u6d88\u606f\u8d4b\u503c\u5355\u5f00\u4e00\u4e2a\u51fd\u6570\u5b8c\u6210)\n        auto request = std::make_shared&lt;SetParameters::Request&gt;();\n        request-&gt;parameters.push_back(parameters);\n        // 3.\u53d1\u9001\u8bf7\u6c42\u5e76\u7b49\u5f85\u670d\u52a1\u7aef\u5904\u7406\u5b8c\u6210(\u5f02\u6b65\u83b7\u53d6\u7ed3\u679c)\n        auto future = param_client-&gt;async_send_request(request);\n        rclcpp::spin_until_future_complete(this-&gt;get_node_base_interface(), future);\n        auto response = future.get();\n        return response;\n    }\n\n    void update_patrol_parameter(double k)\n    {\n        // 1.\u521b\u5efa\u4e00\u4e2a\u53c2\u6570\u5bf9\u8c61\n        auto param = Parameter();\n        param.name = \"k\";\n        // 2.\u521b\u5efa\u4e00\u4e2a\u53c2\u6570\u503c\u5bf9\u8c61\n        auto param_value = ParameterValue();\n        param_value.type = rcl_interfaces::msg::ParameterType::PARAMETER_DOUBLE;\n        param_value.double_value = k;\n        // 3.\u8d4b\u503c\u53c2\u6570\u5bf9\u8c61\n        param.value = param_value;\n        // 4.\u53d1\u9001\u66f4\u65b0\u53c2\u6570\u8bf7\u6c42\n        auto response = this-&gt;set_patrol_parameter(param);\n        if (response == nullptr) {\n            RCLCPP_WARN(this-&gt;get_logger(), \"\u53c2\u6570\u4fee\u6539\u5931\u8d25\");\n            return;\n        } else {\n            // \u5faa\u73af\u53d6\u51fa\u7ed3\u679c\uff0c\u5224\u65adsuccessful\n            for (auto result : response-&gt;results) {\n                if (result.successful) {\n                    RCLCPP_INFO(this-&gt;get_logger(), \"\u53c2\u6570k \u5df2\u4fee\u6539\u4e3a\uff1a%f\", k);\n                } else {\n                    RCLCPP_WARN(this-&gt;get_logger(), \"\u53c2\u6570k \u5931\u8d25\u539f\u56e0\uff1a%s\", result.reason.c_str());\n                }\n            }\n        }\n    }\n};\n</code></pre> <p>\u7f16\u8bd1\u8fd0\u884c</p> Bash<pre><code>colcon build --packages-select patrol_service_cpp\nsource install/setup.bash\n</code></pre> <p>\u5148\u6253\u5f00\u5c0f\u6d77\u9f9f\uff0c\u63a5\u7740\u6253\u5f00\u670d\u52a1\u7aef\uff0c\u6700\u540e\u6253\u5f00\u5ba2\u6237\u7aef\uff0c\u53c2\u6570\u4fee\u6539\u6210\u529f\uff1a</p> <p></p>"},{"location":"study/ROS2/8-%E5%8A%A8%E4%BD%9C%E9%80%9A%E4%BF%A1/","title":"\u7b2c\u516b\u7ae0 \u52a8\u4f5c\u901a\u4fe1","text":""},{"location":"study/ROS2/8-%E5%8A%A8%E4%BD%9C%E9%80%9A%E4%BF%A1/#81","title":"8.1 \u52a8\u4f5c\u901a\u4fe1","text":"<p>\u52a8\u4f5c\u901a\u4fe1\u57fa\u4e8e\u8bdd\u9898\u548c\u670d\u52a1\u901a\u4fe1\uff0c\u9002\u7528\u4e8e\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u4efb\u52a1\uff0c\u52a8\u4f5c\u901a\u4fe1\u7531\u76ee\u6807\u3001\u53cd\u9988\u548c\u7ed3\u679c\u4e09\u90e8\u5206\u7ec4\u6210\uff0c\u4e0e\u670d\u52a1\u4e00\u6837\u662f\u57fa\u4e8e\u8bf7\u6c42\u54cd\u5e94\u5f0f\u7684\u6a21\u5f0f\u3002\u4e0e\u670d\u52a1\u4e0d\u540c\u7684\u662f\uff0c\u52a8\u4f5c\u901a\u4fe1\u8fde\u7eed\u53cd\u9988\u5f53\u524d\u8282\u70b9\u7684\u72b6\u6001\u4fe1\u606f\uff0c\u5f53\u4efb\u52a1\u5b8c\u6210\u65f6\uff0c\u518d\u8fd4\u56de\u6700\u7ec8\u7684\u6267\u884c\u7ed3\u679c\uff0c\u56e0\u6b64\u66f4\u9002\u7528\u4e8e\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u4efb\u52a1\u3002</p> <p></p> <p>\u5f85\u66f4\u65b0\u3002\u3002\u3002</p>"},{"location":"study/ROS2/9-launch%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/","title":"\u7b2c\u4e5d\u7ae0 Launch\u542f\u52a8\u811a\u672c","text":""},{"location":"study/ROS2/9-launch%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/#91-launch","title":"9.1 launch\u542f\u52a8\u591a\u4e2a\u6587\u4ef6","text":"<p>ROS2\u63d0\u4f9b\u4e86python\u3001xml\u3001yaml\u4e09\u79cd\u683c\u5f0f\u7f16\u5199launch\u542f\u52a8\u811a\u672c\uff0c\u63a8\u8350\u4f7f\u7528python\u7f16\u5199\u3002</p> <p>\u4f7f\u7528launch\u542f\u52a8C++\u670d\u52a1\u793a\u4f8b\u7684\u4e09\u4e2a\u8282\u70b9\uff1a</p> Python<pre><code>import launch\nimport launch_ros\n\n\ndef generate_launch_description():\n    \"\"\"\u8282\u70b9\u5b9a\u4e49\u51fd\u6570\uff0c\u51fd\u6570\u540d\u56fa\u5b9a\u4e0d\u53ef\u6539\u53d8\"\"\"\n    action_node_turtle_service = launch_ros.actions.Node(\n        # \u529f\u80fd\u5305\u540d\u79f0\n        package=\"patrol_service_cpp\",\n        # \u53ef\u6267\u884c\u6587\u4ef6\u540d\u79f0\n        executable=\"patrol_service\",\n        # \u8f93\u51fa\u65b9\u5f0f\uff0cscreen\u3001log\u3001both\u4e09\u79cd\n        output=\"screen\"\n    )\n    action_node_turtle_client = launch_ros.actions.Node(\n        # \u529f\u80fd\u5305\u540d\u79f0\n        package=\"patrol_service_cpp\",\n        # \u53ef\u6267\u884c\u6587\u4ef6\u540d\u79f0\n        executable=\"patrol_client\",\n        # \u8f93\u51fa\u65b9\u5f0f\uff0cscreen\u3001log\u3001both\u4e09\u79cd\n        output=\"screen\"\n    )\n    action_node_turtlesim_node = launch_ros.actions.Node(\n        # \u529f\u80fd\u5305\u540d\u79f0\n        package=\"turtlesim\",\n        # \u53ef\u6267\u884c\u6587\u4ef6\u540d\u79f0\n        executable=\"turtlesim_node\",\n        # \u8f93\u51fa\u65b9\u5f0f\uff0cscreen\u3001log\u3001both\u4e09\u79cd\n        output=\"both\"\n    )\n    # \u5408\u6210\u542f\u52a8\u63cf\u8ff0\n    launch_description = launch.LaunchDescription([\n        action_node_turtle_client,\n        action_node_turtle_client,\n        action_node_turtlesim_node\n    ])\n    return launch_description\n</code></pre> <p>\u914d\u7f6eC++\u7684<code>CMakeLists.txt</code>\u7f16\u8bd1\u5185\u5bb9</p> CMake<pre><code># launch\ninstall(DIRECTORY launch\n  DESTINATION share/${PROJECT_NAME}\n)\n</code></pre> <p>\u82e5\u662fpython\u7684\u529f\u80fd\u5305\uff0c\u5219\u914d\u7f6e\u5982\u4e0b\u5185\u5bb9</p> Python<pre><code>from glob import glob\n...\n    data_files=[\n        ...\n        ('share/' + package_name + '/launch', glob('launch/*.launch.py'))\n    ],\n</code></pre>"},{"location":"study/ROS2/9-launch%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/#92-launch","title":"9.2 launch\u4f20\u9012\u53c2\u6570","text":"<p>\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u58f0\u660e\u4e00\u4e2alaunch\u53c2\u6570\u3002</li> <li>\u4f7f\u7528launch\u53c2\u6570 \"\u66ff\u6362\" \u8282\u70b9\u7684\u53c2\u6570\u503c\u3002</li> <li>\u5c06\u58f0\u660e\u7684launch\u53c2\u6570\u6dfb\u52a0\u5230\u542f\u52a8\u63cf\u8ff0\u4e2d\u3002</li> </ol> Python<pre><code>import launch\nimport launch_ros\n\n\ndef generate_launch_description():\n    \"\"\"\u8282\u70b9\u5b9a\u4e49\u51fd\u6570\uff0c\u51fd\u6570\u540d\u56fa\u5b9a\u4e0d\u53ef\u6539\u53d8\"\"\"\n    # 1.\u58f0\u660e\u4e00\u4e2alaunch\u53c2\u6570\n    action_declare_arg_background_r = launch.actions.DeclareLaunchArgument(\n        # \u53c2\u6570\u540d\n        \"launch_arg_bg_r\",\n        # \u9ed8\u8ba4\u503c\n        default_value=\"100\"\n    )\n    # \u52a8\u4f5c\u8282\u70b9\u58f0\u660e\n    action_node_turtle_service = launch_ros.actions.Node(\n        # \u529f\u80fd\u5305\u540d\u79f0\n        package=\"patrol_service_cpp\",\n        # \u53ef\u6267\u884c\u6587\u4ef6\u540d\u79f0\n        executable=\"patrol_service\",\n        # \u8f93\u51fa\u65b9\u5f0f\uff0cscreen\u3001log\u3001both\u4e09\u79cd\n        output=\"screen\",\n    )\n    # \u52a8\u4f5c\u8282\u70b9\u58f0\u660e\n    action_node_turtle_client = launch_ros.actions.Node(\n        # \u529f\u80fd\u5305\u540d\u79f0\n        package=\"patrol_service_cpp\",\n        # \u53ef\u6267\u884c\u6587\u4ef6\u540d\u79f0\n        executable=\"patrol_client\",\n        # \u8f93\u51fa\u65b9\u5f0f\uff0cscreen\u3001log\u3001both\u4e09\u79cd\n        output=\"screen\"\n    )\n    # \u52a8\u4f5c\u8282\u70b9\u58f0\u660e\n    action_node_turtlesim_node = launch_ros.actions.Node(\n        # \u529f\u80fd\u5305\u540d\u79f0\n        package=\"turtlesim\",\n        # \u53ef\u6267\u884c\u6587\u4ef6\u540d\u79f0\n        executable=\"turtlesim_node\",\n        # \u8f93\u51fa\u65b9\u5f0f\uff0cscreen\u3001log\u3001both\u4e09\u79cd\n        output=\"both\",\n        # 2.\u6dfb\u52a0\u53c2\u6570, 1.\u8282\u70b9\u53c2\u6570\uff1b2.\u66ff\u6362launch\u53c2\u6570\n        parameters=[{\n            \"background_r\": launch.substitutions.LaunchConfiguration(\"launch_arg_bg_r\", default=\"100\")}]\n    )\n    # \u5408\u6210\u542f\u52a8\u63cf\u8ff0\n    launch_description = launch.LaunchDescription([\n        # 3.\u6dfb\u52a0\u53c2\u6570\u52a8\u4f5c\n        action_declare_arg_background_r,\n        action_node_turtle_service,\n        action_node_turtle_client,\n        action_node_turtlesim_node\n    ])\n    return launch_description\n</code></pre>"},{"location":"study/ROS2/9-launch%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/#93-launch","title":"9.3 launch\u8fdb\u9636","text":"<p>launch\u6709\u52a8\u4f5c\u3001\u6761\u4ef6\u3001\u66ff\u6362\u4e09\u5927\u7ec4\u4ef6\uff0c\u5176\u4e2d\u52a8\u4f5c\u548c\u66ff\u6362\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u4e86\u4e00\u90e8\u5206\u5185\u5bb9\uff0c\u672c\u8282\u5c06\u4ecb\u7ecd\u5269\u4f59\u4e00\u4e9b\u5e38\u7528\u65b9\u6cd5\u3002</p> <ul> <li>\u52a8\u4f5c \uff1a\u5b9a\u4e49\u5728\u542f\u52a8\u8fc7\u7a0b\u4e2d\u8981\u6267\u884c\u7684\u5177\u4f53\u64cd\u4f5c\uff0c\u52a8\u4f5c\u53ef\u4ee5\u542f\u52a8\u8282\u70b9\u3001\u8c03\u7528\u7ec8\u7aef\u547d\u4ee4\u3001\u5b9a\u65f6\u542f\u52a8\u8282\u70b9\u3001\u6253\u5370\u65e5\u5fd7\u7b49\u3002</li> <li>\u66ff\u6362 \uff1a\u52a8\u6001\u751f\u6210\u914d\u7f6e\u503c\uff08\u5982\u53c2\u6570\u3001\u8def\u5f84\u3001\u73af\u5883\u53d8\u91cf\u7b49\uff09\u3002</li> <li>\u6761\u4ef6 \uff1a\u63a7\u5236\u52a8\u4f5c\u662f\u5426\u6267\u884c\uff08\u57fa\u4e8e\u5e03\u5c14\u8868\u8fbe\u5f0f\u6216\u73af\u5883\u53d8\u91cf\uff09\u3002</li> </ul>"},{"location":"study/ROS2/9-launch%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/#931","title":"9.3.1 \u52a8\u4f5c","text":"Python<pre><code>import launch\nimport launch.launch_description_sources\nimport launch_ros\nfrom ament_index_python.packages import get_package_share_directory\n\ndef generate_launch_description():\n    # \u5c0f\u6d77\u9f9f\u7684\u4e00\u4e2alaunch\u6587\u4ef6\u8def\u5f84\n    multisim_launch_path = [get_package_share_directory(\"turtlesim\"), \"/launch/\", \"multisim.launch.py\"]\n\n    # \u52a8\u4f5c1-\u542f\u52a8\u5176\u4ed6launch\u6587\u4ef6\n    action_include_launch = launch.actions.IncludeLaunchDescription(\n        # \u586b\u5165launch\u6587\u4ef6\u5730\u5740(\u5217\u8868\u62fc\u63a5)\n        launch.launch_description_sources.PythonLaunchDescriptionSource(\n            multisim_launch_path\n        )\n    )\n\n    # \u52a8\u4f5c2-\u6253\u5370\u65e5\u5fd7\n    action_log_info = launch.actions.LogInfo(\n        msg=str(multisim_launch_path)\n    )\n\n    # \u52a8\u4f5c3-\u6267\u884c\u7ec8\u7aef\u547d\u4ee4\n    action_cmd_ctrl = launch.actions.ExecuteProcess(\n        # \u5355\u4e2a\u6307\u4ee4\uff0c\u5217\u8868\u62fc\u63a5\uff0c\u4f8b\u5982 ['ros2', 'topic', 'list']\n        cmd=['rqt']\n    )\n\n    # \u52a8\u4f5c4-\u591a\u4e2a\u52a8\u4f5c \u7ec4\u6210 \u52a8\u4f5c\u7ec4\n    action_group = launch.actions.GroupAction([\n        # \u52a8\u4f5c5-\u5b9a\u65f6\u5668\uff0c\u5b9a\u65f6\u7b2c\u51e0\u79d2\u542f\u52a8\u4ec0\u4e48\u6307\u4ee4\n        launch.actions.TimerAction(period=2.0, actions=[action_include_launch]),\n        launch.actions.TimerAction(period=4.0, actions=[action_cmd_ctrl])\n    ])\n\n    # \u5408\u6210\u542f\u52a8\u63cf\u8ff0\n    launch_description = launch.LaunchDescription([\n        action_log_info,\n        action_group\n    ])\n    return launch_description\n</code></pre>"},{"location":"study/ROS2/9-launch%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/#932","title":"9.3.2 \u66ff\u6362\u548c\u6761\u4ef6","text":"<p>\u4f7f\u7528\u66ff\u6362\u548c\u6761\u4ef6\u63a7\u5236rqt\u7684\u542f\u52a8\u4e0e\u5426\u3002</p> <ol> <li>\u58f0\u660erqt\u542f\u52a8\u63a7\u5236\u53c2\u6570\u3002</li> <li>\u66ff\u6362launch\u53c2\u6570\u3002</li> <li>\u6dfb\u52a0\u6761\u4ef6\u53c2\u6570\u3002</li> </ol> Python<pre><code>import launch\nimport launch.launch_description_sources\nimport launch_ros\nfrom ament_index_python.packages import get_package_share_directory\n\ndef generate_launch_description():\n    # 1.\u58f0\u660erqt\u542f\u52a8\u63a7\u5236\u53c2\u6570\n    action_declare_arg_start_rqt = launch.actions.DeclareLaunchArgument(\n        \"launch_arg_start_rqt\",\n        default_value=\"False\"\n    )\n    # 2.\u66ff\u6362launch\u53c2\u6570\n    start_rqt = launch.substitutions.LaunchConfiguration(\n        \"launch_arg_start_rqt\",\n        default=\"False\"\n    )\n    # \u5c0f\u6d77\u9f9f\u7684\u4e00\u4e2alaunch\u6587\u4ef6\u8def\u5f84\n    multisim_launch_path = [get_package_share_directory(\"turtlesim\"), \"/launch/\", \"multisim.launch.py\"]\n\n    # \u52a8\u4f5c1-\u542f\u52a8\u5176\u4ed6launch\u6587\u4ef6\n    action_include_launch = launch.actions.IncludeLaunchDescription(\n        # \u586b\u5165launch\u6587\u4ef6\u5730\u5740(\u5217\u8868\u62fc\u63a5)\n        launch.launch_description_sources.PythonLaunchDescriptionSource(\n            multisim_launch_path\n        )\n    )\n\n    # \u52a8\u4f5c2-\u6253\u5370\u65e5\u5fd7\n    action_log_info = launch.actions.LogInfo(\n        msg=str(multisim_launch_path)\n    )\n\n    # \u52a8\u4f5c3-\u6267\u884c\u7ec8\u7aef\u547d\u4ee4\n    action_cmd_ctrl = launch.actions.ExecuteProcess(\n        # 3.\u6dfb\u52a0\u6761\u4ef6\n        condition=launch.conditions.IfCondition(start_rqt),\n        # \u5355\u4e2a\u6307\u4ee4\uff0c\u5217\u8868\u62fc\u63a5\uff0c\u4f8b\u5982 ['ros2', 'topic', 'list']\n        cmd=['rqt']\n    )\n\n    # \u52a8\u4f5c4-\u591a\u4e2a\u52a8\u4f5c \u7ec4\u6210 \u52a8\u4f5c\u7ec4\n    action_group = launch.actions.GroupAction([\n        # \u52a8\u4f5c5-\u5b9a\u65f6\u5668\uff0c\u5b9a\u65f6\u7b2c\u51e0\u79d2\u542f\u52a8\u4ec0\u4e48\u6307\u4ee4\n        launch.actions.TimerAction(period=2.0, actions=[action_include_launch]),\n        launch.actions.TimerAction(period=4.0, actions=[action_cmd_ctrl])\n    ])\n\n    # \u5408\u6210\u542f\u52a8\u63cf\u8ff0\n    launch_description = launch.LaunchDescription([\n        action_log_info,\n        action_group\n    ])\n    return launch_description\n</code></pre>"},{"location":"study/ROS2/New.ROS2%E4%BD%BF%E7%94%A8CAN/","title":"New.ROS2\u4e0eCAN\u603b\u7ebf","text":""},{"location":"study/ROS2/New.ROS2%E4%BD%BF%E7%94%A8CAN/#1-can_utils","title":"1. can_utils\u5de5\u5177","text":"<p><code>can-utils</code> \u662f\u4e00\u5957\u7528\u4e8eLinux\u64cd\u4f5c\u7cfb\u7edf\u7684\u5f00\u6e90\u5de5\u5177\uff0c\u4e13\u95e8\u7528\u6765\u5904\u7406\u4e0eCAN\uff08Controller Area Network\uff09\u603b\u7ebf\u76f8\u5173\u7684\u4efb\u52a1\u3002CAN\u603b\u7ebf\u5e7f\u6cdb\u5e94\u7528\u4e8e\u6c7d\u8f66\u548c\u5de5\u4e1a\u81ea\u52a8\u5316\u4e2d\uff0c\u7528\u4e8e\u8bbe\u5907\u4e4b\u95f4\u7684\u901a\u8baf\u3002 \u8fd9\u4e2a\u5de5\u5177\u96c6\u63d0\u4f9b\u4e86\u591a\u79cd\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u7528\u4e8e\u53d1\u9001\u3001\u63a5\u6536\u548c\u5904\u7406CAN\u7f51\u7edc\u4e0a\u7684\u6570\u636e\u3002</p> <p><code>can_utils</code> \u7684\u57fa\u672c\u4f7f\u7528\uff1a</p> <ul> <li>candump<ul> <li>\u529f\u80fd \uff1a\u6355\u83b7\u5e76\u663e\u793a\u901a\u8fc7CAN\u63a5\u53e3\u7684\u6570\u636e\u5e27\u3002</li> <li><code>candump can0</code> \u663e\u793a <code>can0</code> \u63a5\u53e3\u4e0a\u7684\u6240\u6709CAN\u6570\u636e\u3002</li> <li><code>candump can0,123:7FF</code> \u4ec5\u663e\u793aID\u8303\u56f4\u5728 <code>0x123</code> \u5230 <code>0x7FF</code> \u4e4b\u95f4\u7684CAN\u6570\u636e\u3002</li> <li><code>candump -l can0</code>\u8bb0\u5f55\u6570\u636e\u5230\u6587\u4ef6\uff0c\u9ed8\u8ba4\u6587\u4ef6\u540d\u683c\u5f0f\u4e3a <code>candump-\u65e5\u671f.log</code>\u3002</li> </ul> </li> <li>cansend<ul> <li>\u529f\u80fd \uff1a\u5411CAN\u603b\u7ebf\u53d1\u9001CAN\u6d88\u606f\u3002</li> <li><code>cansend can0 000#1122334455667788</code> \u5411 <code>can0</code> \u63a5\u53e3\u53d1\u9001\u4e00\u4e2aID\u4e3a <code>0x000</code> \u7684CAN\u5e27\uff0c\u6570\u636e\u4e3a <code>1122334455667788</code>\u3002</li> </ul> </li> <li>cangen<ul> <li>\u529f\u80fd \uff1a\u751f\u6210\u968f\u673aCAN\u6570\u636e\u5305\u5e76\u53d1\u9001\u5230CAN\u603b\u7ebf\u4e0a\u3002</li> <li><code>cangen can0</code> \u751f\u6210\u5e76\u53d1\u9001\u968f\u673aCAN\u6570\u636e\u5230 <code>can0</code> \u63a5\u53e3\u3002</li> </ul> </li> <li>canplayer<ul> <li>\u529f\u80fd \uff1a\u91cd\u653e <code>candump</code> \u8bb0\u5f55\u7684\u6570\u636e\u3002</li> <li><code>canplayer -I log.txt</code> \u91cd\u653e\u5b58\u50a8\u5728 <code>log.txt</code> \u6587\u4ef6\u4e2d\u7684CAN\u6570\u636e\u3002</li> </ul> </li> <li>cansniffer<ul> <li>\u529f\u80fd \uff1a\u663e\u793aCAN\u6570\u636e\u7684\u53d8\u5316\uff0c\u7c7b\u4f3c\u4e8eWireshark\u3002</li> <li><code>cansniffer can0</code> \u663e\u793a <code>can0</code> \u63a5\u53e3\u4e0a\u7684CAN\u6570\u636e\u53d8\u5316\u3002</li> </ul> </li> </ul> <p>\u914d\u7f6e\u542f\u52a8CAN\u63a5\u53e3\uff1a</p> Bash<pre><code># \u5173\u95edCAN0\u63a5\u53e3\nsudo ip link set can0 down\n# \u914d\u7f6eCAN\u63a5\u53e3\u6ce2\u7279\u7387 500000\nsudo ip link set can0 type can bitrate 500000\n# \u914d\u7f6e\u56de\u73af\u6d4b\u8bd5(\u81ea\u53d1\u81ea\u6536)\u6a21\u5f0f\nsudo ip link set can0 type can loopback on\n# \u542f\u52a8CAN0\u63a5\u53e3\nsudo ip link set can0 up\n</code></pre> <p>CAN\u901a\u4fe1\u539f\u7406\u63a8\u8350\u9605\u8bfb\uff1a\u7b2c\u5341\u4e8c\u7ae0 CAN - \u5c0f\u674e \u7684\u77e5\u8bc6\u5e93</p>"},{"location":"study/ROS2/New.ROS2%E4%BD%BF%E7%94%A8CAN/#2-ros2_socketcan","title":"2. ros2_socketcan\u6536\u53d1\u793a\u4f8b","text":""},{"location":"study/ROS2/New.ROS2%E4%BD%BF%E7%94%A8CAN/#21-ros2","title":"2.1 \u5b89\u88c5ROS2\u529f\u80fd\u5305","text":"Bash<pre><code>sudo apt install ros-humble-can-msgs\nsudo apt install ros-humble-ros2-socketcan\n</code></pre> <p>\u8fdb\u5165\u5de5\u4f5c\u7a7a\u95f4src\u76ee\u5f55\uff0c\u521b\u5efaCAN\u901a\u4fe1\u7684\u529f\u80fd\u5305</p> Bash<pre><code>ros2 pkg create can_bridge_cpp --build-type ament_cmake --dependencies rclcpp ros2_socketcan ros2_socketcan_msgs --license Apache-2.0\n</code></pre>"},{"location":"study/ROS2/New.ROS2%E4%BD%BF%E7%94%A8CAN/#22-can","title":"2.2 CAN\u53d1\u9001","text":"C++<pre><code>#include \"rclcpp/rclcpp.hpp\"\n#include \"ros2_socketcan/socket_can_sender.hpp\"\n#include \"can_msgs/msg/frame.hpp\"\n// can\u53d1\u9001\u8005\u5de5\u4f5c\u7a7a\u95f4\nusing namespace drivers::socketcan;\n// \u5b9a\u65f6\u5668\u65f6\u95f4\u53c2\u6570\u5de5\u4f5c\u7a7a\u95f4\nusing namespace std::chrono_literals;\n\nclass CanSender : public rclcpp::Node\n{\npublic:\n    /* \u6784\u9020\u51fd\u6570 */\n    CanSender(std::string name) : Node(name) {\n        RCLCPP_INFO(this-&gt;get_logger(), \"\u8282\u70b9\u7684\u540d\u79f0\u4e3a:%s.\",name.c_str());\n        /* \u521b\u5efa\u53d1\u9001\u8005 */\n        can_sender_ = std::make_shared&lt;SocketCanSender&gt;(\n            // can\u63a5\u53e3\n            \"can0\",\n            // \u542f\u7528can_fd\n            false,\n            // \u9ed8\u8ba4\u914d\u7f6e\n            CanId(\n                // \u9ed8\u8ba4ID\n                0x123, \n                // \u65f6\u95f4\u6233\uff0c0\u8868\u793a\u7acb\u5373\u53d1\u9001\n                0,\n                // \u6570\u636e\u5e27\u3001\u9065\u63a7\u5e27\u3001\u9519\u8bef\u5e27\n                FrameType::DATA,\n                // \u6807\u51c6\u683c\u5f0f\u3001\u6269\u5c55\u683c\u5f0f\n                StandardFrame_{}) \n        );\n        /* \u521b\u5efa\u5b9a\u65f6\u5668 */\n        timer_ = this-&gt;create_wall_timer(1s, std::bind(&amp;CanSender::TimerCallback, this));\n    }\n\nprivate:\n    /* \u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570 */\n    void TimerCallback(void) {\n        RCLCPP_INFO(this-&gt;get_logger(), \"\u56de\u8c03\u51fd\u6570\uff01\");\n        /* \u521d\u59cb\u5316\u53d1\u9001\u7684\u6d88\u606f */\n        unsigned char messages[] = {0xCE, 0xBD, 0xEE, 0xFF};\n        can_sender_-&gt;send(\n            // \u5fc5\u8981\u53c2\u6570\n            messages,\n            // \u7075\u6d3b\u914d\u7f6e(\u9009\u914d)\n            CanId(\n                // \u9ed8\u8ba4ID\n                0x126, \n                // \u65f6\u95f4\u6233\uff0c0\u8868\u793a\u7acb\u5373\u53d1\u9001\n                0,\n                // \u6570\u636e\u5e27\u3001\u9065\u63a7\u5e27\u3001\u9519\u8bef\u5e27\n                FrameType::DATA,\n                // \u6807\u51c6\u683c\u5f0f\u3001\u6269\u5c55\u683c\u5f0f\n                StandardFrame_{}),\n            // \u9009\u914d\n            100ms\n        );\n    }\n    std::shared_ptr&lt;drivers::socketcan::SocketCanSender&gt; can_sender_;\n    std::shared_ptr&lt;drivers::socketcan::SocketCanReceiver&gt; can_receiver_;\n    rclcpp::TimerBase::SharedPtr timer_;\n};\n\nint main(int argc, char * argv[])\n{\n    rclcpp::init(argc, argv);\n    auto node = std::make_shared&lt;CanSender&gt;(\"can_sender\");\n    rclcpp::spin(node);\n    rclcpp::shutdown();\n    return 0;\n}\n</code></pre> <p>\u914d\u7f6e<code>CMakeLists.txt</code>\u6587\u4ef6\uff0c\u5982\u4e0b\u662f\u9700\u6dfb\u52a0\u5185\u5bb9\uff1a</p> CMake<pre><code>add_executable(can_sender_cpp src/can_sender.cpp)\n\nament_target_dependencies(\n  can_sender_cpp\n  \"rclcpp\"\n  \"ros2_socketcan\"\n  \"ros2_socketcan_msgs\"\n)\n\ninstall(TARGETS\ncan_sender_cpp\n  DESTINATION lib/${PROJECT_NAME}\n)\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"study/ROS2/New.ROS2%E4%BD%BF%E7%94%A8CAN/#23-can","title":"2.3 CAN\u63a5\u6536","text":"C++<pre><code>#include \"rclcpp/rclcpp.hpp\"\n#include \"ros2_socketcan/socket_can_receiver.hpp\"\n#include \"can_msgs/msg/frame.hpp\"\n\n// can\u63a5\u6536\u8005\u8005\u5de5\u4f5c\u7a7a\u95f4\nusing namespace drivers::socketcan;\n// \u5b9a\u65f6\u5668\u65f6\u95f4\u53c2\u6570\u5de5\u4f5c\u7a7a\u95f4\nusing namespace std::chrono_literals;\n\nclass CanReceiver : public rclcpp::Node\n{\npublic:\n    /* \u6784\u9020\u51fd\u6570 */\n    CanReceiver(std::string name) : Node(name)\n    {\n        RCLCPP_INFO(this-&gt;get_logger(), \"\u8282\u70b9\u7684\u540d\u79f0\u4e3a:%s.\", name.c_str());\n        can_receiver_ = std::make_shared&lt;SocketCanReceiver&gt;(\n            \"can0\",\n            // \u662f\u5426\u4f7f\u7528\u9ad8\u901fCAN\n            false\n        );\n        timer_ = this-&gt;create_wall_timer(500ms, std::bind(&amp;CanReceiver::TimerCallback, this));\n    }\n\n\nprivate:\n    void TimerCallback(void)\n    {\n        try {\n            RCLCPP_INFO(this-&gt;get_logger(), \"\u56de\u8c03\u51fd\u6570\uff01\");\n            unsigned char message[4] = {0};\n            can_id = can_receiver_-&gt;receive(message, 100us);\n            RCLCPP_INFO(\n                this-&gt;get_logger(),\n                \"ID\uff1a%d, \u662f\u5426\u6269\u5c55\u683c\u5f0f\uff1a%s, \u5e27\u683c\u5f0f\uff1a%d, \u6570\u636e\u957f\u5ea6\uff1a%u\",\n                can_id.get(), \n                can_id.is_extended() ? \"\u662f\" : \"\u5426\", \n                static_cast&lt;int&gt;(can_id.frame_type()),\n                can_id.length()\n            );\n            uint32_t length = can_id.length();\n            for (uint32_t i = 0 ; i &lt; length ; i++) {\n                RCLCPP_INFO(\n                this-&gt;get_logger(), \n                \"\u6570\u636e[%d]\uff1a%d\",\n                i,\n                message[i]\n                );\n            }\n        }\n        catch (const SocketCanTimeout&amp; e) {\n            RCLCPP_DEBUG(this-&gt;get_logger(), \"\u63a5\u6536\u8d85\u65f6\uff08\u6b63\u5e38\u73b0\u8c61\uff09\");\n        }\n        catch (const std::exception&amp; e) {\n            RCLCPP_ERROR(this-&gt;get_logger(), \"\u63a5\u6536\u9519\u8bef: %s\", e.what());\n        }\n    }\n    std::shared_ptr&lt;drivers::socketcan::SocketCanReceiver&gt; can_receiver_;\n    rclcpp::TimerBase::SharedPtr timer_;\n    CanId can_id;\n};\n\nint main(int argc, char *argv[])\n{\n    rclcpp::init(argc, argv);\n    auto node = std::make_shared&lt;CanReceiver&gt;(\"can_receiver\");\n    rclcpp::spin(node);\n    rclcpp::shutdown();\n    return 0;\n}\n</code></pre> <p>\u26a0\u6709\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\uff0c<code>unsigned char message[4] = {0};</code>\u63a5\u6536\u6570\u636e\u7684\u6570\u7ec4\u8981\u548c\u53d1\u9001\u7684\u5b57\u8282\u6570\u4e00\u81f4\uff0c\u5426\u5219\u4f1a\u62a5\u4e00\u4e2a\u9519\uff1a</p> <p></p> <p>\u5f53\u7136\u8fd9\u6837\u505a\u4e2a\u4eba\u8ba4\u4e3a\u5e76\u975e\u597d\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u4f46\u6682\u65f6\u8fd8\u672a\u627e\u5230\u5408\u9002\u7684\u89e3\u51b3\u65b9\u6848\u3002\u53ea\u80fd\u53d1\u9001\u65b9\u6309\u4f20\u7edfCAN\u534f\u8bae\u7684\u6700\u5927\u5b57\u8282\u6570 8 \uff0c\u6ca1\u6709\u7528\u7684\u4f4d\u7f6e <code>0x00</code>\u3002</p> <p>\u8fd0\u884c\u7ed3\u679c\uff0c<code>291</code>\u4e3a\u62a5\u6587ID\uff1a</p> <p></p>"},{"location":"study/ROS2/T-ROS2%E4%B8%AD%E7%9A%84C%2B%2B%E6%96%B0%E7%89%B9%E6%80%A7/","title":"\u7279\u522b\u7bc7 ROS2\u4e2d\u7684C++\u65b0\u7279\u6027","text":"<p>\u6b64\u7bc7\u7ae0\u5bf9\u4e8e\u540e\u7eedROS2\u8bed\u6cd5\u7684\u7406\u89e3\u6709\u5f88\u91cd\u8981\u7684\u5e2e\u52a9\uff0c\u4e00\u5b9a\u4ed4\u7ec6\u7406\u89e3\u5b66\u4e60\u3002\u8be5\u7b14\u8bb0\u662f\u5728\u542c\u5b8cfishros\u7684ROS2\u4e66\u7c4d\u8bfe\u7a0b\u540e\u603b\u7ed3\uff0c\u793a\u4f8b\u5185\u5bb9\u4e0d\u5b8c\u5168\u4e00\u6837\uff0c\u82e5\u6709\u4e0d\u61c2\uff0c\u53ef\u4ee5\u89c2\u770bfishros\u7684B\u7ad9\u89c6\u9891\u300aROS 2\u673a\u5668\u4eba\u5f00\u53d1\u4ece\u5165\u95e8\u5230\u5b9e\u8df5\u300b2.5.2\u7528\u5f97\u5230\u7684C++\u65b0\u7279\u6027</p>"},{"location":"study/ROS2/T-ROS2%E4%B8%AD%E7%9A%84C%2B%2B%E6%96%B0%E7%89%B9%E6%80%A7/#1-auto","title":"1. \u81ea\u52a8\u7c7b\u578b\u5224\u65ad\uff08auto\uff09","text":"<p><code>auto</code> \u662f\u4e00\u79cd\u5173\u952e\u5b57\uff0c\u5141\u8bb8\u7f16\u8bd1\u5668\u6839\u636e\u53d8\u91cf\u7684\u521d\u59cb\u503c\u81ea\u52a8\u63a8\u5bfc\u5176\u7c7b\u578b\u3002\u5728\u4e00\u822c\u7684\u5de5\u7a0b\u4e2d\uff0c\u53ea\u6709<code>int</code> \u3001 <code>float</code> \u3001 <code>char*</code> \u7b49\u6570\u636e\u7c7b\u578b\u5219\u4f53\u73b0\u4e0d\u51fa\u6765\u5b83\u7684\u4fbf\u6377\uff0c\u4f46\u662f\u5728ROS 2 \u4e2d\u666e\u904d\u5b58\u5728\u540d\u79f0\u5f88\u957f\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6bd4\u5982 \uff1a</p> C++<pre><code>auto node = std::make_shared&lt;MiniPublisher&gt;(\"publisher_cpp_node\");\n// \u6b64\u65f6node\u7684\u6570\u636e\u7c7b\u578b\u5e94\u8be5\u662f std::shared_ptr&lt;MiniPublisher&gt; \n// \u82e5\u4e0d\u4f7f\u7528auto\uff0c\u5219\u5e94\u8be5\u5199\u51fa\u4e0b\u9762\u8fd9\u6837\uff0c\u663e\u7136\u4f1a\u9ebb\u70e6\u5f88\u591a\u3002\nstd::shared_ptr&lt;MiniPublisher&gt; node = std::make_shared&lt;MiniPublisher&gt;(\"publisher_cpp_node\");\n</code></pre>"},{"location":"study/ROS2/T-ROS2%E4%B8%AD%E7%9A%84C%2B%2B%E6%96%B0%E7%89%B9%E6%80%A7/#2-make_shared","title":"2. \u667a\u80fd\u5171\u4eab\u6307\u9488\uff08make_shared\uff09","text":"<p>\u667a\u80fd\u5171\u4eab\u6307\u9488 <code>std::make_shared</code> \uff0c\u5728C++ 11 \u6807\u51c6\u65f6\u5f15\u5165\uff0c\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u5e76\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u8be5\u5bf9\u8c61\u7684 <code>std::shared_ptr</code>\u3002\u5b83\u7b80\u5316\u4e86\u52a8\u6001\u5185\u5b58\u5206\u914d\u7684\u8fc7\u7a0b\uff0c\u5e76\u5177\u6709\u6027\u80fd\u548c\u5b89\u5168\u6027\u4e0a\u7684\u4f18\u52bf\u3002</p> Bash<pre><code>auto ptr = std::make_shared&lt;T&gt;(constructor_args...);\n</code></pre> <ul> <li><code>T</code>: \u6307\u5b9a\u7684\u5bf9\u8c61\u7c7b\u578b\u3002</li> </ul> <ul> <li><code>constructor_args...</code> : \u4f20\u9012\u7ed9\u5bf9\u8c61 <code>T</code> \u7684\u6784\u9020\u51fd\u6570\u53c2\u6570\u3002</li> </ul> <p>\u540e\u7eed\u6700\u7ecf\u5e38\u4f7f\u7528\u7684\u4e00\u4e2a\u573a\u666f\u5c31\u662f\uff0c\u5728\u521d\u59cb\u5316\u8282\u70b9\u5bf9\u8c61\u65f6\uff1a</p> C++<pre><code>/*\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61 node\n  \u4f7f\u7528 auto \u81ea\u52a8\u5224\u65ad\u6570\u636e\u7c7b\u578b\n  \u6307\u5411 MiniPublisher \n  \u4f20\u9012\u4e00\u4e2a\u53c2\u6570\uff0c\u5373\u8282\u70b9\u540d\u79f0\n*/\nauto node = std::make_shared&lt;MiniPublisher&gt;(\"publisher_cpp_node\");\n</code></pre> <p>\u6709\u5bf9\u6bd4\u624d\u6709\u4f24\u5bb3\uff0c\u5171\u4eab\u6307\u9488\u4e0e\u666e\u901a\u6307\u9488\u5bf9\u6bd4\uff1a</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\n\nint main()\n{\n    // \u5171\u4eab\u6307\u9488\n    auto p1 = std::make_shared&lt;std::string&gt;(\"\u5171\u4eab\u6307\u9488\u3002\");\n    std::cout &lt;&lt; \"p1\u5f15\u7528\u8ba1\u6570:\" &lt;&lt; p1.use_count() &lt;&lt; \"\uff0cp1\u7684\u5730\u5740:\"&lt;&lt; p1.get() &lt;&lt; std::endl;\n    auto p2 = p1;\n    std::cout &lt;&lt; \"p2\u5f15\u7528\u8ba1\u6570:\" &lt;&lt; p2.use_count() &lt;&lt; \"\uff0cp2\u7684\u5730\u5740:\"&lt;&lt; p2.get() &lt;&lt; std::endl;\n    // \u666e\u901a\u6307\u9488\n    int* p3 = new int(3);\n    int** p4 = &amp;p3;\n    std::cout &lt;&lt;\"p3\u7684\u5730\u5740:\"&lt;&lt; &amp;p3 &lt;&lt; std::endl;\n    std::cout &lt;&lt;\"p4\u7684\u5730\u5740:\"&lt;&lt; &amp;p4 &lt;&lt; std::endl;\n    delete p3;  // \u91ca\u653e p3 \u6307\u5411\u7684\u5185\u5b58\n    p3 = nullptr; // \u907f\u514d\u60ac\u6302\u6307\u9488\n    return 0;\n}\n// \u8fd4\u56de\u503c\n/*p1\u5f15\u7528\u8ba1\u6570:1\uff0cp1\u7684\u5730\u5740:0x5b4e5e87fec0\n  p2\u5f15\u7528\u8ba1\u6570:2\uff0cp2\u7684\u5730\u5740:0x5b4e5e87fec0\n  p3\u7684\u5730\u5740:0x7fff273f9fe0\n  p4\u7684\u5730\u5740:0x7fff273f9fe8*/\n</code></pre> <p>\u666e\u901a\u6307\u9488 vs. \u5171\u4eab\u6307\u9488</p> \u5bf9\u6bd4\u70b9 \u666e\u901a\u6307\u9488 \u5171\u4eab\u6307\u9488 \u5185\u5b58\u7ba1\u7406 \u9700\u8981\u663e\u5f0f\u8c03\u7528 <code>delete</code> \u81ea\u52a8\u7ba1\u7406\u5185\u5b58\uff0c\u5f15\u7528\u8ba1\u6570\u4e3a 0 \u65f6\u91ca\u653e \u5171\u4eab\u6240\u6709\u6743 \u9700\u8981\u624b\u52a8\u7ba1\u7406\u591a\u4e2a\u6307\u9488\u7684\u5173\u7cfb \u652f\u6301\u5171\u4eab\u6240\u6709\u6743 \u5f02\u5e38\u5b89\u5168 \u5f02\u5e38\u65f6\u53ef\u80fd\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f \u81ea\u52a8\u91ca\u653e\u5185\u5b58\uff0c\u65e0\u6cc4\u6f0f \u590d\u6742\u6027 \u624b\u52a8\u7ba1\u7406\u5bb9\u6613\u51fa\u9519 \u63d0\u4f9b\u66f4\u9ad8\u7684\u4ee3\u7801\u5b89\u5168\u6027 \u6027\u80fd \u66f4\u9ad8\u6548\uff0c\u4f46\u5bb9\u6613\u51fa\u9519 \u7a0d\u6709\u6027\u80fd\u5f00\u9500\uff0c\u4f46\u66f4\u5b89\u5168 \u4f7f\u7528\u573a\u666f \u9002\u5408\u7b80\u5355\u573a\u666f \u9002\u5408\u590d\u6742\u8d44\u6e90\u5171\u4eab\u573a\u666f"},{"location":"study/ROS2/T-ROS2%E4%B8%AD%E7%9A%84C%2B%2B%E6%96%B0%E7%89%B9%E6%80%A7/#3-lamada","title":"3. Lamada\u8868\u8fbe\u5f0f","text":"C++<pre><code>[capture](parameter_list) -&gt; return_type {\n    // \u51fd\u6570\u4f53\n};\n</code></pre> <p>\u53c2\u6570\u4ecb\u7ecd\uff1a</p> <p><code>capture</code></p> <ul> <li>\u6307\u5b9a Lambda \u8868\u8fbe\u5f0f\u5982\u4f55\u6355\u83b7\u5916\u90e8\u4f5c\u7528\u57df\u7684\u53d8\u91cf</li> </ul> <ul> <li> <p>\u6355\u83b7\u5217\u8868\u7528\u4e8e\u5b9a\u4e49\u5982\u4f55\u8bbf\u95ee\u5916\u90e8\u53d8\u91cf\uff1a</p> <ul> <li><code>[ ]</code>\uff1a\u4e0d\u6355\u83b7\u4efb\u4f55\u5916\u90e8\u53d8\u91cf\u3002</li> <li><code>[x]</code>\uff1a\u6309\u503c\u6355\u83b7\u53d8\u91cf <code>x</code>\u3002</li> <li><code>[&amp;x]</code>\uff1a\u6309\u5f15\u7528\u6355\u83b7\u53d8\u91cf <code>x</code>\u3002</li> <li><code>[=]</code>\uff1a\u6309\u503c\u6355\u83b7\u6240\u6709\u5916\u90e8\u53d8\u91cf\u3002</li> <li><code>[&amp;]</code>\uff1a\u6309\u5f15\u7528\u6355\u83b7\u6240\u6709\u5916\u90e8\u53d8\u91cf\u3002</li> <li><code>[this]</code>\uff1a\u6355\u83b7\u5f53\u524d\u7c7b\u7684 <code>this</code> \u6307\u9488\u3002</li> </ul> </li> </ul> <p><code>parameter_list</code></p> <ul> <li>\u4f20\u9012\u7ed9 Lambda \u7684\u53c2\u6570</li> </ul> <p><code>return_type</code></p> <ul> <li>\u8fd4\u56de\u7c7b\u578b</li> </ul> <p>\u793a\u4f8b:</p> C++<pre><code>int main()\n{\n    // \u65e0\u6355\u83b7\n    auto add1 = [](int a, int b) -&gt; int\n    {\n        return a + b;\n    };\n    int sum1 = add1(1, 4);\n    // \u6355\u83b7x\uff0cy\u53c2\u6570\n    int x = 10, y = 20;\n    auto add2 = [x, y]() -&gt; int\n    {\n        return x + y;\n    };\n    int sum2 = add2();\n    std::cout &lt;&lt; \"sum1:\" &lt;&lt; sum1 &lt;&lt; \"--sum2:\" &lt;&lt; sum2 &lt;&lt; std::endl;\n\n    return 0;\n}\n// out: sum1:5--sum2:30\n</code></pre>"},{"location":"study/ROS2/T-ROS2%E4%B8%AD%E7%9A%84C%2B%2B%E6%96%B0%E7%89%B9%E6%80%A7/#4","title":"4. \u51fd\u6570\u5305\u88c5\u5668","text":"C++<pre><code>#include &lt;iostream&gt;\n#include &lt;functional&gt;\n\n// \u81ea\u7531\u51fd\u6570\nvoid file_free_func(const std::string filename) \n{\n    std::cout &lt;&lt; \"\u81ea\u7531\u51fd\u6570\" &lt;&lt; filename &lt;&lt; std::endl;\n}\n\nclass FileSave\n{\npublic:\n    // \u6210\u5458\u51fd\u6570\n    void member_func(const std::string filename)\n    {\n        std::cout &lt;&lt; \"\u6210\u5458\u51fd\u6570\" &lt;&lt; filename &lt;&lt; std::endl;\n    }\n};\n\n\nint main()\n{\n    FileSave file_save;\n    // lamada\u51fd\u6570\n    auto file_lamada_func = [](const std::string &amp;filename) -&gt; void\n    {\n        std::cout &lt;&lt; \"lamada\u51fd\u6570\" &lt;&lt; filename &lt;&lt; std::endl;\n    };\n\n    /*\u539f\u59cb\u8c03\u7528\u65b9\u5f0f\n        file_free_func(\"aini.txt\");\n        file_save.member_func(\"aini.txt\");\n        file_lamada_func(\"aini.txt\");\n    */\n\n    // \u81ea\u7531\u51fd\u6570\u653e\u8fdb\u51fd\u6570\u5305\u88c5\u5668\n    std::function&lt;void(const std::string&amp;)&gt; save1 = file_free_func;\n    // lamada\u51fd\u6570\u653e\u8fdb\u51fd\u6570\u5305\u88c5\u5668\n    std::function&lt;void(const std::string&amp;)&gt; save2 = file_lamada_func;\n    // \u6210\u5458\u51fd\u6570\u653e\u8fdb\u51fd\u6570\u5305\u88c5\u5668\n    /*\u5173\u4e8estd::bind\u53c2\u6570\n    1-\u6210\u5458\u51fd\u6570\uff0c2-\u5bf9\u8c61\uff0c3-\u5360\u4f4d\u7b26\uff08\u6839\u636e\u6210\u5458\u51fd\u6570\u9700\u8981\u7684\u53c2\u6570\u51b3\u5b9a\uff09\n    */\n    std::function&lt;void(const std::string&amp;)&gt; save3 = std::bind(&amp;FileSave::member_func, &amp;file_save, std::placeholders::_1);\n    // \u5305\u88c5\u540e\u7edf\u4e00\u8c03\u7528\u65b9\u5f0f\n    save1(\"aini.txt\");\n    save2(\"aini.txt\");\n    save3(\"aini.txt\");\n\n    return 0;\n}\n</code></pre> <p>out\uff1a</p> Text Only<pre><code>\u81ea\u7531\u51fd\u6570aini.txt\nlamada\u51fd\u6570aini.txt\n\u6210\u5458\u51fd\u6570aini.txt\n</code></pre>"},{"location":"study/ROS2/T-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A5%E5%8F%A3/","title":"\u7279\u522b\u7bc7 \u81ea\u5b9a\u4e49\u63a5\u53e3\u63cf\u8ff0\u89c4\u8303\uff08\u5b98\u65b9\u6587\u6863\u7248\uff09","text":""},{"location":"study/ROS2/T-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A5%E5%8F%A3/#1","title":"1. \u81ea\u5b9a\u4e49\u63a5\u53e3\u4ecb\u7ecd","text":"<p>ROS \u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u901a\u8fc7\u4ee5\u4e0b\u4e09\u79cd\u7c7b\u578b\u4e4b\u4e00\u8fdb\u884c\u901a\u4fe1\uff1a\u4e3b\u9898\u3001\u670d\u52a1 \u6216 \u52a8\u4f5c\u3002 ROS2 \u4f7f\u7528\u7b80\u5316\u7684\u63cf\u8ff0\u8bed\u8a00\uff0c\u5373\u63a5\u53e3\u5b9a\u4e49\u8bed\u8a00 \uff08IDL\uff09 \u6765\u63cf\u8ff0\u8fd9\u4e9b\u63a5\u53e3\u3002 \u6b64\u63cf\u8ff0\u4f7f ROS \u5de5\u5177\u53ef\u4ee5\u8f7b\u677e\u5730\u81ea\u52a8\u751f\u6210\u591a\u79cd\u76ee\u6807\u8bed\u8a00\u7684\u754c\u9762\u7c7b\u578b\u7684\u6e90\u4ee3\u7801\u3002</p> <p>\u63a5\u53e3\u652f\u6301\u7684\u4e09\u79cd\u7c7b\u578b\uff1a</p> <ul> <li>msg\uff1a\u6587\u4ef6\u662f\u63cf\u8ff0 ROS \u6d88\u606f\u5b57\u6bb5\u7684\u7b80\u5355\u6587\u672c\u6587\u4ef6\u3002\u5b83\u4eec\u7528\u4e8e\u4e3a\u4e0d\u540c\u8bed\u8a00\u7684\u6d88\u606f\u751f\u6210\u6e90\u4ee3\u7801\u3002<code>.msg</code></li> <li>srv\uff1a\u6587\u4ef6\u63cf\u8ff0\u670d\u52a1\u3002\u5b83\u4eec\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a\u8bf7\u6c42\u548c\u54cd\u5e94\u3002\u8bf7\u6c42\u548c\u54cd\u5e94\u662f\u6d88\u606f\u58f0\u660e\u3002<code>.srv</code></li> <li>action\uff1a\u6587\u4ef6\u63cf\u8ff0\u64cd\u4f5c\u3002\u5b83\u4eec\u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1a\u76ee\u6807\u3001\u7ed3\u679c\u548c\u53cd\u9988\u3002 \u6bcf\u4e2a\u90e8\u5206\u672c\u8eab\u90fd\u662f\u4e00\u4e2a\u6d88\u606f\u58f0\u660e\u3002<code>.action</code></li> </ul>"},{"location":"study/ROS2/T-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A5%E5%8F%A3/#11-msg","title":"1.1 msg\u6587\u4ef6","text":"<ul> <li>msg\u6587\u4ef6\u662f\u7528\u4e8e\u5b9a\u4e49\u8bdd\u9898\u901a\u4fe1\u4e2d\u6570\u636e\u8f7d\u4f53\u7684\u63a5\u53e3\u6587\u4ef6\u3002\u5728ROS\u5305\u7684 <code>msg/</code> \u76ee\u5f55\u4e0b\u7684 <code>.msg</code> \u6587\u4ef6\u4e2d\u63cf\u8ff0\u548c\u5b9a\u4e49\u7684\u3002</li> <li>\u5728\u6587\u4ef6\u4e2d\u58f0\u660e\u4e00\u4e9b\u88ab\u4f20\u8f93\u7684\u7c7b\u4f3c\u4e8eC++\u53d8\u91cf\u7684\u6570\u636e\u3002</li> </ul> <p>\u6bcf\u4e2a\u5b57\u6bb5\u7531\u4e00\u4e2a\u7c7b\u578b\u548c\u4e00\u4e2a\u540d\u79f0\u7ec4\u6210\uff0c\u7528\u4e00\u4e2a\u7a7a\u683c\u5206\u9694\uff0c\u5373:</p> Text Only<pre><code>int32 my_int\nstring my_string\n</code></pre>"},{"location":"study/ROS2/T-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A5%E5%8F%A3/#12-srv","title":"1.2 srv\u6587\u4ef6","text":"<ul> <li>srv\u6587\u4ef6\u662f\u7528\u4e8e\u5b9a\u4e49\u670d\u52a1\u901a\u4fe1\u4e2d\u6570\u636e\u8f7d\u4f53\u7684\u63a5\u53e3\u6587\u4ef6\uff0c\u5728ROS\u5305\u7684 <code>srv/</code> \u76ee\u5f55\u4e0b\u7684 <code>.srv</code> \u6587\u4ef6\u4e2d\u63cf\u8ff0\u548c\u5b9a\u4e49\u3002</li> <li>\u670d\u52a1\u63cf\u8ff0\u6587\u4ef6\u7531 \u4e00\u4e2a\u8bf7\u6c42\u548c\u4e00\u4e2a\u54cd\u5e94 msg\u7c7b\u578b\u7ec4\u6210\uff0c\u4ee5 \u201c---\u201d \u5206\u9694\uff0c\u4e0a\u534a\u90e8\u5206\u7528\u4e8e\u58f0\u660e\u8bf7\u6c42\u6570\u636e\uff0c\u4e0b\u534a\u90e8\u5206\u7528\u4e8e\u58f0\u660e\u54cd\u5e94\u6570\u636e\u3002</li> </ul> <p>\u5b9e\u4f8b\uff08\u670d\u52a1\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32\u5e76\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\uff09\uff1a</p> Text Only<pre><code>string str1\nstring str2\n---\nstring str\n</code></pre> <p>\u590d\u6742\u7684\u5b9e\u4f8b\uff08\u201c#\u201d\u540e\u9762\u7684\u662f\u6ce8\u91ca\uff09\uff1a</p> Text Only<pre><code># request constants\nint8 FOO=1\nint8 BAR=2\n# request fields\nint8 foobar\nanother_pkg/AnotherMessage msg\n---\n# response constants\nuint32 SECRET=123456\n# response fields\nanother_pkg/YetAnotherMessage val\nCustomMessageDefinedInThisPackage value\nuint32 an_integer\n</code></pre>"},{"location":"study/ROS2/T-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A5%E5%8F%A3/#13-action","title":"1.3 action\u6587\u4ef6","text":"<ul> <li>action\u6587\u4ef6\u4f7f\u7528\u7528\u4e8e\u5b9a\u4e49\u52a8\u4f5c\u901a\u4fe1\u4e2d\u6570\u636e\u8f7d\u4f53\u7684\u63a5\u53e3\u6587\u4ef6</li> </ul> <ul> <li>\u52a8\u4f5c\uff08actions\uff09\u7531\u76ee\u6807\u3001\u7ed3\u679c\u548c\u53cd\u9988\u4e09\u90e8\u5206\u7ec4\u6210\uff0c\u6240\u4ee5\u6bcf\u4e2a\u90e8\u5206\u5e94\u7531<code>\u201c---\u201d</code>\u533a\u5206\u5f00\u6765\uff0c\u4e0a\u534a\u90e8\u5206\u7528\u4e8e\u58f0\u660e\u8bf7\u6c42\u6570\u636e\uff0c\u4e2d\u95f4\u90e8\u5206\u7528\u4e8e\u58f0\u660e\u54cd\u5e94\u6570\u636e\uff0c\u4e0b\u534a\u90e8\u5206\u7528\u4e8e\u58f0\u660e\u8fde\u7eed\u53cd\u9988\u6570\u636e\u3002</li> </ul> <p>\u52a8\u4f5c\u7684\u5b9a\u4e49\u5f62\u5f0f\uff1a</p> Text Only<pre><code>&lt;request_type&gt; &lt;request_fieldname&gt;\n---\n&lt;response_type&gt; &lt;response_fieldname&gt;\n---\n&lt;feedback_type&gt; &lt;feedback_fieldname&gt;\n</code></pre> <p>\u53ef\u4ee5\u6709\u4efb\u610f\u6570\u91cf\u7684\u8bf7\u6c42\u5b57\u6bb5\uff08\u5305\u62ec**\u96f6**\uff09\u3001\u4efb\u610f\u6570\u91cf\u7684\u54cd\u5e94\u5b57\u6bb5\uff08\u5305\u62ec**\u96f6**\uff09\u548c\u4efb\u610f\u6570\u91cf\u7684\u53cd\u9988\u5b57\u6bb5\uff08\u5305\u62ec**\u96f6**\uff09\u3002</p> <p>\u5b9e\u4f8b\uff1a</p> Text Only<pre><code># Goal: \u8981\u79fb\u52a8\u7684\u8ddd\u79bb\nfloat32 distance\n---\n# Result: \u6700\u7ec8\u7684\u4f4d\u7f6e\nfloat32 pose\n---\n# Feedback: \u4e2d\u95f4\u53cd\u9988\u7684\u4f4d\u7f6e\u548c\u72b6\u6001\nfloat32 pose\nuint32 status\nuint32 STATUS_MOVEING = 3\nuint32 STATUS_STOP = 4\n</code></pre>"},{"location":"study/ROS2/T-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A5%E5%8F%A3/#2","title":"2. \u539f\u59cb\u6570\u636e\u7c7b\u578b\u4ecb\u7ecd","text":"<p>\u5b57\u6bb5\u7c7b\u578b\u53ef\u4ee5\u662f:</p> <ul> <li>\u5185\u7f6e\u7c7b\u578b</li> <li>ROS2\u81ea\u5df1\u5b9a\u4e49\u7684\u6d88\u606f\u63cf\u8ff0\u7684\u540d\u79f0\uff0c\u5982 \"geometry_msgs/PoseStamped\" </li> </ul> <p>\u76ee\u524d\u652f\u6301\u7684\u5185\u7f6e\u7c7b\u578b : </p> \u7c7b\u578b\u540d\u79f0 C++ Python DDS \u7c7b\u578b [Alyssa@10122] bool bool builtins.bool boolean byte uint8_t builtins.bytes* octet char char builtins.str* char float32 float builtins.float* float float64 double builtins.float* double int8 int8_t builtins.int* octet uint8 uint8_t builtins.int* octet int16 int16_t builtins.int* short uint16 uint16_t builtins.int* unsigned short int32 int32_t builtins.int* long uint32 uint32_t builtins.int* unsigned long int64 int64_t builtins.int* long long uint64 uint64_t builtins.int* unsigned long long string std::string builtins.str string wstring std::u16string builtins.str wstring <p>\u6bcf\u4e2a\u5185\u7f6e\u7c7b\u578b\u90fd\u53ef\u4ee5\u7528\u6765\u5b9a\u4e49\u6570\u7ec4 : [Alyssa@10164]</p> \u7c7b\u578b\u540d\u79f0 C++ Python DDS \u7c7b\u578b [Alyssa@10122] static array std::array builtins.list* T[N] unbounded dynamic array std::vector builtins.list sequence bounded dynamic array custom_class builtins.list* sequence bounded string std::string builtins.str* string <p>\u5b98\u65b9\u5b9e\u4f8b\uff1a</p> Text Only<pre><code>int32[] unbounded_integer_array\nint32[5] five_integers_array\nint32[&lt;=5] up_to_five_integers_array\n\nstring string_of_unbounded_size\nstring&lt;=10 up_to_ten_characters_string\n\nstring[&lt;=5] up_to_five_unbounded_strings\nstring&lt;=10[] unbounded_array_of_string_up_to_ten_characters each\nstring&lt;=10[&lt;=5] up_to_five_strings_up_to_ten_characters_each\n</code></pre> <p>\u5b57\u6bb5\u540d\u5fc5\u987b\u662f\u5c0f\u5199\u5b57\u6bcd\u548c\u6570\u5b57\u5b57\u7b26\uff0c\u7528\u4e0b\u5212\u7ebf\u5206\u9694\u5355\u8bcd\u3002\u5b83\u4eec\u5fc5\u987b\u4ee5\u5b57\u6bcd\u5b57\u7b26\u5f00\u5934\uff0c\u4e0d\u80fd\u4ee5\u4e0b\u5212\u7ebf\u7ed3\u5c3e\uff0c\u4e5f\u4e0d\u80fd\u6709\u4e24\u4e2a\u8fde\u7eed\u7684\u4e0b\u5212\u7ebf\u3002</p> <p>\u5b57\u6bb5\u9ed8\u8ba4\u503c</p> Text Only<pre><code>uint8 x 42\nint16 y -2000\nstring full_name \"John Doe\"\nint32[] samples [-200, -100, 0, 100, 200]\n</code></pre> <p>\u5e38\u6570</p> Text Only<pre><code>int32 X=123\nint32 Y=-123\nstring FOO=\"foo\"\nstring EXAMPLE='bar'\n</code></pre> <p>\u5c06\u5728\u4e0b\u4e00\u7ae0\u4ecb\u7ecd\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\u7684\u521b\u5efa\u4e0e\u4f7f\u7528\u65b9\u6cd5\u3002</p>"},{"location":"study/ROS2/T-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A5%E5%8F%A3/#3","title":"3. \u81ea\u5b9a\u4e49\u63a5\u53e3\u529f\u80fd\u5305","text":"<p>\u521b\u5efa\u63a5\u53e3\u529f\u80fd\u5305</p> Bash<pre><code>ros2 pkg create base_interfaces_demo --build-type ament_cmake \n</code></pre> <p></p> <p>\u5728\u529f\u80fd\u5305<code>base_interfaces_demo</code>\u6839\u76ee\u5f55\u4e0b\u65b0\u5efamsg\u3001srv\u3001action\u6587\u4ef6\u5939\uff0c\u7528\u4e8e\u540e\u7eed\u5b58\u653e\u5404\u7c7b\u578b\u7684\u81ea\u5b9a\u4e49\u63a5\u53e3\u6570\u636e\u6587\u4ef6\u3002</p> <p></p>"},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/","title":"\u7279\u522b\u7bc7 \u9762\u5411\u5bf9\u8c61C++","text":""},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#1","title":"1. \u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570","text":""},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#11","title":"1.1 \u6784\u9020\u51fd\u6570\u7684\u5206\u7c7b\u548c\u6790\u6784\u51fd\u6570","text":"C++<pre><code>//\n// Created by \u674e\u5fd7\u8c6a on 2024/3/30.\n//\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nusing  namespace std;\n\nclass TEXT\n{\npublic:\n    /** \u65e0\u53c2\u6570\u6784\u9020\u51fd\u6570,\u5f53\u521b\u5efa\u7684\u7c7b--\u6ca1\u6709\u53c2\u6570--\u65f6\u8c03\u7528\u8be5\u51fd\u6570\n     *  \u8c03\u7528\u65b9\u6cd5: TEXT text;\n     */\n    TEXT(){\n        cout &lt;&lt; \"\u8fd9\u662f\u4e00\u4e2a\u6784\u9020\u51fd\u6570\" &lt;&lt; endl;\n    }\n    /** \u53c2\u6570\u6784\u9020\u51fd\u6570,\u5f53\u521b\u5efa\u7684\u7c7b--\u6709\u53c2\u6570--\u65f6\u8c03\u7528\u8be5\u51fd\u6570\n     *  explicit\u8868\u793a\u4ec5\u652f\u6301-\u663e\u793a-\u8c03\u7528\n     *  \u5e38\u91cf\u5f15\u7528 'const Type&amp;',\u5e38\u91cf\u5f15\u7528\u5141\u8bb8\u6211\u4eec\u5728\u51fd\u6570\u5185\u90e8\u8bbf\u95ee\u53c2\u6570\u7684\u503c\uff0c\u4f46\u4e0d\u4f1a\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\n     *  \u8c03\u7528\u65b9\u5f0f\uff1a\n     *  \u62ec\u53f7\u6cd5: TEXT text(\"hello\");\n     *  \u663e\u793a\u6cd5: TEXT text1 = TEXT(\"hello\");\n     *  \u9690\u5f0f\u6cd5: TEXT text2 = (string)\"hello\";\n     */\n    TEXT(const string&amp; a) {\n        str = a;\n        cout &lt;&lt; \"\u8fd9\u662f\u4e00\u4e2a\u6709\u53c2\u6784\u9020\u51fd\u6570\" &lt;&lt; endl;\n    }\n    /** \u62f7\u8d1d\u6784\u9020\u51fd\u6570,\u5f53\u521b\u5efa\u7684\u7c7b--\u6ca1\u6709\u53c2\u6570--\u65f6\u8c03\u7528\u8be5\u51fd\u6570\n     *  \u8c03\u7528\u65b9\u6cd5:\n     *  \u5b9a\u4e49\u6709\u53c2: TEXT text(\"hello\");\n     *  \u62ec\u53f7\u6cd5: TEXT text2(text);\n     *  \u663e\u793a\u6cd5: TEXT text2 = TEXT(text);\n     *  \u9690\u5f0f\u6cd5: TEXT text3 = text2;\n     */\n    TEXT(const TEXT &amp;t){\n        str += t.str;\n        cout &lt;&lt; \"\u8fd9\u662f\u4e00\u4e2a\u62f7\u8d1d\u6784\u9020\u51fd\u6570\" &lt;&lt; endl;\n    }\n    /** \u6790\u6784\u51fd\u6570,\u5728\u5bf9\u8c61\u88ab\u9500\u6bc1\u65f6\u81ea\u52a8\u8c03\u7528\u7684\u7279\u6b8a\u6210\u5458\u51fd\u6570\n     *  \u65e0\u5173\u7c7b\u662f\u5426\u6709\u53c2,\u9500\u6bc1\u65f6\u90fd\u4f1a\u81ea\u52a8\u8c03\u7528\n     */\n    ~TEXT(){\n        cout &lt;&lt; \"\u8fd9\u662f\u4e00\u4e2a\u6790\u6784\u51fd\u6570\" &lt;&lt; endl;\n        cout&lt;&lt;str&lt;&lt;endl;\n        cout&lt;&lt;num&lt;&lt;endl;\n    }\n\nprivate:\n    string str=\"ni\";\n    int num = 28;\n};\nint test()\n{\n    TEXT text1((string)\"10\"); //\u62ec\u53f7\u6cd5\n    //\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570,test2\u5148\u6790\u6784\n    TEXT text2 = TEXT(text1); //\u663e\u5f0f\u6cd5\n//    TEXT text3 = 10; // explicit\u9650\u5236\u4e86\u4e0d\u80fd\u7528\u9690\u5f0f\u8c03\u7528\n    std::cout&lt;&lt;\"\u4f60\u597d\u4e16\u754c\"&lt;&lt;std::endl;\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\uff1a</p> <p></p> <p>\u521d\u59cb\u5316\u5217\u8868</p> <p>C++\u63d0\u4f9b\u4e86\u521d\u59cb\u5316\u5217\u8868\u8bed\u6cd5\uff0c\u7528\u6765\u521d\u59cb\u5316\u5c5e\u6027</p> <p>\u8bed\u6cd5\uff1a<code>\u6784\u9020\u51fd\u6570()\uff1a\u5c5e\u60271(\u503c1),\u5c5e\u60272\uff08\u503c2\uff09... {}</code></p> Text Only<pre><code>Person(int a, int b, int c) :m_A(a), m_B(b), m_C(c) {}\n</code></pre>"},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#12","title":"1.2 \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u8c03\u7528\u65f6\u673a","text":"C++<pre><code>class COPY\n{\npublic:\n    COPY(){\n        age = 18;\n        cout &lt;&lt; \"\u8fd9\u662f\u4e00\u4e2a\u65e0\u53c2\u6784\u9020\u51fd\u6570\" &lt;&lt; endl;\n    }\n    explicit COPY(int age_default){\n        age = age_default;\n        cout &lt;&lt; \"\u8fd9\u662f\u4e00\u4e2a\u6709\u53c2\u6784\u9020\u51fd\u6570\" &lt;&lt; endl;\n    }\n    COPY(const COPY&amp; copy){\n        age = copy.age;\n        cout &lt;&lt; \"\u8fd9\u662f\u4e00\u4e2a\u62f7\u8d1d\u6784\u9020\u51fd\u6570\" &lt;&lt; endl;\n    }\n    ~COPY(){\n        cout &lt;&lt; \"\u8fd9\u662f\u4e00\u4e2a\u6790\u6784\u51fd\u6570\" &lt;&lt; endl;\n    }\n\npublic:\n    int age;\n};\n\n/* \u8c03\u7528\u65f6\u673a\u6d4b\u8bd5\u51fd\u6570\n * \u8c03\u7528\u65f6\u673a1--\u521d\u59cb\u5316\u65b0\u7684\u7c7b\n * \u8c03\u7528\u65f6\u673a2--\u503c\u4f20\u9012\n * \u8c03\u7528\u65f6\u673a3--\u8fd4\u56de\u503c\n */\nCOPY doWork(COPY copy){       //\u62f7\u8d1d\n    COPY copy1(10);           //\u6709\u53c2\n    COPY copy2(copy1);        //\u62f7\u8d1d\n    COPY copy3 = copy1;       //\u62f7\u8d1d\n    cout&lt;&lt;(int*)&amp;copy1&lt;&lt;endl;\n    cout&lt;&lt;(int*)&amp;copy2&lt;&lt;endl;\n    cout&lt;&lt;(int*)&amp;copy3&lt;&lt;endl;\n    cout&lt;&lt;(int*)&amp;copy&lt;&lt;endl;\n    return copy1;             //\u62f7\u8d1d\n}\n/*\u4e3b\u51fd\u6570\u8c03\u7528\u63a5\u53e3\u51fd\u6570\n */\nint test()\n{\n    COPY copy(10);\n    //2.\u8c03\u7528\u65f6\u673a2--\u503c\u4f20\u9012____\u8c03\u7528\u65f6\u673a3--\u8fd4\u56de\u503c\u503c\n    COPY p = doWork(copy);\n    return 0;\n}\n</code></pre>"},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#13","title":"1.3 \u6784\u9020\u51fd\u6570\u8c03\u7528\u89c4\u5219","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cc++\u7f16\u8bd1\u5668\u81f3\u5c11\u7ed9\u4e00\u4e2a\u7c7b\u6dfb\u52a03\u4e2a\u51fd\u6570</p> <p>1\uff0e\u9ed8\u8ba4\u6784\u9020\u51fd\u6570(\u65e0\u53c2\uff0c\u51fd\u6570\u4f53\u4e3a\u7a7a)</p> <p>2\uff0e\u9ed8\u8ba4\u6790\u6784\u51fd\u6570(\u65e0\u53c2\uff0c\u51fd\u6570\u4f53\u4e3a\u7a7a)</p> <p>3\uff0e\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5bf9\u5c5e\u6027\u8fdb\u884c\u503c\u62f7\u8d1d</p> <p>\u6784\u9020\u51fd\u6570\u8c03\u7528\u89c4\u5219\u5982\u4e0b\uff1a</p> <ul> <li>\u5982\u679c\u7528\u6237\u5b9a\u4e49\u6709\u53c2\u6784\u9020\u51fd\u6570\uff0cc++\u4e0d\u5728\u63d0\u4f9b\u9ed8\u8ba4\u65e0\u53c2\u6784\u9020\uff0c\u4f46\u662f\u4f1a\u63d0\u4f9b\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020</li> </ul> <ul> <li>\u5982\u679c\u7528\u6237\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0cc++\u4e0d\u4f1a\u518d\u63d0\u4f9b\u5176\u4ed6\u6784\u9020\u51fd\u6570</li> </ul>"},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#14","title":"1.4 \u6df1\u6d45\u62f7\u8d1d\u2b50","text":"<p>\u6d45\u62f7\u8d1d\uff1a\u7b80\u5355\u7684\u8d4b\u503c\u62f7\u8d1d\u64cd\u4f5c</p> <p>\u6df1\u62f7\u8d1d\uff1a\u5728\u5806\u533a\u91cd\u65b0\u7533\u8bf7\u7a7a\u95f4\uff0c\u8fdb\u884c\u62f7\u8d1d\u64cd\u4f5c</p> <p>\u5f53<code>new</code>\u4e00\u5757\u5806\u533a\u4ee5\u540e\uff0c\u8c03\u7528\u9ed8\u8ba4\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u4f1a\u4f7f\u5f97\u6790\u6784\u51fd\u6570\u5728\u91cd\u590d\u91ca\u653e\u5185\u5b58\uff0c\u4fd7\u79f0**\u6d45\u62f7\u8d1d**\u3002</p> <p>\u5728\u62f7\u8d1d\u6307\u9488\u53d8\u91cf\u65f6\uff0c<code>new</code>\u4e00\u5757\u5806\u533a\u5b58\u653e\u53c2\u6570\uff0c\u907f\u514d\u91cd\u590d\u91ca\u653e\uff0c\u4fd7\u79f0**\u6df1\u62f7\u8d1d**\u3002</p> C++<pre><code>class COPY\n{\npublic:\n    COPY(){\n        age = 18;\n        height = (int*)160;\n        cout &lt;&lt; \"\u8fd9\u662f\u4e00\u4e2a\u65e0\u53c2\u6784\u9020\u51fd\u6570\" &lt;&lt; endl;\n    }\n    explicit COPY(int age_default, int height_default){\n        age = age_default;\n        height = new int(height_default);\n        cout &lt;&lt; \"\u8fd9\u662f\u4e00\u4e2a\u6709\u53c2\u6784\u9020\u51fd\u6570\" &lt;&lt; endl;\n    }\n    COPY(const COPY&amp; copy){\n        age = copy.age;\n        //\u6d45\u62f7\u8d1d\uff08\u7cfb\u7edf\u9ed8\u8ba4\uff09\n        //height = copy.height;\n        //\u6df1\u62f7\u8d1d\n        height = new int(*copy.height);\n        cout &lt;&lt; \"\u8fd9\u662f\u4e00\u4e2a\u62f7\u8d1d\u6784\u9020\u51fd\u6570\" &lt;&lt; endl;\n    }\n    ~COPY(){\n        if(height != NULL)\n        {\n            delete height;\n            height = NULL;\n        }\n        cout &lt;&lt; \"\u8fd9\u662f\u4e00\u4e2a\u6790\u6784\u51fd\u6570\" &lt;&lt; endl;\n    }\n\npublic:\n    int age;\n    int* height;\n};\n</code></pre> <p></p>"},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#15","title":"1.5 \u9759\u6001\u6210\u5458","text":"<p>\u9759\u6001\u6210\u5458\u5c31\u662f\u5728\u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570\u524d\u52a0\u4e0a\u5173\u952e\u5b57<code>static</code>\uff0c\u79f0\u4e3a\u9759\u6001\u6210\u5458</p> <p>\u9759\u6001\u6210\u5458\u5206\u4e3a\uff1a</p> <ul> <li>\u9759\u6001\u6210\u5458\u53d8\u91cf<ul> <li>\u6240\u6709\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u4efd\u6570\u636e</li> <li>\u5728\u7f16\u8bd1\u9636\u6bb5\u5206\u914d\u5185\u5b58</li> <li>\u7c7b\u5185\u58f0\u660e\uff0c\u7c7b\u5916\u521d\u59cb\u5316</li> </ul> </li> <li>\u9759\u6001\u6210\u5458\u51fd\u6570<ul> <li>\u6240\u6709\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u4e2a\u51fd\u6570</li> <li>\u9759\u6001\u6210\u5458\u51fd\u6570\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u6210\u5458\u53d8\u91cf</li> </ul> </li> </ul> <p>1.\u9759\u6001\u53d8\u91cf</p> C++<pre><code>class Person\n{\n\npublic:\n\n    static int m_A; //\u9759\u6001\u6210\u5458\u53d8\u91cf\n\n    //\u9759\u6001\u6210\u5458\u53d8\u91cf\u7279\u70b9\uff1a\n    //1 \u5728\u7f16\u8bd1\u9636\u6bb5\u5206\u914d\u5185\u5b58\n    //2 \u7c7b\u5185\u58f0\u660e\uff0c\u7c7b\u5916\u521d\u59cb\u5316\n    //3 \u6240\u6709\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u4efd\u6570\u636e\n\nprivate:\n    static int m_B; //\u9759\u6001\u6210\u5458\u53d8\u91cf\u4e5f\u662f\u6709\u8bbf\u95ee\u6743\u9650\u7684\n};\nint Person::m_A = 10;\nint Person::m_B = 10;\n\nvoid test01()\n{\n    //\u9759\u6001\u6210\u5458\u53d8\u91cf\u4e24\u79cd\u8bbf\u95ee\u65b9\u5f0f\n\n    //1\u3001\u901a\u8fc7\u5bf9\u8c61\n    Person p1;\n    p1.m_A = 100;\n    cout &lt;&lt; \"p1.m_A = \" &lt;&lt; p1.m_A &lt;&lt; endl;\n\n    Person p2;\n    p2.m_A = 200;\n    cout &lt;&lt; \"p1.m_A = \" &lt;&lt; p1.m_A &lt;&lt; endl; //\u5171\u4eab\u540c\u4e00\u4efd\u6570\u636e\n    cout &lt;&lt; \"p2.m_A = \" &lt;&lt; p2.m_A &lt;&lt; endl;\n\n    //2\u3001\u901a\u8fc7\u7c7b\u540d\n    cout &lt;&lt; \"m_A = \" &lt;&lt; Person::m_A &lt;&lt; endl;\n\n\n    //cout &lt;&lt; \"m_B = \" &lt;&lt; Person::m_B &lt;&lt; endl; //\u79c1\u6709\u6743\u9650\u8bbf\u95ee\u4e0d\u5230\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>2.\u9759\u6001\u51fd\u6570</p> C++<pre><code>class Person\n{\n\npublic:\n\n    //\u9759\u6001\u6210\u5458\u51fd\u6570\u7279\u70b9\uff1a\n    //1 \u7a0b\u5e8f\u5171\u4eab\u4e00\u4e2a\u51fd\u6570\n    //2 \u9759\u6001\u6210\u5458\u51fd\u6570\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u6210\u5458\u53d8\u91cf\n\n    static void func()\n    {\n        cout &lt;&lt; \"func\u8c03\u7528\" &lt;&lt; endl;\n        m_A = 100;\n        //m_B = 100; //\u9519\u8bef\uff0c\u4e0d\u53ef\u4ee5\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\n    }\n\n    static int m_A; //\u9759\u6001\u6210\u5458\u53d8\u91cf\n    int m_B; // \nprivate:\n\n    //\u9759\u6001\u6210\u5458\u51fd\u6570\u4e5f\u662f\u6709\u8bbf\u95ee\u6743\u9650\u7684\n    static void func2()\n    {\n        cout &lt;&lt; \"func2\u8c03\u7528\" &lt;&lt; endl;\n    }\n};\nint Person::m_A = 10;\n\n\nvoid test01()\n{\n    //\u9759\u6001\u6210\u5458\u53d8\u91cf\u4e24\u79cd\u8bbf\u95ee\u65b9\u5f0f\n\n    //1\u3001\u901a\u8fc7\u5bf9\u8c61\n    Person p1;\n    p1.func();\n\n    //2\u3001\u901a\u8fc7\u7c7b\u540d\n    Person::func();\n\n\n    //Person::func2(); //\u79c1\u6709\u6743\u9650\u8bbf\u95ee\u4e0d\u5230\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#2-cthis","title":"2. C++\u5bf9\u8c61\u6a21\u578b\u548cthis\u6307\u9488","text":""},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#21","title":"2.1 \u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570\u5206\u5f00\u5b58\u50a8","text":"C++<pre><code>class Person {\npublic:\n    Person() {\n        mA = 0;\n    }\n    //\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u5360\u5bf9\u8c61\u7a7a\u95f4\n    int mA;\n    //\u9759\u6001\u6210\u5458\u53d8\u91cf\u4e0d\u5360\u5bf9\u8c61\u7a7a\u95f4\n    static int mB; \n    //\u51fd\u6570\u4e5f\u4e0d\u5360\u5bf9\u8c61\u7a7a\u95f4\uff0c\u6240\u6709\u51fd\u6570\u5171\u4eab\u4e00\u4e2a\u51fd\u6570\u5b9e\u4f8b\n    void func() {\n        cout &lt;&lt; \"mA:\" &lt;&lt; this-&gt;mA &lt;&lt; endl;\n    }\n    //\u9759\u6001\u6210\u5458\u51fd\u6570\u4e5f\u4e0d\u5360\u5bf9\u8c61\u7a7a\u95f4\n    static void sfunc() {\n    }\n};\n\nint main() {\n\n    cout &lt;&lt; sizeof(Person) &lt;&lt; endl;\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#21-this","title":"2.1 this\u6307\u9488","text":"<p>this\u6307\u9488\u6307\u5411\u88ab\u8c03\u7528\u7684\u6210\u5458\u51fd\u6570\u6240\u5c5e\u7684\u5bf9\u8c61</p> <p>this\u6307\u9488\u662f\u9690\u542b\u6bcf\u4e00\u4e2a\u975e\u9759\u6001\u6210\u5458\u51fd\u6570\u5185\u7684\u4e00\u79cd\u6307\u9488</p> <p>this\u6307\u9488\u4e0d\u9700\u8981\u5b9a\u4e49\uff0c\u76f4\u63a5\u4f7f\u7528\u5373\u53ef</p> <p>this\u6307\u9488\u7684\u7528\u9014\uff1a</p> <ul> <li>\u5f53\u5f62\u53c2\u548c\u6210\u5458\u53d8\u91cf\u540c\u540d\u65f6\uff0c\u53ef\u7528this\u6307\u9488\u6765\u533a\u5206</li> <li>\u5728\u7c7b\u7684\u975e\u9759\u6001\u6210\u5458\u51fd\u6570\u4e2d\u8fd4\u56de\u5bf9\u8c61\u672c\u8eab\uff0c\u53ef\u4f7f\u7528return *this</li> </ul> C++<pre><code>class Person\n{\npublic:\n\n    Person(int age)\n    {\n        //1\u3001\u5f53\u5f62\u53c2\u548c\u6210\u5458\u53d8\u91cf\u540c\u540d\u65f6\uff0c\u53ef\u7528this\u6307\u9488\u6765\u533a\u5206\n        this-&gt;age = age;\n    }\n\n    Person&amp; PersonAddPerson(Person p)\n    {\n        this-&gt;age += p.age;\n        //\u8fd4\u56de\u5bf9\u8c61\u672c\u8eab\n        return *this;\n    }\n\n    int age;\n};\n\nvoid test01()\n{\n    Person p1(10);\n    cout &lt;&lt; \"p1.age = \" &lt;&lt; p1.age &lt;&lt; endl;\n\n    Person p2(10);\n    p2.PersonAddPerson(p1).PersonAddPerson(p1).PersonAddPerson(p1);\n    cout &lt;&lt; \"p2.age = \" &lt;&lt; p2.age &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#23-const","title":"2.3 const\u4fee\u9970\u6210\u5458\u51fd\u6570","text":"<p>\u5e38\u51fd\u6570\uff1a</p> <ul> <li>\u6210\u5458\u51fd\u6570\u540e\u52a0const\u540e\u6211\u4eec\u79f0\u4e3a\u8fd9\u4e2a\u51fd\u6570\u4e3a**\u5e38\u51fd\u6570**</li> <li>\u5e38\u51fd\u6570\u5185\u4e0d\u53ef\u4ee5\u4fee\u6539\u6210\u5458\u5c5e\u6027</li> <li>\u6210\u5458\u5c5e\u6027\u58f0\u660e\u65f6\u52a0\u5173\u952e\u5b57mutable\u540e\uff0c\u5728\u5e38\u51fd\u6570\u4e2d\u4f9d\u7136\u53ef\u4ee5\u4fee\u6539</li> </ul> <p>\u5e38\u5bf9\u8c61\uff1a</p> <ul> <li>\u58f0\u660e\u5bf9\u8c61\u524d\u52a0const\u79f0\u8be5\u5bf9\u8c61\u4e3a\u5e38\u5bf9\u8c61</li> <li>\u5e38\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528\u5e38\u51fd\u6570</li> </ul> C++<pre><code>class Person {\npublic:\n    Person() {\n        m_A = 0;\n        m_B = 0;\n    }\n\n    //this\u6307\u9488\u7684\u672c\u8d28\u662f\u4e00\u4e2a\u6307\u9488\u5e38\u91cf\uff0c\u6307\u9488\u7684\u6307\u5411\u4e0d\u53ef\u4fee\u6539\n    //\u5982\u679c\u60f3\u8ba9\u6307\u9488\u6307\u5411\u7684\u503c\u4e5f\u4e0d\u53ef\u4ee5\u4fee\u6539\uff0c\u9700\u8981\u58f0\u660e\u5e38\u51fd\u6570\n    void ShowPerson() const {\n        //const Type* const pointer;\n        //this = NULL; //\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u7684\u6307\u5411 Person* const this;\n        //this-&gt;mA = 100; //\u4f46\u662fthis\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u7684\u6570\u636e\u662f\u53ef\u4ee5\u4fee\u6539\u7684\n\n        //const\u4fee\u9970\u6210\u5458\u51fd\u6570\uff0c\u8868\u793a\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u7684\u6570\u636e\u4e0d\u80fd\u4fee\u6539\uff0c\u9664\u4e86mutable\u4fee\u9970\u7684\u53d8\u91cf\n        this-&gt;m_B = 100;\n    }\n\n    void MyFunc() const {\n        //mA = 10000;\n    }\n\npublic:\n    int m_A;\n    mutable int m_B; //\u53ef\u4fee\u6539 \u53ef\u53d8\u7684\n};\n\n\n//const\u4fee\u9970\u5bf9\u8c61  \u5e38\u5bf9\u8c61\nvoid test01() {\n\n    const Person person; //\u5e38\u91cf\u5bf9\u8c61  \n    cout &lt;&lt; person.m_A &lt;&lt; endl;\n    //person.mA = 100; //\u5e38\u5bf9\u8c61\u4e0d\u80fd\u4fee\u6539\u6210\u5458\u53d8\u91cf\u7684\u503c,\u4f46\u662f\u53ef\u4ee5\u8bbf\u95ee\n    person.m_B = 100; //\u4f46\u662f\u5e38\u5bf9\u8c61\u53ef\u4ee5\u4fee\u6539mutable\u4fee\u9970\u6210\u5458\u53d8\u91cf\n\n    //\u5e38\u5bf9\u8c61\u8bbf\u95ee\u6210\u5458\u51fd\u6570\n    person.MyFunc(); //\u5e38\u5bf9\u8c61\u4e0d\u80fd\u8c03\u7528const\u7684\u51fd\u6570\n\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#3","title":"3. \u53cb\u5143","text":"<p>\u8fd9\u91cc\u4ee3\u7801\u6709\u591a\u4e2a\u91cd\u70b9\uff1a</p> <p>1.\u53cb\u5143\u7684\u4e09\u79cd\u4f7f\u7528\u65b9\u6cd5</p> <ul> <li>\u5168\u5c40\u51fd\u6570\u505a\u53cb\u5143</li> <li>\u7c7b\u505a\u53cb\u5143</li> <li>\u6210\u5458\u51fd\u6570\u505a\u53cb\u5143</li> </ul> <p>2.\u4f7f\u7528\u7c7b\u5916\u5b9e\u73b0\u6210\u5458\u51fd\u6570</p> <p>3.\u6ca1\u6709\u4fee\u6539\u5bf9\u8c61\u5c5e\u6027\u7684\u6210\u5458\u51fd\u6570\u7528<code>const</code>\u4fee\u9970</p> <p>\u8bbe\u8ba1\u610f\u56fe\u7684\u66f4\u6e05\u6670\u8868\u8fbe\uff0c\u53ef\u4ee5\u5e26\u6765\u66f4\u597d\u7684\u53ef\u8bfb\u6027\uff0c\u65b9\u4fbf\u7f16\u8bd1\u5668\u6355\u6349\u66f4\u591a\u7684\u9519\u8bef\uff0c\u800c\u4e14\u6709\u65f6\u8fd8\u4f1a\u5e26\u6765\u66f4\u591a\u7684\u4f18\u5316\u673a\u4f1a)\\</p> C++<pre><code>class FriendShip;\n//\u6210\u5458\u51fd\u6570\u505a\u53cb\u5143,\u6210\u5458\u51fd\u6570\u6240\u5c5e\u7684\u7c7b\u8981\u653e\u5728\u53cb\u5143\u7c7b\u7684\u524d\u9762\uff08\u4e0d\u6e05\u695a\u4e3a\u4ec0\u4e48\uff09\nclass Friend2\n{\npublic:\n    Friend2();\n    void visit() const;\n    void visit2() const;\npublic:\n    FriendShip *friend2;\n};\n\nclass FriendShip\n{\n    //1.\u5168\u5c40\u51fd\u6570\u505a\u53cb\u5143,\u53ef\u4ee5\u8c03\u7528\u7c7b\u7684\u79c1\u6709\u5185\u5bb9\n    friend void MyFriend(FriendShip *my_friend);\n    //2.\u7c7b\u505a\u53cb\u5143\n    friend class Friend;\n    //3.\u6210\u5458\u51fd\u6570\u505a\u53cb\u5143\n    friend void Friend2::visit() const;\npublic:\n    explicit FriendShip();\npublic:\n    string car;\nprivate:\n    string Phone;\n};\n//\u53cb\u5143\u7c7b\nclass Friend\n{\npublic:\n    Friend();\n    void visit() const;\npublic:\n    FriendShip *friend1;\n};\n\n// \u7c7b\u5916\u5b9e\u73b0\u6784\u9020\u51fd\u6570\nFriendShip::FriendShip() {\n    this-&gt;Phone = \"Mate60Pro\";\n    this-&gt;car = \"\u95ee\u754cM9\";\n}\n//\nFriend::Friend() {\n    //\u521b\u5efa\u5806\u533a\u6570\u636e\uff0c\u8fd4\u56de\u6307\u9488\u53d8\u91cf\n    friend1 = new FriendShip;\n}\nvoid Friend::visit() const {\n    cout &lt;&lt; \"---\" &lt;&lt; friend1-&gt;Phone &lt;&lt;endl;\n}\n//\nFriend2::Friend2() {\n    friend2 = new FriendShip;\n}\nvoid Friend2::visit() const {\n    cout &lt;&lt; \"---\" &lt;&lt; friend2-&gt;Phone &lt;&lt; endl;\n}\nvoid Friend2::visit2() const {\n    cout &lt;&lt; friend2-&gt;car &lt;&lt; endl;\n//    cout &lt;&lt; \"---\" &lt;&lt; friend2-&gt;Phone &lt;&lt;endl;\n}\n//\u53cb\u5143\u51fd\u6570\nvoid MyFriend(FriendShip *my_friend)\n{\n    cout &lt;&lt; \"---\" &lt;&lt; my_friend-&gt;Phone &lt;&lt; endl;\n}\n\n\n/*\u4e3b\u51fd\u6570\u8c03\u7528\u63a5\u53e3\u51fd\u6570\n */\nint test()\n{\n    FriendShip myfriend;\n    MyFriend(&amp;myfriend);\n    Friend friend1;\n    Friend2 friend2;\n    friend1.visit();\n    friend2.visit();\n    friend2.visit2();\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#4","title":"4. \u8fd0\u7b97\u7b26\u91cd\u8f7d","text":"<p>\u7565</p>"},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#5","title":"5. \u7c7b\u7684\u7ee7\u627f","text":""},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#51","title":"5.1 \u57fa\u7840\u8bed\u6cd5","text":"<p>\u8fd9\u91cc\u63d0\u4e00\u4e0bC++\u4ee3\u7801\u89c4\u8303\uff0c<code>const</code>\u548c<code>static</code>\u4fee\u9970\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u65f6\u7684\u4f7f\u7528\uff1a</p> <ul> <li><code>static</code>\uff1a\u51fd\u6570**\u4e0d\u9700\u8981**\u8bbf\u95ee\u7c7b\u7684\u5b9e\u4f8b\u72b6\u6001\u5e76\u4e14**\u4e0d\u4fee\u6539**\u4efb\u4f55\u6210\u5458\u53d8\u91cf</li> <li><code>const</code>\uff1a\u51fd\u6570**\u4e0d\u4fee\u6539**\u4efb\u4f55\u6210\u5458\u53d8\u91cf\u5e76\u4e14\u53ea\u662f\u5bf9\u7c7b\u72b6\u6001\u7684**\u53ea\u8bfb\u64cd\u4f5c**</li> </ul> <p>\u8fd9\u91cc\u7528\u7684\u662f<code>static</code>\uff0c\u53cb\u5143\u7684\u5b9e\u4f8b\u6709\u7684\u662f<code>const</code></p> C++<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass Base\n{\npublic:\n    static void name() {\n        cout &lt;&lt; \"\u59d3\u540d\" &lt;&lt; endl;\n    }\n    static void age() {\n        cout &lt;&lt; \"\u5e74\u9f84\" &lt;&lt; endl;\n    }\n\n};\n\nclass HUAWEI: public Base\n{\npublic:\n    static void content() {\n        cout &lt;&lt; \"\u95ee\u754c\" &lt;&lt; endl;\n    }\n};\n\nint test2(){\n    //\n    HUAWEI::name();\n    HUAWEI::age();\n    HUAWEI::content();\n    return 0;\n}\n</code></pre>"},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#52","title":"5.2 \u7ee7\u627f\u7c7b\u578b","text":"C++<pre><code>class Base\n{\npublic:\n    static void name() {\n        cout &lt;&lt; \"\u59d3\u540d\" &lt;&lt; endl;\n    }\n    static void age() {\n        cout &lt;&lt; \"\u5e74\u9f84\" &lt;&lt; endl;\n    }\n\n    int public_a;\nprotected:\n    int protect_a;\nprivate:\n    int private_a;\n\n\n};\n\nclass HUAWEI: public Base\n{\npublic:\n    void content() {\n        this-&gt;public_a = 10;\n        this-&gt;protect_a = 15;\n        cout &lt;&lt; this-&gt;protect_a &lt;&lt; this-&gt;public_a &lt;&lt; endl;\n    }\n};\n\nclass XIAOMI: protected Base\n{\npublic:\n    void content() {\n        //public_a\u53d8 protected\n        this-&gt;public_a = 11;\n        this-&gt;protect_a = 16;\n        cout &lt;&lt; this-&gt;protect_a &lt;&lt; this-&gt;public_a &lt;&lt; endl;\n    }\n};\n\nclass HONOR: private Base\n{\npublic:\n    void content() {\n        //public_a\u548cprotect_a\u90fd\u53d8\u4e3aprivate\n        this-&gt;public_a = 12;\n        this-&gt;protect_a = 17;\n        //\u8fd9\u91ccprivate_a\u65e0\u6cd5\u88ab\u7ee7\u627f\n//        this-&gt;private_a = 20;\n        cout &lt;&lt; this-&gt;protect_a &lt;&lt; this-&gt;public_a &lt;&lt; endl;\n    }\n};\n\nint test2(){\n    HUAWEI huawei;\n    huawei.content();\n    XIAOMI xiaomi;\n    xiaomi.content();\n    HONOR honor;\n    honor.content();\n    return 0;\n}\n</code></pre> <p>\u7236\u7c7b\u4e2d\u79c1\u6709\u6210\u5458\u4e5f\u662f\u88ab\u5b50\u7c7b\u7ee7\u627f\u4e0b\u53bb\u4e86\uff0c\u53ea\u662f\u7531\u7f16\u8bd1\u5668\u7ed9\u9690\u85cf\u540e\u8bbf\u95ee\u4e0d\u5230</p>"},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#53","title":"5.3 \u7ee7\u627f\u4e2d\u6784\u9020\u548c\u6790\u6784\u987a\u5e8f","text":"<p>\u7ee7\u627f\u4e2d \u5148\u8c03\u7528\u7236\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u518d\u8c03\u7528\u5b50\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u6790\u6784\u987a\u5e8f\u4e0e\u6784\u9020\u76f8\u53cd</p> C++<pre><code>class Base \n{\npublic:\n    Base()\n    {\n        cout &lt;&lt; \"Base\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n    }\n    ~Base()\n    {\n        cout &lt;&lt; \"Base\u6790\u6784\u51fd\u6570!\" &lt;&lt; endl;\n    }\n};\n\nclass Son : public Base\n{\npublic:\n    Son()\n    {\n        cout &lt;&lt; \"Son\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n    }\n    ~Son()\n    {\n        cout &lt;&lt; \"Son\u6790\u6784\u51fd\u6570!\" &lt;&lt; endl;\n    }\n\n};\n\n\nvoid test01()\n{\n    //\u7ee7\u627f\u4e2d \u5148\u8c03\u7528\u7236\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u518d\u8c03\u7528\u5b50\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u6790\u6784\u987a\u5e8f\u4e0e\u6784\u9020\u76f8\u53cd\n    Son s;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p></p>"},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#54","title":"5.4 #\u7ee7\u627f\u540c\u540d\u6210\u5458\u5904\u7406\u529e\u6cd5","text":"<p>\u603b\u7ed3\uff1a</p> <ol> <li>\u5b50\u7c7b\u5bf9\u8c61\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5230\u5b50\u7c7b\u4e2d\u540c\u540d\u6210\u5458</li> <li>\u5b50\u7c7b\u5bf9\u8c61\u52a0\u4f5c\u7528\u57df\u53ef\u4ee5\u8bbf\u95ee\u5230\u7236\u7c7b\u540c\u540d\u6210\u5458</li> <li>\u5f53\u5b50\u7c7b\u4e0e\u7236\u7c7b\u62e5\u6709\u540c\u540d\u7684\u6210\u5458\u51fd\u6570\uff0c\u5b50\u7c7b\u4f1a\u9690\u85cf\u7236\u7c7b\u4e2d\u540c\u540d\u6210\u5458\u51fd\u6570\uff0c\u52a0\u4f5c\u7528\u57df\u53ef\u4ee5\u8bbf\u95ee\u5230\u7236\u7c7b\u4e2d\u540c\u540d\u51fd\u6570</li> </ol> <p><code>s.Base::m_A</code>\u6216<code>s.Base::func()</code></p>"},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#55","title":"5.5 #\u591a\u7ee7\u627f","text":"<p>C++\u5141\u8bb8**\u4e00\u4e2a\u7c7b\u7ee7\u627f\u591a\u4e2a\u7c7b**</p> <p>\u8bed\u6cd5\uff1a<code>class \u5b50\u7c7b \uff1a\u7ee7\u627f\u65b9\u5f0f \u7236\u7c7b1 \uff0c \u7ee7\u627f\u65b9\u5f0f \u7236\u7c7b2...</code></p> <p>\u591a\u7ee7\u627f\u53ef\u80fd\u4f1a\u5f15\u53d1\u7236\u7c7b\u4e2d\u6709\u540c\u540d\u6210\u5458\u51fa\u73b0\uff0c\u9700\u8981\u52a0\u4f5c\u7528\u57df\u533a\u5206</p> <p>C++\u5b9e\u9645\u5f00\u53d1\u4e2d\u4e0d\u5efa\u8bae\u7528\u591a\u7ee7\u627f</p>"},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#56","title":"5.6 \u83f1\u5f62\u7ee7\u627f","text":"<p>\u83f1\u5f62\u7ee7\u627f\u6982\u5ff5\uff1a</p> <p>\u200b   \u4e24\u4e2a\u6d3e\u751f\u7c7b\u7ee7\u627f\u540c\u4e00\u4e2a\u57fa\u7c7b</p> <p>\u200b   \u53c8\u6709\u67d0\u4e2a\u7c7b\u540c\u65f6\u7ee7\u627f\u8005\u4e24\u4e2a\u6d3e\u751f\u7c7b</p> <p>\u200b   \u8fd9\u79cd\u7ee7\u627f\u88ab\u79f0\u4e3a\u83f1\u5f62\u7ee7\u627f\uff0c\u6216\u8005\u94bb\u77f3\u7ee7\u627f</p> <p>\u5178\u578b\u7684\u83f1\u5f62\u7ee7\u627f\u6848\u4f8b\uff1a</p> <p></p> C++<pre><code>class Animal\n{\npublic:\n    int m_Age;\n};\n\n//\u7ee7\u627f\u524d\u52a0virtual\u5173\u952e\u5b57\u540e\uff0c\u53d8\u4e3a\u865a\u7ee7\u627f\n//\u6b64\u65f6\u516c\u5171\u7684\u7236\u7c7bAnimal\u79f0\u4e3a\u865a\u57fa\u7c7b\nclass Sheep : virtual public Animal {};\nclass Tuo   : virtual public Animal {};\nclass SheepTuo : public Sheep, public Tuo {};\n\nvoid test01()\n{\n    SheepTuo st;\n    st.Sheep::m_Age = 100;\n    st.Tuo::m_Age = 200;\n\n    cout &lt;&lt; \"st.Sheep::m_Age = \" &lt;&lt; st.Sheep::m_Age &lt;&lt; endl;\n    cout &lt;&lt; \"st.Tuo::m_Age = \" &lt;&lt;  st.Tuo::m_Age &lt;&lt; endl;\n    cout &lt;&lt; \"st.m_Age = \" &lt;&lt; st.m_Age &lt;&lt; endl;\n}\n\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#6","title":"6. \u591a\u6001","text":""},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#61","title":"6.1 \u57fa\u672c\u6982\u5ff5","text":"<p>\u591a\u6001\u662fC++\u9762\u5411\u5bf9\u8c61\u4e09\u5927\u7279\u6027\u4e4b\u4e00</p> <p>\u591a\u6001\u5206\u4e3a\u4e24\u7c7b</p> <ul> <li>\u9759\u6001\u591a\u6001: \u51fd\u6570\u91cd\u8f7d \u548c \u8fd0\u7b97\u7b26\u91cd\u8f7d\u5c5e\u4e8e\u9759\u6001\u591a\u6001\uff0c\u590d\u7528\u51fd\u6570\u540d</li> <li>\u52a8\u6001\u591a\u6001: \u6d3e\u751f\u7c7b\u548c\u865a\u51fd\u6570\u5b9e\u73b0\u8fd0\u884c\u65f6\u591a\u6001</li> </ul> <p>\u9759\u6001\u591a\u6001\u548c\u52a8\u6001\u591a\u6001\u533a\u522b\uff1a</p> <ul> <li>\u9759\u6001\u591a\u6001\u7684\u51fd\u6570\u5730\u5740\u65e9\u7ed1\u5b9a  -  \u7f16\u8bd1\u9636\u6bb5\u786e\u5b9a\u51fd\u6570\u5730\u5740</li> <li>\u52a8\u6001\u591a\u6001\u7684\u51fd\u6570\u5730\u5740\u665a\u7ed1\u5b9a  -  \u8fd0\u884c\u9636\u6bb5\u786e\u5b9a\u51fd\u6570\u5730\u5740</li> </ul> C++<pre><code>class Animal\n{\npublic:\n    //Speak\u51fd\u6570\u5c31\u662f\u865a\u51fd\u6570\n    //\u51fd\u6570\u524d\u9762\u52a0\u4e0avirtual\u5173\u952e\u5b57\uff0c\u53d8\u6210\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u4e0d\u80fd\u786e\u5b9a\u51fd\u6570\u8c03\u7528\u4e86\u3002\n    virtual void speak()\n    {\n        cout &lt;&lt; \"\u52a8\u7269\u5728\u8bf4\u8bdd\" &lt;&lt; endl;\n    }\n};\n\nclass Cat :public Animal\n{\npublic:\n    void speak()\n    {\n        cout &lt;&lt; \"\u5c0f\u732b\u5728\u8bf4\u8bdd\" &lt;&lt; endl;\n    }\n};\n\nclass Dog :public Animal\n{\npublic:\n\n    void speak()\n    {\n        cout &lt;&lt; \"\u5c0f\u72d7\u5728\u8bf4\u8bdd\" &lt;&lt; endl;\n    }\n\n};\n//\u6211\u4eec\u5e0c\u671b\u4f20\u5165\u4ec0\u4e48\u5bf9\u8c61\uff0c\u90a3\u4e48\u5c31\u8c03\u7528\u4ec0\u4e48\u5bf9\u8c61\u7684\u51fd\u6570\n//\u5982\u679c\u51fd\u6570\u5730\u5740\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u80fd\u786e\u5b9a\uff0c\u90a3\u4e48\u9759\u6001\u8054\u7f16\n//\u5982\u679c\u51fd\u6570\u5730\u5740\u5728\u8fd0\u884c\u9636\u6bb5\u624d\u80fd\u786e\u5b9a\uff0c\u5c31\u662f\u52a8\u6001\u8054\u7f16\n\nvoid DoSpeak(Animal &amp; animal)\n{\n    animal.speak();\n}\n//\n//\u591a\u6001\u6ee1\u8db3\u6761\u4ef6\uff1a \n//1\u3001\u6709\u7ee7\u627f\u5173\u7cfb\n//2\u3001\u5b50\u7c7b\u91cd\u5199\u7236\u7c7b\u4e2d\u7684\u865a\u51fd\u6570\n//\u591a\u6001\u4f7f\u7528\uff1a\n//\u7236\u7c7b\u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61\n\nvoid test01()\n{\n    Cat cat;\n    DoSpeak(cat);\n\n\n    Dog dog;\n    DoSpeak(dog);\n}\n\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <p>\u591a\u6001\u6ee1\u8db3\u6761\u4ef6</p> <ul> <li>\u6709\u7ee7\u627f\u5173\u7cfb</li> <li>\u5b50\u7c7b\u91cd\u5199\u7236\u7c7b\u4e2d\u7684\u865a\u51fd\u6570</li> </ul> <p>\u591a\u6001\u4f7f\u7528\u6761\u4ef6**\u2606**</p> <ul> <li>\u7236\u7c7b\u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61</li> </ul> <p>\u91cd\u5199\uff1a\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b  \u51fd\u6570\u540d \u53c2\u6570\u5217\u8868 \u5b8c\u5168\u4e00\u81f4\u79f0\u4e3a\u91cd\u5199</p> <p>\u8ba1\u7b97\u5668\u6848\u4f8b</p> C++<pre><code>//\u666e\u901a\u5b9e\u73b0\nclass Calculator {\npublic:\n    int getResult(string oper)\n    {\n        if (oper == \"+\") {\n            return m_Num1 + m_Num2;\n        }\n        else if (oper == \"-\") {\n            return m_Num1 - m_Num2;\n        }\n        else if (oper == \"*\") {\n            return m_Num1 * m_Num2;\n        }\n        //\u5982\u679c\u8981\u63d0\u4f9b\u65b0\u7684\u8fd0\u7b97\uff0c\u9700\u8981\u4fee\u6539\u6e90\u7801\n    }\npublic:\n    int m_Num1;\n    int m_Num2;\n};\n\nvoid test01()\n{\n    //\u666e\u901a\u5b9e\u73b0\u6d4b\u8bd5\n    Calculator c;\n    c.m_Num1 = 10;\n    c.m_Num2 = 10;\n    cout &lt;&lt; c.m_Num1 &lt;&lt; \" + \" &lt;&lt; c.m_Num2 &lt;&lt; \" = \" &lt;&lt; c.getResult(\"+\") &lt;&lt; endl;\n\n    cout &lt;&lt; c.m_Num1 &lt;&lt; \" - \" &lt;&lt; c.m_Num2 &lt;&lt; \" = \" &lt;&lt; c.getResult(\"-\") &lt;&lt; endl;\n\n    cout &lt;&lt; c.m_Num1 &lt;&lt; \" * \" &lt;&lt; c.m_Num2 &lt;&lt; \" = \" &lt;&lt; c.getResult(\"*\") &lt;&lt; endl;\n}\n\n\n\n//\u591a\u6001\u5b9e\u73b0\n//\u62bd\u8c61\u8ba1\u7b97\u5668\u7c7b\n//\u591a\u6001\u4f18\u70b9\uff1a\u4ee3\u7801\u7ec4\u7ec7\u7ed3\u6784\u6e05\u6670\uff0c\u53ef\u8bfb\u6027\u5f3a\uff0c\u5229\u4e8e\u524d\u671f\u548c\u540e\u671f\u7684\u6269\u5c55\u4ee5\u53ca\u7ef4\u62a4\nclass AbstractCalculator\n{\npublic :\n\n    virtual int getResult()\n    {\n        return 0;\n    }\n\n    int m_Num1;\n    int m_Num2;\n};\n\n//\u52a0\u6cd5\u8ba1\u7b97\u5668\nclass AddCalculator :public AbstractCalculator\n{\npublic:\n    int getResult()\n    {\n        return m_Num1 + m_Num2;\n    }\n};\n\n//\u51cf\u6cd5\u8ba1\u7b97\u5668\nclass SubCalculator :public AbstractCalculator\n{\npublic:\n    int getResult()\n    {\n        return m_Num1 - m_Num2;\n    }\n};\n\n//\u4e58\u6cd5\u8ba1\u7b97\u5668\nclass MulCalculator :public AbstractCalculator\n{\npublic:\n    int getResult()\n    {\n        return m_Num1 * m_Num2;\n    }\n};\n\n\nvoid test02()\n{\n    //\u521b\u5efa\u52a0\u6cd5\u8ba1\u7b97\u5668\n    AbstractCalculator *abc = new AddCalculator;\n    abc-&gt;m_Num1 = 10;\n    abc-&gt;m_Num2 = 10;\n    cout &lt;&lt; abc-&gt;m_Num1 &lt;&lt; \" + \" &lt;&lt; abc-&gt;m_Num2 &lt;&lt; \" = \" &lt;&lt; abc-&gt;getResult() &lt;&lt; endl;\n    delete abc;  //\u7528\u5b8c\u4e86\u8bb0\u5f97\u9500\u6bc1\n\n    //\u521b\u5efa\u51cf\u6cd5\u8ba1\u7b97\u5668\n    abc = new SubCalculator;\n    abc-&gt;m_Num1 = 10;\n    abc-&gt;m_Num2 = 10;\n    cout &lt;&lt; abc-&gt;m_Num1 &lt;&lt; \" - \" &lt;&lt; abc-&gt;m_Num2 &lt;&lt; \" = \" &lt;&lt; abc-&gt;getResult() &lt;&lt; endl;\n    delete abc;  \n\n    //\u521b\u5efa\u4e58\u6cd5\u8ba1\u7b97\u5668\n    abc = new MulCalculator;\n    abc-&gt;m_Num1 = 10;\n    abc-&gt;m_Num2 = 10;\n    cout &lt;&lt; abc-&gt;m_Num1 &lt;&lt; \" * \" &lt;&lt; abc-&gt;m_Num2 &lt;&lt; \" = \" &lt;&lt; abc-&gt;getResult() &lt;&lt; endl;\n    delete abc;\n}\n\nint main() {\n\n    //test01();\n\n    test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#62","title":"6.2 \u7eaf\u865a\u51fd\u6570\u548c\u62bd\u8c61\u7c7b","text":"<p>\u5728\u591a\u6001\u4e2d\uff0c\u901a\u5e38\u7236\u7c7b\u4e2d\u865a\u51fd\u6570\u7684\u5b9e\u73b0\u662f\u6beb\u65e0\u610f\u4e49\u7684\uff0c\u4e3b\u8981\u90fd\u662f\u8c03\u7528\u5b50\u7c7b\u91cd\u5199\u7684\u5185\u5bb9</p> <p>\u56e0\u6b64\u53ef\u4ee5\u5c06\u865a\u51fd\u6570\u6539\u4e3a**\u7eaf\u865a\u51fd\u6570**</p> <p>\u7eaf\u865a\u51fd\u6570\u8bed\u6cd5\uff1a<code>virtual \u8fd4\u56de\u503c\u7c7b\u578b \u51fd\u6570\u540d \uff08\u53c2\u6570\u5217\u8868\uff09= 0 ;</code></p> <p>\u5f53\u7c7b\u4e2d\u6709\u4e86\u7eaf\u865a\u51fd\u6570\uff0c\u8fd9\u4e2a\u7c7b\u4e5f\u79f0\u4e3a==\u62bd\u8c61\u7c7b==</p> <p>\u62bd\u8c61\u7c7b\u7279\u70b9\uff1a</p> <ul> <li>\u65e0\u6cd5\u5b9e\u4f8b\u5316\u5bf9\u8c61</li> <li>\u5b50\u7c7b\u5fc5\u987b\u91cd\u5199\u62bd\u8c61\u7c7b\u4e2d\u7684\u7eaf\u865a\u51fd\u6570\uff0c\u5426\u5219\u4e5f\u5c5e\u4e8e\u62bd\u8c61\u7c7b</li> </ul> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>class Base\n{\npublic:\n    //\u7eaf\u865a\u51fd\u6570\n    //\u7c7b\u4e2d\u53ea\u8981\u6709\u4e00\u4e2a\u7eaf\u865a\u51fd\u6570\u5c31\u79f0\u4e3a\u62bd\u8c61\u7c7b\n    //\u62bd\u8c61\u7c7b\u65e0\u6cd5\u5b9e\u4f8b\u5316\u5bf9\u8c61\n    //\u5b50\u7c7b\u5fc5\u987b\u91cd\u5199\u7236\u7c7b\u4e2d\u7684\u7eaf\u865a\u51fd\u6570\uff0c\u5426\u5219\u4e5f\u5c5e\u4e8e\u62bd\u8c61\u7c7b\n    virtual void func() = 0;\n};\n\nclass Son :public Base\n{\npublic:\n    virtual void func() \n    {\n        cout &lt;&lt; \"func\u8c03\u7528\" &lt;&lt; endl;\n    };\n};\n\nvoid test01()\n{\n    Base * base = NULL;\n    //base = new Base; // \u9519\u8bef\uff0c\u62bd\u8c61\u7c7b\u65e0\u6cd5\u5b9e\u4f8b\u5316\u5bf9\u8c61\n    base = new Son;\n    base-&gt;func();\n    delete base;//\u8bb0\u5f97\u9500\u6bc1\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"},{"location":"study/ROS2/T-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1C%2B%2B/#63","title":"6.3 \u865a\u6790\u6784\u548c\u7eaf\u865a\u6790\u6784","text":"<p>\u591a\u6001\u4f7f\u7528\u65f6\uff0c\u5982\u679c\u5b50\u7c7b\u4e2d\u6709\u5c5e\u6027\u5f00\u8f9f\u5230\u5806\u533a\uff0c\u90a3\u4e48\u7236\u7c7b\u6307\u9488\u5728\u91ca\u653e\u65f6\u65e0\u6cd5\u8c03\u7528\u5230\u5b50\u7c7b\u7684\u6790\u6784\u4ee3\u7801</p> <p>\u89e3\u51b3\u65b9\u5f0f\uff1a\u5c06\u7236\u7c7b\u4e2d\u7684\u6790\u6784\u51fd\u6570\u6539\u4e3a**\u865a\u6790\u6784**\u6216\u8005**\u7eaf\u865a\u6790\u6784**</p> <p>\u865a\u6790\u6784\u548c\u7eaf\u865a\u6790\u6784\u5171\u6027\uff1a</p> <ul> <li>\u53ef\u4ee5\u89e3\u51b3\u7236\u7c7b\u6307\u9488\u91ca\u653e\u5b50\u7c7b\u5bf9\u8c61</li> <li>\u90fd\u9700\u8981\u6709\u5177\u4f53\u7684\u51fd\u6570\u5b9e\u73b0</li> </ul> <p>\u865a\u6790\u6784\u548c\u7eaf\u865a\u6790\u6784\u533a\u522b\uff1a</p> <ul> <li>\u5982\u679c\u662f\u7eaf\u865a\u6790\u6784\uff0c\u8be5\u7c7b\u5c5e\u4e8e\u62bd\u8c61\u7c7b\uff0c\u65e0\u6cd5\u5b9e\u4f8b\u5316\u5bf9\u8c61</li> </ul> <p>\u865a\u6790\u6784\u8bed\u6cd5\uff1a</p> <p><code>virtual ~\u7c7b\u540d(){}</code></p> <p>\u7eaf\u865a\u6790\u6784\u8bed\u6cd5\uff1a</p> <p><code>virtual ~\u7c7b\u540d() = 0;</code></p> <p><code>\u7c7b\u540d::~\u7c7b\u540d(){}</code></p> <p>\u793a\u4f8b\uff1a</p> C++<pre><code>class Animal {\npublic:\n\n    Animal()\n    {\n        cout &lt;&lt; \"Animal \u6784\u9020\u51fd\u6570\u8c03\u7528\uff01\" &lt;&lt; endl;\n    }\n    virtual void Speak() = 0;\n\n    //\u6790\u6784\u51fd\u6570\u52a0\u4e0avirtual\u5173\u952e\u5b57\uff0c\u53d8\u6210\u865a\u6790\u6784\u51fd\u6570\n    //virtual ~Animal()\n    //{\n    //  cout &lt;&lt; \"Animal\u865a\u6790\u6784\u51fd\u6570\u8c03\u7528\uff01\" &lt;&lt; endl;\n    //}\n\n\n    virtual ~Animal() = 0;\n};\n\nAnimal::~Animal()\n{\n    cout &lt;&lt; \"Animal \u7eaf\u865a\u6790\u6784\u51fd\u6570\u8c03\u7528\uff01\" &lt;&lt; endl;\n}\n\n//\u548c\u5305\u542b\u666e\u901a\u7eaf\u865a\u51fd\u6570\u7684\u7c7b\u4e00\u6837\uff0c\u5305\u542b\u4e86\u7eaf\u865a\u6790\u6784\u51fd\u6570\u7684\u7c7b\u4e5f\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\u3002\u4e0d\u80fd\u591f\u88ab\u5b9e\u4f8b\u5316\u3002\n\nclass Cat : public Animal {\npublic:\n    Cat(string name)\n    {\n        cout &lt;&lt; \"Cat\u6784\u9020\u51fd\u6570\u8c03\u7528\uff01\" &lt;&lt; endl;\n        m_Name = new string(name);\n    }\n    virtual void Speak()\n    {\n        cout &lt;&lt; *m_Name &lt;&lt;  \"\u5c0f\u732b\u5728\u8bf4\u8bdd!\" &lt;&lt; endl;\n    }\n    ~Cat()\n    {\n        cout &lt;&lt; \"Cat\u6790\u6784\u51fd\u6570\u8c03\u7528!\" &lt;&lt; endl;\n        if (this-&gt;m_Name != NULL) {\n            delete m_Name;\n            m_Name = NULL;\n        }\n    }\n\npublic:\n    string *m_Name;\n};\n\nvoid test01()\n{\n    Animal *animal = new Cat(\"Tom\");\n    animal-&gt;Speak();\n\n    //\u901a\u8fc7\u7236\u7c7b\u6307\u9488\u53bb\u91ca\u653e\uff0c\u4f1a\u5bfc\u81f4\u5b50\u7c7b\u5bf9\u8c61\u53ef\u80fd\u6e05\u7406\u4e0d\u5e72\u51c0\uff0c\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\n    //\u600e\u4e48\u89e3\u51b3\uff1f\u7ed9\u57fa\u7c7b\u589e\u52a0\u4e00\u4e2a\u865a\u6790\u6784\u51fd\u6570\n    //\u865a\u6790\u6784\u51fd\u6570\u5c31\u662f\u7528\u6765\u89e3\u51b3\u901a\u8fc7\u7236\u7c7b\u6307\u9488\u91ca\u653e\u5b50\u7c7b\u5bf9\u8c61\n    delete animal;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <p>\u200b   1. \u865a\u6790\u6784\u6216\u7eaf\u865a\u6790\u6784\u5c31\u662f\u7528\u6765\u89e3\u51b3\u901a\u8fc7\u7236\u7c7b\u6307\u9488\u91ca\u653e\u5b50\u7c7b\u5bf9\u8c61</p> <p>\u200b   2. \u5982\u679c\u5b50\u7c7b\u4e2d\u6ca1\u6709\u5806\u533a\u6570\u636e\uff0c\u53ef\u4ee5\u4e0d\u5199\u4e3a\u865a\u6790\u6784\u6216\u7eaf\u865a\u6790\u6784</p> <p>\u200b   3. \u62e5\u6709\u7eaf\u865a\u6790\u6784\u51fd\u6570\u7684\u7c7b\u4e5f\u5c5e\u4e8e\u62bd\u8c61\u7c7b</p>"},{"location":"study/STM32/0.%E9%98%85%E8%AF%BB%E5%A3%B0%E6%98%8E/","title":"\u9605\u8bfb\u58f0\u660e","text":""},{"location":"study/STM32/0.%E9%98%85%E8%AF%BB%E5%A3%B0%E6%98%8E/#_1","title":"\u53c2\u8003\u58f0\u660e","text":"<p>STM32\u7cfb\u5217\u6587\u6863\u53c2\u8003\u4e3b\u8981\u4e3a\u6c5f\u534f\u79d1\u6280STM32\u5165\u95e8\u6559\u7a0b\uff0c\u5176\u4e2dHAL\u5e93\u90e8\u5206\u4ee3\u7801\u53c2\u8003\u6765\u6e90\u4e8ekeysking\u52a8\u753b\u6559\u7a0b\u3002\u5176\u4e2d\u6c5f\u534f\u79d1\u6280\u91c7\u7528\u7406\u8bba\u548c\u5b9e\u6218\u7ed3\u5408\uff0c\u662f\u6211\u6700\u559c\u6b22\u7684STM32\u6559\u7a0b\uff0c\u6ca1\u6709\u4e4b\u4e00\uff0c\u4f46\u6c5f\u534f\u79d1\u6280\u662f\u57fa\u4e8e\u6807\u51c6\u5e93\uff0c\u800c\u5b98\u65b9\u5df2\u7ecf\u4e0d\u5bf9\u6807\u51c6\u5e93\u66f4\u65b0\uff0cHAL\u5e93\u7ed3\u5408\u5b98\u65b9\u7684STM32CubeMX\u662f\u4e3b\u6d41\u4e5f\u662f\u4e3b\u63a8\u7684\u5f00\u53d1\u5f62\u5f0f\uff0c\u6240\u4ee5\u6b64\u7cfb\u5217\u7406\u8bba\u90e8\u5206\u662f\u53c2\u8003\u6c5f\u534f\u79d1\u6280STM32\u7cfb\u5217\u6559\u7a0b\uff0c\u4ee3\u7801\u90e8\u5206\u662f\u53c2\u8003keysking\u52a8\u753b\u6559\u7a0b\u3002</p>"},{"location":"study/STM32/0.%E9%98%85%E8%AF%BB%E5%A3%B0%E6%98%8E/#_2","title":"\u5f00\u53d1\u65b9\u5f0f","text":"<p>Clion+STM32CubeMX+HAL\u5e93\uff0cClion\u5f00\u53d1\u53c2\u8003\u7a1a\u6656\u541b\u7684\u77e5\u4e4e\uff1a\u914d\u7f6eCLion\u7528\u4e8eSTM32\u5f00\u53d1\u3010\u4f18\u96c5\u306e\u5d4c\u5165\u5f0f\u5f00\u53d1\u3011 - \u77e5\u4e4e</p> <p>\u5173\u4e8eClion\u7684\u8c03\u8bd5\u65b9\u6cd5\u53c2\u8003B\u7ad9\u7684\u4e00\u4e2a\u7cfb\u5217\uff1a\u2461\u7f16\u8bd1\u3001\u70e7\u5f55\u4e0e\u8c03\u8bd5\u2014\u4f7f\u7528CLion\u52a0\u901fSTM32Cube\u9879\u76ee\u5f00\u53d1_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>\u63d0\u9192\u4e00\u4e2a\u70b9\uff0cSTM32CubeMX\u5927\u6982\u57286.3\u5de6\u53f3\u7684\u4e00\u4e2a\u7248\u672c\u540e\uff0c\u4e0d\u5728\u652f\u6301 SW4STM32\u00a0\uff0c\u5de6\u53f3\u65b0\u7248\u7684STM32CubeMX\u5e94\u9009\u62e9 STM32CubeIDE\u00a0\u3002</p>"},{"location":"study/STM32/1.GPIO/","title":"\u7b2c\u4e00\u7ae0 GPIO","text":""},{"location":"study/STM32/1.GPIO/#11-gpio","title":"1.1 GPIO\u6a21\u5f0f\u7406\u8bba\u4ecb\u7ecd","text":"\u6a21\u5f0f\u540d\u79f0 \u6027\u8d28 \u7279\u5f81 \u6d6e\u7a7a\u8f93\u5165 \u6570\u5b57\u8f93\u5165 \u53ef\u8bfb\u53d6\u5f15\u811a\u7535\u5e73\uff0c\u82e5\u5f15\u811a\u60ac\u7a7a\uff0c\u5219\u7535\u5e73\u4e0d\u786e\u5b9a \u4e0a\u62c9\u8f93\u5165 \u6570\u5b57\u8f93\u5165 \u53ef\u8bfb\u53d6\u5f15\u811a\u7535\u5e73\uff0c\u5185\u90e8\u8fde\u63a5\u4e0a\u62c9\u7535\u963b\uff0c\u60ac\u7a7a\u65f6\u9ed8\u8ba4\u9ad8\u7535\u5e73 \u4e0b\u62c9\u8f93\u5165 \u6570\u5b57\u8f93\u5165 \u53ef\u8bfb\u53d6\u5f15\u811a\u7535\u5e73\uff0c\u5185\u90e8\u8fde\u63a5\u4e0b\u62c9\u7535\u963b\uff0c\u60ac\u7a7a\u65f6\u9ed8\u8ba4\u4f4e\u7535\u5e73 \u6a21\u62df\u8f93\u5165 \u6a21\u62df\u8f93\u5165 GPIO\u65e0\u6548\uff0c\u5f15\u811a\u76f4\u63a5\u63a5\u5165\u5185\u90e8ADC \u5f00\u6f0f\u8f93\u51fa \u6570\u5b57\u8f93\u51fa \u53ef\u8f93\u51fa\u5f15\u811a\u7535\u5e73\uff0c\u9ad8\u7535\u5e73\u4e3a\u9ad8\u963b\u6001\uff0c\u4f4e\u7535\u5e73\u63a5GND \u63a8\u633d\u8f93\u51fa \u6570\u5b57\u8f93\u51fa \u53ef\u8f93\u51fa\u5f15\u811a\u7535\u5e73\uff0c\u9ad8\u7535\u5e73\u63a5VDD\uff0c\u4f4e\u7535\u5e73\u63a5GND \u590d\u7528\u5f00\u6f0f\u8f93\u51fa \u6570\u5b57\u8f93\u51fa \u7531\u7247\u4e0a\u5916\u8bbe\u63a7\u5236\uff0c\u9ad8\u7535\u5e73\u4e3a\u9ad8\u963b\u6001\uff0c\u4f4e\u7535\u5e73\u63a5GND \u590d\u7528\u63a8\u633d\u8f93\u51fa \u6570\u5b57\u8f93\u51fa \u7531\u7247\u4e0a\u5916\u8bbe\u63a7\u5236\uff0c\u9ad8\u7535\u5e73\u63a5VDD\uff0c\u4f4e\u7535\u5e73\u63a5GND"},{"location":"study/STM32/1.GPIO/#12-gpio","title":"1.2 GPIO\u6a21\u5f0f\u5bf9\u6bd4\u4e0e\u4f7f\u7528","text":"\u6a21\u5f0f\u540d\u79f0 \u6807\u51c6\u5e93 HAL\u5e93\uff08\u6ce81\uff09 \u4f7f\u7528\u573a\u666f \u6d6e\u7a7a\u8f93\u5165 GPIO_Mode_IN_FLOATING GPIO_MODE_AF_INPUT \u8c03\u8bd5\u6216\u5904\u7406\u5916\u90e8\u9a71\u52a8\u4fe1\u53f7\uff08\u4e0d\u5e38\u7528\uff09 \u4e0a\u62c9\u8f93\u5165 GPIO_Mode_IPU GPIO_MODE_INPUT \u6309\u952e\u68c0\u6d4b\uff0c\u9ed8\u8ba4\u4fdd\u6301\u9ad8\u7535\u5e73 \u4e0b\u62c9\u8f93\u5165 GPIO_Mode_IPD GPIO_MODE_INPUT \u6309\u952e\u68c0\u6d4b\u6216I2C\u8f93\u5165\u5f15\u811a\uff0c\u9ed8\u8ba4\u4f4e\u7535\u5e73 \u6a21\u62df\u8f93\u5165 GPIO_Mode_AIN GPIO_MODE_ANALOG \u4f20\u611f\u5668\u6a21\u62df\u4fe1\u53f7\u63a5\u5165\uff08\u5982ADC\uff09 \u5f00\u6f0f\u8f93\u51fa GPIO_Mode_Out_OD GPIO_MODE_OUTPUT_OD I\u00b2C\u603b\u7ebf\uff0c\u8bbe\u5907\u4e3b\u52a8\u62c9\u4f4e\u7535\u5e73\uff08\u6ce82\uff09 \u63a8\u633d\u8f93\u51fa GPIO_Mode_Out_PP GPIO_MODE_OUTPUT_PP LED\u3001\u8702\u9e23\u5668\u7b49\uff0c0\u30011 \u4fe1\u53f7\u9a71\u52a8\u7684\u5916\u8bbe \u590d\u7528\u5f00\u6f0f\u8f93\u51fa GPIO_Mode_AF_OD GPIO_MODE_AF_OD I2C\u901a\u4fe1\uff0c\u5141\u8bb8\u591a\u4e2a\u8bbe\u5907\u8fde\u63a5\u5230\u603b\u7ebf\uff08\u6ce83\uff09 \u590d\u7528\u63a8\u633d\u8f93\u51fa GPIO_Mode_AF_PP GPIO_Mode_AF_PP SPI\u3001UART\u7b49\u5916\u8bbe\uff0c\u63d0\u4f9b\u7a33\u5b9a\u7684\u7535\u5e73\u5207\u6362\uff08\u6ce83\uff09 <p>\u6ce81\uff1a</p> <p>\u5173\u4e8eHAL\u548c\u6807\u51c6\u5e93\u7684\u540d\u79f0\u548c\u914d\u7f6e\u533a\u522b\uff1a</p> C<pre><code>GPIO_Mode_IN_FLOATING--|\nGPIO_Mode_IPU          |-----&gt; GPIO_MODE_INPUT == GPIO_MODE_AF_INPUT\nGPIO_Mode_IPD        --|  \n</code></pre> <p>\u5b9e\u8d28\u4e0aGPIO_MODE_AF_INPUT\u548cGPIO_MODE_INPUT\u7528\u7684\u662f\u540c\u4e00\u4e2a\u5730\u5740\uff0c\u4ec5\u4ec5\u5b8f\u5b9a\u4e49\u7684\u540d\u79f0\u4e0d\u540c\uff1b\u800c\u672c\u8d28\u4e0a\u5b83\u4eec\u7684\u4f7f\u7528\u548c\u539f\u7406\u4e5f\u662f\u4e00\u6837\u7684\u3002</p> <p>\u5728HAL\u5e93\u4e2d\u5c06GPIO\u6570\u5b57\u8f93\u5165\u6a21\u5f0f\u5747\u5f52\u5230GPIO_MODE_INPUT\u4e00\u79cd\u6a21\u5f0f\uff0c\u800c\u4e0a\u62c9\u548c\u4e0b\u62c9\u7535\u963b\u9700\u8981\u5355\u72ec\u914d\u7f6e\uff1a</p> C<pre><code>#define  GPIO_NOPULL        0x00000000u   /*!&lt; \u65e2\u4e0d\u4e0a\u62c9\u7535\u963b\uff0c\u4e5f\u4e0d\u4e0b\u62c9\u7535\u963b  */\n#define  GPIO_PULLUP        0x00000001u   /*!&lt; \u4e0a\u62c9\u7535\u963b  */\n#define  GPIO_PULLDOWN      0x00000002u   /*!&lt; \u4e0b\u62c9\u7535\u963b  */\n// \u914d\u7f6e\u65b9\u6cd5\nGPIO_InitTypeDef GPIO_InitStruct = {0};  // \u5c06\u7ed3\u6784\u4f53\u7684\u6240\u6709\u6210\u5458\u53d8\u91cf\u521d\u59cb\u5316\u4e3a 0\n__HAL_RCC_GPIOX_CLK_ENABLE();            // \u5f00\u542fGPIOX\u65f6\u949f,APB2\u603b\u7ebf\n// -------------\uff08\u7701\u7565\u82e5\u5e72\u914d\u7f6e\uff09\nGPIO_InitStruct.Pull = GPIO_NOPULL;      // \u65e2\u4e0d\u4e0a\u62c9\u7535\u963b\uff0c\u4e5f\u4e0d\u4e0b\u62c9\u7535\u963b\nHAL_GPIO_Init(GPIOX, &amp;GPIO_InitStruct);  // \u521d\u59cb\u5316\n</code></pre> <p>\u8fd9\u91cc\u914d\u7f6e\u8fd8\u4e0d\u5b8c\u6574\uff0c\u4e3b\u8981\u5c55\u793a\u4e0a\u62c9\u548c\u4e0b\u62c9\u7535\u963b\u9700\u8981\u5355\u72ec\u914d\u7f6e\u3002</p> <p>\u6ce82\uff1a</p> <p>\u5173\u4e8e\u5f00\u6f0f\u8f93\u51fa\u53ea\u80fd\u9a71\u52a8\u4f4e\u7535\u5e73\uff0c\u4e0d\u9a71\u52a8\u9ad8\u7535\u5e73\uff1a</p> <p>\u9a71\u52a8\u4f4e\u7535\u5e73 \uff1a\u5f53\u5f15\u811a\u8f93\u51fa\u4f4e\u7535\u5e73\u65f6\uff080\uff09\uff0c\u5b83\u4f1a\u5c06\u5f15\u811a\u4e0e\u5730\uff08GND\uff09\u76f8\u8fde\uff0c\u4ece\u800c\u62c9\u4f4e\u8f93\u51fa\u4fe1\u53f7\u7ebf\u7684\u7535\u538b\u3002</p> <p>\u4e0d\u9a71\u52a8\u9ad8\u7535\u5e73 \uff1a\u5f53\u5f15\u811a\u8f93\u51fa\u9ad8\u7535\u5e73\u65f6\uff081\uff09\uff0c\u5b83\u4e0d\u4f1a\u4e3b\u52a8\u63d0\u4f9b\u9ad8\u7535\u538b\uff08\u5982VDD\uff09\uff0c\u800c\u662f\u5904\u4e8e\u9ad8\u963b\u6297\uff08Hi-Z\uff09\u72b6\u6001\u3002\u6b64\u65f6\uff0c\u4fe1\u53f7\u7ebf\u7684\u7535\u5e73\u7531\u5916\u90e8\u7535\u8def\uff08\u4f8b\u5982\u4e00\u4e2a\u4e0a\u62c9\u7535\u963b\uff09\u51b3\u5b9a\u3002</p> <p>\u5728\u5f00\u6f0f\u6a21\u5f0f\u4e0b\uff0c\u5f15\u811a\u7684\u8f93\u51fa\u7aef\u7c7b\u4f3c\u4e8e\u5f00\u5173\uff0c\u8fd9\u4e2a\u5f00\u5173\u7684\u53e6\u4e00\u7aef\u63a5\u5730\u3002\u5982\u679c\u5f00\u5173\u5173\u95ed\uff08\u5f15\u811a\u8f93\u51fa\u4f4e\u7535\u5e73\uff09\uff0c\u5f15\u811a\u5c31\u63a5\u5730\uff0c\u8f93\u51fa\u4f4e\u7535\u5e73\uff1b\u5982\u679c\u5f00\u5173\u6253\u5f00\uff08\u5f15\u811a\u8f93\u51fa\u9ad8\u7535\u5e73\uff09\uff0c\u5f15\u811a\u65ad\u5f00\uff08\u9ad8\u963b\u6001\uff09\uff0c\u4fe1\u53f7\u7ebf\u4e0a\u7684\u7535\u5e73\u5c06\u7531\u5916\u90e8\u4e0a\u62c9\u7535\u963b\u51b3\u5b9a\u3002</p> <p>I\u00b2C\u603b\u7ebf\u4f7f\u7528\u573a\u666f \uff1aI\u00b2C\u534f\u8bae\u4f7f\u7528\u5f00\u6f0f\u8f93\u51fa\u7684\u65b9\u5f0f\uff0c\u5141\u8bb8\u591a\u4e2a\u8bbe\u5907\u5171\u4eab\u540c\u4e00\u6761\u6570\u636e\u7ebf\uff0c\u5e76\u4e14\u901a\u8fc7\u4e0a\u62c9\u7535\u963b\u5c06\u6570\u636e\u7ebf\u62c9\u9ad8\u3002\u6bcf\u4e2a\u8bbe\u5907\u53ef\u4ee5\u4e3b\u52a8\u62c9\u4f4e\u7535\u5e73\uff0c\u4f46\u4e0d\u4f1a\u4e3b\u52a8\u62c9\u9ad8\uff0c\u907f\u514d\u4e86\u8bbe\u5907\u4e4b\u95f4\u7684\u7535\u5e73\u51b2\u7a81\u3002</p> <p>\u663e\u7136\uff0c\u5f00\u6f0f\u8f93\u51fa\u4e3b\u8981\u5229\u7528\u4f4e\u7535\u5e73\u5904\u7406\u4fe1\u53f7\uff0c\u53ef\u4ee5\u907f\u514d\u9ad8\u7535\u5e73\u53d1\u751f\u5f71\u54cd\u6216\u51fa\u73b0\u7535\u5e73\u51b2\u7a81\u3002</p> <p>\u6ce83\uff1a</p> <p>\u5173\u4e8e\u8f93\u51fa\u7684\u590d\u7528\u4e0e\u4e0d\u590d\u7528\u7684\u533a\u522b\u548c\u4f7f\u7528\u573a\u666f\uff1a</p> <ol> <li> <p>\u590d\u7528\u6a21\u5f0f\u4e0e\u4e0d\u590d\u7528\u7684\u533a\u522b\uff1a</p> <ul> <li>\u590d\u7528\u6a21\u5f0f \uff1aGPIO\u5f15\u811a\u7528\u4e8e\u5916\u8bbe\uff08\u5982UART\u3001SPI\u3001I\u00b2C\uff09\u63a7\u5236\uff0c\u4e0d\u518d\u4f5c\u4e3a\u666e\u901a\u7684GPIO\u5f15\u811a\u4f7f\u7528\u3002\u901a\u8fc7\u914d\u7f6e\u4e3a\u590d\u7528\u5f00\u6f0f\u6216\u590d\u7528\u63a8\u633d\u6a21\u5f0f\uff0c\u5916\u8bbe\u7684\u4fe1\u53f7\u63a7\u5236\u5f15\u811a\u7684\u7535\u5e73\u8f93\u51fa\u3002</li> <li>\u975e\u590d\u7528\u6a21\u5f0f\u00a0\uff1aGPIO\u5f15\u811a\u7531\u7528\u6237\u7a0b\u5e8f\u76f4\u63a5\u63a7\u5236\uff0c\u53ef\u4ee5\u624b\u52a8\u8bbe\u7f6e\u5f15\u811a\u4e3a\u9ad8\u7535\u5e73\u6216\u4f4e\u7535\u5e73\uff0c\u7528\u4e8e\u666e\u901a\u7684\u8f93\u5165\u8f93\u51fa\u64cd\u4f5c\u3002</li> </ul> </li> <li> <p>\u4f7f\u7528\u573a\u666f\u7684\u533a\u522b\uff1a</p> <ul> <li>\u63a8\u633d vs \u5f00\u6f0f<ul> <li>\u63a8\u633d\u6a21\u5f0f\u9002\u5408\u9a71\u52a8\u5355\u4e2a\u8bbe\u5907\uff0c\u4e0d\u9700\u8981\u62c5\u5fc3\u7535\u5e73\u51b2\u7a81\u3002</li> <li>\u5f00\u6f0f\u6a21\u5f0f\u9002\u5408\u591a\u4e2a\u8bbe\u5907\u5171\u4eab\u6570\u636e\u7ebf\u6216\u4e0e\u5176\u4ed6\u7535\u538b\u7cfb\u7edf\u7684\u8bbe\u5907\u901a\u4fe1\u3002</li> </ul> </li> <li>\u590d\u7528 vs \u4e0d\u590d\u7528<ul> <li>\u590d\u7528\u6a21\u5f0f\u9002\u7528\u4e8e\u5f15\u811a\u88ab\u5916\u8bbe\u63a7\u5236\u7684\u573a\u5408\uff08\u5982I\u00b2C\u3001SPI\u3001UART\u7b49\uff09\uff0c\u8fd9\u4e9b\u5f15\u811a\u7684\u72b6\u6001\u7531\u5916\u8bbe\u7684\u4fe1\u53f7\u51b3\u5b9a\u3002</li> <li>\u975e\u590d\u7528\u6a21\u5f0f\u9002\u7528\u4e8e\u666e\u901a\u7684GPIO\u5f15\u811a\uff0c\u7528\u6237\u53ef\u4ee5\u81ea\u7531\u63a7\u5236\u5f15\u811a\u7684\u7535\u5e73\u3002</li> </ul> </li> </ul> </li> </ol>"},{"location":"study/STM32/1.GPIO/#13-stm32cubemx","title":"1.3 STM32CubeMX\u914d\u7f6e","text":""},{"location":"study/STM32/1.GPIO/#131","title":"1.3.1 \u67e5\u627e\u82af\u7247","text":""},{"location":"study/STM32/1.GPIO/#132-sys","title":"1.3.2 SYS\u914d\u7f6e","text":""},{"location":"study/STM32/1.GPIO/#133-rcc","title":"1.3.3 RCC\u914d\u7f6e","text":""},{"location":"study/STM32/1.GPIO/#134-gpio","title":"1.3.4 GPIO\u914d\u7f6e","text":"<p>GPIO\u4e00\u5171\u4e09\u79cd\u53ef\u9009<code>GPIO_Input</code>\uff08\u6570\u5b57\u8f93\u5165\uff09\u3001<code>GPIO_Output</code>\uff08\u6570\u5b57\u8f93\u51fa\uff09\u3001<code>GPIO_Analog</code>\uff08\u6a21\u62df\u8f93\u5165\uff09</p> <p></p> <p>PB0\u548cPB1\u914d\u7f6e\u4e3aLED1\u3001LED2</p> <ul> <li>\u9ed8\u8ba4\u4f4e\u7535\u5e73</li> <li>PB0\u548cPB1\u5747\u914d\u7f6e\u63a8\u633d\u8f93\u51fa</li> <li>\u4e0a\u62c9\u6216\u4e0b\u62c9\u7535\u963b\u5728\u8f93\u5165\u6a21\u5f0f\u4f7f\u7528\uff0c\u8f93\u51fa\u6a21\u5f0f\u4e0d\u914d\u7f6e</li> <li>\u8f93\u51fa\u901f\u5ea6\u6309\u9700\u914d\u7f6e</li> <li>\u7528\u6237\u6807\u7b7e\uff0c\u7ed9\u5f15\u811a\u8d77\u522b\u540d\uff0c\u6309\u9700\u914d\u7f6e</li> </ul> <p></p> <p>PB6\u3001PB7\u914d\u7f6e\u4e3aKEY1\u3001KEY2</p> <ul> <li>\u8f93\u5165\u6a21\u5f0f</li> <li>\u4e0b\u62c9\u7535\u963b</li> </ul> <p></p>"},{"location":"study/STM32/1.GPIO/#135","title":"1.3.5 \u65f6\u949f\u9891\u7387\u914d\u7f6e","text":""},{"location":"study/STM32/1.GPIO/#136","title":"1.3.6 \u5de5\u7a0b\u914d\u7f6e","text":"<p>\u5b8c\u6210\u914d\u7f6e\u70b9\u51fb\u53f3\u4e0a\u89d2\u751f\u6210\u5de5\u7a0b</p>"},{"location":"study/STM32/10.I2C%E9%80%9A%E4%BF%A1/","title":"\u7b2c\u5341\u7ae0 I2C","text":""},{"location":"study/STM32/10.I2C%E9%80%9A%E4%BF%A1/#101-i2c","title":"10.1 I2C\u901a\u4fe1","text":""},{"location":"study/STM32/10.I2C%E9%80%9A%E4%BF%A1/#1011-i2c","title":"10.1.1 I2C\u901a\u4fe1\u7b80\u4ecb","text":"<ul> <li>I2C\uff08Inter IC Bus\uff09\u662f\u7531Philips\u516c\u53f8\u5f00\u53d1\u7684\u4e00\u79cd\u901a\u7528\u6570\u636e\u603b\u7ebf</li> <li>\u4e24\u6839\u901a\u4fe1\u7ebf\uff1aSCL\uff08Serial Clock\uff09\u3001SDA\uff08Serial Data\uff09</li> <li>\u540c\u6b65\uff0c\u534a\u53cc\u5de5</li> <li>\u5e26\u6570\u636e\u5e94\u7b54</li> <li>\u652f\u6301\u603b\u7ebf\u6302\u8f7d\u591a\u8bbe\u5907\uff08\u4e00\u4e3b\u591a\u4ece\u3001\u591a\u4e3b\u591a\u4ece\uff09</li> </ul>"},{"location":"study/STM32/10.I2C%E9%80%9A%E4%BF%A1/#1012","title":"10.1.2 \u786c\u4ef6\u7535\u8def","text":"<ul> <li>\u6240\u6709I2C\u8bbe\u5907\u7684SCL\u8fde\u5728\u4e00\u8d77\uff0cSDA\u8fde\u5728\u4e00\u8d77</li> <li>\u8bbe\u5907\u7684SCL\u548cSDA\u5747\u8981\u914d\u7f6e\u6210 \u5f00\u6f0f\u8f93\u51fa\u6a21\u5f0f</li> <li>SCL\u548cSDA\u5404\u6dfb\u52a0\u4e00\u4e2a \u4e0a\u62c9\u7535\u963b \uff0c\u963b\u503c\u4e00\u822c\u4e3a4.7K\u03a9\u5de6\u53f3</li> </ul>"},{"location":"study/STM32/10.I2C%E9%80%9A%E4%BF%A1/#1013-i2c","title":"10.1.3 I2C\u65f6\u5e8f\u57fa\u672c\u5355\u5143","text":"Danger <p>\u5e94\u8be5\u660e\u767d\uff0cSCL\u4e3a\u65f6\u949f\u7ebf\uff0c\u800cSDA\u4e3a\u6570\u636e\u4f20\u8f93\u7ebf\u3002</p> <ul> <li>\u8d77\u59cb\u6761\u4ef6\uff1a SCL\u9ad8\u7535\u5e73\u671f\u95f4\uff0cSDA\u4ece\u9ad8\u7535\u5e73\u5207\u6362\u5230\u4f4e\u7535\u5e73</li> <li>\u7ec8\u6b62\u6761\u4ef6\uff1a SCL\u9ad8\u7535\u5e73\u671f\u95f4\uff0cSDA\u4ece\u4f4e\u7535\u5e73\u5207\u6362\u5230\u9ad8\u7535\u5e73</li> </ul> <p></p> <ul> <li>\u53d1\u9001\u4e00\u4e2a\u5b57\u8282<ol> <li>SCL\u4f4e\u7535\u5e73\u671f\u95f4\uff0c \u4e3b\u673a \u5c06\u6570\u636e\u4f4d\u4f9d\u6b21\u653e\u5230SDA\u7ebf\u4e0a\uff08 \u9ad8\u4f4d\u5148\u884c \uff09</li> <li>\u7136\u540e\u91ca\u653eSCL\uff0c \u4ece\u673a \u5c06\u5728SCL\u9ad8\u7535\u5e73\u671f\u95f4\u8bfb\u53d6\u6570\u636e\u4f4d</li> <li>\u6240\u4ee5 SCL\u9ad8\u7535\u5e73\u671f\u95f4SDA\u4e0d\u5141\u8bb8\u6709\u6570\u636e\u53d8\u5316 \uff0c\u4f9d\u6b21\u5faa\u73af\u4e0a\u8ff0\u8fc7\u7a0b8\u6b21\uff0c\u5373\u53ef\u53d1\u9001\u4e00\u4e2a \u5b57\u8282 </li> </ol> </li> </ul> \u518d\u6b21\u5f3a\u8c03 <p>\u4e00\u4e2a\u9ad8\u4f4e\u7535\u5e73\u4fe1\u53f7\uff0c\u4ee3\u8868\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u5373\u4e00\u4e2abit\uff0c\u4e00\u4e2a\u5b57\u8282\u4f4d\u4e3a 8 \u4e2abit</p> <p></p> <ul> <li>\u63a5\u6536\u4e00\u4e2a\u5b57\u8282<ol> <li>SCL\u4f4e\u7535\u5e73\u671f\u95f4\uff0c \u4ece\u673a \u5c06\u6570\u636e\u4f4d\u4f9d\u6b21\u653e\u5230SDA\u7ebf\u4e0a\uff08 \u9ad8\u4f4d\u5148\u884c \uff09</li> <li>\u7136\u540e\u91ca\u653eSCL\uff0c \u4e3b\u673a \u5c06\u5728SCL\u9ad8\u7535\u5e73\u671f\u95f4\u8bfb\u53d6\u6570\u636e\u4f4d<ol> <li>\u6240\u4ee5SCL\u9ad8\u7535\u5e73\u671f\u95f4SDA\u4e0d\u5141\u8bb8\u6709\u6570\u636e\u53d8\u5316\uff0c\u4f9d\u6b21\u5faa\u73af\u4e0a\u8ff0\u8fc7\u7a0b8\u6b21\uff0c\u5373\u53ef\u63a5\u6536\u4e00\u4e2a\u5b57\u8282\uff08\u4e3b\u673a\u5728\u63a5\u6536\u4e4b\u524d\uff0c\u9700\u8981\u91ca\u653eSDA\uff09</li> </ol> </li> </ol> </li> </ul> Note <p>\u63a5\u6536\u548c\u53d1\u9001\u4e3b\u8981\u5728\u4e8e\u4e3b\u673a\u548c\u4ece\u673a\uff0c\u662f\u8c01\u5f80SDA\u4e0a\u653e\u6570\u636e\u548c\u8c01\u4eceSDA\u8bfb\u6570\u636e\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f \u4e3b\u673a\u5728\u63a5\u6536\u4e4b\u524d\uff0c\u9700\u8981\u91ca\u653eSDA \uff0c\u91ca\u653e\u5373\u7f6e\u9ad8\u7535\u5e73\u3002</p> <p></p> <ul> <li>\u53d1\u9001\u5e94\u7b54\uff1a \u4e3b\u673a\u5728\u63a5\u6536\u5b8c\u4e00\u4e2a\u5b57\u8282\u4e4b\u540e\uff0c\u5728\u4e0b\u4e00\u4e2a\u65f6\u949f\u53d1\u9001\u4e00\u4f4d\u6570\u636e\uff0c\u6570\u636e 0 \u8868\u793a\u5e94\u7b54\uff0c\u6570\u636e 1 \u8868\u793a\u975e\u5e94\u7b54</li> <li>\u63a5\u6536\u5e94\u7b54\uff1a \u4e3b\u673a\u5728\u53d1\u9001\u5b8c\u4e00\u4e2a\u5b57\u8282\u4e4b\u540e\uff0c\u5728\u4e0b\u4e00\u4e2a\u65f6\u949f\u63a5\u6536\u4e00\u4f4d\u6570\u636e\uff0c\u5224\u65ad\u4ece\u673a\u662f\u5426\u5e94\u7b54\uff0c\u6570\u636e 0 \u8868\u793a\u5e94\u7b54\uff0c\u6570\u636e 1 \u8868\u793a\u975e\u5e94\u7b54\uff08\u4e3b\u673a\u5728\u63a5\u6536\u4e4b\u524d\uff0c\u9700\u8981\u91ca\u653eSDA\uff09</li> </ul> <p></p>"},{"location":"study/STM32/10.I2C%E9%80%9A%E4%BF%A1/#1014-i2c","title":"10.1.4 I2C\u8bfb\u5199\u65f6\u5e8f","text":"<ul> <li>\u6307\u5b9a\u5730\u5740\u5199</li> <li>\u5bf9\u4e8e\u6307\u5b9a\u8bbe\u5907\uff08Slave Address\uff09\uff0c\u5728\u6307\u5b9a\u5730\u5740\uff08Reg Address\uff09\u4e0b\uff0c\u5199\u5165\u6307\u5b9a\u6570\u636e\uff08Data\uff09</li> </ul> <ul> <li>\u5f53\u524d\u5730\u5740\u8bfb</li> <li>\u5bf9\u4e8e\u6307\u5b9a\u8bbe\u5907\uff08Slave Address\uff09\uff0c\u5728\u5f53\u524d\u5730\u5740\u6307\u9488\u6307\u793a\u7684\u5730\u5740\u4e0b\uff0c\u8bfb\u53d6\u4ece\u673a\u6570\u636e\uff08Data\uff09</li> </ul> <ul> <li>\u6307\u5b9a\u5730\u5740\u8bfb</li> <li>\u5bf9\u4e8e\u6307\u5b9a\u8bbe\u5907\uff08Slave Address\uff09\uff0c\u5728\u6307\u5b9a\u5730\u5740\uff08Reg Address\uff09\u4e0b\uff0c\u8bfb\u53d6\u4ece\u673a\u6570\u636e\uff08Data\uff09</li> </ul> <p>\u5173\u4e8e\u201c\u4e3b\u673a\u53d1\u9001\u5e94\u7b54\u4f4d\u201d \u548c \u201c\u5f53\u524d\u5730\u5740\u6307\u9488\u6307\u793a\u7684\u5730\u5740\u201d</p> <ul> <li>**\u5f53\u524d\u5730\u5740\u6307\u9488\u6307\u793a\u7684\u5730\u5740 **\uff1a\u53d1\u9001\u5b8c\u4e00\u4e2a\u5b57\u8282\u540e\uff0c\u6307\u9488\u5730\u5740\u4f1a\u81ea\u589e 1 \uff0c\u800c\u5730\u5740\u6307\u9488\u9ed8\u8ba4\u6307\u5411 0 \u4f4d\u7f6e\u3002</li> </ul> <ul> <li>**\u4e3b\u673a\u53d1\u9001\u5e94\u7b54\u4f4d **\uff1a\u5728\u53d1\u9001\u6a21\u5f0f\u4e0b\uff0c\u4e3b\u673a\u60f3\u8981\u7ed3\u675f\uff0c\u5148\u7ed9\u4ece\u673a\u975e\u5e94\u7b54\uff0c\u9632\u6b62\u4ece\u673a\u4e89\u593aSDA\u63a7\u5236\u6743\u65e0\u6cd5\u751f\u6210\u7ed3\u675f\u6761\u4ef6\u3002</li> </ul>"},{"location":"study/STM32/10.I2C%E9%80%9A%E4%BF%A1/#102-i2c","title":"10.2 \u8f6f\u4ef6\u6a21\u62dfI2C","text":"<p>\u8f6f\u4ef6\u6a21\u62df\u7684\u597d\u5904\u5c31\u5728\u4e8e\u4f7f\u7528\u7075\u6d3b\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5f15\u811a\uff0c\u51cf\u5c11\u786c\u4ef6\u8d44\u6e90\u7684\u4f7f\u7528\u3002\u6211\u4f7f\u7528PB1\u4f5c\u4e3aSDA\uff0cPB2\u4f5c\u4e3aSCL\uff0c\u4e24\u4e2a\u5f15\u811a\u5747\u914d\u7f6e\u4e3a \u5f00\u6f0f\u8f93\u51fa\u6a21\u5f0f \u548c \u4e0a\u62c9\u7535\u963b \uff0c\u9ed8\u8ba4\u9ad8\u7535\u5e73\uff08\u786c\u4ef6\u7535\u8def\u8bb2\u8fc7\uff09\u3002</p> <p></p> <p>\u65b0\u5efa<code>sw_I2C.c</code>\u548c<code>sw_I2C.h</code>\uff1a</p> <p><code>sw_I2C.c</code></p> C<pre><code>#include \"swI2C.h\"\n\nvoid delay_us(uint32_t us) {\n    uint32_t start = SysTick-&gt;VAL;\n    uint32_t ticks = us * (HAL_RCC_GetHCLKFreq() / 1000000); // \u8ba1\u7b97\u5fae\u79d2\u5bf9\u5e94\u7684\u65f6\u949f\u5468\u671f\u6570\n\n    while ((start - SysTick-&gt;VAL) &lt; ticks) {\n        if (SysTick-&gt;VAL &gt; start) { // \u5982\u679c\u53d1\u751f\u56de\u7ed5\n            start += SysTick-&gt;LOAD + 1;\n        }\n    }\n}\n\n/* \u6539\u53d8SDA\u7535\u5e73 */\nvoid SDA_Write(uint8_t BitValue)\n{\n    HAL_GPIO_WritePin(SDA_GPIO_Port, SDA_Pin, (GPIO_PinState) BitValue);\n    delay_us(10);\n}\n/* \u6539\u53d8SCL\u7535\u5e73 */\nvoid SCL_Write(uint8_t BitValue)\n{\n    HAL_GPIO_WritePin(SCL_GPIO_Port, SCL_Pin, (GPIO_PinState) BitValue);\n    delay_us(10);\n}\n/* \u8bfb\u53d6SDA\u7535\u5e73*/\nGPIO_PinState SDA_Read(void)\n{\n    GPIO_PinState BitValue;\n    BitValue = HAL_GPIO_ReadPin(SDA_GPIO_Port, SDA_Pin);\n    delay_us(10);\n    return BitValue;\n}\n\n/* brief: I2C\u5f00\u59cb\u6761\u4ef6,SCL\u9ad8\u7535\u5e73\u671f,SDA\u4ece\u9ad8\u7535\u5e73\u5207\u6362\u5230\u4f4e\u7535\u5e73\n *\n */\nvoid I2C_Start(void)\n{\n    // \u786e\u4fddSDA\u4e3a\u9ad8\u7535\u5e73\n    SDA_Write(1);\n    // \u7f6eSCL\u4e3a\u9ad8\u7535\u5e73\n    SCL_Write(1);\n    // \u7f6eSDA\u4e3a\u4f4e\u7535\u5e73,\u5b8c\u6210\u4e0b\u964d\u6cbf\n    SDA_Write(0);\n    // \u7f6eSCL\u4e3a\u4f4e\u7535\u5e73,\u4e3a\u653e\u6570\u636e\u5230SDA\u4e0a\u505a\u51c6\u5907\n    SCL_Write(0);\n}\n\n/* brief: I2C\u7ec8\u6b62\u6761\u4ef6,SCL\u9ad8\u7535\u5e73\u671f\u95f4,SDA\u4ece\u4f4e\u7535\u5e73\u5207\u6362\u5230\u9ad8\u7535\u5e73\n *\n */\nvoid I2C_Stop(void)\n{\n    // \u7f6eSDA\u4e3a\u4f4e\u7535\u5e73\n    SDA_Write(0);\n    // \u7f6eSCL\u4e3a\u4f4e\u7535\u5e73\n    SCL_Write(0);\n    // \u786e\u4fddSDA\u4e3a\u9ad8\u7535\u5e73,\u5b8c\u6210\u4e0a\u5347\u6cbf\n    SDA_Write(1);\n}\n\n/* brief: \u53d1\u9001\u4e00\u4e2a\u5b57\u8282,\u6570\u636e\u4f4d\u4f9d\u6b21\u653e\u5230SDA\u7ebf\u4e0a\n * \u4e00\u4e2a\u5b57\u8282 8 bit,\u6240\u4ee5\u7528uint8_t\n */\nvoid I2C_WriteByte(uint8_t Byte)\n{\n    uint8_t i;\n    for (i=0; i&lt;8; i++)\n    {\n        // \u5199\u6570\u636e\u5230SDA\n        SDA_Write(Byte &amp; (0x80 &gt;&gt; i));\n        // \u62c9\u9ad8SCL\u53ef\u4ee5\u8ba9\u4ece\u673a\u8bfb\u6570\u636e\n        SCL_Write(1);\n        // \u62c9\u4f4eSCL\u7ee7\u7eed\u53d1\u9001\u4e0b\u4e00\u4f4d\n        SCL_Write(0);\n    }\n}\n\n/* brief: \u63a5\u6536\u4e00\u4e2a\u5b57\u8282,\u5728SCL\u9ad8\u7535\u5e73\u671f\u95f4\u8bfb\u53d6\u6570\u636e\u4f4d\n * \u4e00\u4e2a\u5b57\u8282 8 bit,\u6240\u4ee5\u7528uint8_t\n */\nuint8_t I2C_ReadByte(void)\n{\n    uint8_t i, Byte=0x00;\n    // \u4e3b\u673a\u91ca\u653eSDA\n    SDA_Write(1);\n    for (i=0; i&lt;8; i++)\n    {\n        // \u62c9\u9ad8SCL\u8bfb\u6570\u636e\n        SCL_Write(1);\n        // \u9ad8\u7535\u5e73\u7684\u4f4d\u8865 1 \uff0c\u5176\u4f59\u4e0d\u53d8\n        if (SDA_Read() == 1) {Byte = Byte | (0x80 &gt;&gt; i);}\n        // \u62c9\u4f4eSCL\u7ee7\u7eed\u53d1\u9001\u4e0b\u4e00\u4f4d\n        SCL_Write(0);\n    }\n    return Byte;\n}\n\n/* brief: \u53d1\u9001\u5e94\u7b54\n * \u5c31\u662f\u53d1\u9001 1 \u4f4d\u6570\u636e\n */\nvoid I2C_WriteAcK(uint8_t Ack)\n{\n    SDA_Write((GPIO_PinState)Ack);\n    // \u62c9\u9ad8SCL\u53ef\u4ee5\u8ba9\u4ece\u673a\u8bfb\u6570\u636e\n    SCL_Write(1);\n    // \u62c9\u4f4eSCL\u7ee7\u7eed\u53d1\u9001\u4e0b\u4e00\u4f4d\n    SCL_Write(0);\n}\n/* brief: \u63a5\u6536\u5e94\u7b54\n * \u5c31\u662f\u63a5\u6536 1 \u4f4d\u6570\u636e\n */\nuint8_t I2C_ReceiveAck(void)\n{\n    uint8_t Ack;\n    // \u4e3b\u673a\u91ca\u653eSDA\n    SDA_Write(1);\n    // \u62c9\u9ad8SCL,\u8bfb\u6570\u636e\n    SCL_Write(1);\n    Ack = SDA_Read();\n    // \u62c9\u4f4eSCL\u7ee7\u7eed\u53d1\u9001\u4e0b\u4e00\u4f4d\n    SCL_Write(0);\n    return Ack;\n}\n</code></pre> <p><code>sw_I2C.h</code></p> C<pre><code>#ifndef SW_I2C_SWI2C_H\n#define SW_I2C_SWI2C_H\n\n//\n#include \"gpio.h\"\n\nvoid delay_us(uint32_t us);\nvoid SDA_Write(uint8_t BitValue);\nvoid SCL_Write(uint8_t BitValue);\nGPIO_PinState SDA_Read(void);\nvoid I2C_Start(void);\nvoid I2C_Stop(void);\nvoid I2C_WriteByte(uint8_t Byte);\nuint8_t I2C_ReadByte(void);\nvoid I2C_WriteAcK(uint8_t Ack);\nuint8_t I2C_ReceiveAck(void);\n\n\n#endif //SW_I2C_SWI2C_H\n</code></pre>"},{"location":"study/STM32/10.I2C%E9%80%9A%E4%BF%A1/#103-i2c","title":"10.3 I2C\u786c\u4ef6\u5916\u8bbe","text":""},{"location":"study/STM32/10.I2C%E9%80%9A%E4%BF%A1/#1031-i2c","title":"10.3.1 I2C\u5916\u8bbe\u7b80\u4ecb","text":"<ul> <li>STM32\u5185\u90e8\u96c6\u6210\u4e86\u786c\u4ef6I2C\u6536\u53d1\u7535\u8def\uff0c\u53ef\u4ee5\u7531\u786c\u4ef6\u81ea\u52a8\u6267\u884c\u65f6\u949f\u751f\u6210\u3001\u8d77\u59cb\u7ec8\u6b62\u6761\u4ef6\u751f\u6210\u3001\u5e94\u7b54\u4f4d\u6536\u53d1\u3001\u6570\u636e\u6536\u53d1\u7b49\u529f\u80fd\uff0c\u51cf\u8f7bCPU\u7684\u8d1f\u62c5</li> <li>\u652f\u6301\u591a\u4e3b\u673a\u6a21\u578b</li> <li>\u652f\u63017\u4f4d/10\u4f4d\u5730\u5740\u6a21\u5f0f</li> <li>\u652f\u6301\u4e0d\u540c\u7684\u901a\u8baf\u901f\u5ea6\uff0c\u6807\u51c6\u901f\u5ea6(\u9ad8\u8fbe100 kHz)\uff0c\u5feb\u901f(\u9ad8\u8fbe400 kHz)</li> <li>\u652f\u6301DMA</li> <li>\u517c\u5bb9SMBus\u534f\u8bae</li> </ul> <p>STM32F103C8T6 \u786c\u4ef6I2C\u8d44\u6e90\uff1aI2C1\u3001I2C2</p>"},{"location":"study/STM32/10.I2C%E9%80%9A%E4%BF%A1/#1032-i2c","title":"10.3.2 I2C\u6846\u56fe","text":"<ol> <li>I2C\u7684\u6570\u636e\u6536\u53d1\u7ed3\u6784\uff0c\u4e0e\u4e32\u53e3\u7c7b\u4f3c\u53ef\u7c7b\u6bd4\u7406\u89e3\u3002</li> <li>\u6bd4\u8f83\u5668\u3001\u81ea\u8eab\u5730\u5740\u5bc4\u5b58\u5668\u548c\u53cc\u5730\u5740\u5bc4\u5b58\u5668\u662f\u7528\u4e8eSTM32\u505a\u4ece\u673a\u65f6\uff0c\u6307\u5b9aSTM32\u7684\u5730\u5740\uff0c\u6b64\u65f6\u5c06\u6307\u5b9a\u5730\u5740\u5199\u5165\u81ea\u8eab\u5730\u5740\u5bc4\u5b58\u5668\u5373\u53ef\u88ab\u4e3b\u673a\u53ec\u5524\u3002</li> <li>\u4e09\u4e2a\u91cd\u8981\u5bc4\u5b58\u5668\uff0c\u77e5\u9053\u5373\u53ef\u3002</li> </ol>"},{"location":"study/STM32/10.I2C%E9%80%9A%E4%BF%A1/#1033-i2c","title":"10.3.3 I2C\u57fa\u672c\u7ed3\u6784","text":"<p>\u5c06\u7b80\u5355I2C\u901a\u4fe1\u7528\u4e0d\u5230\u7684\u90e8\u5206\u5220\u53bb\u5c31\u5269\u4e0b\u5982\u56fe\u7684\u7ed3\u6784\uff0c\u5176\u4e2d\u6709\u51e0\u70b9\u9700\u8981\u6ce8\u610f\uff1a</p> <ul> <li>I2C\u7684\u79fb\u4f4d\u65f6 \u4f4e\u4f4d\u5148\u884c \uff0c\u8fd9\u4e00\u70b9\u4e0e\u4e32\u53e3\u901a\u4fe1 \u76f8\u53cd \u3002</li> <li>\u53d1\u9001\u6570\u636e\u65f6\uff0c\u6570\u636e\u5bc4\u5b58\u5668\u5c06\u4e00\u4f4d \u5b57\u8282 \u6570\u636e\u4f20\u5230\u6570\u636e\u79fb\u4f4d\u5bc4\u5b58\u5668\u540e\uff0c\u6b64\u65f6\u6570\u636e\u5bc4\u5b58\u5668\u4e3a\u7a7a\uff0c\u79fb\u4f4d\u5bc4\u5b58\u5668\u975e\u7a7a\uff0c\u4f1a\u7f6e\u6807\u5fd7\u4f4d\u3002</li> <li>\u63a5\u6536\u6570\u636e\u65f6\u540c\u7406\u3002</li> </ul> <p></p>"},{"location":"study/STM32/10.I2C%E9%80%9A%E4%BF%A1/#1034","title":"10.3.4 \u4e3b\u673a\u6536\u53d1\u5e8f\u5217\u56fe","text":"Danger <p>\u6b64\u5e8f\u5217\u56fe\u5e94\u7ed3\u5408STM32\u624b\u518c\u5b66\u4e60\uff0c\u67e5\u770b\u5bf9\u5e94\u7684\u5bc4\u5b58\u5668\u3002</p>"},{"location":"study/STM32/11.SPI%E9%80%9A%E4%BF%A1/","title":"\u7b2c\u5341\u4e00\u7ae0 SPI","text":""},{"location":"study/STM32/11.SPI%E9%80%9A%E4%BF%A1/#111-spi","title":"11.1 SPI\u901a\u4fe1","text":""},{"location":"study/STM32/11.SPI%E9%80%9A%E4%BF%A1/#1111-spi","title":"11.1.1 SPI\u901a\u4fe1\u7b80\u4ecb","text":"<ul> <li>SPI\uff08Serial Peripheral Interface\uff09\u662f\u7531Motorola\u516c\u53f8\u5f00\u53d1\u7684\u4e00\u79cd\u901a\u7528\u6570\u636e\u603b\u7ebf</li> <li>\u56db\u6839\u901a\u4fe1\u7ebf\uff1aSCK\uff08Serial Clock\uff09\u3001MOSI\uff08Master Output Slave Input\uff09\u3001MISO\uff08Master Input Slave Output\uff09\u3001SS\uff08Slave Select\uff09</li> <li>\u540c\u6b65\uff0c\u5168\u53cc\u5de5</li> <li>\u652f\u6301\u603b\u7ebf\u6302\u8f7d\u591a\u8bbe\u5907\uff08\u4e00\u4e3b\u591a\u4ece\uff0c\u4e0d\u652f\u6301\u591a\u4e3b\u673a\uff09</li> </ul>"},{"location":"study/STM32/11.SPI%E9%80%9A%E4%BF%A1/#1112","title":"11.1.2 \u786c\u4ef6\u7535\u8def","text":"<ul> <li>\u6240\u6709SPI\u8bbe\u5907\u7684SCK\u3001MOSI\u3001MISO\u5206\u522b\u8fde\u5728\u4e00\u8d77</li> <li>\u4e3b\u673a\u53e6\u5916\u5f15\u51fa\u591a\u6761SS\u63a7\u5236\u7ebf\uff0c\u5206\u522b\u63a5\u5230\u5404\u4ece\u673a\u7684SS\u5f15\u811a</li> <li>\u8f93\u51fa\u5f15\u811a\u914d\u7f6e\u4e3a \u63a8\u633d\u8f93\u51fa \uff0c\u8f93\u5165\u5f15\u811a\u914d\u7f6e\u4e3a \u6d6e\u7a7a \u6216 \u4e0a\u62c9\u8f93\u5165</li> </ul> <p>\u5173\u4e8eSPI\u5f15\u811a\uff1a</p> <ol> <li>MOSI\u4e3a\u4e3b\u673a\u53d1\u9001\u4ece\u673a\u63a5\u6536\uff1bMISO\u5219\u662f\u4e3b\u673a\u63a5\u6536\u4ece\u673a\u53d1\u9001\uff1bSCK\u4e3a\u65f6\u949f\u7ebf\uff0c\u4e0eI2C\u7684SCL\u529f\u80fd\u4e00\u6837\uff0c\u90fd\u662f\u4e3a\u4e86\u5b9e\u73b0\u540c\u6b65\u901a\u4fe1\uff1bSS\u63a7\u5236\u7ebf\u7684\u4f5c\u7528\u662f\u9009\u62e9\u4ece\u673a\uff0c\u54ea\u6839\u7ebf\u4e3a\u4f4e\u7535\u5e73\u54ea\u6839\u7ebf\u5bf9\u5e94\u7684\u4ece\u673a\u5c31\u4e0e\u4e3b\u673a\u901a\u4fe1\uff0c\u4e14\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u7528\u4e00\u4e2a\u4ece\u673a\u7684SS\u4e3a\u4f4e\u7535\u5e73\u3002</li> <li>\u672a\u88ab\u9009\u62e9\u7684\u4ece\u673a\u5bf9\u5e94\u7684MISO\u7ebf\uff0c\u5e94\u4e3a\u9ad8\u963b\u6001\uff0c\u9632\u6b62\u4e3b\u673a\u63a5\u6536\u6570\u636e\u9519\u4e71\u3002</li> <li>\u6709\u51e0\u4e2a\u4ece\u673a\u5c31\u5f00\u8f9f\u51e0\u6761SS\u7ebf\u3002</li> </ol>"},{"location":"study/STM32/11.SPI%E9%80%9A%E4%BF%A1/#1113-spi","title":"11.1.3 SPI\u79fb\u4f4d\u7ed3\u6784","text":"<p>SPI\u7684\u79fb\u4f4d\u539f\u7406\uff1a</p> <p>\u5f53SPI\u540c\u65f6\u63a5\u6536\u548c\u53d1\u9001\u4e00\u4e2a\u5b57\u8282\u6570\u636e\u65f6\uff0c\u4ee5\u9ad8\u4f4d\u5148\u884c\u4e3a\u4f8b\uff08SPI\u786c\u4ef6\u5916\u8bbe\u53ef\u4ee5\u914d\u7f6e\u9ad8\u4f4d\u5148\u884c\u6216\u4f4e\u4f4d\u5148\u884c\uff09\uff1b\u5728\u7b2c\u4e00\u4e2a\u8fb9\u6cbf\uff0c\u4e3b\u673a\u7684\u6700\u9ad8\u4f4d\u653e\u5230MOSI\u540c\u65f6\u4ece\u673a\u7684\u6700\u9ad8\u4f4d\u653e\u5230MISO\uff0c\u5176\u4ed6\u4f4d\u4e00\u8d77\u5f80\u5de6\u79fb\uff1b\u5728\u7b2c\u4e8c\u4e2a\u8fb9\u6cbf\uff0c\u4e3b\u673a\u7684\u9ad8\u4f4d\u79fb\u5230\u4ece\u673a\u7684\u4f4e\u4f4d\uff0c\u540c\u65f6\u4ece\u673a\u7684\u9ad8\u4f4d\u79fb\u5230\u4e3b\u673a\u7684\u4f4e\u4f4d\uff0c\u4f9d\u6b64\u516b\u6b21\u4ec5\u5b8c\u6210\u4e00\u4e2a\u5b57\u8282\u6570\u636e\u7684\u4ea4\u6362\u3002</p> <p>\u82e5SPI\u4ec5\u63a5\u6536\u6216\u53d1\u9001\u65f6\uff0c\u5ffd\u7565\u5bf9\u65b9\u53d1\u9001\u6216\u63a5\u53d7\u7684\u6570\u636e\u5373\u53ef\uff0c\u4e00\u822c\u8fd9\u4e2a\u65e0\u7528\u7684\u6570\u636e\u4f4d0x00\u62160xFF\u3002</p>"},{"location":"study/STM32/11.SPI%E9%80%9A%E4%BF%A1/#1114-spi","title":"11.1.4 SPI\u65f6\u57fa\u5355\u5143","text":"<ul> <li>\u8d77\u59cb\u6761\u4ef6\uff1a SS\u4ece\u9ad8\u7535\u5e73\u5207\u6362\u5230\u4f4e\u7535\u5e73</li> <li>\u7ec8\u6b62\u6761\u4ef6\uff1a SS\u4ece\u4f4e\u7535\u5e73\u5207\u6362\u5230\u9ad8\u7535\u5e73</li> </ul> <p>SPI\u4ea4\u6362\u5b57\u8282\u6709\u591a\u79cd\u6a21\u5f0f\u53ef\u4ee5\u9009\u62e9\uff0c\u4e3b\u8981\u53d6\u51b3\u4e8eCPOL(\u65f6\u949f\u6781\u6027)\u548cCPHA(\u65f6\u949f\u76f8\u4f4d)\uff0c\u4e00\u4e2a\u56db\u79cd\u7ec4\u5408\u65b9\u5f0f\u3002</p> Danger <p>\u56db\u79cd\u6a21\u5f0f\u4e2d\uff0c\u6700\u5e38\u7528\u7684\u65f6\u6a21\u5f0f 0 \uff0c\u800c\u6700\u7b26\u5408\u79fb\u4f4d\u6a21\u578b\u793a\u4f8b\u7684\u662f\u6a21\u5f0f 1 \uff0c\u4e3b\u8981\u5b66\u4e60\u4e00\u79cd\u5e38\u7528\u7684\u6a21\u5f0f 0 \u5c31\u884c\u4e86\u3002</p> <p>\u4ea4\u6362\u4e00\u4e2a\u5b57\u8282 \uff08\u6a21\u5f0f0\uff09</p> <ul> <li>CPOL=0\uff1a\u7a7a\u95f2\u72b6\u6001\u65f6\uff0cSCK\u4e3a\u4f4e\u7535\u5e73</li> <li>CPHA=0\uff1aSCK\u7b2c\u4e00\u4e2a\u8fb9\u6cbf\u79fb\u5165\u6570\u636e\uff0c\u7b2c\u4e8c\u4e2a\u8fb9\u6cbf\u79fb\u51fa\u6570\u636e</li> </ul> Danger <p>\u7531\u4e8eSCK\u7b2c\u4e00\u4e2a\u8fb9\u6cbf\u5c31\u8981\u79fb\u5165\u6570\u636e\uff0c\u6240\u4ee5\u5728\u8d77\u59cb\u6761\u4ef6\u751f\u6210\u4ee5\u540e\uff0cMOSI\u548cMISO\u5c31\u8981\u7acb\u523b\u79fb\u4f4d\u6570\u636e\uff0c\u4ece\u800c\u4e0d\u4f1a\u4f7f\u5f97SCK\u7b2c\u4e00\u4e2a\u8fb9\u6cbf\u79fb\u5165\u7684\u6570\u636e\u4e3a\u7a7a\u3002</p> <p></p> <p>\u4ea4\u6362\u4e00\u4e2a\u5b57\u8282 \uff08\u6a21\u5f0f1\uff09</p> <ul> <li>CPOL=0\uff1a\u7a7a\u95f2\u72b6\u6001\u65f6\uff0cSCK\u4e3a\u4f4e\u7535\u5e73</li> <li>CPHA=1\uff1aSCK\u7b2c\u4e00\u4e2a\u8fb9\u6cbf\u79fb\u51fa\u6570\u636e\uff0c\u7b2c\u4e8c\u4e2a\u8fb9\u6cbf\u79fb\u5165\u6570\u636e</li> </ul> <p></p> <p>\u4ea4\u6362\u4e00\u4e2a\u5b57\u8282 \uff08\u6a21\u5f0f2\uff09</p> <ul> <li>CPOL=1\uff1a\u7a7a\u95f2\u72b6\u6001\u65f6\uff0cSCK\u4e3a\u9ad8\u7535\u5e73</li> <li>CPHA=0\uff1aSCK\u7b2c\u4e00\u4e2a\u8fb9\u6cbf\u79fb\u5165\u6570\u636e\uff0c\u7b2c\u4e8c\u4e2a\u8fb9\u6cbf\u79fb\u51fa\u6570\u636e</li> </ul> <p></p> <p>\u4ea4\u6362\u4e00\u4e2a\u5b57\u8282 \uff08\u6a21\u5f0f3\uff09</p> <ul> <li>CPOL=1\uff1a\u7a7a\u95f2\u72b6\u6001\u65f6\uff0cSCK\u4e3a\u9ad8\u7535\u5e73</li> <li>CPHA=1\uff1aSCK\u7b2c\u4e00\u4e2a\u8fb9\u6cbf\u79fb\u51fa\u6570\u636e\uff0c\u7b2c\u4e8c\u4e2a\u8fb9\u6cbf\u79fb\u5165\u6570\u636e</li> </ul> <p></p>"},{"location":"study/STM32/11.SPI%E9%80%9A%E4%BF%A1/#1115-spi","title":"11.1.5 SPI\u65f6\u5e8f","text":"<p>\u4e3b\u8981\u6839\u636e\u82af\u7247\u624b\u518c\u8981\u6c42\u3002</p>"},{"location":"study/STM32/11.SPI%E9%80%9A%E4%BF%A1/#112-spi","title":"11.2 \u8f6f\u4ef6\u6a21\u62dfSPI","text":"<p>GPIO\u5f15\u811a\u914d\u7f6e\u5982\u4e0b\uff0c\u4e09\u4e2a\u8f93\u51fa\u4e3a\u63a8\u633d\u8f93\u51fa\uff0c\u4e00\u4e2a\u8f93\u5165\u4e3a\u4e0a\u62c9\u8f93\u5165\u3002</p> <p></p> <p><code>sw_spi.c</code></p> C<pre><code>#include \"sw_spi.h\"\n\n\nvoid SPI_Start(void)\n{\n    SS_L();\n}\n\nvoid SPI_Stop(void)\n{\n    SS_H();\n}\n\nuint8_t SPI_SwapByte(uint8_t SendByte)\n{\n    uint8_t i, ReceiveByte=0x00;\n    for (i=0; i&lt;8; i++)\n    {\n        // \u9ad8\u4f4d\u5148\u884c\n        MOSI_Write(SendByte &amp; (0x80 &gt;&gt; i));\n        // \u79fb\u5165\u6570\u636e\n        SCK_H();\n        // \u8bfb\u53d6MISO\uff0c\u5e76\u4e0eReceiveByte\u4ea4\u6362\u4f4d\n        if (MISO_Status == 1) {ReceiveByte |= MISO_Status;}\n        SCK_L();\n    }\n\n    return ReceiveByte;\n}\n</code></pre> <p><code>sw_spi.h</code></p> C<pre><code>#ifndef SW_SPI_SW_SPI_H\n#define SW_SPI_SW_SPI_H\n\n#include \"gpio.h\"\n\nvoid SPI_Start(void);\nvoid SPI_Stop(void);\nuint8_t SPI_SwapByte(uint8_t SendByte);\n\n/* \u8fd9\u91cc\u7528\u4e00\u79cd\u4e0d\u540c\u4e8eI2C\u6a21\u62df\u7684\u51fd\u6570\u5b9a\u4e49\u65b9\u5f0f\uff0c\u4e0d\u8981\u611f\u89c9\u8fd9\u6837\u591a\u6b64\u4e00\u4e3e\uff0c\n * \u5f88\u591a\u5546\u5bb6\u7ed9\u4f60\u7684\u4ee3\u7801\u5c31\u6709\u5f88\u591a\u8fd9\u6837\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u5e94\u5f53\u53ef\u4ee5\u770b\u61c2\n */\n#define MOSI_Write(BitValue)  HAL_GPIO_WritePin(MOSI_GPIO_Port, MOSI_Pin, ((BitValue) ? GPIO_PIN_SET : GPIO_PIN_RESET))\n#define SS_H()          HAL_GPIO_WritePin(SS_GPIO_Port, SS_Pin, GPIO_PIN_SET)\n#define SS_L()          HAL_GPIO_WritePin(SS_GPIO_Port, SS_Pin, GPIO_PIN_RESET)\n#define SCK_H()         HAL_GPIO_WritePin(SCK_GPIO_Port, SCK_Pin, GPIO_PIN_SET)\n#define SCK_L()         HAL_GPIO_WritePin(SCK_GPIO_Port, SCK_Pin, GPIO_PIN_RESET)\n#define MISO_Status     HAL_GPIO_ReadPin(MISO_GPIO_Port, MISO_Pin)\n\n#endif //SW_SPI_SW_SPI_H\n</code></pre>"},{"location":"study/STM32/11.SPI%E9%80%9A%E4%BF%A1/#113-spi","title":"11.3 SPI\u786c\u4ef6\u5916\u8bbe","text":""},{"location":"study/STM32/11.SPI%E9%80%9A%E4%BF%A1/#1131-spi","title":"11.3.1 SPI\u5916\u8bbe\u7b80\u4ecb","text":"<ul> <li>STM32\u5185\u90e8\u96c6\u6210\u4e86\u786c\u4ef6SPI\u6536\u53d1\u7535\u8def\uff0c\u53ef\u4ee5\u7531\u786c\u4ef6\u81ea\u52a8\u6267\u884c\u65f6\u949f\u751f\u6210\u3001\u6570\u636e\u6536\u53d1\u7b49\u529f\u80fd\uff0c\u51cf\u8f7bCPU\u7684\u8d1f\u62c5</li> <li>\u53ef\u914d\u7f6e8\u4f4d/16\u4f4d\u6570\u636e\u5e27\u3001\u9ad8\u4f4d\u5148\u884c/\u4f4e\u4f4d\u5148\u884c</li> <li>\u65f6\u949f\u9891\u7387\uff1a fPCLK / (2, 4, 8, 16, 32, 64, 128, 256)</li> <li>\u652f\u6301\u591a\u4e3b\u673a\u6a21\u578b\u3001\u4e3b\u6216\u4ece\u64cd\u4f5c</li> <li>\u53ef\u7cbe\u7b80\u4e3a\u534a\u53cc\u5de5/\u5355\u5de5\u901a\u4fe1</li> <li>\u652f\u6301DMA</li> <li>\u517c\u5bb9I2S\u534f\u8bae</li> </ul> <p>STM32F103C8T6 \u786c\u4ef6SPI\u8d44\u6e90\uff1aSPI1\u3001SPI2</p>"},{"location":"study/STM32/11.SPI%E9%80%9A%E4%BF%A1/#1132-spi","title":"11.3.2 SPI\u6846\u56fe","text":""},{"location":"study/STM32/11.SPI%E9%80%9A%E4%BF%A1/#1133-spi","title":"11.3.3 SPI\u57fa\u672c\u7ed3\u6784","text":"<p>\u8fd9\u91cc\u7684\u6570\u636e\u63a7\u5236\u5668\u4e3b\u8981\u65f6\u7528\u4e8e\u4e0eLSBFIRST\u5bc4\u5b58\u5668\u914d\u5408\uff0c\u5b9e\u73b0SPI\u4f4e\u4f4d\u6216\u9ad8\u4f4d\u5148\u884c\u7684\u914d\u7f6e\u3002</p>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/","title":"\u7b2c\u5341\u4e8c\u7ae0 CAN","text":""},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#121-can","title":"12.1 CAN\u603b\u7ebf\u57fa\u672c\u6982\u5ff5","text":""},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1211-can","title":"12.1.1 CAN\u603b\u7ebf\u7b80\u4ecb","text":"<ul> <li>CAN\u603b\u7ebf\uff08Controller Area Network Bus\uff09\u63a7\u5236\u5668\u5c40\u57df\u7f51\u603b\u7ebf</li> <li>CAN\u603b\u7ebf\u662f\u7531BOSCH\u516c\u53f8\u5f00\u53d1\u7684\u4e00\u79cd\u7b80\u6d01\u6613\u7528\u3001\u4f20\u8f93\u901f\u5ea6\u5feb\u3001\u6613\u6269\u5c55\u3001\u53ef\u9760\u6027\u9ad8\u7684\u4e32\u884c\u901a\u4fe1\u603b\u7ebf\uff0c\u5e7f\u6cdb\u5e94\u7528\u4e8e\u6c7d\u8f66\u3001\u5d4c\u5165\u5f0f\u3001\u5de5\u4e1a\u63a7\u5236\u7b49\u9886\u57df</li> <li>CAN\u603b\u7ebf\u7279\u5f81\uff1a<ul> <li>\u4e24\u6839\u901a\u4fe1\u7ebf\uff08CAN_H\u3001CAN_L\uff09\uff0c\u7ebf\u8def\u5c11 \u5dee\u5206\u4fe1\u53f7\u901a\u4fe1\uff0c\u6297\u5e72\u6270\u80fd\u529b\u5f3a</li> <li>\u9ad8\u901fCAN\uff08ISO11898\uff09\uff1a125k~1Mbps, &lt;40m</li> <li>\u4f4e\u901fCAN\uff08ISO11519\uff09\uff1a10k~125kbps, &lt;1km</li> <li>\u5f02\u6b65\uff0c\u65e0\u9700\u65f6\u949f\u7ebf\uff0c\u901a\u4fe1\u901f\u7387\u7531\u8bbe\u5907\u5404\u81ea\u7ea6\u5b9a</li> <li>\u534a\u53cc\u5de5\uff0c\u53ef\u6302\u8f7d\u591a\u8bbe\u5907\uff0c\u591a\u8bbe\u5907\u540c\u65f6\u53d1\u9001\u6570\u636e\u65f6\u901a\u8fc7\u4ef2\u88c1\u5224\u65ad\u5148\u540e\u987a\u5e8f</li> <li>11\u4f4d/29\u4f4d\u62a5\u6587ID\uff0c\u7528\u4e8e\u533a\u5206\u6d88\u606f\u529f\u80fd\uff0c\u540c\u65f6\u51b3\u5b9a\u4f18\u5148\u7ea7</li> <li>\u53ef\u914d\u7f6e1~8\u5b57\u8282\u7684\u6709\u6548\u8f7d\u8377</li> <li>\u53ef\u5b9e\u73b0\u5e7f\u64ad\u5f0f\u548c\u8bf7\u6c42\u5f0f\u4e24\u79cd\u4f20\u8f93\u65b9\u5f0f</li> <li>\u5e94\u7b54\u3001CRC\u6821\u9a8c\u3001\u4f4d\u586b\u5145\u3001\u4f4d\u540c\u6b65\u3001\u9519\u8bef\u5904\u7406\u7b49\u7279\u6027</li> </ul> </li> </ul> <p>\u5404\u5927\u4e3b\u6d41\u901a\u4fe1\u534f\u8bae\u5bf9\u6bd4\uff1a</p> \u540d\u79f0 \u5f15\u811a \u53cc\u5de5 \u65f6\u949f \u7535\u5e73 \u8bbe\u5907 \u5e94\u7528\u573a\u666f UART TX\u3001RX \u5168\u53cc\u5de5 \u5f02\u6b65 \u5355\u7aef \u70b9\u5bf9\u70b9 \u4e24\u4e2a\u8bbe\u5907\u4e92\u76f8\u901a\u4fe1 I2C SCL\u3001SDA \u534a\u53cc\u5de5 \u540c\u6b65 \u5355\u7aef \u591a\u8bbe\u5907 \u4e00\u4e2a\u4e3b\u63a7\u5916\u6302\u591a\u4e2a\u6a21\u5757 SPI SCK\u3001MOSI\u3001MISO\u3001SS \u5168\u53cc\u5de5 \u540c\u6b65 \u5355\u7aef \u591a\u8bbe\u5907 \u4e00\u4e2a\u4e3b\u63a7\u5916\u6302\u591a\u4e2a\u6a21\u5757\uff08\u9ad8\u901f\uff09 CAN CAN_H\u3001CAN_L \u534a\u53cc\u5de5 \u5f02\u6b65 \u5dee\u5206 \u591a\u8bbe\u5907 \u591a\u4e2a\u4e3b\u63a7\u4e92\u76f8\u901a\u4fe1"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1212-can","title":"12.1.2 CAN\u786c\u4ef6\u7535\u8def","text":"<ul> <li>\u6bcf\u4e2a\u8bbe\u5907\u901a\u8fc7CAN\u6536\u53d1\u5668\u6302\u8f7d\u5728CAN\u603b\u7ebf\u7f51\u7edc\u4e0a</li> <li>CAN\u63a7\u5236\u5668\u5f15\u51fa\u7684TX\u548cRX\u4e0eCAN\u6536\u53d1\u5668\u76f8\u8fde\uff0cCAN\u6536\u53d1\u5668\u5f15\u51fa\u7684CAN_H\u548cCAN_L\u5206\u522b\u4e0e\u603b\u7ebf\u7684CAN_H\u548cCAN_L\u76f8\u8fde</li> <li>\u9ad8\u901fCAN\u4f7f\u7528\u95ed\u73af\u7f51\u7edc\uff0cCAN_H\u548cCAN_L\u4e24\u7aef\u6dfb\u52a0120\u03a9\u7684\u7ec8\u7aef\u7535\u963b</li> <li>\u4f4e\u901fCAN\u4f7f\u7528\u5f00\u73af\u7f51\u7edc\uff0cCAN_H\u548cCAN_L\u5176\u4e2d\u4e00\u7aef\u6dfb\u52a02.2k\u03a9\u7684\u7ec8\u7aef\u7535\u963b</li> </ul>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1213-can","title":"12.1.3 CAN\u7684\u7535\u5e73\u6807\u51c6","text":"<ul> <li>CAN\u603b\u7ebf\u91c7\u7528\u5dee\u5206\u4fe1\u53f7\uff0c\u5373\u4e24\u7ebf\u7535\u538b\u5dee\uff08V_H - V_L\uff09\u4f20\u8f93\u6570\u636e\u4f4d</li> <li> <p>\u9ad8\u901fCAN\u89c4\u5b9a\uff1a</p> <ul> <li>\u7535\u538b\u5dee\u4e3a0V\u65f6\u8868\u793a\u903b\u8f911\uff08\u9690\u6027\u7535\u5e73\uff09</li> </ul> <ul> <li>\u7535\u538b\u5dee\u4e3a2V\u65f6\u8868\u793a\u903b\u8f910\uff08\u663e\u6027\u7535\u5e73\uff09</li> <li>\u4f4e\u901fCAN\u89c4\u5b9a\uff1a</li> </ul> <ul> <li>\u7535\u538b\u5dee\u4e3a-1.5V\u65f6\u8868\u793a\u903b\u8f911\uff08\u9690\u6027\u7535\u5e73\uff09</li> </ul> <ul> <li>\u7535\u538b\u5dee\u4e3a3V\u65f6\u8868\u793a\u903b\u8f910\uff08\u663e\u6027\u7535\u5e73\uff09</li> </ul> </li> </ul> <p></p>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1214-can","title":"12.1.4 \u9ad8\u4f4e\u901fCAN\u4e0d\u540c\u70b9","text":""},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#122-can","title":"12.2 CAN\u603b\u7ebf\u534f\u8bae","text":""},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1221","title":"12.2.1 \u5e27\u683c\u5f0f","text":"<p>CAN\u603b\u7ebf\u5b9a\u4e49\u4e86 5 \u79cd\u5e27\u683c\u5f0f\uff1a</p> \u5e27\u7c7b\u578b \u7528\u9014 \u6570\u636e\u5e27 \u53d1\u9001\u8bbe\u5907\u4e3b\u52a8\u53d1\u9001\u6570\u636e\uff08\u5e7f\u64ad\u5f0f\uff09 \u9065\u63a7\u5e27 \u63a5\u6536\u8bbe\u5907\u4e3b\u52a8\u8bf7\u6c42\u6570\u636e\uff08\u8bf7\u6c42\u5f0f\uff09 \u9519\u8bef\u5e27 \u67d0\u4e2a\u8bbe\u5907\u68c0\u6d4b\u51fa\u9519\u8bef\u65f6\u5411\u5176\u4ed6\u8bbe\u5907\u901a\u77e5\u9519\u8bef \u8fc7\u8f7d\u5e27 \u63a5\u6536\u8bbe\u5907\u901a\u77e5\u5176\u5c1a\u672a\u505a\u597d\u63a5\u6536\u51c6\u5907 \u5e27\u95f4\u9694 \u7528\u4e8e\u5c06\u6570\u636e\u5e27\u53ca\u9065\u63a7\u5e27\u4e0e\u524d\u9762\u7684\u5e27\u5206\u79bb\u5f00 Danger <p>\u5176\u4e2d \u6570\u636e\u5e27 \u6700\u4e3a\u91cd\u8981\u4e14\u590d\u6742\uff0c\u9065\u63a7\u5e27\u4e0e\u6570\u636e\u5e27\u7c7b\u4f3c\uff0c\u5176\u4ed6\u4e86\u89e3\u5373\u53ef\u3002</p> <ol> <li>\u6570\u636e\u5e27</li> </ol> <p>\u6570\u636e\u5e27\u7684\u6784\u6210\u5982\u4e0b\u56fe\uff0c\u5176\u4e2d\u7070\u8272\u90e8\u5206(D)\u8868\u793a Dominant\uff1a\u663e\u6027\u7535\u5e73 0 \uff1b\u767d\u8272\u90e8\u5206(R)\u8868\u793a Recessive\uff1a\u9690\u6027\u7535\u5e73 1 \uff1b\u7d2b\u8272\u90e8\u5206\u4e3a\u53d1\u9001\u6570\u636e\uff0c\u7535\u5e73\u9ad8\u4f4e\u6309\u5b9e\u9645\u6570\u636e\uff1b\u6570\u5b57\u8868\u793a\u8be5\u5b57\u6bb5\u7684\u6570\u636e\u4f4d\u6570(bit)\u3002</p> <p>\u6269\u5c55\u683c\u5f0f\u662f\u5bf9\u6807\u51c6\u683c\u5f0f\u7684\u5347\u7ea7\uff0c\u7528\u4e8e\u89e3\u51b3ID\u4f4d\u6570\u4e0d\u591f\u7528\u7684\u60c5\u51b5\uff0c\u7136\u6807\u51c6\u683c\u5f0f\u7684\u4f18\u5148\u7ea7\u8981\u9ad8\u4e8e\u6269\u5c55\u683c\u5f0f\u3002</p> <p></p> <p>\u4e0a\u56fe\u4e2d\u7684\u4e00\u4e9b\u91cd\u8981\u540d\u79f0\u542b\u4e49\u5982\u4e0b\uff1a</p> <ul> <li>SOF\uff08Start of Frame\uff09\uff1a\u5e27\u8d77\u59cb\uff0c\u8868\u793a\u540e\u9762\u4e00\u6bb5\u6ce2\u5f62\u4e3a\u4f20\u8f93\u7684\u6570\u636e\u4f4d\u3002</li> <li>ID\uff08Identify\uff09\uff1a\u6807\u8bc6\u7b26\uff0c\u533a\u5206\u529f\u80fd\uff0c\u540c\u65f6\u51b3\u5b9a\u4f18\u5148\u7ea7\u3002</li> <li>RTR\uff08Remote Transmission Request \uff09\uff1a\u8fdc\u7a0b\u8bf7\u6c42\u4f4d\uff0c\u533a\u5206\u6570\u636e\u5e27\u548c\u9065\u63a7\u5e27\u3002</li> <li>IDE\uff08Identifier Extension\uff09\uff1a\u6269\u5c55\u6807\u5fd7\u4f4d\uff0c\u533a\u5206\u6807\u51c6\u683c\u5f0f\u548c\u6269\u5c55\u683c\u5f0f\u3002</li> <li>SRR\uff08Substitute Remote Request\uff09\uff1a\u66ff\u4ee3RTR\uff0c\u534f\u8bae\u5347\u7ea7\u65f6\u7559\u4e0b\u7684\u65e0\u610f\u4e49\u4f4d\u3002</li> <li>r0/r1\uff08Reserve\uff09\uff1a\u4fdd\u7559\u4f4d\uff0c\u4e3a\u540e\u7eed\u534f\u8bae\u5347\u7ea7\u7559\u4e0b\u7a7a\u95f4\u3002</li> <li>DLC\uff08Data Length Code\uff09\uff1a\u6570\u636e\u957f\u5ea6\uff0c\u6307\u793a\u6570\u636e\u6bb5\u6709\u51e0\u4e2a\u5b57\u8282\u3002</li> <li>Data\uff1a\u6570\u636e\u6bb5\u76841~8\u4e2a\u5b57\u8282\u6709\u6548\u6570\u636e\u3002</li> <li>CRC\uff08Cyclic Redundancy Check\uff09\uff1a\u5faa\u73af\u5197\u4f59\u6821\u9a8c\uff0c\u6821\u9a8c\u6570\u636e\u662f\u5426\u6b63\u786e\u3002</li> <li>ACK\uff08Acknowledgement\uff09\uff1a\u5e94\u7b54\u4f4d\uff0c\u5224\u65ad\u6570\u636e\u6709\u6ca1\u6709\u88ab\u63a5\u6536\u65b9\u63a5\u6536\u3002</li> <li>CRC/ACK\u754c\u5b9a\u7b26\uff1a\u4e3a\u5e94\u7b54\u4f4d\u524d\u540e\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u91ca\u653e\u603b\u7ebf\u7559\u4e0b\u65f6\u95f4\u3002</li> <li>EOF\uff08End of Frame \uff09\uff1a\u5e27\u7ed3\u675f\uff0c\u8868\u793a\u6570\u636e\u4f4d\u5df2\u7ecf\u4f20\u8f93\u5b8c\u6bd5\u3002</li> </ul> <ol> <li>\u9065\u63a7\u5e27</li> </ol> <p>\u9065\u63a7\u5e27\u7528\u4e8e\u8bf7\u6c42\u5f0f\uff0c\u5176\u4e2d\u4e0e\u6570\u636e\u5e27\u4e0d\u540c\u5728\u4e8e RTR \u4e3a \u9690\u6027\u7535\u5e73 1  \uff0c\u63a5\u6536\u65b9\u6536\u5230\u540e\u4ee5\u9065\u63a7\u5e27\u683c\u5f0f\u89e3\u6790\uff0c\u7136\u540e\u53d1\u9001\u76f8\u540c\u6570\u636eID\u7684\u6570\u636e\u5e27\u3002\u5f53\u9065\u63a7\u5e27\u8bf7\u6c42\u548c\u6570\u636e\u5e27\u53cd\u9988\u540c\u65f6\u53d1\u751f\u65f6\uff0c\u6570\u636e\u5e27\u4f18\u5148\u7ea7\u66f4\u9ad8\u3002</p> <p></p> <ol> <li>\u9519\u8bef\u5e27</li> </ol> <p>\u603b\u7ebf\u4e0a\u6240\u6709\u8bbe\u5907\u90fd\u4f1a\u76d1\u7763\u603b\u7ebf\u7684\u6570\u636e\uff0c\u4e00\u65e6\u53d1\u73b0 \u201c\u4f4d\u9519\u8bef\u201d \u6216 \u201c\u586b\u5145\u9519\u8bef\u201d \u6216 \u201cCRC\u9519\u8bef\u201d \u6216 \u201c\u683c\u5f0f\u9519\u8bef\u201d \u6216 \u201c\u5e94\u7b54\u9519\u8bef\u201d \uff0c\u8fd9\u4e9b\u8bbe\u5907\u4fbf\u4f1a\u53d1\u51fa\u9519\u8bef\u5e27\u6765\u7834\u574f\u6570\u636e\uff0c\u540c\u65f6\u7ec8\u6b62\u5f53\u524d\u7684\u53d1\u9001\u8bbe\u5907\u3002</p> <p>\u9519\u8bef\u6807\u5fd7\u5305\u62ec\u4e3b\u52a8\u9519\u8bef\u6807\u5fd7\u548c\u88ab\u52a8\u9519\u8bef\u6807\u5fd7\u4e24\u79cd\uff0c\u6700\u540e\u8fd8\u6709\u9519\u8bef\u754c\u5b9a\u7b26\uff1a</p> <ul> <li>\u4e3b\u52a8\u9519\u8bef\u6807\u5fd7\uff1a 6 \u4e2a\u4f4d\u7684\u663e\u6027\u4f4d\u3002</li> <li>\u88ab\u52a8\u9519\u8bef\u6807\u5fd7\uff1a 6 \u4e2a\u4f4d\u7684\u9690\u6027\u4f4d\u3002  </li> </ul> <ul> <li>\u9519\u8bef\u6807\u5fd7\u540e\u8fd8\u6709 6 \u4f4d\u7528\u4e8e\u5ef6\u65f6\u3002</li> <li>\u9519\u8bef\u754c\u5b9a\u7b26\u7531 8 \u4e2a\u4f4d\u7684\u9690\u6027\u4f4d\u6784\u6210\u3002  </li> </ul> <p></p> <ol> <li>\u8fc7\u8f7d\u5e27</li> </ol> <p>\u5f53\u63a5\u6536\u65b9\u6536\u5230\u5927\u91cf\u6570\u636e\u800c\u65e0\u6cd5\u5904\u7406\u65f6\uff0c\u5176\u53ef\u4ee5\u53d1\u51fa\u8fc7\u8f7d\u5e27\uff0c\u5ef6\u7f13\u53d1\u9001\u65b9\u7684\u6570\u636e\u53d1\u9001\uff0c\u4ee5\u5e73\u8861\u603b\u7ebf\u8d1f\u8f7d\uff0c\u907f\u514d\u6570\u636e\u4e22\u5931\u3002</p> <p></p> <ol> <li>\u5e27\u95f4\u9694</li> </ol> <p>\u5e27\u95f4\u9694\u662f\u7528\u4e8e\u5206\u9694\u6570\u636e\u5e27\u548c\u9065\u63a7\u5e27\u7684\u5e27\u3002\u6570\u636e\u5e27\u548c\u9065\u63a7\u5e27\u53ef\u901a\u8fc7\u63d2\u5165\u5e27\u95f4\u9694\u5c06\u672c\u5e27\u4e0e\u524d\u9762\u7684\u4efb\u4f55\u5e27\uff08\u6570\u636e\u5e27\u3001\u9065\u63a7\u5e27\u3001\u9519\u8bef\u5e27\u3001\u8fc7\u8f7d\u5e27\uff09\u5206\u5f00\u3002</p> <p>\u8fc7\u8f7d\u5e27\u548c\u9519\u8bef\u5e27\u524d\u4e0d\u80fd\u63d2\u5165\u5e27\u95f4\u9694\u3002 </p> <p></p>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1222","title":"12.2.2 \u4f4d\u586b\u5145","text":"<p>\u4f4d\u586b\u5145\u89c4\u5219 \uff1a\u53d1\u9001\u65b9\u6bcf\u53d1\u90015\u4e2a\u76f8\u540c\u7535\u5e73\u540e\uff0c\u81ea\u52a8\u8ffd\u52a0\u4e00\u4e2a\u76f8\u53cd\u7535\u5e73\u7684\u586b\u5145\u4f4d\uff0c\u63a5\u6536\u65b9\u4f1a\u81ea\u52a8\u79fb\u9664\u586b\u5145\u4f4d\uff0c\u6062\u590d\u539f\u59cb\u6570\u636e\u3002</p> <p></p> <p>\u4f4d\u586b\u5145\u7684\u4f5c\u7528 \uff1a</p> <ul> <li>\u589e\u52a0\u6ce2\u5f62\u7684\u5b9a\u65f6\u4fe1\u606f\uff0c\u5229\u4e8e\u63a5\u6536\u65b9\u6267\u884c \u518d\u540c\u6b65 \uff0c\u9632\u6b62\u6ce2\u5f62\u957f\u65f6\u95f4\u65e0\u53d8\u5316\uff0c\u5bfc\u81f4\u63a5\u6536\u65b9\u4e0d\u80fd\u7cbe\u786e\u638c\u63e1\u6570\u636e\u91c7\u6837\u65f6\u673a\u3002</li> <li>\u5c06\u6b63\u5e38\u6570\u636e\u6d41\u4e0e\u201c\u9519\u8bef\u5e27\u201d\u548c\u201c\u8fc7\u8f7d\u5e27\u201d\u533a\u5206\u5f00\uff0c\u6807\u5fd7\u201c\u9519\u8bef\u5e27\u201d\u548c\u201c\u8fc7\u8f7d\u5e27\u201d\u7684\u7279\u5f02\u6027\u3002</li> <li>\u4fdd\u6301CAN\u603b\u7ebf\u5728\u53d1\u9001\u6b63\u5e38\u6570\u636e\u6d41\u65f6\u7684\u6d3b\u8dc3\u72b6\u6001\uff0c\u9632\u6b62\u88ab\u8bef\u8ba4\u4e3a\u603b\u7ebf\u7a7a\u95f2\u3002</li> </ul>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1223","title":"12.2.3 \u4f4d\u65f6\u5e8f","text":"<p>\u5173\u4e8eCAN\u603b\u7ebf\u7684\u4f4d\u65f6\u5e8f\u5982\u4e0b\uff0c\u800c\u7406\u60f3\u60c5\u51b5\uff1a \u63a5\u6536\u65b9\u80fd\u4f9d\u6b21\u91c7\u6837\u5230\u53d1\u9001\u65b9\u53d1\u51fa\u7684\u6bcf\u4e2a\u6570\u636e\u4f4d\uff0c\u4e14\u91c7\u6837\u70b9\u4f4d\u4e8e\u6570\u636e\u4f4d\u4e2d\u5fc3\u9644\u8fd1 \uff0c\u8fd9\u4e5f\u662f\u4f4d\u540c\u6b65\u8981\u505a\u7684\u4e8b\u60c5\u3002</p> <ul> <li>CAN\u603b\u7ebf\u6ca1\u6709\u65f6\u949f\u7ebf\uff0c\u603b\u7ebf\u4e0a\u7684\u6240\u6709\u8bbe\u5907\u901a\u8fc7\u7ea6\u5b9a\u6ce2\u7279\u7387\u7684\u65b9\u5f0f\u786e\u5b9a\u6bcf\u4e00\u4e2a\u6570\u636e\u4f4d\u7684\u65f6\u957f\u3002</li> <li>\u53d1\u9001\u65b9\u4ee5\u7ea6\u5b9a\u7684\u4f4d\u65f6\u957f\u6bcf\u9694\u56fa\u5b9a\u65f6\u95f4\u8f93\u51fa\u4e00\u4e2a\u6570\u636e\u4f4d\u3002</li> <li>\u63a5\u6536\u65b9\u4ee5\u7ea6\u5b9a\u7684\u4f4d\u65f6\u957f\u6bcf\u9694\u56fa\u5b9a\u65f6\u95f4\u91c7\u6837\u603b\u7ebf\u7684\u7535\u5e73\uff0c\u8f93\u5165\u4e00\u4e2a\u6570\u636e\u4f4d\u3002</li> </ul> <p>\u63a5\u6536\u65b9\u6570\u636e\u91c7\u6837\u9047\u5230\u7684\u95ee\u9898 \uff1a</p> <ul> <li>\u63a5\u6536\u65b9\u4ee5\u7ea6\u5b9a\u7684\u4f4d\u65f6\u957f\u8fdb\u884c\u91c7\u6837\uff0c\u4f46\u662f\u91c7\u6837\u70b9\u6ca1\u6709\u5bf9\u9f50\u6570\u636e\u4f4d\u4e2d\u5fc3\u9644\u8fd1\u3002</li> <li>\u63a5\u6536\u65b9\u521a\u5f00\u59cb\u91c7\u6837\u6b63\u786e\uff0c\u4f46\u662f\u65f6\u949f\u6709\u8bef\u5dee\uff0c\u968f\u7740\u8bef\u5dee\u79ef\u7d2f\uff0c\u91c7\u6837\u70b9\u9010\u6e10\u504f\u79bb\u3002</li> </ul> <p>\u4e3a\u4e86\u7075\u6d3b\u8c03\u6574\u6bcf\u4e2a\u91c7\u6837\u70b9\u7684\u4f4d\u7f6e\uff0c\u4f7f\u91c7\u6837\u70b9\u5bf9\u9f50\u6570\u636e\u4f4d\u4e2d\u5fc3\u9644\u8fd1\uff0cCAN\u603b\u7ebf\u5bf9\u6bcf\u4e00\u4e2a\u6570\u636e\u4f4d\u7684\u65f6\u957f\u8fdb\u884c\u4e86\u66f4\u7ec6\u7684\u5212\u5206\u3002</p> <ol> <li>\u540c\u6b65\u6bb5\uff08 SS: Synchronization Segment\uff09 </li> <li>\u4f20\u64ad\u65f6\u95f4\u6bb5\uff08 PTS: Propagation Time Segment\uff09 </li> <li>\u76f8\u4f4d\u7f13\u51b2\u6bb5 1\uff08PBS1: Phase Buffer Segment 1\uff09</li> <li>\u76f8\u4f4d\u7f13\u51b2\u6bb5 2\uff08PBS1: Phase Buffer Segment 2\uff09 </li> <li>\u5728\u540c\u6b65\u8865\u507f\u5bbd\u5ea6\uff08SJW: reSynchronization Jump Width\uff09 </li> </ol> <p>\u4e00\u4e2a\u6570\u636e\u4f4d\u7684\u6784\u6210\u5982\u4e0b\u56fe\uff1a</p> <p></p> \u6bb5\u540d\u79f0\uff08\u7f29\u5199\uff09 \u4f5c\u7528\u63cf\u8ff0 Tq\u6570\u8303\u56f4 \u540c\u6b65\u6bb5\uff08SS\uff09 \u5b9e\u73b0\u603b\u7ebf\u5355\u5143\u65f6\u5e8f\u540c\u6b65\uff0c\u8c03\u6574\u6536\u53d1\u540c\u6b65\u6027\u3002\u4fe1\u53f7\u8fb9\u6cbf\u5e94\u4f18\u5148\u51fa\u73b0\u5728\u6b64\u6bb5\u3002 \u56fa\u5b9a 1Tq \u4f20\u64ad\u65f6\u95f4\u6bb5\uff08PTS\uff09 \u8865\u507f\u7f51\u7edc\u7269\u7406\u5ef6\u8fdf\uff08\u53d1\u9001\u5ef6\u8fdf+\u4f20\u64ad\u5ef6\u8fdf+\u63a5\u6536\u5ef6\u8fdf\uff09\uff0c\u603b\u5ef6\u8fdf\u65f6\u95f4\u4e3a\u5404\u5ef6\u8fdf\u548c\u7684\u4e24\u500d\u3002 1~8Tq \u76f8\u4f4d\u7f13\u51b2\u6bb51\uff08PBS1\uff09 \u5438\u6536\u5404\u5355\u5143\u72ec\u7acb\u65f6\u949f\u7684\u7d2f\u79ef\u5fae\u5c0f\u8bef\u5dee\u3002 1~8Tq \u76f8\u4f4d\u7f13\u51b2\u6bb52\uff08PBS2\uff09 \u901a\u8fc7\u8c03\u6574SJW\uff08\u518d\u540c\u6b65\u8865\u507f\u5bbd\u5ea6\uff09\u8fdb\u4e00\u6b65\u5438\u6536\u65f6\u949f\u8bef\u5dee\uff0cSJW\u589e\u5927\u4f1a\u964d\u4f4e\u901a\u4fe1\u901f\u5ea6\u3002 2~8Tq \u518d\u540c\u6b65\u8865\u507f\u5bbd\u5ea6\uff08SJW\uff09 \u8865\u507f\u65f6\u949f\u9891\u7387\u504f\u5dee\u548c\u4f20\u8f93\u5ef6\u8fdf\u5bfc\u81f4\u7684\u6700\u5927\u540c\u6b65\u8bef\u5dee\u503c\u3002 1~4Tq\uff08\u53ef\u914d\u7f6e\uff09"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1224","title":"12.2.4 \u786c\u4ef6\u540c\u6b65","text":"<p>\u524d\u9762\u8bb2\u8fc7\uff0cCAN\u603b\u7ebf\u628a\u4e00\u4f4d\u6570\u636e\u5206\u6210 5 \u6bb5\uff0c\u76f8\u5f53\u4e8e\u6bcf\u4e2a\u8bbe\u5907\u90fd\u6709\u4e00\u4e2a\u4f4d\u7684\u65f6\u5e8f\u8ba1\u65f6\u5468\u671f\u3002</p> <ul> <li>\u5f53\u603b\u7ebf\u4e0a\u6709\u4e00\u4e2a\u8bbe\u5907\u8981\u53d1\u6570\u636e\uff0c\u90a3\u4e48\u5b83\u5c06\u518d SS \u6bb5\u53d1\u9001 SOF \u5e27\u8d77\u59cb\uff0c\u5373\u4e00\u4e2a\u903b\u8f91\u7535\u5e73\u4e0b\u964d\u6cbf\u3002</li> <li>\u800c\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u6b64\u65f6\u6240\u4ee5\u63a5\u6536\u65b9\u5e94\u90fd\u5904\u4e8e SS \u6bb5\u3002</li> <li>\u5f02\u5e38\u60c5\u51b5\u4e0b\uff0c\u63a5\u6536\u65b9\u4f1a\u5c06\u81ea\u5df1\u7684\u4f4d\u65f6\u5e8f\u8ba1\u65f6\u5468\u671f\u62e8\u5230 SS \u6bb5\u7684\u4f4d\u7f6e\uff0c\u8fd9\u5c31\u662f \u786c\u4ef6\u540c\u6b65 \u3002</li> </ul> <p>\u9700\u8981\u6ce8\u610f\uff1a</p> <ul> <li>\u786c\u540c\u6b65\u53ea\u5728\u5e27\u7684\u7b2c\u4e00\u4e2a\u4e0b\u964d\u6cbf\uff08SOF\u4e0b\u964d\u6cbf\uff09\u6709\u6548\u3002</li> <li>\u7ecf\u8fc7\u786c\u540c\u6b65\u540e\uff0c\u82e5\u53d1\u9001\u65b9\u548c\u63a5\u6536\u65b9\u7684\u65f6\u949f\u6ca1\u6709\u8bef\u5dee\uff0c\u5219\u540e\u7eed\u6240\u6709\u6570\u636e\u4f4d\u7684\u91c7\u6837\u70b9\u5fc5\u7136\u90fd\u4f1a\u5bf9\u9f50\u6570\u636e\u4f4d\u4e2d\u5fc3\u9644\u8fd1\u3002</li> <li>\u82e5\u540e\u7eed\u518d\u51fa\u73b0\u8bef\u5dee\uff0c\u5219\u9700\u8981\u4f7f\u7528\u540e\u9762\u7684 \u518d\u540c\u6b65 \u3002</li> </ul> <p></p>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1225","title":"12.2.5 \u518d\u540c\u6b65","text":"<p>\u82e5\u53d1\u9001\u65b9\u6216\u63a5\u6536\u65b9\u7684\u65f6\u949f\u6709\u8bef\u5dee\uff0c\u968f\u7740\u8bef\u5dee\u79ef\u7d2f\uff0c\u6570\u636e\u4f4d\u8fb9\u6cbf\u9010\u6e10\u504f\u79bb SS \u6bb5\uff0c\u5219\u6b64\u65f6\u63a5\u6536\u65b9\u6839\u636e\u518d\u540c\u6b65\u8865\u507f\u5bbd\u5ea6\u503c\uff08SJW\uff09\u901a\u8fc7\u52a0\u957f  PBS1 \u6bb5\uff0c\u6216\u7f29\u77ed PBS2 \u6bb5\uff0c\u4ee5\u8c03\u6574\u540c\u6b65\u3002</p> <p>\u5982\u4e0b\u56fe\uff1a</p> <ul> <li>\u7b2c\u4e00\u4e2d\u60c5\u51b5\uff08\u4e0a\u534a\u90e8\u5206\uff09<ul> <li>\u63a5\u6536\u65b9\u65f6\u5e8f\u5feb\u4e8e\u53d1\u9001\u65b9\uff0c\u589e\u52a0 PBS1 \u6bb5 2 \u4e2aTq\uff0c\u4ee5\u786e\u4fdd\u4e0b\u4e00\u4f4d\u6570\u636e\u65f6\u65f6\u5e8f\u540c\u6b65\u3002</li> </ul> </li> <li>\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff08\u4e0b\u534a\u90e8\u5206\uff09<ul> <li>\u63a5\u6536\u65b9\u65f6\u5e8f\u6162\u4e8e\u53d1\u9001\u65b9\uff0c\u589e\u5c11 PBS2 \u6bb5 2 \u4e2aTq\uff0c\u4ee5\u786e\u4fdd\u4e0b\u4e00\u4f4d\u6570\u636e\u65f6\u65f6\u5e8f\u540c\u6b65\u3002</li> </ul> </li> <li>\u6ce8\u610f<ul> <li>SJW = 2\uff0c\u8868\u793a\u6700\u591a\u589e\u52a0\u6216\u51cf\u5c11 2 \u4e2aTq\uff0c\u5177\u4f53\u51cf\u5c11\u6216\u589e\u52a0\u51e0\u4e2aTq\u9700\u8981\u6839\u636e\u8bef\u5dee\u548cSJW\u503c\u5206\u6790\u3002</li> </ul> </li> </ul> <p></p>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1226","title":"12.2.6 \u4ef2\u88c1","text":"<p>\u5f53\u591a\u4e2a\u8bbe\u5907\u540c\u65f6\u64cd\u4f5c\u603b\u7ebf\u65f6\uff0c\u4f1a\u51fa\u73b0\u51b2\u7a81\u60c5\u51b5\uff0c\u4e3b\u8981\u5206\u4e3a\u4e24\u79cd\uff1a</p> <ol> <li>\u5728\u4e00\u4e2a\u8bbe\u5907A\u53d1\u9001\u6570\u636e\u5e27/\u9065\u63a7\u5e27\u8fc7\u7a0b\u4e2d\uff0c\u53e6\u4e00\u4e2a\u8bbe\u5907B\u4e5f\u60f3\u8981\u53d1\u9001\u6570\u636e\u5e27/\u9065\u63a7\u5e27\u3002(\u2460\u4f7f\u7528\u5148\u5360\u5148\u5f97)</li> <li>\u4e24\u4e2a\u8bbe\u5907\u540c\u65f6\u51c6\u5907\u53d1\u9001\u6570\u636e\u5e27/\u9065\u63a7\u5e27\u3002(\u2461\u975e\u7834\u574f\u6027\u4ef2\u88c1)</li> </ol> <p>\u2460\u4f7f\u7528\u5148\u5360\u5148\u5f97</p> <p>\u2b50\u6838\u5fc3\u89c4\u5219\uff1a\u4efb\u4f55\u8bbe\u5907\u68c0\u6d4b\u5230\u8fde\u7eed11\u4e2a\u9690\u6027\u7535\u5e73\uff0c\u5373\u8ba4\u4e3a\u603b\u7ebf\u7a7a\u95f2\uff0c\u53ea\u6709\u5728\u603b\u7ebf\u7a7a\u95f2\u65f6\uff0c\u8bbe\u5907\u624d\u80fd\u53d1\u9001\u6570\u636e\u5e27/\u9065\u63a7\u5e27\u3002</p> <p>\u6709\u6b64\u89c4\u5219\u540e\u4fbf\u4f1a\u89e3\u51b3\u6240\u4ee5\u975e\u540c\u65f6\u64cd\u4f5c\u603b\u7ebf\u7684\u60c5\u51b5\uff1a</p> <ul> <li>\u82e5\u5f53\u524d\u5df2\u7ecf\u6709\u8bbe\u5907\u6b63\u5728\u64cd\u4f5c\u603b\u7ebf\u53d1\u9001\u6570\u636e\u5e27/\u9065\u63a7\u5e27\uff0c\u5219\u5176\u4ed6\u4efb\u4f55\u8bbe\u5907\u4e0d\u80fd\u518d\u540c\u65f6\u53d1\u9001\u6570\u636e\u5e27/\u9065\u63a7\u5e27\uff08\u53ef\u4ee5\u53d1\u9001\u9519\u8bef\u5e27/\u8fc7\u8f7d\u5e27\u7834\u574f\u5f53\u524d\u6570\u636e\uff09\u3002</li> <li>\u540c\u4e00\u65f6\u95f4\u53ea\u4f1a\u6709\u4e00\u4e2a\u8bbe\u5907\u53ef\u4ee5\u53d1\u9001\u6570\u636e\u5e27/\u9065\u63a7\u5e27\u3002</li> </ul> <p>\u2461\u975e\u7834\u574f\u6027\u4ef2\u88c1</p> <p>\u2b50\u6838\u5fc3\u89c4\u5219\uff1a\u82e5\u591a\u4e2a\u8bbe\u5907\u7684\u53d1\u9001\u9700\u6c42\u540c\u65f6\u5230\u6765\u6216\u56e0\u7b49\u5f85\u800c\u540c\u65f6\u5230\u6765\uff0c\u5219CAN\u603b\u7ebf\u534f\u8bae\u4f1a\u6839\u636eID\u53f7\uff08\u4ef2\u88c1\u6bb5\uff09\u8fdb\u884c\u975e\u7834\u574f\u6027\u4ef2\u88c1\uff0cID\u53f7\u5c0f\u7684\uff08\u4f18\u5148\u7ea7\u9ad8\uff09\u53d6\u5230\u603b\u7ebf\u63a7\u5236\u6743\uff0cID\u53f7\u5927\u7684\uff08\u4f18\u5148\u7ea7\u4f4e\uff09\u4ef2\u88c1\u5931\u5229\u540e\u5c06\u8f6c\u5165\u63a5\u6536\u72b6\u6001\uff0c\u7b49\u5f85\u4e0b\u4e00\u6b21\u603b\u7ebf\u7a7a\u95f2\u65f6\u518d\u5c1d\u8bd5\u53d1\u9001\u3002</p> <p>\u5b9e\u73b0\u975e\u7834\u574f\u6027\u4ef2\u88c1\u9700\u8981\u7684\u4e24\u4e2a\u8981\u6c42\uff1a</p> <ul> <li>\u7ebf\u4e0e\u7279\u6027 \uff1a\u603b\u7ebf\u4e0a\u4efb\u4f55\u4e00\u4e2a\u8bbe\u5907\u53d1\u9001\u663e\u6027\u7535\u5e730\u65f6\uff0c\u603b\u7ebf\u5c31\u4f1a\u5448\u73b0\u663e\u6027\u7535\u5e730\u72b6\u6001\uff0c\u53ea\u6709\u5f53\u6240\u6709\u8bbe\u5907\u90fd\u53d1\u9001\u9690\u6027\u7535\u5e731\u65f6\uff0c\u603b\u7ebf\u624d\u5448\u73b0\u9690\u6027\u7535\u5e731\u72b6\u6001\u3002</li> <li>\u56de\u8bfb\u673a\u5236 \uff1a\u6bcf\u4e2a\u8bbe\u5907\u53d1\u51fa\u4e00\u4e2a\u6570\u636e\u4f4d\u540e\uff0c\u90fd\u4f1a\u8bfb\u56de\u603b\u7ebf\u5f53\u524d\u7684\u7535\u5e73\u72b6\u6001\uff0c\u4ee5\u786e\u8ba4\u81ea\u5df1\u53d1\u51fa\u7684\u7535\u5e73\u662f\u5426\u88ab\u771f\u5b9e\u5730\u53d1\u9001\u51fa\u53bb\u4e86\u3002</li> </ul> <p>\u975e\u7834\u574f\u6027\u4ef2\u88c1\u8fc7\u7a0b\uff1a</p> <ol> <li>\u603b\u7ebf\u65f6\u6240\u6709\u8981\u53d1\u9001\u6570\u636e\u5e27/\u9065\u63a7\u5e27\u7684\u8bbe\u5907( \u540c\u65f6\u53d1\u9001 )\u53d1\u9001\u4e00\u4f4d\u6570\u636e\u5e76\u56de\u8bfb\u603b\u7ebf\u7535\u5e73\u3002</li> <li>\u5728\u4ef2\u88c1\u6bb5\u4e00\u5b9a\u4f1a\u9010\u6e10\u51fa\u73b0\u56de\u8bfb\u7684\u603b\u7ebf\u7535\u5e73\u4e0e\u81ea\u5df1\u53d1\u9001\u7684\u7535\u5e73\u4e0d\u4e00\u81f4\u7684\u8bbe\u5907\uff0c\u8fd9\u4e9b\u8bbe\u5907\u90fd\u4f1a \u201c\u610f\u8bc6\u5230\u201d \u6709\u5176\u4ed6\u8bbe\u5907\u4f7f\u7528\u603b\u7ebf\uff0c\u56e0\u6b64\u4ef2\u88c1\u5931\u5229\u63a8\u51fa\u53d1\u9001\uff0c\u8f6c\u4e3a\u63a5\u6536\u72b6\u6001\u3002</li> </ol> Danger <p>\u5c06\u975e\u7834\u574f\u6027\u4ef2\u88c1\u8fc7\u7a0b\u666e\u904d\u5316\uff0c\u5c31\u4f1a\u5f97\u5230 ID\u53f7\u5c0f\u7684\u8bbe\u5907\u4f18\u5148\u7ea7\u9ad8 \u7684\u7ed3\u8bba\u3002</p> <p></p> <p>\u6570\u636e\u5e27\u548c\u9065\u63a7\u5e27ID\u53f7\u4e00\u6837\u65f6\uff0c\u6570\u636e\u5e27\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u9065\u63a7\u5e27\uff08\u770b\u5b8c\u56fe\u5c31\u660e\u767d\u4e86\uff09\u3002</p> <p></p> <p>\u6807\u51c6\u683c\u5f0f11\u4f4dID\u53f7\u548c\u6269\u5c55\u683c\u5f0f29\u4f4dID\u53f7\u7684\u9ad811\u4f4d\u4e00\u6837\u65f6\uff0c\u6807\u51c6\u683c\u5f0f\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u6269\u5c55\u683c\u5f0f\uff08SRR\u5fc5\u987b\u59cb\u7ec8\u4e3a1\uff0c\u4ee5\u4fdd\u8bc1\u6b64\u8981\u6c42\uff09</p> <p></p>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1227","title":"12.2.7 \u9519\u8bef\u5904\u7406","text":"<p>\u9519\u8bef\u7c7b\u578b</p> <p></p> <p>\u9519\u8bef\u72b6\u6001</p> <ul> <li>\u4e3b\u52a8\u9519\u8bef\u72b6\u6001\u7684\u8bbe\u5907\u6b63\u5e38\u53c2\u4e0e\u901a\u4fe1\u5e76\u5728\u68c0\u6d4b\u5230\u9519\u8bef\u65f6\u53d1\u51fa \u4e3b\u52a8\u9519\u8bef\u5e27 \u3002</li> <li>\u88ab\u52a8\u9519\u8bef\u72b6\u6001\u7684\u8bbe\u5907\u6b63\u5e38\u53c2\u4e0e\u901a\u4fe1\u4f46\u68c0\u6d4b\u5230\u9519\u8bef\u65f6\u53ea\u80fd\u53d1\u51fa \u88ab\u52a8\u9519\u8bef\u5e27 \u3002</li> <li>\u603b\u7ebf\u5173\u95ed\u72b6\u6001\u7684\u8bbe\u5907\u4e0d\u80fd\u53c2\u4e0e\u901a\u4fe1\u3002</li> <li>\u6bcf\u4e2a\u8bbe\u5907\u5185\u90e8\u7ba1\u7406\u4e00\u4e2a TEC \u548c REC \uff0c\u6839\u636e TEC \u548c REC \u7684\u503c\u786e\u5b9a\u81ea\u5df1\u7684\u72b6\u6001\u3002</li> </ul> <p></p> <p>\u9519\u8bef\u8ba1\u6570\u5668</p> <p></p>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#123-can","title":"12.3 CAN\u603b\u7ebf\u5916\u8bbe","text":""},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1231-can","title":"12.3.1 CAN\u5916\u8bbe\u7b80\u4ecb","text":"<ul> <li>STM32\u5185\u7f6ebxCAN\u5916\u8bbe\uff08CAN\u63a7\u5236\u5668\uff09\uff0c\u652f\u6301CAN2.0A\u548c2.0B\uff0c\u53ef\u4ee5\u81ea\u52a8\u53d1\u9001CAN\u62a5\u6587\u548c\u6309\u7167\u8fc7\u6ee4\u5668\u81ea\u52a8\u63a5\u6536\u6307\u5b9aCAN\u62a5\u6587\uff0c\u7a0b\u5e8f\u53ea\u9700\u5904\u7406\u62a5\u6587\u6570\u636e\u800c\u65e0\u9700\u5173\u6ce8\u603b\u7ebf\u7684\u7535\u5e73\u7ec6\u8282</li> <li>\u6ce2\u7279\u7387\u6700\u9ad8\u53ef\u8fbe1\u5146\u4f4d/\u79d2</li> <li>3\u4e2a\u53ef\u914d\u7f6e\u4f18\u5148\u7ea7\u7684\u53d1\u9001\u90ae\u7bb1</li> <li>2\u4e2a3\u7ea7\u6df1\u5ea6\u7684\u63a5\u6536FIFO</li> <li>14\u4e2a\u8fc7\u6ee4\u5668\u7ec4\uff08\u4e92\u8054\u578b28\u4e2a\uff09</li> <li>\u65f6\u95f4\u89e6\u53d1\u901a\u4fe1\u3001\u81ea\u52a8\u79bb\u7ebf\u6062\u590d\u3001\u81ea\u52a8\u5524\u9192\u3001\u7981\u6b62\u81ea\u52a8\u91cd\u4f20\u3001\u63a5\u6536FIFO\u6ea2\u51fa\u5904\u7406\u65b9\u5f0f\u53ef\u914d\u7f6e\u3001\u53d1\u9001\u4f18\u5148\u7ea7\u53ef\u914d\u7f6e\u3001\u53ccCAN\u6a21\u5f0f</li> </ul> <p>STM32F103C8T6 CAN\u8d44\u6e90\uff1aCAN1</p> <p>STM32\u82af\u7247\u5185\u90e8\u4ec5\u96c6\u6210\u4e86 CAN\u63a7\u5236\u5668 \uff0c\u4f46\u6211\u4eec\u4ecd\u7136\u9700\u8981\u5916\u63a5\u4e00\u4e2a CAN\u6536\u53d1\u5668 \u5c06\u903b\u8f91\u7535\u5e73\u8f6c\u5316\u4e3aCAN\u9700\u8981\u7684\u5dee\u5206\u4fe1\u53f7\u3002</p> <p></p>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1232-can","title":"12.3.2 CAN\u6846\u56fe","text":""},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1233-can","title":"12.3.3 CAN\u57fa\u672c\u7ed3\u6784","text":"<ul> <li>\u53d1\u9001\u90ae\u7bb1<ul> <li>\u53ef\u4ee5\u914d\u7f6e \u5148\u5360\u5148\u884c \u6216 \u62a5\u6587ID\u5c0f\u7684\u5148\u884c \u3002</li> </ul> </li> </ul> <ul> <li>\u63a5\u6536\u8fc7\u6ee4\u5668<ul> <li>\u7528\u4e8e\u8fc7\u6ee4\u62a5\u6587ID\u3002</li> </ul> </li> <li>\u63a5\u6536FIFO<ul> <li>\u4e24\u4e2aFIFO\u6ca1\u6709\u4f18\u5148\u7ea7\u533a\u522b\uff0c\u53ef\u81ea\u884c\u5206\u914d\u3002</li> <li>\u8fc7\u6ee4\u540e\u7684\u62a5\u6587ID\u5b58\u50a8\u5728\u90ae\u7bb1 0\u30011\u30012 \u8fd9\u6837\u7684\u987a\u5e8f\uff0cCPU\u5904\u7406\u90ae\u7bb1 0 \u540e\uff0c\u5176\u4f59\u62a5\u6587ID\u524d\u79fb\u4e00\u4f4d(\u548c\u73b0\u5b9e\u751f\u6d3b\u6392\u961f\u4e00\u6837)\u3002</li> <li>\u5f53\u90ae\u7bb1\u6ee1\u4e86\u4ee5\u540e\uff0c\u6765\u4e86\u65b0\u7684\u62a5\u6587ID\uff0c\u53ef\u4ee5\u914d\u7f6e \u820d\u5f03\u65b0ID (\u542f\u7528\u4e86FIFO\u9501\u5b9a\u529f\u80fd )\u6216 \u820d\u5f03\u672b\u5c3e(\u90ae\u7bb12)ID (\u7981\u7528FIFO\u9501\u5b9a\u529f\u80fd )\u3002</li> </ul> </li> </ul>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1234-can","title":"12.3.4 CAN\u6536\u53d1\u8fc7\u7a0b","text":"<p>\u2b50\u2460\u53d1\u9001\u8fc7\u7a0b</p> <p>\u53d1\u9001\u8fc7\u7a0b\u7684 \u53d1\u9001\u90ae\u7bb1\u72b6\u6001 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u56fe\u4e2d\u51e0\u4e2a\u91cd\u8981\u5bc4\u5b58\u5668\u4f4d\u53ef\u4ee5\u5728 STM32F10xxx\u53c2\u8003\u624b\u518c \u4e2d\u67e5\u5230\uff1a</p> <ul> <li><code>CAN_TIxR</code>\u5bc4\u5b58\u5668\u7684<code>TXRQ</code> \u4f4d\uff1a\u7531\u8f6f\u4ef6\u5bf9\u5176\u7f6e 1 \uff0c\u6765\u8bf7\u6c42\u53d1\u9001\u90ae\u7bb1\u7684\u6570\u636e\u3002\u5f53\u6570\u636e\u53d1\u9001\u5b8c\u6210\uff0c\u90ae\u7bb1\u4e3a\u7a7a\u65f6\uff0c\u786c\u4ef6\u5bf9\u5176\u6e05 0 \u3002</li> <li><code>CAN_TSR</code>\u5bc4\u5b58\u5668\u7684 <code>RQCP0</code> \u3001<code>RQCP1</code> \u3001 <code>RQCP2</code> \u4f4d\uff1a\u90ae\u7bb1 x \u8bf7\u6c42\u5b8c\u6210\uff0c\u786c\u4ef6\u63a5\u6536\u5230\u53d1\u9001\u8bf7\u6c42\u65f6\u5bf9\u8be5\u4f4d\u6e05 0 \uff1b\u540c\u65f6<code>TXOKx</code> \u3001<code>ALSTx</code>\u548c<code>TERRx</code> \u4e5f\u88ab\u6e05 0 \u3002</li> <li><code>CAN_TSR</code>\u5bc4\u5b58\u5668\u7684 <code>TXOK0</code> \u3001<code>TXOK1</code> \u3001 <code>TXOK2</code> \u4f4d\uff1a\u90ae\u7bb1 x \u53d1\u9001\u6210\u529f\uff0c\u786c\u4ef6\u5bf9\u8be5\u4f4d\u7f6e 1 \u3002</li> <li><code>CAN_TSR</code>\u5bc4\u5b58\u5668\u7684 <code>TME0</code> \u3001<code>TME1</code> \u3001 <code>TME2</code> \u4f4d\uff1a\u53d1\u9001\u90ae\u7bb1 x \u7a7a\uff0c\u786c\u4ef6\u5bf9\u8be5\u4f4d\u7f6e 1 \u3002</li> <li><code>CAN_TSR</code>\u5bc4\u5b58\u5668\u7684 <code>ABRQ0</code> \u3001<code>ABRQ1</code> \u3001 <code>ABRQ2</code> \u4f4d\uff1a\u90ae\u7bb1 x \u7ec8\u6b62\u53d1\u9001\uff0c\u8f6f\u4ef6\u5bf9\u8be5\u4f4d\u7f6e 1 \uff0c\u53ef\u4ee5\u4e2d\u6b62\u90ae\u7bb1 x \u7684\u53d1\u9001\u8bf7\u6c42\u3002</li> <li><code>CAN_TSR</code>\u5bc4\u5b58\u5668\u7684 <code>ALST0</code> \u3001<code>ALST1</code> \u3001 <code>ALST2</code> \u4f4d\uff1a\u90ae\u7bb1 x \u4ef2\u88c1\u4e22\u5931\u800c\u5bfc\u81f4\u53d1\u9001\u5931\u8d25\uff0c\u5bf9\u8be5\u4f4d\u7f6e 1 \u3002</li> <li><code>CAN_TSR</code>\u5bc4\u5b58\u5668\u7684 <code>TERR0</code> \u3001<code>TERR1</code> \u3001 <code>TERR2</code> \u4f4d\uff1a\u90ae\u7bb1 x \u56e0\u4e3a\u51fa\u9519\u800c\u5bfc\u81f4\u53d1\u9001\u5931\u8d25\uff0c\u5bf9\u8be5\u4f4d\u7f6e 1 \u3002</li> </ul> <p>\u800c\u7406\u60f3\u7684\u53d1\u9001\u6d41\u7a0b\u5927\u81f4\u5206\u4e3a\u5982\u4e0b\u51e0\u6b65\uff1a</p> <ol> <li>\u7a7a\u7f6e -&gt; \u6302\u53f7 \uff1a\u5e94\u7528\u7a0b\u5e8f\u9009\u62e91\u4e2a\u7a7a\u7f6e\u7684\u53d1\u9001\u90ae\u7bb1\uff0c\u8bbe\u7f6e\u6807\u8bc6\u7b26\uff0c\u6570\u636e\u957f\u5ea6\u548c\u5f85\u53d1\u9001\u6570\u636e\uff1b\u7136\u540e<code>TXRQ</code> \u7f6e 1 \u8bf7\u6c42\u53d1\u9001\uff0c\u8bf7\u6c42\u5b8c\u6210 <code>RQCP</code> \u6e05 0 \uff0c<code>TXOK</code>\u540c\u65f6\u6e05\u96f6\uff0c\u90ae\u7bb1\u975e\u7a7a <code>TME</code> \u4e5f\u88ab\u6e05 0 \u3002<code>TXRQ</code> \u7f6e 1 \u90ae\u7bb1\u9a6c\u4e0a\u8fdb\u5165\u6302\u53f7\u72b6\u6001\uff0c\u5e76\u7b49\u5f85\u6210\u4e3a\u6700\u9ad8\u4f18\u5148\u7ea7\u7684\u90ae\u7bb1\u3002 </li> <li>\u6302\u53f7 -&gt; \u9884\u5b9a \uff1a\u4e00\u65e6\u90ae\u7bb1\u6210\u4e3a\u6700\u9ad8\u4f18\u5148\u7ea7\u7684\u90ae\u7bb1\uff0c\u5176\u72b6\u6001\u5c31\u53d8\u4e3a\u9884\u5b9a\u53d1\u9001\u72b6\u6001\u3002  </li> <li>\u9884\u5b9a -&gt; \u53d1\u9001 \uff1a\u4e00\u65e6CAN\u603b\u7ebf\u8fdb\u5165\u7a7a\u95f2\u72b6\u6001\uff0c\u9884\u5b9a\u53d1\u9001\u90ae\u7bb1\u4e2d\u7684\u62a5\u6587\u5c31\u9a6c\u4e0a\u88ab\u53d1\u9001(\u8fdb\u5165\u53d1\u9001\u72b6\u6001)\u3002</li> <li>\u53d1\u9001 -&gt; \u7a7a\u7f6e \uff1a\u4e00\u65e6\u90ae\u7bb1\u4e2d\u7684\u62a5\u6587\u88ab\u6210\u529f\u53d1\u9001\u540e\uff0c\u5b83\u9a6c\u4e0a\u53d8\u4e3a\u7a7a\u7f6e\u90ae\u7bb1\uff0c\u7136\u540e <code>RQCP</code>\u3001<code>TXOK</code>\u7f6e 1 \u8868\u793a\u4e00\u6b21\u6210\u529f\u53d1\u9001\uff0c\u540c\u65f6\u53d1\u9001\u90ae\u7bb1\u7a7a <code>TME</code> \u88ab\u786c\u4ef6\u7f6e 1 \u3002</li> </ol> <p>\u4e00\u4e9b\u53d1\u9001\u4e2d\u7684\u7279\u6b8a\u60c5\u51b5\uff1a</p> <ul> <li>\u53d1\u9001\u5931\u8d25 \uff1a\u5982\u679c\u53d1\u9001\u5931\u8d25\uff0c\u7531\u4e8e\u4ef2\u88c1\u5f15\u8d77\u7684\u5c06<code>ALST</code>\u4f4d\u7f6e 1 \uff0c\u7531\u4e8e\u9519\u8bef\u5f15\u8d77\u7684\u5c31\u5bf9<code>TERR</code>\u4f4d\u7f6e 1 \u3002</li> <li>\u53d1\u9001\u4f18\u5148\u7ea7 \uff1a\u6302\u53f7 -&gt; \u9884\u5b9a\u671f\u95f4\uff0c\u4f18\u5148\u7ea7\u7684\u5224\u5b9a\u53ef\u4ee5\u662f \u62a5\u6587ID\u5927\u5c0f \u6216 \u5148\u5360\u5148\u5f97 \u3002 </li> <li>\u7ec8\u6b62\u53d1\u9001\u8bf7\u6c42 \uff1aABRQ\u4f4d\u7f6e 1 \u53ef\u4ee5\u7ec8\u6b62\u53d1\u9001\u8bf7\u6c42\uff0c\u5982\u679c\u5904\u4e8e\u6302\u53f7\u6216\u9884\u5b9a\u72b6\u6001\uff0c\u53d1\u9001\u8bf7\u6c42\u9a6c\u4e0a\u5c31\u88ab\u4e2d\u6b62\u4e86\u3002\u5982\u679c\u90ae\u7bb1\u5904\u4e8e\u53d1\u9001\u72b6\u6001\uff0c\u90a3\u4e48\u4e2d\u6b62\u8bf7\u6c42\u53ef\u80fd\u5bfc\u81f42\u79cd\u7ed3\u679c\u3002  <ul> <li>\u5982\u679c\u90ae\u7bb1\u4e2d\u7684\u62a5\u6587\u88ab\u6210\u529f\u53d1\u9001\uff0c\u90a3\u4e48\u90ae\u7bb1\u53d8\u4e3a\u7a7a\u7f6e\u90ae\u7bb1\uff0c\u5e76\u4e14<code>TXOK</code>\u4f4d\u88ab\u786c\u4ef6\u7f6e 1 \u3002</li> <li>\u5982\u679c\u90ae\u7bb1\u4e2d\u7684\u62a5\u6587\u53d1\u9001\u5931\u8d25\u4e86\uff0c\u90a3\u4e48\u90ae\u7bb1\u53d8\u4e3a\u9884\u5b9a\u72b6\u6001\uff0c\u7136\u540e\u53d1\u9001\u8bf7\u6c42\u88ab\u4e2d\u6b62\uff0c\u90ae\u7bb1\u53d8\u4e3a\u7a7a\u7f6e\u90ae\u7bb1\u4e14<code>TXOK</code>\u4f4d\u88ab\u786c\u4ef6\u6e05 0 \u3002</li> </ul> </li> </ul> <ul> <li>\u7981\u6b62\u81ea\u52a8\u91cd\u4f20 \uff1a\u901a\u8fc7\u5bf9<code>CAN_MCR</code>\u5bc4\u5b58\u5668\u7684<code>NART</code>\u4f4d\u7f6e 1 \uff0c\u6765\u8ba9\u786c\u4ef6\u5de5\u4f5c\u5728\u8be5\u6a21\u5f0f\u3002  \u5728\u8be5\u6a21\u5f0f\u4e0b\uff0c\u53d1\u9001\u64cd\u4f5c\u53ea\u4f1a\u6267\u884c\u4e00\u6b21\u3002\u5982\u679c\u53d1\u9001\u64cd\u4f5c\u5931\u8d25\u4e86\uff0c\u4e0d\u7ba1\u662f\u7531\u4e8e\u4ef2\u88c1\u4e22\u5931\u6216\u51fa\u9519\uff0c\u786c\u4ef6\u90fd\u4e0d\u4f1a\u518d\u81ea\u52a8\u53d1\u9001\u8be5\u62a5\u6587\u3002  </li> </ul> <p></p> <p>\u2b50\u2461\u63a5\u6536\u8fc7\u7a0b</p> <p>\u63a5\u6536\u5230\u7684\u62a5\u6587\uff0c\u88ab\u5b58\u50a8\u57283\u7ea7\u90ae\u7bb1\u6df1\u5ea6\u7684FIFO\u4e2d\u3002 FIFO\u5b8c\u5168\u7531\u786c\u4ef6\u6765\u7ba1\u7406\uff0c\u4ece\u800c\u8282\u7701\u4e86CPU\u7684\u5904\u7406\u8d1f\u8377\uff0c\u7b80\u5316\u4e86\u8f6f\u4ef6\u5e76\u4fdd\u8bc1\u4e86\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002\u5e94\u7528\u7a0b\u5e8f\u53ea\u80fd\u901a\u8fc7\u8bfb\u53d6FIFO\u8f93\u51fa\u90ae\u7bb1\uff0c\u6765\u8bfb\u53d6FIFO\u4e2d\u6700\u5148\u6536\u5230\u7684\u62a5\u6587\u3002  </p> <ul> <li>\u6709\u6548\u62a5\u6587 \uff1a\u6839\u636eCAN\u534f\u8bae\uff0c \u5f53\u62a5\u6587\u88ab\u6b63\u786e\u63a5\u6536(\u76f4\u5230EOF\u57df\u7684\u6700\u540e\u4e00\u4f4d\u90fd\u6ca1\u6709\u9519\u8bef)\uff0c \u4e14\u901a\u8fc7\u4e86\u6807\u8bc6\u7b26\u8fc7\u6ee4\uff0c\u90a3\u4e48\u8be5\u62a5\u6587\u88ab\u8ba4\u4e3a\u662f\u6709\u6548\u62a5\u6587\u3002  </li> </ul> <p>FIFO\u7ba1\u7406\u6d41\u7a0b\uff1a</p> <ol> <li>FIFO\u4ece\u7a7a\u72b6\u6001\u5f00\u59cb\uff0c\u5728\u63a5\u6536\u5230\u7b2c\u4e00\u4e2a\u6709\u6548\u7684\u62a5\u6587\u540e\uff0c FIFO\u72b6\u6001\u53d8\u4e3a\u6302\u53f7 1\uff0c\u786c\u4ef6\u628a<code>CAN_RFR</code>\u5bc4\u5b58\u5668\u7684<code>FMP[1:0]</code>\u8bbe\u7f6e\u4e3a 0x01\u3002 </li> <li>\u8f6f\u4ef6\u53ef\u4ee5\u8bfb\u53d6FIFO\u8f93\u51fa\u90ae\u7bb1\u6765\u8bfb\u51fa\u90ae\u7bb1\u4e2d\u7684\u62a5\u6587\uff0c\u7136\u540e\u901a\u8fc7\u5bf9<code>CAN_RFR</code>\u5bc4\u5b58\u5668\u7684<code>RFOM</code>\u4f4d\u7f6e 1 \u6765\u91ca\u653e\u90ae\u7bb1\uff0c\u8fd9\u6837FIFO\u4e3a\u7a7a\u72b6\u6001\u3002</li> <li>\u5982\u679c\u5728\u91ca\u653e\u90ae\u7bb1\u7684\u540c\u65f6\uff0c\u53c8\u6536\u5230\u4e86\u4e00\u4e2a\u6709\u6548\u7684\u62a5\u6587\uff0c\u90a3\u4e48FIFO\u4ecd\u7136\u4fdd\u7559\u5728\u6302\u53f7 1 \u72b6\u6001\uff1b\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u4e0d\u91ca\u653e\u90ae\u7bb1\uff0c\u5728\u63a5\u6536\u5230\u4e0b\u4e00\u4e2a\u6709\u6548\u7684\u62a5\u6587\u540e\uff0c FIFO\u72b6\u6001\u53d8\u4e3a\u6302\u53f7 2 \uff0c\u540c\u65f6\u628a<code>FMP[1:0]</code>\u8bbe\u7f6e\u4e3a 0x02\uff08 \u6b64\u5904\u56fe\u4e2d\u753b\u9519\u4e86\uff0c\u5e94\u662f\u4e8c\u8fdb\u5236\u768410 \uff09\u3002 </li> </ol> <p>\u5f02\u5e38\u60c5\u51b5\uff1a</p> <ul> <li>\u6ea2\u51fa \uff1a\u5f53FIFO\u5904\u4e8e\u6302\u53f7 3 \u72b6\u6001\uff0c\u6b64\u65f6\u90ae\u7bb1\u5df2\u6ee1\uff0c\u4e0b\u4e00\u4e2a\u6709\u6548\u7684\u62a5\u6587\u5c31\u4f1a\u5bfc\u81f4\u6ea2\u51fa\uff0c\u5e76\u4e14\u4e00\u4e2a\u62a5\u6587\u4f1a\u4e22\u5931\u3002\u4e22\u5931\u4f1a\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u524d\u9762CAN\u57fa\u672c\u7ed3\u6784\u8bb2\u8fc7\u3002  <ul> <li>\u542f\u7528FIFO\u9501\u5b9a\u529f\u80fd\uff1aFIFO\u4e2d\u6700\u540e\u6536\u5230\u7684\u62a5\u6587\u5c31\u88ab\u65b0\u62a5\u6587\u6240\u8986\u76d6\u3002  </li> <li>\u7981\u7528FIFO\u9501\u5b9a\u529f\u80fd\uff1aFIFO\u65b0\u6536\u5230\u7684\u62a5\u6587\u5c31\u88ab\u4e22\u5f03\u3002</li> </ul> </li> <li>FIFO\u4e2d\u65ad <ul> <li>\u4e00\u65e6\u5f80FIFO\u5b58\u5165\u4e00\u4e2a\u62a5\u6587\uff0c\u786c\u4ef6\u5c31\u4f1a\u66f4\u65b0<code>FMP[1:0]</code>\u4f4d\uff0c\u5e76\u4e14\u5982\u679c<code>CAN_IER</code>\u5bc4\u5b58\u5668\u7684<code>FMPIE</code>\u7f6e\u4e3a 1 \uff0c\u90a3\u4e48\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e2d\u65ad\u8bf7\u6c42\u3002</li> <li>\u5f53FIFO\u53d8\u6ee1 \u65f6(\u5373 \u7b2c3\u4e2a \u62a5 \u6587 \u88ab \u5b58 \u5165)\uff0c <code>CAN_RFR</code>\u5bc4\u5b58\u5668\u7684<code>FULL</code>\u4f4d\u5c31\u88ab\u7f6e 1 \uff0c \u5e76\u4e14\u5982\u679c<code>CAN_IER</code>\u5bc4\u5b58\u5668\u7684<code>FFIE</code>\u7f6e\u4e3a 1 \uff0c\u90a3\u4e48\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u6ee1\u4e2d\u65ad\u8bf7\u6c42\u3002</li> <li>\u5728\u6ea2\u51fa\u7684\u60c5\u51b5\u4e0b\uff0c<code>FOVR</code>\u4f4d\u88ab\u7f6e 1 \uff0c\u5e76\u4e14\u5982\u679c<code>CAN_IER</code>\u5bc4\u5b58\u5668\u7684<code>FOVIE</code>\u7f6e\u4e3a 1 \uff0c\u90a3\u4e48\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u6ea2\u51fa\u4e2d\u65ad\u8bf7\u6c42\u3002  </li> </ul> </li> </ul> <p></p>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1235","title":"12.3.5 \u6807\u8bc6\u7b26\u8fc7\u6ee4\u5668","text":"<p>STM32\u7684CAN\u5916\u8bbe\u63d0\u4f9b\u4e86 14 \u4e2a\u4f4d\u5bbd\u53ef\u53d8\u7684\u3001\u53ef\u914d\u7f6e\u7684\u8fc7\u6ee4\u5668\u7ec4\uff0c\u6bcf\u4e2a\u8fc7\u6ee4\u5668\u7ec4\u7531 2 \u4e2a 32 \u4f4d\u5bc4\u5b58\u5668\uff0c<code>CAN_FxR0</code>\u548c<code>CAN_FxR1</code>\u7ec4\u6210\u3002</p> <p>\u914d\u7f6e\u4e00\u4e2a\u8fc7\u6ee4\u5668\u7ec4\u7684\u5de5\u4f5c\u6a21\u5f0f\u7684\u51e0\u4e2a\u91cd\u8981\u5bc4\u5b58\u5668\uff1a</p> <ul> <li><code>CAN_FS1R</code>\u5bc4\u5b58\u5668\u7684<code>FSCx</code>\u4f4d\uff1a\u8fc7\u6ee4\u5668\u4f4d\u5bbd\u8bbe\u7f6e<ul> <li>0\uff1a\u8fc7\u6ee4\u5668\u4f4d\u5bbd\u4e3a2\u4e2a16\u4f4d\u3002 </li> <li>1\uff1a\u8fc7\u6ee4\u5668\u4f4d\u5bbd\u4e3a\u5355\u4e2a32\u4f4d\u3002</li> </ul> </li> <li><code>CAN_FM1R</code>\u5bc4\u5b58\u5668\u7684<code>FBMx</code>\u4f4d\uff1a\u8fc7\u6ee4\u5668\u6a21\u5f0f<ul> <li>0: \u8fc7\u6ee4\u5668\u7ec4x\u76842\u4e2a32\u4f4d\u5bc4\u5b58\u5668\u5de5\u4f5c\u5728\u6807\u8bc6\u7b26\u5c4f\u853d\u4f4d\u6a21\u5f0f\u3002</li> <li>1: \u8fc7\u6ee4\u5668\u7ec4x\u76842\u4e2a32\u4f4d\u5bc4\u5b58\u5668\u5de5\u4f5c\u5728\u6807\u8bc6\u7b26\u5217\u8868\u6a21\u5f0f\u3002</li> </ul> </li> </ul> <p>\u7ecf\u8fc7<code>FSCx</code>\u4f4d\u548c<code>FBMx</code>\u4f4d\u7684\u6392\u5217\u7ec4\u5408\uff0c\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e2a\u8fc7\u6ee4\u5668\u7ec4\u7684\u56db\u79cd\u5de5\u4f5c\u6a21\u5f0f\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p>\u8fc7\u6ee4\u5668\u4f4d\u5bbd \uff1a</p> <ul> <li>\u5bf9\u4e8e 32 \u4f4d\u8fc7\u6ee4\u5668\uff0c<code>CAN_FxR0</code>\u548c<code>CAN_FxR1</code>\u5bc4\u5b58\u5668\u5206\u522b\u53ef\u4ee5\u5b58\u5165\u4e00\u4e2a\u8fc7\u6ee4\u62a5\u6587ID\u3002\u540c\u65f6\u53ef\u4ee5\u9009\u914d\u6807\u51c6\u683c\u5f0f\u6216\u6269\u5c55\u683c\u5f0f\uff0c<code>STID</code>\u7684 11 \u5b58\u653e\u6807\u51c6\u683c\u5f0f\u5176\u4f59\u8865\u96f6\uff0c\u52a0\u4e0a<code>EXID</code>\u7684 18 \u4f4d\u53ef\u4ee5\u5b58\u653e\u62d3\u5c55\u683c\u5f0f\uff1bIDE\u4e3a\u533a\u5206\u6807\u51c6/\u6269\u5c55\u683c\u5f0f(\u7f6e1)\uff0cRTR\u4e3a\u533a\u5206\u6570\u636e\u5e27\u548c\u9065\u63a7\u5e27(\u7f6e1)\u3002</li> <li>\u5bf9\u4e8e 16 \u4f4d\u8fc7\u6ee4\u5668\uff0c\u53ea\u80fd\u5b58\u653e\u6807\u51c6\u683c\u5f0f\u3002</li> </ul> <p>\u5de5\u4f5c\u6a21\u5f0f \uff1a</p> <ul> <li>\u6807\u8bc6\u7b26\u5217\u8868\u6a21\u5f0f\uff0c\u53ea\u80fd\u8fc7\u6ee4\u901a\u8fc7\u4e0e<code>CAN_FxR0</code>\u548c<code>CAN_FxR1</code>\u5bc4\u5b58\u5668\u5b58\u653e\u7684\u62a5\u6587ID\u4e2d\u7684\u4e00\u4e2a\u5b8c\u5168\u4e00\u81f4\u5730\u62a5\u6587ID\u3002</li> </ul> <ul> <li>\u6807\u8bc6\u7b26\u5c4f\u853d\u4f4d\u6a21\u5f0f\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u62a5\u6587ID\u7684\u5c4f\u853d\u7801\uff0c\u5176\u4e2d\u5c4f\u853d\u7801\u4e3a 1 \u7684\u4e3a\u9700\u5b8c\u5168\u4e00\u81f4\uff0c\u5c4f\u853d\u7801\u4e3a 0 \u7684\u4f4d\u5bf9\u5e94\u7684\u62a5\u6587ID\u4f4d\u53ef\u4ee5\u4e3a\u4efb\u610f\u503c\u3002<ul> <li>\u4f8b\u5982\uff0c\u62a5\u6587ID\u4e3a 0x100 -&gt; 0x10F\uff0c\u5219\u5199\u5165\u5bc4\u5b58\u5668\u8fc7\u6ee4ID\uff1a0x100\uff0c\u5c4f\u853d\u7801\uff1a110...\u3002</li> </ul> </li> </ul> <p></p>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1236","title":"12.3.6 \u6d4b\u8bd5\u6a21\u5f0f","text":"<ul> <li>\u9759\u9ed8\u6a21\u5f0f \uff1a\u7528\u4e8e\u5206\u6790CAN\u603b\u7ebf\u7684\u6d3b\u52a8\uff0c\u4e0d\u4f1a\u5bf9\u603b\u7ebf\u9020\u6210\u5f71\u54cd\u3002</li> <li>\u73af\u56de\u6a21\u5f0f \uff1a\u7528\u4e8e\u81ea\u6d4b\u8bd5\uff0c\u540c\u65f6\u53d1\u9001\u7684\u62a5\u6587\u53ef\u4ee5\u5728CAN_TX\u5f15\u811a\u4e0a\u68c0\u6d4b\u5230\u3002</li> <li>\u73af\u56de\u9759\u9ed8\u6a21\u5f0f \uff1a\u7528\u4e8e\u70ed\u81ea\u6d4b\u8bd5\uff0c\u81ea\u6d4b\u7684\u540c\u65f6\u4e0d\u4f1a\u5f71\u54cdCAN\u603b\u7ebf\u3002</li> </ul>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1237","title":"12.3.7 \u5de5\u4f5c\u6a21\u5f0f","text":"<ul> <li>\u521d\u59cb\u5316\u6a21\u5f0f \uff1a\u7528\u4e8e\u914d\u7f6eCAN\u5916\u8bbe\uff0c\u7981\u6b62\u62a5\u6587\u7684\u63a5\u6536\u548c\u53d1\u9001\u3002</li> <li>\u6b63\u5e38\u6a21\u5f0f \uff1a\u914d\u7f6eCAN\u5916\u8bbe\u540e\u8fdb\u5165\u6b63\u5e38\u6a21\u5f0f\uff0c\u4ee5\u4fbf\u6b63\u5e38\u63a5\u6536\u548c\u53d1\u9001\u62a5\u6587\u3002</li> <li>\u7761\u7720\u6a21\u5f0f \uff1a\u4f4e\u529f\u8017\uff0cCAN\u5916\u8bbe\u65f6\u949f\u505c\u6b62\uff0c\u53ef\u4f7f\u7528\u8f6f\u4ef6\u5524\u9192\u6216\u8005\u786c\u4ef6\u81ea\u52a8\u5524\u9192\u3002</li> <li>AWUM \uff1a\u7f6e1\uff0c\u81ea\u52a8\u5524\u9192\uff0c\u4e00\u65e6\u68c0\u6d4b\u5230CAN\u603b\u7ebf\u6d3b\u52a8\uff0c\u786c\u4ef6\u5c31\u81ea\u52a8\u6e05\u96f6SLEEP\uff0c\u5524\u9192CAN\u5916\u8bbe\uff1b\u7f6e0\uff0c\u624b\u52a8\u5524\u9192\uff0c\u8f6f\u4ef6\u6e05\u96f6SLEEP\uff0c\u5524\u9192CAN\u5916\u8bbe\u3002</li> </ul>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1238","title":"12.3.8 \u4f4d\u65f6\u5e8f","text":"<p>STM32\u89c4\u5b9a\u7684\u4f4d\u65f6\u5e8f\u4e0eCAN\u534f\u8bae\u7a0d\u6709\u4e0d\u540c\uff0cSTM32\u5c06 PBS1 \u548c PTS \u5408\u5e76\u6210 BS1 \u6bb5\uff0c\u5176\u4f59\u5747\u4e00\u81f4\u3002</p> <ul> <li>SS\u6bb5\uff1a1Tq</li> <li>BS1\u6bb5\uff1a1-16Tq</li> <li>BS2\u6bb5\uff1a1-8Tq</li> </ul> <p></p> <p>\u6ce2\u7279\u7387\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff1a</p> <p>\u6ce2\u7279\u7387 = APB1\u65f6\u949f\u9891\u7387(36MHZ) / \u5206\u9891\u7cfb\u6570 / \u4e00\u4f4d\u7684Tq\u6570\u91cf</p> <p>\u516c\u5f0f\u8bf4\u660e\uff1a</p> <ul> <li>\u5206\u9891\u7cfb\u6570 = <code>brp[9:0] + 1</code>   \uff08<code>brp</code> \u4e3a 10 \u4f4d\u5206\u9891\u5bc4\u5b58\u5668\u503c\uff0c\u8303\u56f4 0-1023\uff09</li> <li>\u4e00\u4f4d\u7684TQ\u6570\u91cf = <code>1 + (ts1[3:0] + 1) + (ts2[2:0] + 1)</code>   \uff08<code>ts1</code> \u548c <code>ts2</code> \u5206\u522b\u4e3a\u65f6\u95f4\u6bb51\u548c\u65f6\u95f4\u6bb52\u7684\u5bc4\u5b58\u5668\u503c\uff0c<code>ts1</code> \u4e3a 4 \u4f4d\uff0c<code>ts2</code> \u4e3a 3 \u4f4d\uff09</li> </ul>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1239","title":"12.3.9 \u4e2d\u65ad","text":"<p>CAN\u5916\u8bbe\u5360\u75284\u4e2a\u4e13\u7528\u7684\u4e2d\u65ad\u5411\u91cf\uff1a</p> <ul> <li>\u53d1\u9001\u4e2d\u65ad\uff1a\u53d1\u9001\u90ae\u7bb1\u7a7a\u65f6\u4ea7\u751f\u3002</li> <li>FIFO 0\u4e2d\u65ad\uff1a\u6536\u5230\u4e00\u4e2a\u62a5\u6587/FIFO 0\u6ee1/FIFO 0\u6ea2\u51fa\u65f6\u4ea7\u751f\u3002</li> <li>FIFO 1\u4e2d\u65ad\uff1a\u6536\u5230\u4e00\u4e2a\u62a5\u6587/FIFO 1\u6ee1/FIFO 1\u6ea2\u51fa\u65f6\u4ea7\u751f\u3002</li> <li>\u72b6\u6001\u6539\u53d8\u9519\u8bef\u4e2d\u65ad\uff1a\u51fa\u9519/\u5524\u9192/\u8fdb\u5165\u7761\u7720\u65f6\u4ea7\u751f\u3002</li> </ul> <p></p>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#12310","title":"12.3.10 \u65f6\u95f4\u89e6\u53d1\u901a\u4fe1","text":"<ul> <li>TTCM\uff1a\u7f6e1\uff0c\u5f00\u542f\u65f6\u95f4\u89e6\u53d1\u901a\u4fe1\u529f\u80fd\uff1b\u7f6e0\uff0c\u5173\u95ed\u65f6\u95f4\u89e6\u53d1\u901a\u4fe1\u529f\u80fd\u3002</li> <li>CAN\u5916\u8bbe\u5185\u7f6e\u4e00\u4e2a16\u4f4d\u7684\u8ba1\u6570\u5668\uff0c\u7528\u4e8e\u8bb0\u5f55\u65f6\u95f4\u6233\u3002</li> <li>TTCM\u7f6e1\u540e\uff0c\u8be5\u8ba1\u6570\u5668\u5728\u6bcf\u4e2aCAN\u4f4d\u7684\u65f6\u95f4\u81ea\u589e\u4e00\u6b21\uff0c\u6ea2\u51fa\u540e\u5f52\u96f6\u3002</li> <li>\u6bcf\u4e2a\u53d1\u9001\u90ae\u7bb1\u548c\u63a5\u6536FIFO\u90fd\u6709\u4e00\u4e2aTIME[15:0]\u5bc4\u5b58\u5668\uff0c\u53d1\u9001\u5e27SOF\u65f6\uff0c\u786c\u4ef6\u6355\u83b7\u8ba1\u6570\u5668\u503c\u5230\u53d1\u9001\u90ae\u7bb1\u7684TIME\u5bc4\u5b58\u5668\uff0c\u63a5\u6536\u5e27SOF\u65f6\uff0c\u786c\u4ef6\u6355\u83b7\u8ba1\u6570\u5668\u503c\u5230\u63a5\u6536FIFO\u7684TIME\u5bc4\u5b58\u5668\u3002</li> <li>\u53d1\u9001\u90ae\u7bb1\u53ef\u914d\u7f6eTGT\u4f4d\uff0c\u6355\u83b7\u8ba1\u6570\u5668\u503c\u7684\u540c\u65f6\uff0c\u4e5f\u628a\u6b64\u503c\u5199\u5165\u5230\u6570\u636e\u5e27\u6570\u636e\u6bb5\u7684\u6700\u540e\u4e24\u4e2a\u5b57\u8282\uff0c\u4e3a\u4e86\u4f7f\u7528\u6b64\u529f\u80fd\uff0cDLC\u5fc5\u987b\u8bbe\u7f6e\u4e3a8\u3002</li> </ul>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#12311","title":"12.3.11 \u9519\u8bef\u5904\u7406","text":"<p>\u5728\u8fd9\u91ccSTM32\u52a0\u4e86\u4e00\u4e2a\u5c0f\u529f\u80fd\uff0c\u76f8\u5f53\u4e8e\u5728\u79bb\u7ebf\u548c\u9519\u8bef\u4e3b\u52a8\u95f4\u52a0\u4e86\u4e00\u4e2a\u53ef\u63a7\u5236\u7684\u5f00\u5173<code>ABOM</code>\u3002</p> <ul> <li><code>ABOM</code>\u7f6e 1\uff0c\u5f00\u542f\u79bb\u7ebf\u81ea\u52a8\u6062\u590d\uff0c\u8fdb\u5165\u79bb\u7ebf\u72b6\u6001\u540e\uff0c\u5c31\u81ea\u52a8\u5f00\u542f\u6062\u590d\u8fc7\u7a0b\uff1b</li> <li><code>ABOM</code>\u7f6e 0\uff0c\u5173\u95ed\u79bb\u7ebf\u81ea\u52a8\u6062\u590d\uff0c\u8f6f\u4ef6\u5fc5\u987b\u5148\u8bf7\u6c42\u8fdb\u5165\u7136\u540e\u518d\u9000\u51fa\u521d\u59cb\u5316\u6a21\u5f0f\uff0c\u968f\u540e\u6062\u590d\u8fc7\u7a0b\u624d\u88ab\u5f00\u542f</li> </ul> <p></p>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#124-stm32cubemx","title":"12.4 STM32CubeMX\u53c2\u6570","text":""},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1241-can","title":"12.4.1 CAN\u521d\u59cb\u5316","text":"<p>\u4e0eCAN\u5916\u8bbe\u76f8\u5173\u7684\u53c2\u6570\u914d\u7f6e\uff1a</p> <p></p> <ul> <li>Prescaler   \u5206\u9891\u7cfb\u6570\uff0c\u7528\u4e8e\u786e\u5b9a\u4e00\u4e2aTq\u7684\u65f6\u95f4\u3001\u6ce2\u7279\u7387\u3002\u6b64\u65f6\u6ce2\u7279\u7387\u4e3a 500kbps\uff0c\u4f7f\u7528\u9ad8\u901fCAN\u6ce2\u7279\u7387\u8981\u5927\u4e8e125kbps\u3002</li> </ul> <ul> <li>Time Quanta in Bit Segment 1   BS1\u6bb5\uff0c2Tq\u3002</li> </ul> <ul> <li> <p>Time Quanta in Bit Segment 2</p> <p>BS2\u6bb5\uff0c3Tq\u3002</p> </li> </ul> <ul> <li>ReSynchronization Jump width   SWJ\uff0c2Tq\u3002</li> </ul> <ul> <li> <p>Time Triggered Communication Mode = Disable</p> <p>\u7981\u7528\u65f6\u95f4\u89e6\u53d1\u6a21\u5f0f\uff0c\u91c7\u7528\u7ecf\u5178\u7684\u4e8b\u4ef6\u9a71\u52a8CAN\u901a\u4fe1\u3002</p> </li> </ul> <ul> <li> <p>Automatic Bus-Off Management = Disable</p> <p>\u7981\u7528\u81ea\u52a8\u603b\u7ebf\u5173\u95ed\u6062\u590d\uff0c\u9700\u8f6f\u4ef6\u624b\u52a8\u5904\u7406\u603b\u7ebf\u9519\u8bef\uff08\u5982\u8c03\u7528<code>CAN_RecoveryFromBusOff()</code>\uff09\u3002</p> </li> </ul> <ul> <li>Automatic Wake-Up Mode = Disable    \u7981\u7528\u81ea\u52a8\u5524\u9192\u6a21\u5f0f\u3002</li> </ul> <ul> <li> <p>Automatic Retransmission = Disable</p> <p>\u7981\u7528 \u975e\u81ea\u52a8\u91cd\u4f20\u00a0\uff0c\u53d1\u9001\u5931\u8d25\u65f6\u9700\u5e94\u7528\u5c42\u5904\u7406\u91cd\u53d1\u903b\u8f91\uff0c\u9002\u7528\u4e8e\u4e25\u683c\u65f6\u5e8f\u63a7\u5236\u573a\u666f\uff08\u5982\u5b9e\u65f6\u7cfb\u7edf\uff09\u3002</p> </li> </ul> <ul> <li> <p>Receive FIFO Locked Mode = Disable</p> <p>\u63a5\u6536FIFO\u6ea2\u51fa\u65f6\u65b0\u6570\u636e\u8986\u76d6\u65e7\u6570\u636e\uff0c\u800c\u975e\u9501\u5b9aFIFO\u3002</p> </li> </ul> <ul> <li> <p>Transmit FIFO Priority = Disable</p> <p>\u53d1\u9001\u4f18\u5148\u7ea7\u7531\u62a5\u6587\u6807\u8bc6\u7b26\uff08ID\uff09\u51b3\u5b9a\uff0c\u800c\u975eFIFO\u987a\u5e8f\u3002</p> </li> </ul> <p>Danger</p> <p>\u6ce8\u610f\uff0cAutomatic Retransmission \u914d\u7f6e\u7684\u662f\u975e\u81ea\u52a8\u91cd\u4f20\u6a21\u5f0f\uff0c\u8be6\u60c5\u89c1CAN\u521d\u59cb\u5316\u7ed3\u6784\u4f53\u6ce8\u91ca\u3002</p>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1242","title":"12.4.2 \u8fc7\u6ee4\u5668\u521d\u59cb\u5316","text":"<p>\u7531\u4e8eSTM32CubeMX\u5e76\u6ca1\u6709\u63d0\u4f9b\u8fc7\u6ee4\u5668\u7684\u521d\u59cb\u5316\u914d\u7f6e\uff0c\u9700\u8981\u6211\u4eec\u624b\u52a8\u6dfb\u52a0\u3002</p> <p>\u5728\u751f\u6210\u7684<code>can.c</code>\u6587\u4ef6\u4e2d\uff0c\u6dfb\u52a0\u8fc7\u6ee4\u5668\u914d\u7f6e\u90e8\u5206\uff0c\u6ce8\u610f\u52a0\u7684\u4f4d\u7f6e\u9632\u6b62\u4e0b\u6b21\u751f\u6210\u4ee3\u7801\u88ab\u8986\u76d6\uff0c\u6b64\u65f6\u8fc7\u6ee4\u5668\u4f1a\u901a\u8fc7\u6240\u6709ID\uff0c\u66f4\u8be6\u7ec6\u7684\u914d\u7f6e\u4f1a\u5728\u4ee3\u7801\u90e8\u5206\u4f7f\u7528\u3002</p> C<pre><code>/* CAN init function */\nvoid MX_CAN_Init(void) {\n\n    /* USER CODE BEGIN CAN_Init 0 */\n\n    /* USER CODE END CAN_Init 0 */\n\n    /* USER CODE BEGIN CAN_Init 1 */\n\n    /* USER CODE END CAN_Init 1 */\n    hcan.Instance = CAN1;\n    hcan.Init.Prescaler = 12;\n    hcan.Init.Mode = CAN_MODE_LOOPBACK;\n    hcan.Init.SyncJumpWidth = CAN_SJW_2TQ;\n    hcan.Init.TimeSeg1 = CAN_BS1_2TQ;\n    hcan.Init.TimeSeg2 = CAN_BS2_3TQ;\n    hcan.Init.TimeTriggeredMode = DISABLE;\n    hcan.Init.AutoBusOff = DISABLE;\n    hcan.Init.AutoWakeUp = DISABLE;\n    hcan.Init.AutoRetransmission = DISABLE;\n    hcan.Init.ReceiveFifoLocked = DISABLE;\n    hcan.Init.TransmitFifoPriority = DISABLE;\n    if (HAL_CAN_Init(&amp;hcan) != HAL_OK) {\n        Error_Handler();\n    }\n    /* USER CODE BEGIN CAN_Init 2 */\n    // \u542f\u7528CAN\u529f\u80fd\u2b50\n    HAL_CAN_Start(&amp;hcan);\n    // \u8fc7\u6ee4\u5668\u7ec4\uff0c\u5355CAN\u53d6\u503c\u8303\u56f40~13\n    canFilter.FilterBank = 0;\n    // \u8fc7\u6ee4\u5668\u6807\u8bc6\u7b26\u9ad816\u4f4d\n    canFilter.FilterIdHigh = 0x0000;\n    // \u8fc7\u6ee4\u5668\u6807\u8bc6\u7b26\u4f4e16\u4f4d\n    canFilter.FilterIdLow = 0x0000;\n    // \u8fc7\u6ee4\u5668\u63a9\u7801\u53f7\u6216\u6807\u8bc6\u53f7\u9ad816\u4f4d\n    canFilter.FilterMaskIdHigh = 0x0000;\n    // \u8fc7\u6ee4\u5668\u63a9\u7801\u53f7\u6216\u6807\u8bc6\u53f7\u4f4e16\u4f4d\n    canFilter.FilterMaskIdLow = 0x0000;\n    // \u8fc7\u6ee4\u5668\u5b57\u5bbd\n    canFilter.FilterScale = CAN_FILTERSCALE_32BIT;\n    // \u8fc7\u6ee4\u5668\u5de5\u4f5c\u6a21\u5f0f\n    canFilter.FilterMode = CAN_FILTERMODE_IDMASK;\n//    canFilter.SlaveStartFilterBank = x;  // \u53ccCAN\u65f6\u4eceCAN\u9009\u62e9\u8fc7\u6ee4\u5668\u7ec4\uff0c\u5355\u4e2aCAN\u6b64\u53c2\u6570\u65e0\u610f\u4e49\n    // \u62a5\u6587ID\u5b58\u5728FIFO0\u8fd8\u662fFIFO1\n    canFilter.FilterFIFOAssignment = CAN_FILTER_FIFO0;\n    // \u6fc0\u6d3b\u8fc7\u6ee4\u5668\n    canFilter.FilterActivation = CAN_FILTER_ENABLE;\n    if (HAL_CAN_ConfigFilter(&amp;hcan, &amp;canFilter) != HAL_OK) {\n        Error_Handler();\n    }\n\n    /* USER CODE END CAN_Init 2 */\n\n}\n</code></pre>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#125-can","title":"12.5 CAN\u5b9e\u6218","text":""},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1251","title":"12.5.1 \u5355\u8bbe\u5907\u73af\u56de\u6d4b\u8bd5","text":"<p>\u4fee\u6539\u5de5\u4f5c\u6a21\u5f0f\u4e3a\u73af\u56de\u6d4b\u8bd5\u6a21\u5f0f\uff1a</p> <p></p> <p>\u6dfb\u52a0\u8fc7\u6ee4\u5668\u914d\u7f6e(\u548c\u4e0a\u4e00\u8282\u4e00\u6837\uff0c\u4e0d\u518d\u5c55\u793a)\u3002</p> <p>\u5c01\u88c5CAN\u53d1\u9001\u548c\u63a5\u6536\u51fd\u6570\u9a71\u52a8\uff0c\u53ef\u4ee5\u5355\u72ec\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u518d<code>can.c</code>\u4e2d\u6dfb\u52a0\uff0c\u6211\u9009\u62e9\u524d\u8005\uff1a</p> C<pre><code>#include \"can_fd.h\"\n\n/**\n * @brief \u53d1\u9001\u6d88\u606f\n *\n * @param ID \u62a5\u6587ID\n * @param Length \u6d88\u606f\u957f\u5ea6(0~8)\n * @param pData \u6570\u636e\u6307\u9488\uff0c\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u6570\u7ec4\n * @retval 1:\u53d1\u9001\u6210\u529f; 0:\u53d1\u9001\u5931\u8d25; -1:Length\u8fc7\u5927\n * */\nuint8_t CAN_FD_SendMessage(uint32_t ID, uint8_t Length, uint8_t* pData) {\n    /* \u521d\u59cb\u5316\u6d88\u606f\u5934 */\n    if (Length &gt; 8) {\n        return -1;\n    }\n    /* \u521d\u59cb\u5316\u6d88\u606f\u5934 */\n    CAN_TxHeaderTypeDef TxMessage = {\n            // \u6807\u51c6\u683c\u5f0fID\n            .StdId = ID,\n            // \u6269\u5c55\u683c\u5f0fID\n            .ExtId = 0,\n            // \u8fdc\u7a0b\u8bf7\u6c42\u4f4d\uff0c\u533a\u5206\u6570\u636e\u5e27(0)\u548c\u9065\u63a7\u5e27(1)\n            .RTR = CAN_RTR_DATA,\n            // \u6269\u5c55\u6807\u5fd7\u4f4d\uff0c\u533a\u5206\u6807\u51c6\u683c\u5f0f(0)\u548c\u6269\u5c55\u683c\u5f0f(1)\uff0c\u9009\u7528\u4e00\u81f4\u683c\u5f0f\u5219\u53e6\u4e00\u79cd\u683c\u5f0f\u7684ID\u65e0\u6548\n            .IDE = CAN_ID_STD,\n            // \u6570\u636e\u957f\u5ea6\n            .DLC = Length,\n            .TransmitGlobalTime = DISABLE\n    };\n    /* \u4f20\u8f93\u6570\u636e */\n    // \u63a5\u6536\u4f7f\u7528\u7684\u90ae\u7bb1\u53f7\n    uint32_t TxMailbox;\n    if (HAL_CAN_AddTxMessage(&amp;hcan, &amp;TxMessage, pData, &amp;TxMailbox) == HAL_OK) {\n        return 1;\n    } else {\n        return 0;\n    }\n    /* \u7b49\u5f85\u6570\u636e\u4f20\u8f93\u5b8c\u6210 */\n//    uint32_t timeout = 0;\n//    while (HAL_CAN_IsTxMessagePending(&amp;hcan, TxMailbox) != 0) {\n//        // \u8d85\u65f6\u9000\u51fa\n//        timeout ++;\n//        if (timeout &lt; 10000) {\n//            break;\n//        }\n//    }\n}\n\n/**\n * @brief \u63a5\u6536FIFO0\u90ae\u7bb1\u975e\u7a7a\u6807\u5fd7\n *\n * @retval 1:\u90ae\u7bb1\u975e\u5168\u7a7a; 0:\u90ae\u7bb1\u5168\u7a7a\n * */\nuint8_t CAN_FD_ReceiveFlag(void) {\n    if (HAL_CAN_GetRxFifoFillLevel(&amp;hcan, CAN_RX_FIFO0) &gt; 0) {\n        return 1;\n    } else {\n        return 0;\n    }\n}\n\n/**\n * @brief \u63a5\u6536\u6d88\u606f\n *\n * @param pID \u5c06\u6536\u5230\u7684\u6d88\u606f\u7684\u62a5\u6587ID\u5b58\u4e8e\u6b64\u53d8\u91cf\n * @param pLength \u5c06\u6536\u5230\u7684\u6d88\u606f\u7684\u6570\u636e\u957f\u5ea6\u5b58\u4e8e\u6b64\u53d8\u91cf\n * @param pData \u5c06\u6536\u5230\u7684\u6d88\u606f\u7684\u6570\u636e\u5b58\u4e8e\u6b64\u53d8\u91cf\n * @retval \u65e0\n * */\nuint8_t CAN_FD_ReceiveMessage(uint32_t* pID, uint8_t* pLength, uint8_t* pData) {\n    CAN_RxHeaderTypeDef RxMessage;\n    /* \u63a5\u6536\u6570\u636e */\n    if (HAL_CAN_GetRxMessage(&amp;hcan, CAN_RX_FIFO0, &amp;RxMessage, pData) != HAL_OK) {\n        return 0;\n    }\n    // \u5224\u65ad\u662f\u6807\u51c6\u683c\u5f0f\u8fd8\u662f\u6269\u5c55\u683c\u5f0f\n    if (RxMessage.IDE == CAN_ID_STD) {\n        *pID = RxMessage.StdId;\n    } else {\n        *pID = RxMessage.ExtId;\n    }\n    if (RxMessage.RTR == CAN_RTR_DATA) {\n        *pLength = RxMessage.DLC;\n    }\n    return 1;\n}\n</code></pre> <p>\u4e3b\u51fd\u6570\u4e2d\uff0c\u5b8c\u6210\u81ea\u53d1\u81ea\u6536\u7a0b\u5e8f\uff0c\u80fd\u591f\u6b63\u5e38\u63a5\u6536\u5373\u53ef\u3002\u6b64\u5904\uff0c\u6211\u4f7f\u7528\u4e86FreeRTOS\uff0c\u82e5\u4f7f\u7528\u88f8\u673a\u5f00\u53d1\uff0c\u628a\u5faa\u73af\u4e2d\u7684\u7a0b\u5e8f\u6539\u5230<code>main.c</code>\u5faa\u73af\uff0c\u53d8\u91cf\u5b9a\u4e49\u653e\u5faa\u73af\u5916\u9762\uff0c<code>vTaskDelay</code>\u6539\u4e3a<code>HAL_Delay</code>\u5373\u53ef\uff0c\u6709\u80fd\u529b\u7684\u53ef\u4ee5\u52a0\u6309\u952e\u63a7\u5236\uff0c\u800c\u975e\u5b9a\u65f6\u5faa\u73af\u53d1\u9001\u3002</p> C<pre><code>// CAN_FD\u4efb\u52a1\nvoid CAN_FdTask(void *argument) {\n    /* \u53d1\u9001\u90e8\u5206\u521d\u59cb\u5316\u53d8\u91cf */\n    uint32_t TxID = 0x123;\n    uint8_t TxLength = 4;\n    uint8_t TxData[] = {0x32, 0xA8, 0x44, 0x71};\n    /* \u63a5\u6536\u90e8\u5206\u521d\u59cb\u5316\u53d8\u91cf */\n    uint32_t RxID = 0;\n    uint8_t RxLength = 0;\n    uint8_t RxData[8] = {0};\n    /* \u663e\u793a\u53d1\u9001/\u5faa\u73af\u6b21\u6570 */\n    uint32_t num = 0;\n    while (1) {\n        /* \u53d1\u9001\u6d88\u606f */\n        uint8_t status = CAN_FD_SendMessage(TxID, TxLength, TxData);\n        OLED_ShowNum(0, 0, status,1, 8);\n        vTaskDelay(100);\n        /* \u63a5\u6536\u5e76\u663e\u793a\u6d88\u606f */\n        status = CAN_FD_ReceiveMessage(&amp;RxID, &amp;RxLength, RxData);\n        OLED_ShowNum(20, 0, status,1, 8);\n        OLED_ShowNum(0, 1, RxID, 4, 8);\n        OLED_ShowNum(20, 1, RxLength, 2, 8);\n        OLED_ShowNum(40, 1, RxData[0], 3, 8);\n        OLED_ShowNum(60, 1, RxData[1], 3, 8);\n        OLED_ShowNum(80, 1, RxData[2], 3, 8);\n        OLED_ShowNum(100, 1, RxData[3], 3, 8);\n        /* \u5faa\u73af\u8ba1\u6570 */\n        num++;\n        OLED_ShowNum(0, 2, num, 3, 16);\n        vTaskDelay(1500);\n    }\n}\n</code></pre>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1252","title":"12.5.2 \u591a\u8bbe\u5907\u4e92\u76f8\u901a\u4fe1","text":"<p>CAN\u5de5\u4f5c\u6a21\u5f0f\u6539\u4e3a\u6b63\u5e38\u6a21\u5f0f\u5373\u53ef\u3002</p> <p></p> <p>\u5269\u4e0b\u7684\u5c31\u662f\u5c06\u786c\u4ef6\u8fde\u63a5\u597d\uff0c\u4e00\u5b9a\u6ce8\u610fSTM32\u82af\u7247\u53ea\u96c6\u6210\u4e86CAN\u63a7\u5236\u5668\uff0c\u5e76\u6ca1\u6709CAN\u6536\u53d1\u5668(\u5c06\u903b\u8f91\u7535\u5e73\u8f6c\u5316\u4e3a\u5dee\u5206\u4fe1\u53f7)\uff0c\u82e5\u4f7f\u7528\u6700\u65b0\u7cfb\u7edf\u677f\u53ef\u4ee5\u53c2\u8003\u6c5f\u79d1\u5927\u7684\u63a5\u7ebf\u56fe\uff1a</p> <p></p> <p>\u6216\u8005\u53ef\u4ee5\u81ea\u5df1\u8bbe\u8ba1\u3001\u8d2d\u4e70\u96c6\u6210CAN\u6536\u53d1\u5668\u7684\u5f00\u53d1\u677f\u3002</p>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1253","title":"12.5.3 \u6570\u636e/\u9065\u63a7\u5e27+\u6807\u51c6/\u6269\u5c55\u683c\u5f0f","text":"<p>\u4fee\u6539CAN_FD\u6536\u53d1\u51fd\u6570</p> C<pre><code>/**\n * @brief \u53d1\u9001\u6d88\u606f\n *\n * @param ID \u62a5\u6587ID\n * @param TxMessage Tx\u6d88\u606f\u5934\u7ed3\u6784\u4f53 CAN_TxHeaderTypeDef\n * @param pData \u6570\u636e\u6307\u9488\uff0c\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u6570\u7ec4\n * @retval 1:\u53d1\u9001\u6210\u529f; 0:\u53d1\u9001\u5931\u8d25; -1:Length\u8fc7\u5927\n * */\nuint8_t CAN_FD_SendMessage(CAN_TxHeaderTypeDef* TxMessage, uint8_t* pData) {\n    /* \u4f20\u8f93\u6570\u636e */\n    // \u63a5\u6536\u4f7f\u7528\u7684\u90ae\u7bb1\u53f7\n    uint32_t TxMailbox;\n    if (HAL_CAN_AddTxMessage(&amp;hcan, TxMessage, pData, &amp;TxMailbox) == HAL_OK) {\n        return 1;\n    } else {\n        return 0;\n    }\n    /* \u7b49\u5f85\u6570\u636e\u4f20\u8f93\u5b8c\u6210 */\n//    uint32_t timeout = 0;\n//    while (HAL_CAN_IsTxMessagePending(&amp;hcan, TxMailbox) != 0) {\n//        // \u8d85\u65f6\u9000\u51fa\n//        timeout ++;\n//        if (timeout &lt; 10000) {\n//            break;\n//        }\n//    }\n}\n\n/**\n * @brief \u63a5\u6536\u6d88\u606f\n *\n * @param RxMessage Rx\u6d88\u606f\u5934\u7ed3\u6784\u4f53 CAN_RxHeaderTypeDef\n * @param pData \u5c06\u6536\u5230\u7684\u6d88\u606f\u7684\u6570\u636e\u5b58\u4e8e\u6b64\u53d8\u91cf\n * @retval \u65e0\n * */\nuint8_t CAN_FD_ReceiveMessage(CAN_RxHeaderTypeDef* RxMessage, uint8_t* pData) {\n    /* \u63a5\u6536\u6570\u636e */\n    if (HAL_CAN_GetRxMessage(&amp;hcan, CAN_RX_FIFO0, RxMessage, pData) != HAL_OK) {\n        return 0;\n    }\n    return 1;\n}\n</code></pre> <p>\u4e3b\u51fd\u6570\u4e2d\u5b9a\u4e49\u6d88\u606f\u5934\u7ed3\u6784\u4f53\uff0c\u53ef\u4ee5\u6839\u636e<code>IDE</code>\u548c<code>RTR</code>\u6392\u5217\u7ec4\u5408\uff0c\u53d1\u9001\u6570\u636e/\u9065\u63a7\u5e27+\u6807\u51c6/\u6269\u5c55\u683c\u5f0f\u3002</p> C<pre><code>// CAN_FD\u4efb\u52a1\nvoid CAN_FdTask(void *argument) {\n    /* \u53d1\u9001\u90e8\u5206\u521d\u59cb\u5316\u53d8\u91cf */\n    CAN_TxHeaderTypeDef TxMessage = {\n            .StdId = 0x123,\n            .ExtId = 0x000,\n            .IDE = CAN_ID_STD, //\u6216CAN_ID_EXT\n            .RTR = CAN_RTR_DATA, //\u6216CAN_RTR_REMOTE\n            .DLC = 4,\n            .TransmitGlobalTime = DISABLE,\n    };\n    uint8_t TxData[] = {0x12, 0x98, 0x24, 0x51};\n    /* \u63a5\u6536\u90e8\u5206\u521d\u59cb\u5316\u53d8\u91cf */\n    CAN_RxHeaderTypeDef RxMessage = {0};\n    uint8_t RxData[8] = {0};\n    /* \u663e\u793a\u53d1\u9001/\u5faa\u73af\u6b21\u6570 */\n    uint32_t num = 0;\n    while (1) {\n        /* \u53d1\u9001\u6d88\u606f */\n        uint8_t status = CAN_FD_SendMessage(&amp;TxMessage, TxData);\n        OLED_ShowNum(0, 0, status,1, 8);\n        vTaskDelay(100);\n        /* \u63a5\u6536\u5e76\u663e\u793a\u6d88\u606f */\n        status = CAN_FD_ReceiveMessage(&amp;RxMessage, RxData);\n        OLED_ShowNum(20, 0, status,1, 8);\n        OLED_ShowNum(0, 1, RxMessage.StdId, 4, 8);\n        OLED_ShowNum(20, 1, RxMessage.DLC, 2, 8);\n        OLED_ShowNum(40, 1, RxData[0], 3, 8);\n        OLED_ShowNum(60, 1, RxData[1], 3, 8);\n        OLED_ShowNum(80, 1, RxData[2], 3, 8);\n        OLED_ShowNum(100, 1, RxData[3], 3, 8);\n        /* \u5faa\u73af\u8ba1\u6570 */\n        num++;\n        OLED_ShowNum(0, 2, num, 3, 16);\n        vTaskDelay(1500);\n    }\n}\n</code></pre>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1254","title":"12.5.4 \u6807\u8bc6\u8fc7\u6ee4\u5668\u4f7f\u7528","text":"<p>\u6839\u636e\u6c5f\u79d1\u5927PPT\u4e2d\u7684\u8fc7\u6ee4\u5668\u793a\u4f8b\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u9a8c\u8bc1\u8fd9\u4e9b\u8fc7\u6ee4\u5668\u529f\u80fd\uff1a</p> <p></p> <p>\u9700\u6ce8\u610f\uff0c\u4f7f\u7528\u6269\u5c55\u683c\u5f0f\u548c\u9065\u63a7\u5e27\u65f6\u9700\u8981\u914d\u7f6e<code>RTR</code>\u548c<code>IDE</code>\u4f4d\uff0c\u5373\u9065\u63a7\u5e27\u9700\u8981<code>ID | 0x10</code>\uff0c\u6269\u5c55\u683c\u5f0f\u9700\u8981<code>ID\u00a0|\u00a00x08</code>\u3002</p> <p>\u4f7f\u7528\u8fc7\u6ee4\u5668\u4fee\u6539<code>can.c</code>\u7684\u8fc7\u6ee4\u5668\u914d\u7f6e\u5373\u53ef\uff1a</p> C<pre><code>/* USER CODE BEGIN CAN_Init 2 */\n// \u542f\u7528CAN\u529f\u80fd\u2b50\nHAL_CAN_Start(&amp;hcan);\n// \u8fc7\u6ee4\u5668\u7ec4\uff0c\u5355CAN\u53d6\u503c\u8303\u56f40~13\ncanFilter.FilterBank = 0;\n// \u8fc7\u6ee4\u5668\u6807\u8bc6\u7b26\u9ad816\u4f4d\ncanFilter.FilterIdHigh = 0x0000;\n// \u8fc7\u6ee4\u5668\u6807\u8bc6\u7b26\u4f4e16\u4f4d\ncanFilter.FilterIdLow = 0x0000;\n// \u8fc7\u6ee4\u5668\u63a9\u7801\u53f7\u6216\u6807\u8bc6\u53f7\u9ad816\u4f4d\ncanFilter.FilterMaskIdHigh = 0x0000;\n// \u8fc7\u6ee4\u5668\u63a9\u7801\u53f7\u6216\u6807\u8bc6\u53f7\u4f4e16\u4f4d\ncanFilter.FilterMaskIdLow = 0x0000;\n// \u8fc7\u6ee4\u5668\u5b57\u5bbd\ncanFilter.FilterScale = CAN_FILTERSCALE_32BIT;\n// \u8fc7\u6ee4\u5668\u5de5\u4f5c\u6a21\u5f0f\ncanFilter.FilterMode = CAN_FILTERMODE_IDMASK;\n//    canFilter.SlaveStartFilterBank = x;  // \u53ccCAN\u65f6\u4eceCAN\u9009\u62e9\u8fc7\u6ee4\u5668\u7ec4\uff0c\u5355\u4e2aCAN\u6b64\u53c2\u6570\u65e0\u610f\u4e49\n// \u62a5\u6587ID\u5b58\u5728FIFO0\u8fd8\u662fFIFO1\ncanFilter.FilterFIFOAssignment = CAN_FILTER_FIFO0;\n// \u6fc0\u6d3b\u8fc7\u6ee4\u5668\ncanFilter.FilterActivation = CAN_FILTER_ENABLE;\nif (HAL_CAN_ConfigFilter(&amp;hcan, &amp;canFilter) != HAL_OK) {\n    Error_Handler();\n}\n\n/* USER CODE END CAN_Init 2 */\n</code></pre> <p><code>FilterIdHigh</code>\u548c<code>FilterIdLow</code>\u4f4dR1\u5bc4\u5b58\u5668\uff0c<code>FilterMaskIdHigh</code>\u548c<code>FilterMaskIdLow</code>\u4e3aR2\u5bc4\u5b58\u5668\u3002</p>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1255","title":"12.5.5 \u6536\u53d1\u7b56\u7565","text":"<p>\u2460\u53d1\u9001\u90e8\u5206</p> <ol> <li>\u5b9a\u65f6\u53d1\u9001\uff08\u914d\u7f6e\u5b9a\u65f6\u5668\uff0c\u5b9a\u65f6\u7ed3\u675f\u4e2d\u65ad\u7f6e\u6807\u5fd7\u4f4d\uff0c\u4e3b\u5faa\u73af\u68c0\u67e5\u6807\u5fd7\u4f4d\u53d1\u9001\u6570\u636e\u5e27\u6d88\u606f\uff09</li> <li>\u89e6\u53d1\u53d1\u9001\uff08\u6309\u952e\u6216\u5176\u4ed6\u89e6\u53d1\u6e90\u88ab\u89e6\u53d1\uff0c\u7f6e\u6807\u5fd7\u4f4d\uff0c\u4e3b\u5faa\u73af\u68c0\u67e5\u6807\u5fd7\u4f4d\u53d1\u9001\u6570\u636e\u5e27\u6d88\u606f\uff09</li> <li>\u8bf7\u6c42\u53d1\u9001\uff08\u8bf7\u6c42\u65b9\u53d1\u9001\u9065\u63a7\u5e27\uff0c\u53d1\u9001\u65b9\u6536\u5230\u6307\u5b9aID\u7684\u9065\u63a7\u5e27\uff0c\u53d1\u9001\u6570\u636e\u5e27\u6d88\u606f\uff09</li> </ol> <p>\u2461\u63a5\u6536\u90e8\u5206</p> <ol> <li>\u8bf7\u6c42\u53d1\u9001\uff08\u53d1\u9001\u9065\u63a7\u5e27\uff0c\u8bf7\u6c42\u5bf9\u65b9\u53d1\u9001\u6570\u636e\u5e27\u6d88\u606f\uff09</li> <li>\u8f6e\u8be2\u63a5\u6536</li> <li>\u4e2d\u65ad\u63a5\u6536</li> </ol>"},{"location":"study/STM32/12.CAN%E9%80%9A%E4%BF%A1/#1256","title":"12.5.6 \u4e2d\u65ad\u4f7f\u7528","text":"<ol> <li>USB high priority or CAN TX interrupts\uff1a\u53d1\u9001\u4e2d\u65ad</li> <li>USB low priority or CAN RX0 interrupts\uff1aFIFO0\u4e2d\u65ad</li> <li>CAN RX1 interrupt\uff1aFIFO1\u4e2d\u65ad</li> <li>CAN SCE interrupt\uff1a\u9519\u8bef\u4e2d\u65ad</li> </ol>"},{"location":"study/STM32/2.EXTI/","title":"\u7b2c\u4e8c\u7ae0 EXTI","text":""},{"location":"study/STM32/2.EXTI/#21-exti","title":"2.1 EXTI\u5916\u8bbe\u7b80\u4ecb","text":"<ul> <li>EXTI\u53ef\u4ee5\u76d1\u6d4b\u6307\u5b9aGPIO\u53e3\u7684\u7535\u5e73\u4fe1\u53f7\uff0c\u5f53\u5176\u6307\u5b9a\u7684GPIO\u53e3\u4ea7\u751f\u7535\u5e73\u53d8\u5316\u65f6\uff0cEXTI\u5c06\u7acb\u5373\u5411NVIC\u53d1\u51fa\u4e2d\u65ad\u7533\u8bf7\uff0c\u7ecf\u8fc7NVIC\u88c1\u51b3\u540e\u5373\u53ef\u4e2d\u65adCPU\u4e3b\u7a0b\u5e8f\uff0c\u4f7fCPU\u6267\u884cEXTI\u5bf9\u5e94\u7684\u4e2d\u65ad\u7a0b\u5e8f</li> <li>\u652f\u6301\u7684\u89e6\u53d1\u65b9\u5f0f\uff1a\u4e0a\u5347\u6cbf/\u4e0b\u964d\u6cbf/\u53cc\u8fb9\u6cbf/\u8f6f\u4ef6\u89e6\u53d1</li> <li>\u652f\u6301\u7684GPIO\u53e3\uff1a\u6240\u6709GPIO\u53e3\uff0c\u4f46\u76f8\u540c\u7684Pin\u4e0d\u80fd\u540c\u65f6\u89e6\u53d1\u4e2d\u65ad</li> <li>\u901a\u9053\u6570\uff1a16\u4e2aGPIO_Pin\uff0c\u5916\u52a0PVD\u8f93\u51fa\u3001RTC\u95f9\u949f\u3001USB\u5524\u9192\u3001\u4ee5\u592a\u7f51\u5524\u9192</li> <li>\u89e6\u53d1\u54cd\u5e94\u65b9\u5f0f\uff1a\u4e2d\u65ad\u54cd\u5e94/\u4e8b\u4ef6\u54cd\u5e94</li> </ul>"},{"location":"study/STM32/2.EXTI/#22","title":"2.2 \u4e2d\u65ad\u4e8b\u4ef6\u4e0e\u4e2d\u65ad\u7ebf","text":"\u4e2d\u65ad/\u4e8b\u4ef6\u7ebf \u8f93\u5165\u6e90 EXTI0 PX0(X\u53ef\u4e3aA,B,C,D,E,F,G,H,I) EXTI1 PX1(X\u53ef\u4e3aA,B,C,D,E,F,G,H,I) EXTI2 PX2(X\u53ef\u4e3aA,B,C,D,E,F,G,H,I) EXTI3 PX3(X\u53ef\u4e3aA,B,C,D,E,F,G,H,I) EXTI4 PX4(X\u53ef\u4e3aA,B,C,D,E,F,G,H,I) EXTI5 PX5(X\u53ef\u4e3aA,B,C,D,E,F,G,H,I) EXTI6 PX6(X\u53ef\u4e3aA,B,C,D,E,F,G,H,I) EXTI7 PX7(X\u53ef\u4e3aA,B,C,D,E,F,G,H,I) EXTI8 PX8(X\u53ef\u4e3aA,B,C,D,E,F,G,H,I) EXTI9 PX9(X\u53ef\u4e3aA,B,C,D,E,F,G,H,I) EXTI10 PX10(X\u53ef\u4e3aA,B,C,D,E,F,G,H,I) EXTI11 PX11(X\u53ef\u4e3aA,B,C,D,E,F,G,H,I) EXTI12 PX12(X\u53ef\u4e3aA,B,C,D,E,F,G,H,I) EXTI13 PX13(X\u53ef\u4e3aA,B,C,D,E,F,G,H,I) EXTI14 PX14(X\u53ef\u4e3aA,B,C,D,E,F,G,H,I) EXTI15 PX15(X\u53ef\u4e3aA,B,C,D,E,F,G,H,I) EXTI16 PVD\u8f93\u51fa EXTI17 RTC\u95f9\u949f\u4e8b\u4ef6 EXTI18 USB\u5524\u9192\u4e8b\u4ef6 EXTI19 \u4ee5\u592a\u7f51\u5524\u9192\u4e8b\u4ef6\uff08\u53ea\u9002\u7528\u4e92\u8054\u578b\uff09 <p>AFIO\u5f15\u811a\u590d\u7528\uff0c\u901a\u8fc7\u5f15\u811a\u7f16\u53f7\u76f4\u63a5\u6620\u5c04\uff0c\u4e0d\u8bba\u662f<code>A0</code>\u8fd8\u662f<code>B0</code>\u5747\u4f7f\u7528\u4e00\u4e2aEXTI0\u4e8b\u4ef6\u7ebf </p> <p></p>"},{"location":"study/STM32/2.EXTI/#23","title":"2.3 \u4e2d\u65ad\u76f8\u5173\u6982\u5ff5","text":"<p>\u4e2d\u65ad\uff1a\u5728\u4e3b\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u51fa\u73b0\u4e86\u7279\u5b9a\u7684\u4e2d\u65ad\u89e6\u53d1\u6761\u4ef6\uff08\u4e2d\u65ad\u6e90\uff09\uff0c\u4f7f\u5f97CPU\u6682\u505c\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\uff0c\u8f6c\u800c\u53bb\u5904\u7406\u4e2d\u65ad\u7a0b\u5e8f\uff0c\u5904\u7406\u5b8c\u6210\u540e\u53c8\u8fd4\u56de\u539f\u6765\u88ab\u6682\u505c\u7684\u4f4d\u7f6e\u7ee7\u7eed\u8fd0\u884c</p> <p>\u4e2d\u65ad\u4f18\u5148\u7ea7\uff1a\u5f53\u6709\u591a\u4e2a\u4e2d\u65ad\u6e90\u540c\u65f6\u7533\u8bf7\u4e2d\u65ad\u65f6\uff0cCPU\u4f1a\u6839\u636e\u4e2d\u65ad\u6e90\u7684\u8f7b\u91cd\u7f13\u6025\u8fdb\u884c\u88c1\u51b3\uff0c\u4f18\u5148\u54cd\u5e94\u66f4\u52a0\u7d27\u6025\u7684\u4e2d\u65ad\u6e90</p> <p>\u4e2d\u65ad\u5d4c\u5957\uff1a\u5f53\u4e00\u4e2a\u4e2d\u65ad\u7a0b\u5e8f\u6b63\u5728\u8fd0\u884c\u65f6\uff0c\u53c8\u6709\u65b0\u7684\u66f4\u9ad8\u4f18\u5148\u7ea7\u7684\u4e2d\u65ad\u6e90\u7533\u8bf7\u4e2d\u65ad\uff0cCPU\u518d\u6b21\u6682\u505c\u5f53\u524d\u4e2d\u65ad\u7a0b\u5e8f\uff0c\u8f6c\u800c\u53bb\u5904\u7406\u65b0\u7684\u4e2d\u65ad\u7a0b\u5e8f\uff0c\u5904\u7406\u5b8c\u6210\u540e\u4f9d\u6b21\u8fdb\u884c\u8fd4\u56de</p> <p></p>"},{"location":"study/STM32/2.EXTI/#24-nvic","title":"2.4 NVIC\u4f18\u5148\u7ea7\u5206\u7ec4","text":"<ul> <li>ARM Cortex-M \u4f7f\u7528\u4e86 8 \u4f4d\u5bbd\u7684\u5bc4\u5b58\u5668\u6765\u914d\u7f6e\u4e2d\u65ad\u7684\u4f18\u5148\u7b49\u7ea7\uff0c\u8fd9\u4e2a\u5bc4\u5b58\u5668\u5c31\u662f\u4e2d\u65ad\u4f18\u5148\u7ea7\u914d\u7f6e\u5bc4\u5b58\u5668\u3002\u4f46STM32\uff0c\u53ea\u7528\u4e86\u4e2d\u65ad\u4f18\u5148\u7ea7\u914d\u7f6e\u5bc4\u5b58\u5668\u7684\u9ad84\u4f4d [7 : 4]\uff0c\u6240\u4ee5STM32\u63d0\u4f9b\u4e86\u6700\u592716\u7ea7\u7684\u4e2d\u65ad\u4f18\u5148\u7b49\u7ea7\u3002</li> <li>STM32 \u7684\u4e2d\u65ad\u4f18\u5148\u7ea7\u53ef\u4ee5\u5206\u4e3a\u62a2\u5360\u4f18\u5148\u7ea7\u548c\u5b50\u4f18\u5148\u7ea7\uff0c \u62a2\u5360\u4f18\u5148\u7ea7 \u9ad8\u7684\u53ef\u4ee5\u4e2d\u65ad\u5d4c\u5957\uff0c \u5b50\u4f18\u5148\u7ea7 \u9ad8\u7684\u53ef\u4ee5\u4f18\u5148\u6392\u961f\uff0c\u62a2\u5360\u4f18\u5148\u7ea7\u548c\u54cd\u5e94\u4f18\u5148\u7ea7\u5747\u76f8\u540c\u7684\u6309\u4e2d\u65ad\u53f7\u6392\u961f\u3002</li> <li>\u4e2d\u65ad\u4f18\u5148\u7ea7\u6570\u503c\u8d8a\u5c0f\u8d8a\u4f18\u5148\u3002</li> </ul> \u4f18\u5148\u7ea7\u5206\u7ec4 \u62a2\u5360\u4f18\u5148\u7ea7 \u5b50\u4f18\u5148\u7ea7 \u4f18\u5148\u7ea7\u914d\u7f6e\u5bc4\u5b58\u5668\u9ad8 4 \u4f4d NVIC_PriorityGroup_0 0 \u7ea7\u62a2\u5360\u4f18\u5148\u7ea7 0-15 \u7ea7\u5b50\u4f18\u5148\u7ea7 0bit \u7528\u4e8e\u62a2\u5360\u4f18\u5148\u7ea7\uff0c4bit \u7528\u4e8e\u5b50\u4f18\u5148\u7ea7 NVIC_PriorityGroup_1 0-1 \u7ea7\u62a2\u5360\u4f18\u5148\u7ea7 0-7 \u7ea7\u5b50\u4f18\u5148\u7ea7 1bit \u7528\u4e8e\u62a2\u5360\u4f18\u5148\u7ea7\uff0c3bit \u7528\u4e8e\u5b50\u4f18\u5148\u7ea7 NVIC_PriorityGroup_2 0-3 \u7ea7\u62a2\u5360\u4f18\u5148\u7ea7 0-3 \u7ea7\u5b50\u4f18\u5148\u7ea7 2bit \u7528\u4e8e\u62a2\u5360\u4f18\u5148\u7ea7\uff0c2bit \u7528\u4e8e\u5b50\u4f18\u5148\u7ea7 NVIC_PriorityGroup_3 0-7 \u7ea7\u62a2\u5360\u4f18\u5148\u7ea7 0-1 \u7ea7\u5b50\u4f18\u5148\u7ea7 3bit \u7528\u4e8e\u62a2\u5360\u4f18\u5148\u7ea7\uff0c1bit \u7528\u4e8e\u5b50\u4f18\u5148\u7ea7 NVIC_PriorityGroup_4 0-15 \u7ea7\u62a2\u5360\u4f18\u5148\u7ea7 0 \u7ea7\u5b50\u4f18\u5148\u7ea7 4bit \u7528\u4e8e\u62a2\u5360\u4f18\u5148\u7ea7\uff0c0bit \u7528\u4e8e\u5b50\u4f18\u5148\u7ea7 <p>STM32CubeMX&gt;\u4e2d\u5bf9\u5e94 \u62a2\u5360\u4f18\u5148\u7ea7 \u548c \u5b50\u4f18\u5148\u7ea7 \u53c2\u6570\u914d\u7f6e</p> <p></p>"},{"location":"study/STM32/2.EXTI/#25-stm32cubemx","title":"2.5 STM32CubeMX\u914d\u7f6e","text":""},{"location":"study/STM32/2.EXTI/#251-sys","title":"2.5.1 SYS\u914d\u7f6e","text":""},{"location":"study/STM32/2.EXTI/#252-rcc","title":"2.5.2 RCC\u914d\u7f6e","text":""},{"location":"study/STM32/2.EXTI/#253-gpio","title":"2.5.3 GPIO\u914d\u7f6e","text":"<p>PB0\u548cPB1\u914d\u7f6e\u4e3aLED1\u3001LED2</p> <ul> <li>\u9ed8\u8ba4\u4f4e\u7535\u5e73</li> <li>PB0\u548cPB1\u5747\u914d\u7f6e\u63a8\u633d\u8f93\u51fa</li> <li>\u4e0a\u62c9\u6216\u4e0b\u62c9\u7535\u963b\u5728\u8f93\u5165\u6a21\u5f0f\u4f7f\u7528\uff0c\u8f93\u51fa\u6a21\u5f0f\u4e0d\u914d\u7f6e</li> <li>\u8f93\u51fa\u901f\u5ea6\u6309\u9700\u914d\u7f6e</li> <li>\u7528\u6237\u6807\u7b7e\uff0c\u7ed9\u5f15\u811a\u8d77\u522b\u540d\uff0c\u6309\u9700\u914d\u7f6e</li> </ul> <p></p> <p>PB6\u3001PB7\u914d\u7f6e\u4e3aKEY1\u3001KEY2</p> <ul> <li>\u8f93\u5165\u6a21\u5f0f</li> <li>\u4e0b\u62c9\u7535\u963b</li> </ul> <p></p>"},{"location":"study/STM32/2.EXTI/#254-exti","title":"2.5.4 EXTI\u914d\u7f6e","text":"<p>\u4f7f\u80fd\u4e2d\u65ad\u89e6\u53d1\uff0c\u5426\u5219\u627e\u4e0d\u5230EXTI4_IRQHandler\u7b49\u4e2d\u65ad\u51fd\u6570</p> <p></p>"},{"location":"study/STM32/2.EXTI/#255-nvic","title":"2.5.5 NVIC\u4f18\u5148\u7ea7\u914d\u7f6e","text":""},{"location":"study/STM32/2.EXTI/#26","title":"2.6 \u4ee3\u7801\u4ecb\u7ecd","text":""},{"location":"study/STM32/2.EXTI/#261","title":"2.6.1 \u4e2d\u65ad\u89e6\u53d1\u51fd\u6570\u4ecb\u7ecd","text":"<p>stm32f1xx_it.c\u6587\u4ef6\u627e\u5230\u4e2d\u65ad\u89e6\u53d1\u51fd\u6570\uff0c\u5185\u5bb9\u5982\u4e0b</p> C<pre><code>/**\n  * @brief This function handles EXTI line4 interrupt.\n  */\nvoid EXTI4_IRQHandler(void)\n{\n  /* USER CODE BEGIN EXTI4_IRQn 0 */\n\n  /* USER CODE END EXTI4_IRQn 0 */\n  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);\n  /* USER CODE BEGIN EXTI4_IRQn 1 */\n\n  /* USER CODE END EXTI4_IRQn 1 */\n}\n</code></pre> <p>HAL_GPIO_EXTI_IRQHandler\u8c03\u7528\u7684\u51fd\u6570\u5185\u5bb9\uff0c\u5982\u4e0b</p> C<pre><code>/**\n  * @brief  This function handles EXTI interrupt request.\n  * @param  GPIO_Pin: Specifies the pins connected EXTI line\n  * @retval None\n  */\nvoid HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)\n{\n  /* EXTI line interrupt detected */\n  if (__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != 0x00u)\n  {\n    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);\n    HAL_GPIO_EXTI_Callback(GPIO_Pin);\n  }\n}\n</code></pre> <p>\u5224\u65ad\u662f\u5426\u89e6\u53d1\u4e2d\u65ad\uff0c\u5373\u4e0d\u4e3a<code>0x00u</code>\u5219\u89e6\u53d1\u4e2d\u65ad</p> C<pre><code>__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != 0x00u\n</code></pre> <p>\u6e05\u9664\u89e6\u53d1\u4e2d\u65ad\u7684**\u6807\u5fd7\u4f4d**</p> C<pre><code>__HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);\n</code></pre> <p>\u8fd9\u662f\u4e00\u4e2a\u201c\u5f31\u201d\u56de\u8c03\u51fd\u6570\uff0c\u7528\u6237\u9700\u8981\u5728\u81ea\u5df1\u7684\u4ee3\u7801\u4e2d\u91cd\u5199\u51fd\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u91cd\u5199\u8fd9\u4e2a\u51fd\u6570\u5b9e\u73b0\u4e1a\u52a1</p> C<pre><code>HAL_GPIO_EXTI_Callback(GPIO_Pin);\n</code></pre>"},{"location":"study/STM32/2.EXTI/#162","title":"1.6.2 \u7f16\u5199\u56de\u8c03\u51fd\u6570","text":"<p>\u8fd9\u4e2a\u51fd\u6570\u4f4d\u7f6e\u53ef\u4ee5\u653e\u5728stm32f1xx_it.c\u6216main.c\u5747\u53ef</p> <p>\u4e00\u4e2a\u7b80\u5355\u793a\u4f8b\uff0cPB3\u4e3a\u6309\u952e1\uff0cPB6\u4e3a\u6309\u952e2\uff0cPB0\u4e3aLED\uff0c\u89e6\u53d1\u4e2d\u65ad\u53cd\u8f6c\u706f\u7684\u4eae\u706d\u3002</p> C<pre><code>void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)  \n{  \n      if (GPIO_Pin == GPIO_PIN_0)  \n      {  \n            if (GPIO_Pin == GPIO_PIN_3)\n            {\n                HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);\n            }\n            else if (GPIO_Pin == GPIO_PIN_6)\n            {\n                HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);\n            }\n      }  \n}\n</code></pre>"},{"location":"study/STM32/3.Timer%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/","title":"\u7b2c\u4e09\u7ae0 \u5b9a\u65f6\u4e2d\u65ad","text":""},{"location":"study/STM32/3.Timer%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/#31-timer","title":"3.1 Timer\u5b9a\u65f6\u5668\u7b80\u4ecb","text":"<p>\u53c2\u8003\u8d44\u6599\uff1a\u6c5f\u534f\u79d1\u6280B\u7ad9\u89c6\u9891</p>"},{"location":"study/STM32/3.Timer%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/#311","title":"3.1.1 \u5b9a\u65f6\u5668\u7b80\u4ecb","text":"<ul> <li>TIM\uff08Timer\uff09\u5b9a\u65f6\u5668</li> <li>\u5b9a\u65f6\u5668\u53ef\u4ee5\u5bf9\u8f93\u5165\u7684\u65f6\u949f\u8fdb\u884c\u8ba1\u6570\uff0c\u5e76\u5728\u8ba1\u6570\u503c\u8fbe\u5230\u8bbe\u5b9a\u503c\u65f6\u89e6\u53d1\u4e2d\u65ad</li> <li>16\u4f4d\u8ba1\u6570\u5668\u3001\u9884\u5206\u9891\u5668\u3001\u81ea\u52a8\u91cd\u88c5\u5bc4\u5b58\u5668\u7684\u65f6\u57fa\u5355\u5143\uff0c\u572872MHz\u8ba1\u6570\u65f6\u949f\u4e0b\u53ef\u4ee5\u5b9e\u73b0\u6700\u592759.65s\u7684\u5b9a\u65f6</li> <li>\u4e0d\u4ec5\u5177\u5907\u57fa\u672c\u7684\u5b9a\u65f6\u4e2d\u65ad\u529f\u80fd\uff0c\u800c\u4e14\u8fd8\u5305\u542b\u5185\u5916\u65f6\u949f\u6e90\u9009\u62e9\u3001\u8f93\u5165\u6355\u83b7\u3001\u8f93\u51fa\u6bd4\u8f83\u3001\u7f16\u7801\u5668\u63a5\u53e3\u3001\u4e3b\u4ece\u89e6\u53d1\u6a21\u5f0f\u7b49\u591a\u79cd\u529f\u80fd</li> <li>\u6839\u636e\u590d\u6742\u5ea6\u548c\u5e94\u7528\u573a\u666f\u5206\u4e3a\u4e86\u9ad8\u7ea7\u5b9a\u65f6\u5668\u3001\u901a\u7528\u5b9a\u65f6\u5668\u3001\u57fa\u672c\u5b9a\u65f6\u5668\u4e09\u79cd\u7c7b\u578b</li> </ul> <p>\u5b9a\u65f6\u5668\u7c7b\u578b</p> \u7c7b\u578b \u7f16\u53f7 \u603b\u7ebf \u529f\u80fd \u9ad8\u7ea7\u5b9a\u65f6\u5668 TIM1\u3001TIM8 APB2 \u62e5\u6709\u901a\u7528\u5b9a\u65f6\u5668\u5168\u90e8\u529f\u80fd\uff0c\u5e76\u989d\u5916\u5177\u6709\u91cd\u590d\u8ba1\u6570\u5668\u3001\u6b7b\u533a\u751f\u6210\u3001\u4e92\u8865\u8f93\u51fa\u3001\u5239\u8f66\u8f93\u5165\u7b49\u529f\u80fd \u901a\u7528\u5b9a\u65f6\u5668 TIM2\u3001TIM3\u3001TIM4\u3001TIM5 APB1 \u62e5\u6709\u57fa\u672c\u5b9a\u65f6\u5668\u5168\u90e8\u529f\u80fd\uff0c\u5e76\u989d\u5916\u5177\u6709\u5185\u5916\u65f6\u949f\u6e90\u9009\u62e9\u3001\u8f93\u5165\u6355\u83b7\u3001\u8f93\u51fa\u6bd4\u8f83\u3001\u7f16\u7801\u5668\u63a5\u53e3\u3001\u4e3b\u4ece\u89e6\u53d1\u6a21\u5f0f\u7b49\u529f\u80fd \u57fa\u672c\u5b9a\u65f6\u5668 TIM6\u3001TIM7 APB1 \u62e5\u6709\u5b9a\u65f6\u4e2d\u65ad\u3001\u4e3b\u6a21\u5f0f\u89e6\u53d1DAC\u7684\u529f\u80fd <p>\u4e0d\u540c\u7684\u82af\u7247\u62e5\u6709\u7684\u5b9a\u65f6\u5668\u8d44\u6e90\u4e0d\u540c\uff0c\u4f8b\u5982STM32F103C8T6\u5b9a\u65f6\u5668\u8d44\u6e90\uff1aTIM1\u3001TIM2\u3001TIM3\u3001TIM4</p>"},{"location":"study/STM32/3.Timer%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/#312","title":"3.1.2 \u5b9a\u65f6\u5668\u6846\u56fe","text":"<p>\u57fa\u672c\u5b9a\u65f6\u5668</p> <p>\u65f6\u57fa\u5355\u5143 \u57fa\u672c\u53c2\u6570</p> <ul> <li>PSC \uff08\u9884\u5206\u9891\u5668\uff09\uff0c\u5bf9\u8f93\u5165\u7684\u9891\u7387\u63d0\u524d\u8fdb\u884c\u5206\u9891\u64cd\u4f5c\u3002</li> </ul> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\u5f53\u9884\u5206\u9891\u7684\u503c\u4e3a 0 \u65f6\uff0c\u5373\u5bf9\u9891\u7387\u9664 2 \uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <ul> <li>CNT \uff08\u8ba1\u6570\u5668\uff09\uff0c\u8ba1\u6570\u5668\u4e3a16\u4f4d\uff0c\u53ef\u4ee5\u4ece 0 ~ 65535 \u8ba1\u6570\u3002</li> <li>ARR \uff08\u81ea\u52a8\u91cd\u88c5\u503c\uff09 \uff0c\u4e5f\u6210\u4e3a \u201c \u8ba1\u6570\u5468\u671f \u201d \uff0c\u5f53\u8ba1\u6570\u5668\u8fbe\u5230 \u201d \u81ea\u52a8\u91cd\u88c5\u503c \u201d \u4ee5\u540e\u89e6\u53d1\u66f4\u65b0\u6e05\u96f6\uff0c\u7136\u540e\u4ea7\u751f \u4e2d\u65ad \u6216 \u4e8b\u4ef6 \u3002</li> </ul> <p>\u8fd9\u91cc\u4ea7\u751f\u7684\u4e2d\u65ad\u5373 \u201c \u66f4\u65b0\u4e2d\u65ad \u201d\uff0c\u540e\u7eed\u914d\u7f6e\u597d NVIC \u548c \u5b9a\u65f6\u4e2d\u65ad\u51fd\u6570\u5c31\u53ef\u4ee5\u8fdb\u884c\u4e2d\u65ad\u4efb\u52a1\u3002\u800c\u4e8b\u4ef6\u5373 \u201c \u66f4\u65b0\u4e8b\u4ef6 \u201d \u5219\u4e0d\u4f1a\u89e6\u53d1\u4e2d\u65ad\uff0c\u4f46\u53ef\u4ee5\u89e6\u53d1\u5185\u90e8\u5176\u4ed6\u7535\u8def\u5de5\u4f5c\u3002</p> <p>\u7b80\u5355\u63d0\u4e00\u4e0b\u4e3b\u4ece\u89e6\u53d1\u6a21\u5f0f\u4e2d\u7684\u4e3b\u6a21\u5f0f\u81ea\u52a8\u89e6\u53d1DAC\u539f\u7406\uff1a</p> <p>\u4e3b\u6a21\u5f0f\u53ef\u4ee5\u5c06\u5b9a\u65f6\u7684 \u201c \u66f4\u65b0\u4e8b\u4ef6 \u201d \u6620\u5c04\u5230<code>TRGO</code>\u5f15\u811a\uff0c\u7136\u540e<code>TRGO</code>\u63a5\u5230DAC\u7684\u89e6\u53d1\u8f6c\u6362\u5f15\u811a\u3002\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u5b9a\u65f6\u81ea\u52a8\u89e6\u53d1DAC\u800c\u4e0d\u9700\u8981\u4e2d\u65ad\u89e6\u53d1DAC\u3002</p> <p></p> <p>\u26a0\uff1a--\u57fa\u672c\u5b9a\u65f6\u5668\u4ec5\u652f\u6301\u5411\u4e0a\u8ba1\u6570--\u65f6\u949f\u9009\u62e9\u4e5f\u4ec5\u652f\u6301\u5185\u90e8\u65f6\u949f\uff0c\u4e3a72MHZ</p> <p>\u901a\u7528\u5b9a\u65f6\u5668</p> <p>\u901a\u7528\u5b9a\u65f6\u5668\u7684\u65f6\u949f\u6e90\u6709\u591a\u79cd\u9009\u62e9</p> <p>\u5185\u90e8\u65f6\u949f\u6700\u4e3a\u5e38\u7528\uff0c\u5916\u90e8\u65f6\u949f\u9996\u9009\u5916\u90e8\u65f6\u949f\u6a21\u5f0f2\u3002</p> <ul> <li>\u5185\u90e8\u65f6\u949f \uff08CK_INT\uff09</li> <li>\u5916\u90e8\u65f6\u949f 1 \uff08\u89e6\u53d1\u6e90\u6709\u591a\u79cd\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u4e0b\u56fe\uff09</li> </ul> <p>\u5916\u90e8\u65f6\u949f 1 \u7684\u89e6\u53d1\u6e90\u53ef\u4ee5\u4e3a\uff1a </p> <ol> <li>TIMx_ETR\u5f15\u811a </li> <li>ITR 0-3 \uff08\u8fde\u63a5\u7684\u4e3a\u5b9a\u65f6\u5668\uff0c\u8be6\u60c5\u53ef\u770b\u5b98\u65b9\u53c2\u8003\u624b\u518c\uff09</li> <li>TIMx_CH1\u7684\u8fb9\u6cbf \uff08\u5373\u56fe\u4e2d\u7684TI1F_ED\uff09</li> <li>TIMx_CH1 \uff08\u5373\u56fe\u4e2d\u7684TI1FP1\uff09</li> <li>TIMx_CH2 \uff08\u5373\u56fe\u4e2d\u7684TI2FP2\uff09</li> </ol> <p>\u66f4\u591a\u8be6\u7ec6\u7684\u8fd9\u90e8\u5206\u5185\u5bb9\u4f1a\u5728\u8f93\u5165\u6355\u83b7\u4ecb\u7ecd\uff0c\u5148\u7b80\u5355\u4e86\u89e3</p> <ul> <li>\u5916\u90e8\u65f6\u949f\u6a21\u5f0f 2 \uff08TIMx_ETR \u5916\u90e8\u89e6\u53d1\u8f93\u5165\uff09</li> </ul> <p></p> <p>\u9ad8\u7ea7\u5b9a\u65f6\u5668</p> <p></p>"},{"location":"study/STM32/3.Timer%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/#313-stm32cubemx","title":"3.1.3 STM32CubeMX\u53c2\u6570","text":"<p>\u53c2\u6570\u5f88\u591a\uff0c\u4e0e\u4e0a\u4e00\u8282\u5b9a\u65f6\u5668\u6846\u56fe\u5bf9\u5e94\uff0c\u4e3b\u4ece\u6a21\u5f0f\u3001\u8f93\u5165\u6355\u83b7\u7b49\u53ef\u540e\u7eed\u7ae0\u8282\u5b66\u4e60\uff0c\u5148\u7b80\u5355\u4e86\u89e3\u3002</p> <p></p> <p>\u4e09\u4e2a\u53c2\u6570\uff1a</p> <ol> <li> <p>Slave mode \uff1a\u4ece\u6a21\u5f0f\uff0c\u5728\u8f93\u5165\u6355\u83b7\u7ae0\u8282\u914d\u7f6e \u4e3b\u4ece\u89e6\u53d1\u6a21\u5f0f \u4f1a\u7528\u5230\uff1b\u4e5f\u53ef\u4ee5\u9009\u62e9\u914d\u7f6e\u4e3a \u5916\u90e8\u65f6\u949f 1 \u3002</p> <ul> <li>External Clock Mode 1</li> <li>Reset Mode</li> <li>Gated Mode</li> <li>Trigger Mode</li> </ul> <p>Reset Mode\u3001Gated Mode\u3001Trigger Mode\u5728\u8f93\u5165\u6355\u83b7\u7ae0\u8282\u4ecb\u7ecd\uff0c\u6682\u65f6\u77e5\u9053\u662f\u548c\u8f93\u5165\u6355\u83b7\u76f8\u5173\u5373\u53ef\u3002</p> </li> <li> <p>Trigger mode \uff1a\u89e6\u53d1\u6a21\u5f0f\uff0c\u7528\u4e8e\u914d\u7f6e \u4e3b\u4ece\u89e6\u53d1\u6a21\u5f0f \u6216 \u5916\u90e8\u65f6\u949f 1 \u7684\u89e6\u53d1\u6e90\u3002</p> <ul> <li>ITR0</li> <li>ITR1</li> <li>ITR2</li> <li>ITR3</li> <li>ETR1\uff08TIMx_ETR\u5f15\u811a\uff09</li> <li>T1_ED</li> <li>T1FP1</li> <li>TI2FP2</li> </ul> <p>\u53ef\u4ee5\u770b\u51fa\u4e0e\u4e0a\u4e00\u8282\u6240\u8bf4\u7684\u53c2\u6570\u4e00\u81f4\uff0c\u7531\u4e8e\u5f88\u5c11\u7528\u5916\u90e8\u65f6\u949f 1 \uff0c\u6240\u4ee5\u89e6\u53d1\u6e90\u66f4\u591a\u5728\u4e3b\u4ece\u89e6\u53d1\u6a21\u5f0f\u4f7f\u7528\uff0c\u6545\u5728\u8f93\u5165\u6355\u83b7\u7ae0\u8282\u4ecb\u7ecd\uff0c\u6682\u65f6\u77e5\u9053\u662f\u548c\u8f93\u5165\u6355\u83b7\u76f8\u5173\u5373\u53ef\u3002</p> </li> <li> <p>Clock mode \uff1a\u65f6\u949f\u6e90\uff0c\u53ef\u4ee5\u9009\u62e9 \u5185\u90e8\u65f6\u949f \u548c \u5916\u90e8\u89e6\u53d1\u8f93\u5165 \u3002</p> <ul> <li>Internal Clock</li> <li>ETR2\uff08TIMx_ETR\u5f15\u811a\uff09</li> </ul> </li> </ol>"},{"location":"study/STM32/3.Timer%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/#32","title":"3.2 \u5b9a\u65f6\u4e2d\u65ad","text":""},{"location":"study/STM32/3.Timer%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/#321","title":"3.2.1 \u5b9a\u65f6\u4e2d\u65ad\u7ed3\u6784","text":""},{"location":"study/STM32/3.Timer%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/#322","title":"3.2.2 \u8ba1\u6570\u9891\u7387\u8ba1\u7b97","text":"\\[ \u8ba1\u6570\u9891\u7387 = \\frac{\u65f6\u949f\u9891\u7387}{Prescaler + 1} \\] <p>Note</p> <p>\u4f8b1\uff1a\u65f6\u949f\u9891\u7387\u4e3a 72 MHZ\uff0c\u9884\u5206\u9891\u5668Prescaler\u4e3a 7199\uff0c\u5219\u5b9a\u65f6\u5668\u8ba1\u6570\u9891\u7387\u4e3a 10000HZ\uff0c\u4e5f\u5c31\u662f\u6bcf 0.0001s \u8bb0 1 \u4e2a\u6570\u3002  </p> <p>\u82e5\u662f\u81ea\u52a8\u91cd\u88c5\u503cARR\u4e3a 1000 \uff0c\u90a3\u4e48\u4fbf\u662f\u6bcf 0.1s \u751f\u6210\u4e00\u4e2a \u201c \u66f4\u65b0\u4e2d\u65ad \u201d\u3002</p> <p>Note</p> <p>\u4f8b2\uff1a\u4e3a\u4ec0\u4e48\u8bf4\u572872MHz\u8ba1\u6570\u65f6\u949f\u4e0b\u53ef\u4ee5\u5b9e\u73b0\u6700\u592759.65s\u7684\u5b9a\u65f6\uff1f  </p> <p>\u9996\u5148\u8981\u662f\u7684Prescaler\u548cARR\u7684\u503c\u90fd\u662f16\u4f4d\u7684\uff0c\u6240\u4ee5\u6700\u5927\u4e3a 65536-1=65535</p> \\[ \u8ba1\u6570\u9891\u7387 = \\frac{72000000}{65535}=1098.65HZ \\] \\[ \u5b9a\u65f6\u65f6\u95f4=\\frac{1}{\u8ba1\u6570\u9891\u7387}({ARR-1})=\\frac{1}{1098.65}{65535}=59.65s \\]"},{"location":"study/STM32/3.Timer%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/#323-stm32cubemx","title":"3.2.3 STM32CubeMX\u914d\u7f6e","text":""},{"location":"study/STM32/3.Timer%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/#1-sys","title":"1. SYS\u914d\u7f6e","text":""},{"location":"study/STM32/3.Timer%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/#2-rcc","title":"2. RCC\u914d\u7f6e","text":""},{"location":"study/STM32/3.Timer%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/#3-gpio","title":"3. GPIO\u914d\u7f6e","text":"<p>\u914d\u7f6ePB0\u548cPB1\u4e3a\u8f93\u51fa\u6a21\u5f0f</p> <p></p> <p></p>"},{"location":"study/STM32/3.Timer%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/#4","title":"4. \u5b9a\u65f6\u5668\u914d\u7f6e","text":"<p>auto-reload-preload \uff1a\u5b9a\u65f6\u5668\u7684\u9884\u52a0\u8f7d\u673a\u5236\u662f\u5426\u5f00\u542f\uff0c\u5373\u5141\u8bb8\u5728\u8ba1\u6570\u5668\u5230\u8fbe\u6700\u5927\u503c\u4e4b\u524d\uff0c\u63d0\u524d\u5c06\u65b0\u7684\u503c\u52a0\u8f7d\u5230 ARR \u5bc4\u5b58\u5668\u4e2d\uff0c\u4ee5\u4fbf\u4e0b\u4e00\u4e2a\u8ba1\u6570\u5468\u671f\u53ef\u4ee5\u4f7f\u7528\u65b0\u7684\u81ea\u52a8\u91cd\u8f7d\u503c\u3002\u8fd9\u79cd\u673a\u5236\u53ef\u4ee5\u907f\u514d\u5b9a\u65f6\u5668\u5728\u6ea2\u51fa\u4e8b\u4ef6\u53d1\u751f\u65f6\u51fa\u73b0\u4e0d\u5fc5\u8981\u7684\u5ef6\u8fdf\uff0c\u786e\u4fdd\u5b9a\u65f6\u51c6\u786e\u5ea6\u6253\u5f00\u5373\u53ef\u3002</p> <p></p> <p></p>"},{"location":"study/STM32/3.Timer%E5%AE%9A%E6%97%B6%E4%B8%AD%E6%96%AD/#324","title":"3.2.4 \u5de5\u7a0b\u4ee3\u7801\u7f16\u5199","text":"<p>\u5b8c\u6210\u914d\u7f6e\u4ee5\u540e\uff0c\u53ef\u4ee5\u5728<code>stm32f1xx_it.c</code>\u6587\u4ef6\u627e\u5230<code>TIM2_IRQHandler</code>\u51fd\u6570</p> C<pre><code>void TIM2_IRQHandler(void)\n{\n  /* USER CODE BEGIN TIM2_IRQn 0 */\n\n  /* USER CODE END TIM2_IRQn 0 */\n  HAL_TIM_IRQHandler(&amp;htim2);\n  /* USER CODE BEGIN TIM2_IRQn 1 */\n\n  /* USER CODE END TIM2_IRQn 1 */\n}\n</code></pre> <p>\u603b\u89c8\u4e00\u4e0b\u4e2d\u65ad\u5904\u7406\u51fd\u6570\uff1a<code>HAL_TIM_IRQHandler(&amp;htim2)</code>\uff1b\u8fd9\u91cc\u5305\u542b\u4e86\u6240\u4ee5\u7684\u5b9a\u65f6\u5668\u66f4\u65b0\u4e2d\u65ad\u548c\u4e8b\u4ef6\u5904\u7406\u5185\u5bb9\uff0c\u6bd4\u5982\u8f93\u51fa\u6bd4\u8f83\u3001\u8f93\u5165\u6355\u83b7\u3001\u5b9a\u65f6\u4e2d\u65ad\u7b49\u3002</p> C<pre><code>void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)\n{\n    uint32_t itsource = htim-&gt;Instance-&gt;DIER;\n    uint32_t itflag   = htim-&gt;Instance-&gt;SR;\n    /* \u6355\u83b7/\u6bd4\u8f83\u901a\u9053 1  */\n    if ((itflag &amp; (TIM_FLAG_CC1)) == (TIM_FLAG_CC1)) {...}\n    /* \u6355\u83b7/\u6bd4\u8f83\u901a\u9053 2  */\n    if ((itflag &amp; (TIM_FLAG_CC2)) == (TIM_FLAG_CC2)) {...}\n    /* \u6355\u83b7/\u6bd4\u8f83\u901a\u9053 3  */\n    if ((itflag &amp; (TIM_FLAG_CC3)) == (TIM_FLAG_CC3)) {...}\n    /* \u6355\u83b7/\u6bd4\u8f83\u901a\u9053 4  */\n    if ((itflag &amp; (TIM_FLAG_CC4)) == (TIM_FLAG_CC4)) {...}\n    /* \u5b9a\u65f6\u5668\u66f4\u65b0\u4e8b\u4ef6 */\n    if ((itflag &amp; (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE)) {...}\n    /* Break \u8f93\u5165\u4e8b\u4ef6 */\n    if ((itflag &amp; (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) {...}\n    /* \u89e6\u53d1\u4e8b\u4ef6 */\n    if ((itflag &amp; (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER)) {...}\n    /* \u901a\u8baf\u4e8b\u4ef6 */\n    if ((itflag &amp; (TIM_FLAG_COM)) == (TIM_FLAG_COM)) {...}    \n\n}\n</code></pre> <p>\u51fd\u6570\u5185\u5bb9\u5f88\u591a\uff0c\u6211\u4eec\u73b0\u53ea\u5173\u6ce8\u5b9a\u65f6\u4e2d\u65ad\u5185\u5bb9\uff0c\u5373 \u5b9a\u65f6\u5668\u66f4\u65b0\u4e8b\u4ef6 \u90e8\u5206\u7684\u4ee3\u7801\uff0c\u5177\u4f53\u5982\u4e0b \uff1a</p> C<pre><code>/* TIM Update event */\nif ((itflag &amp; (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE)) \n{\n    if ((itsource &amp; (TIM_IT_UPDATE)) == (TIM_IT_UPDATE)) \n    {\n        // \u6e05\u9664\u66f4\u65b0\u4e2d\u65ad\u6807\u5fd7\n        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);\n\n        // \u8c03\u7528\u5b9a\u65f6\u5668\u66f4\u65b0\u56de\u8c03\u51fd\u6570\n        #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)\n            htim-&gt;PeriodElapsedCallback(htim);  // \u7528\u6237\u81ea\u5b9a\u4e49\u7684\u56de\u8c03\u51fd\u6570\n        #else\n            HAL_TIM_PeriodElapsedCallback(htim);  // \u9ed8\u8ba4\u56de\u8c03\u51fd\u6570\n        #endif\n    }\n}\n</code></pre> <p>\u91cd\u8981\u51fd\u6570\u548c\u53c2\u6570\u4ecb\u7ecd\uff0c\u4e86\u89e3\u5373\u53ef\uff1a</p> C<pre><code>TIM_FLAG_UPDATE                                /* \u66f4\u65b0\u4e2d\u65ad\u6807\u5fd7\u4f4d */\nTIM_IT_UPDATE                                  /* \u66f4\u65b0\u4e2d\u65ad\u662f\u5426\u4f7f\u80fd */\n__HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE)    /* \u6e05\u9664\u4e2d\u65ad\u6807\u5fd7\u4f4d */\nUSE_HAL_TIM_REGISTER_CALLBACKS                 /* \u5224\u65ad\u7528\u6237\u662f\u5426\u91cd\u5199\u4e86HAL_TIM_PeriodElapsedCallback(htim)\u51fd\u6570 */\nhtim-&gt;PeriodElapsedCallback(htim)              /* \u7528\u6237\u81ea\u5b9a\u4e49\u4e2d\u65ad\u51fd\u6570 */\nHAL_TIM_PeriodElapsedCallback(htim)            /* \u9ed8\u8ba4\u51fd\u6570 */\n</code></pre> <p>\u5b8c\u6210\u81ea\u5df1\u7684\u4e2d\u65ad\u670d\u52a1\uff0c\u6211\u4eec\u9700\u8981\u5728<code>stm32f1xx_it.c</code>\u6587\u4ef6\u4e2d\u91cd\u5199\u4e2d\u65ad\u5904\u7406\u51fd\u6570<code>HAL_TIM_PeriodElapsedCallback</code>\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a</p> C<pre><code>/* USER CODE BEGIN 1 */\nvoid HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {\n    static unsigned char ledState = 0;\n    if (htim == (&amp;htim2))\n    {\n        if (ledState == 0)\n            HAL_GPIO_WritePin(GPIOB,GPIO_PIN_0,GPIO_PIN_RESET);\n        else\n            HAL_GPIO_WritePin(GPIOB,GPIO_PIN_0,GPIO_PIN_SET);\n        ledState = !ledState;\n    }\n}\n/* USER CODE END 1 */\n</code></pre> <p>\u6700\u540e\u5728<code>main.c</code>\u6587\u4ef6\u4e0a\u65b9 \u4f7f\u80fdTIM2 \uff0c\u4e2d\u65ad\u4e2d\u7684\u5185\u5bb9\u5c31\u53ef\u4ee5\u5b9e\u73b0\uff1a</p> C<pre><code>/* USER CODE BEGIN 2 */\nHAL_TIM_Base_Start_IT(&amp;htim2); //\u4ee5\u4e2d\u65ad\u6a21\u5f0f\u542f\u52a8TIM Base\u751f\u6210\u3002\n/* USER CODE END 2 */\n</code></pre> <p>Note</p> <p><code>htim2</code>\u662f\u5728<code>tim.h</code>\u4e0a\u65b9\u5b9a\u4e49\u7684</p>"},{"location":"study/STM32/4.Timer%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/","title":"\u7b2c\u56db\u7ae0 \u8f93\u51fa\u6bd4\u8f83","text":""},{"location":"study/STM32/4.Timer%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/#41","title":"4.1 \u8f93\u51fa\u6bd4\u8f83","text":""},{"location":"study/STM32/4.Timer%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/#411","title":"4.1.1 \u8f93\u51fa\u6bd4\u8f83\u4ecb\u7ecd","text":"<ul> <li>OC\uff08Output Compare\uff09\u8f93\u51fa\u6bd4\u8f83</li> <li>\u8f93\u51fa\u6bd4\u8f83\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83CNT\u4e0eCCR\u5bc4\u5b58\u5668\u503c\u7684\u5173\u7cfb\uff0c\u6765\u5bf9\u8f93\u51fa\u7535\u5e73\u8fdb\u884c\u7f6e1\u3001\u7f6e0\u6216\u7ffb\u8f6c\u7684\u64cd\u4f5c\uff0c\u7528\u4e8e\u8f93\u51fa\u4e00\u5b9a\u9891\u7387\u548c\u5360\u7a7a\u6bd4\u7684PWM\u6ce2\u5f62</li> <li>\u6bcf\u4e2a\u9ad8\u7ea7\u5b9a\u65f6\u5668\u548c\u901a\u7528\u5b9a\u65f6\u5668\u90fd\u62e5\u67094\u4e2a\u8f93\u51fa\u6bd4\u8f83\u901a\u9053</li> <li>\u9ad8\u7ea7\u5b9a\u65f6\u5668\u7684\u524d3\u4e2a\u901a\u9053\u989d\u5916\u62e5\u6709\u6b7b\u533a\u751f\u6210\u548c\u4e92\u8865\u8f93\u51fa\u7684\u529f\u80fd\uff08\u7528\u4e8e\u9a71\u52a8\u4e09\u76f8\u65e0\u5237\u7535\u673a\uff09</li> </ul>"},{"location":"study/STM32/4.Timer%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/#412","title":"4.1.2 \u8f93\u51fa\u6bd4\u8f83\u6846\u56fe","text":"<ol> <li>\u8f93\u51fa\u6bd4\u8f83\u6a21\u5f0f\u63a7\u5236\u5668\uff0c\u5f53CNT&gt;=CCR\u65f6\u8f93\u51fa\u4e00\u4e2a\u53c2\u8003\u7535\u5e73\uff08\u5373\u56fe\u4e2doc1ref\uff09</li> <li>\u6781\u6027\u9009\u62e9\uff0c\u9009\u62e9\u662f\u5426\u5bf9\u53c2\u8003\u7535\u5e73\u8fdb\u884c\u53cd\u8f6c\uff08\u53730\u21921\u62161\u21920\uff09</li> <li>\u4f7f\u80fd\u8f93\u51fa\uff0c\u5728\u5bf9\u5e94\u7684\u901a\u9053\u8f93\u51fa\u7535\u5e73</li> </ol> <p>CNT\u4e3a\u8ba1\u6570\u503c\uff0cCRR\u4e3a \u6355\u83b7/\u6bd4\u8f83\u5668\uff0c\u7528\u4e8e\u4e0eCNT\u503c\u6bd4\u8f83</p> <p></p>"},{"location":"study/STM32/4.Timer%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/#413","title":"4.1.3 \u8f93\u51fa\u6bd4\u8f83\u6a21\u5f0f","text":"<p>\u8f93\u51fa\u6a21\u5f0f\u63a7\u5236\u5668 \u7684\u5de5\u4f5c\u903b\u8f91\u9009\u62e9\uff1a</p> \u6a21\u5f0f \u63cf\u8ff0 \u51bb\u7ed3 CNT=CCR\u65f6\uff0cREF\u4fdd\u6301\u4e3a\u539f\u72b6\u6001 \u5339\u914d\u65f6\u7f6e\u6709\u6548\u7535\u5e73 CNT=CCR\u65f6\uff0cREF\u7f6e\u6709\u6548\u7535\u5e73 \u5339\u914d\u65f6\u7f6e\u65e0\u6548\u7535\u5e73 CNT=CCR\u65f6\uff0cREF\u7f6e\u65e0\u6548\u7535\u5e73 \u5339\u914d\u65f6\u7535\u5e73\u7ffb\u8f6c CNT=CCR\u65f6\uff0cREF\u7535\u5e73\u7ffb\u8f6c \u5f3a\u5236\u4e3a\u65e0\u6548\u7535\u5e73 CNT\u4e0eCCR\u65e0\u6548\uff0cREF\u5f3a\u5236\u4e3a\u65e0\u6548\u7535\u5e73 \u5f3a\u5236\u4e3a\u6709\u6548\u7535\u5e73 CNT\u4e0eCCR\u65e0\u6548\uff0cREF\u5f3a\u5236\u4e3a\u6709\u6548\u7535\u5e73 PWM\u6a21\u5f0f1 \u5411\u4e0a\u8ba1\u6570\uff1aCNTCCR\u65f6\uff0cREF\u7f6e\u65e0\u6548\u7535\u5e73\uff0cCNT\u2264CCR\u65f6\uff0cREF\u7f6e\u6709\u6548\u7535\u5e73 PWM\u6a21\u5f0f2 \u5411\u4e0a\u8ba1\u6570\uff1aCNTCCR\u65f6\uff0cREF\u7f6e\u6709\u6548\u7535\u5e73\uff0cCNT\u2264CCR\u65f6\uff0cREF\u7f6e\u65e0\u6548\u7535\u5e73 <p>Note</p> <p>\u53ea\u6709 PWM\u6a21\u5f0f 1  \u548c PWM\u6a21\u5f0f 2  \u4e3a\u5e38\u7528\u6a21\u5f0f\uff0c\u53ef\u4ee5\u8f93\u51fa\u9891\u7387 \u548c \u5360\u7a7a\u6bd4\u5747\u53ef\u4ee5\u8c03\u8282\u7684PWM\u6ce2\uff0c\u5176\u4ed6\u6a21\u5f0f\u6709\u5c40\u9650\u6027\u4e0d\u5e38\u7528\uff0c\u5176\u4e2d \u5339\u914d\u65f6\u7535\u5e73\u7ffb\u8f6c \u53ef\u4ee5\u8f93\u51fa\u5360\u7a7a\u6bd4\u6052\u4e3a50%\u7684PWM\u6ce2\u3002</p>"},{"location":"study/STM32/4.Timer%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/#414-stm32cubemx","title":"4.1.4 STM32CubeMX\u53c2\u6570","text":"<p>\u4ee5TIM3\u901a\u7528\u5b9a\u65f6\u5668\u901a\u9053 1 \u4e3a\u4f8b\uff1a</p> <p></p> <p>\u90e8\u5206\u4e3a\u8f93\u5165\u6355\u83b7\u53c2\u6570\uff0c\u4e0d\u5728\u6b64\u5904\u4ecb\u7ecd\uff0c\u5173\u4e8e\u8f93\u51fa\u6bd4\u8f83\u53c2\u6570\u4ecb\u7ecd\u5982\u4e0b\uff1a</p> <ul> <li>Output Compare No Output\u00a0\uff1a\u5728\u6b64\u6a21\u5f0f\u4e0b\uff0c\u8f93\u51fa\u6bd4\u8f83\u901a\u9053\u6ca1\u6709\u4efb\u4f55\u5b9e\u9645\u7684\u8f93\u51fa\u4f5c\u7528\u3002\u8be5\u6a21\u5f0f\u5e38\u7528\u4e8e\u4ec5\u8fdb\u884c\u6bd4\u8f83\u64cd\u4f5c\uff0c\u4f46\u4e0d\u9a71\u52a8\u5916\u90e8\u4fe1\u53f7\u3002</li> <li>Output Compare CH1 \uff1a\u5728\u8fd9\u4e2a\u6a21\u5f0f\u4e0b\uff0c\u5b9a\u65f6\u5668\u4f1a\u6839\u636e\u8bbe\u5b9a\u7684\u6bd4\u8f83\u503c\u4e0e\u8ba1\u6570\u5668\u503c\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u5339\u914d\uff0c\u5b9a\u65f6\u5668\u4f1a\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002</li> <li>PWM Generation No Output \uff1a\u5728\u6b64\u6a21\u5f0f\u4e0b\uff0c\u5b9a\u65f6\u5668\u914d\u7f6e\u4e3a PWM \u751f\u6210\u6a21\u5f0f\uff0c\u4f46\u6ca1\u6709\u4efb\u4f55\u5916\u90e8\u8f93\u51fa\u4fe1\u53f7\u3002\u8fd9\u901a\u5e38\u7528\u4e8e\u5185\u90e8\u8ba1\u7b97\u6216\u8c03\u8bd5\u76ee\u7684\u3002</li> <li>PWM Generation CH1 \uff1a\u5728\u6b64\u6a21\u5f0f\u4e0b\uff0c\u5b9a\u65f6\u5668\u4f1a\u5728\u901a\u9053 1 \u4e0a\u751f\u6210 PWM \u4fe1\u53f7\u3002</li> </ul> <p>\u5176\u4e2d\uff0c Output Compare CH1 \u548c PWM Generation CH1 \u4e3a\u5e38\u7528\u6a21\u5f0f\uff0c\u5176\u4ed6\u4e86\u89e3\u5373\u53ef\u3002</p> <p>\u901a\u9053\u82e5\u9009\u62e9 Output Compare CH1\u00a0\uff0c\u5219\u53ef\u4ee5\u9009\u62e9\u901a\u9053\u5de5\u4f5c\u6a21\u5f0f\u4e3a\u4ee5\u4e0b 6 \u79cd\uff0c\u4e00\u4e00\u5bf9\u5e94 <code>4.1.3</code>\u00a0\u8868\u683c\u4e2d\u7684\u6a21\u5f0f\uff1a</p> <ol> <li>Frozen (used for Timing base)\uff0c\u5373\u51bb\u7ed3</li> <li>Active Level on match\uff0c\u5373\u5339\u914d\u65f6\u7f6e\u6709\u6548\u7535\u5e73</li> <li>Inactive Level on match\uff0c\u5373\u5339\u914d\u65f6\u7f6e\u65e0\u6548\u7535\u5e73</li> <li>Toggle on match\uff0c\u5373\u5339\u914d\u5f0f\u53cd\u8f6c\u7535\u5e73</li> <li>Forced Active\uff0c\u5373\u5f3a\u5236\u4e3a\u6709\u6548\u7535\u5e73</li> <li>Forced Inactive\uff0c\u5373\u5f3a\u5236\u4e3a\u65e0\u6548\u7535\u5e73</li> </ol> <p>\u901a\u9053\u82e5\u9009\u62e9 PWM Compare CH1 \uff0c\u5219\u53ef\u4ee5\u9009\u62e9\u901a\u9053\u5de5\u4f5c\u6a21\u5f0f\u4e3a\u4ee5\u4e0b 2 \u79cd\uff0c\u4e00\u4e00\u5bf9\u5e94 <code>4.1.3</code> \u8868\u683c\u4e2d\u7684\u6a21\u5f0f\uff1a</p> <ol> <li>PWM mode 1\uff0c\u5373PWM\u6a21\u5f0f 1</li> <li>PWM mode 2\uff0c\u5373PWM\u6a21\u5f0f 2</li> </ol>"},{"location":"study/STM32/4.Timer%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/#42-pwm","title":"4.2 PWM","text":""},{"location":"study/STM32/4.Timer%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/#421-pwm","title":"4.2.1 PWM\u4ecb\u7ecd","text":"<ul> <li>PWM\uff08Pulse Width Modulation\uff09\u8109\u51b2\u5bbd\u5ea6\u8c03\u5236</li> </ul> <ul> <li>\u5728\u5177\u6709\u60ef\u6027\u7684\u7cfb\u7edf\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u5bf9\u4e00\u7cfb\u5217\u8109\u51b2\u7684\u5bbd\u5ea6\u8fdb\u884c\u8c03\u5236\uff0c\u6765\u7b49\u6548\u5730\u83b7\u5f97\u6240\u9700\u8981\u7684\u6a21\u62df\u53c2\u91cf\uff0c\u5e38\u5e94\u7528\u4e8e\u7535\u673a\u63a7\u901f\u7b49\u9886\u57df</li> </ul> <ul> <li> <p>PWM\u53c2\u6570\uff1a</p> <p>\u200b      \u2b50\u9891\u7387 = 1 / T_S            \u2b50\u5360\u7a7a\u6bd4 = T_ON / T_S           \u5206\u8fa8\u7387 = \u5360\u7a7a\u6bd4\u53d8\u5316\u6b65\u8ddd</p> </li> </ul> <p></p>"},{"location":"study/STM32/4.Timer%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/#422-pwm","title":"4.2.2 PWM\u57fa\u672c\u7ed3\u6784","text":""},{"location":"study/STM32/4.Timer%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/#43-stm32cubemx","title":"4.3 STM32CubeMX\u914d\u7f6e","text":"<p>Warning</p> <p>\u5173\u4e8eRCC\u3001SYS\u3001LED\u8fd9\u91cc\u4e0d\u505a\u91cd\u590d\u914d\u7f6e\uff0c\u8be6\u60c5\u53ef\u770bGPIO\u7ae0\u8282\u3002</p> <p></p> <p></p> \\[ \u5360\u7a7a\u6bd4=\\frac{CCR}{ARR} \\] <p>Warning</p> <p>\u6ce8\u610fPSC\u548cARR\u7684\u53c2\u6570\u968f\u610f\u4f46\u8981\u4fdd\u6301\u6700\u540e\u7684\u9891\u7387\u4e0d\u8981\u592a\u5c0f\uff0c\u8fd9\u6837LED\u4f1a\u662f\u95ea\u70c1\u7684\uff0c\u5e94\u628a\u9891\u7387\u63a7\u5236\u5728100\u5de6\u53f3\u6216\u4ee5\u4e0a\u4e3a\u597d\uff0c\u8fd9\u6837\u624d\u80fd\u5b9e\u73b0\u63a7\u5236\u4eae\u5ea6\uff0c\u5176\u4f59\u53c2\u6570\u81ea\u884c\u767e\u5ea6\u4e86\u89e3\u5373\u53ef\u3002</p> <p>\u6700\u540e\u65f6\u949f\u914d\u7f6e\u4e3a72MHZ\uff0c\u751f\u6210\u5de5\u7a0b\u3002</p> <p></p>"},{"location":"study/STM32/4.Timer%E8%BE%93%E5%87%BA%E6%AF%94%E8%BE%83/#44","title":"4.4 \u547c\u5438\u706f\u4ee3\u7801","text":"<p><code>main</code>\u51fd\u6570\u4e2d\u58f0\u660e\u4e00\u4e2a\u5360\u7a7a\u6bd4\u53d8\u91cf</p> C<pre><code>/* USER CODE BEGIN Init */\nint pwm_val;\n/* USER CODE END Init */\n</code></pre> <p>\u4f7f\u80fdPWM\u901a\u9053 1 \u548c 2 </p> C<pre><code>/* USER CODE BEGIN 2 */\nHAL_TIM_PWM_Start(&amp;htim3, TIM_CHANNEL_1);\nHAL_TIM_PWM_Start(&amp;htim3, TIM_CHANNEL_2);\n/* USER CODE END 2 */\n</code></pre> <p>while\u5faa\u73af\u5199\u547c\u5438\u706f\u4ee3\u7801</p> C<pre><code>/* USER CODE BEGIN 3 */\nfor (pwm_val = 0; pwm_val &lt; 900; pwm_val++) {\n    __HAL_TIM_SetCompare(&amp;htim3, TIM_CHANNEL_1, pwm_val);\n    HAL_Delay(1);\n}\nfor (pwm_val = 0; pwm_val &lt; 900; pwm_val++) {\n    __HAL_TIM_SetCompare(&amp;htim3, TIM_CHANNEL_1, 900 - pwm_val);\n    HAL_Delay(1);\n}\n</code></pre>"},{"location":"study/STM32/5.Timer%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/","title":"\u7b2c\u4e94\u7ae0 \u8f93\u5165\u6355\u83b7","text":""},{"location":"study/STM32/5.Timer%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/#51","title":"5.1 \u8f93\u5165\u6355\u83b7","text":""},{"location":"study/STM32/5.Timer%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/#511","title":"5.1.1 \u8f93\u5165\u6355\u83b7\u4ecb\u7ecd","text":"<ul> <li>IC\uff08Input Capture\uff09\u8f93\u5165\u6355\u83b7</li> <li>\u8f93\u5165\u6355\u83b7\u6a21\u5f0f\u4e0b\uff0c\u5f53\u901a\u9053\u8f93\u5165\u5f15\u811a\u51fa\u73b0\u6307\u5b9a\u7535\u5e73\u8df3\u53d8\u65f6\uff0c\u5f53\u524dCNT\u7684\u503c\u5c06\u88ab\u9501\u5b58\u5230CCR\u4e2d\uff0c\u53ef\u7528\u4e8e\u6d4b\u91cfPWM\u6ce2\u5f62\u7684\u9891\u7387\u3001\u5360\u7a7a\u6bd4\u3001\u8109\u51b2\u95f4\u9694\u3001\u7535\u5e73\u6301\u7eed\u65f6\u95f4\u7b49\u53c2\u6570</li> <li>\u6bcf\u4e2a\u9ad8\u7ea7\u5b9a\u65f6\u5668\u548c\u901a\u7528\u5b9a\u65f6\u5668\u90fd\u62e5\u67094\u4e2a\u8f93\u5165\u6355\u83b7\u901a\u9053</li> <li>\u53ef\u914d\u7f6e\u4e3aPWMI\u6a21\u5f0f\uff0c\u540c\u65f6\u6d4b\u91cf\u9891\u7387\u548c\u5360\u7a7a\u6bd4</li> <li>\u53ef\u914d\u5408\u4e3b\u4ece\u89e6\u53d1\u6a21\u5f0f\uff0c\u5b9e\u73b0\u786c\u4ef6\u5168\u81ea\u52a8\u6d4b\u91cf</li> </ul>"},{"location":"study/STM32/5.Timer%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/#512","title":"5.1.2 \u9891\u7387\u6d4b\u91cf","text":"<p>\u9891\u7387\u6d4b\u91cf\u5206\u4e3a\u6d4b\u9891\u6cd5\u548c\u6d4b\u5468\u6cd5\uff1a</p> <ul> <li>\u6d4b\u9891\u6cd5 ---&gt; \u4e00\u5b9a\u95f8\u95e8\u65f6\u95f4T\u5185\uff0c\u8bb0\u4e0a\u5347\u6cbf\u7684\u6b21\u6570 N \uff0c\u53d6\u5468\u671f\u7684\u5012\u6570\u5f97\u53ef\u5230\u9891\u7387\uff1a   $$   f_x=\\frac{N}{T}   $$</li> </ul> <ul> <li>\u6d4b\u5468\u6cd5 ---&gt; \u5728\u4e24\u4e2a\u4e0a\u5347\u6cbf\u4e4b\u95f4\uff0c\u4ee5 \u6807\u51c6\u9891\u7387 \u8ba1\u6b21N\uff0c\u5373\u53ef\u5f97\u5230\u9891\u7387\uff1a   $$   f_x=\\frac{f_c}{N}   $$</li> </ul> <ul> <li>\u4e2d\u754c\u9891\u7387 ---\u8ba9\u6d4b\u5468\u6cd5\u548c\u6d4b\u9891\u6cd5\u4e2d\u7684 N \u76f8\u7b49\u89e3\u51fa\u9891\u7387\uff0c\u5f97\u5230\u6d4b\u9891\u6cd5\u4e0e\u6d4b\u5468\u6cd5\u8bef\u5dee\u76f8\u7b49\u7684\u9891\u7387\u70b9\uff1a   $$   f_m=\\sqrt\\frac{f_c}{T}   $$</li> </ul> <p></p> <p>Note</p> <p>\u9ad8\u9891\u9002\u5408\u4f7f\u7528\u6d4b\u9891\u6cd5\uff0c\u4f4e\u9891\u9002\u5408\u4f7f\u7528\u6d4b\u5468\u6cd5\uff0c\u800c\u4e2d\u754c\u9891\u7387\u5373\u4f7f\u9009\u62e9\u65b9\u6cd5\u7684\u4e34\u754c\u9891\u7387\u3002</p>"},{"location":"study/STM32/5.Timer%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/#513","title":"5.1.3 \u8f93\u5165\u6355\u83b7\u6846\u56fe","text":"<p>\u4e0b\u9762\u662f\u8f93\u5165\u6355\u83b7\u7684\u6846\u67b6\uff1a</p> <ul> <li>\u5de5\u4f5c\u6d41\u7a0b\uff1a \u7ecf\u8fc7\u8f93\u5165\u6ee4\u6ce2\u5668\u548c\u6781\u6027\u9009\u62e9\u8fdb\u5165\u9884\u5206\u9891\u5668\uff0c\u53ef\u4ee5\u9009\u62e9\u8fdb\u884c\u89e6\u53d1\u4fe1\u53f7\u5206\u9891\uff0c\u7136\u540e\u89e6\u53d1\u4fe1\u53f7\u8fdb\u5165\u6355\u83b7\u7535\u8def\u5de5\u4f5c\uff0c\u6bcf\u6765\u4e00\u4e2a\u89e6\u53d1\u4fe1\u53f7\uff0cCNT\u7684\u503c\u5411CCR\u8f6c\u8fd0\u4e00\u6b21\uff0c\u540c\u65f6\u89e6\u53d1\u6355\u83b7\u4e8b\u4ef6\uff0c\u5728\u72b6\u6001\u5bc4\u5b58\u5668\u7f6e\u6807\u5fd7\u4f4d\u89e6\u53d1\u4e2d\u65ad\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e2d\u65ad\u5904\u7406\u3002</li> <li>\u6d4b\u5468\u6cd5\u5b9e\u73b0\uff1a \u4ee5\u4e0a\u5347\u6cbf\u4e3a\u89e6\u53d1\u4fe1\u53f7\uff0cCNT\u8ba1\u6570\u5668\u7531\u5185\u90e8\u6807\u51c6\u65f6\u949f\u9a71\u52a8\uff08\u9a71\u52a8\u65f6\u949f\u4e3a\\(\\(f_c\\)\\) \uff09\uff0cCNT\u6570\u503c\u5373\u53ef\u8bb0\u5f55\u4e24\u4e2a\u4e0a\u5347\u6cbf\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5373\u4e3a\u5468\u671f\uff0c\u53d6\u5012\u6570\u53ef\u83b7\u5f97\u6d4b\u5468\u6cd5\u7684\u9891\u7387\u3002</li> </ul> <p></p> <p>Note</p> <p>\u6bcf\u6b21\u6355\u83b7\u4ee5\u540e\u8981\u5c06CNT\u6e05\u96f6\uff0c\u53ef\u4ee5\u7528\u4e3b\u4ece\u89e6\u53d1\u6a21\u5f0f\u81ea\u52a8\u5b8c\u6210\u3002</p> <p>\u901a\u9053 1 \u548c 2 \u4e92\u76f8\u4ea4\u53c9\u6355\u83b7\u53ef\u4ee5\u5728\u5b9a\u65f6\u5668\u603b\u6846\u56fe\u770b\u7684\u66f4\u6e05\u695a\uff1a</p> <p></p>"},{"location":"study/STM32/5.Timer%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/#52","title":"5.2 \u4e3b\u4ece\u89e6\u53d1\u6a21\u5f0f","text":"<p>\u8fd9\u4e2a\u540d\u5b57\u662f\u4ece\u6c5f\u534f\u79d1\u6280\uff08\u4ee5\u524d\u53eb\u6c5f\u79d1\u5927\u81ea\u5316\u534f\uff09\u5b66\u6765\u7684\u3002</p>"},{"location":"study/STM32/5.Timer%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/#521","title":"5.2.1 \u4e3b\u4ece\u89e6\u53d1\u6a21\u5f0f\u7b80\u4ecb","text":"<ul> <li>\u4e3b\u6a21\u5f0f\uff1a\u5c06\u5b9a\u65f6\u5668\u5185\u90e8\u7684\u4fe1\u53f7\u6620\u5c04\u5230TRGO\u5f15\u811a\uff0c\u7528\u4e8e\u89e6\u53d1\u522b\u7684\u5916\u8bbe\u3002</li> <li>\u4ece\u6a21\u5f0f\uff1a\u63a5\u6536\u5176\u4ed6\u5916\u8bbe\u6216\u81ea\u8eab\u5916\u8bbe\u7684\u4e00\u4e9b\u4fe1\u53f7\u7528\u4e8e\u63a7\u5236\u81ea\u8eab\u5b9a\u65f6\u5668\u7684\u8fd0\u884c\u3002(\u88ab\u5176\u4ed6\u4fe1\u53f7\u63a7\u5236)</li> </ul>"},{"location":"study/STM32/5.Timer%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/#522","title":"5.2.2 \u4e3b\u4ece\u6a21\u5f0f\u9009\u62e9","text":"<p>\u4e3b\u6a21\u5f0f\u5404\u6a21\u5f0f\u7684\u4fe1\u606f\uff0c\u4e0e\u8868\u683c\u4e2d\u4e00\u4e00\u5bf9\u5e94</p> <p></p> <p>\u4ece\u6a21\u5f0f\u89e6\u53d1\u6e90\u9009\u62e9</p> <p></p> <p>\u5b9a\u65f6\u5668\u7684<code>ITRx</code>\u5f15\u811a\u5bf9\u5e94</p> <p></p> <p>\u4ece\u6a21\u5f0f\u7684\u6a21\u5f0f\u9009\u62e9\uff0c\u4e0e\u8868\u683c\u4e2d\u4e00\u4e00\u5bf9\u5e94</p> <p></p>"},{"location":"study/STM32/5.Timer%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/#53","title":"5.3 \u8f93\u5165\u6355\u83b7\u57fa\u672c\u7ed3\u6784","text":""},{"location":"study/STM32/5.Timer%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/#531","title":"5.3.1 \u57fa\u7840\u7ed3\u6784","text":"<p>\u8f93\u5165\u4fe1\u53f7\u6e90\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5f15\u811a\u8f93\u51fa\u4e00\u56fa\u5b9a\u9891\u7387\u7684\u65b9\u6ce2\uff0c\u5f15\u811a\u63a5\u5230\u8f93\u5165\u6355\u83b7\u7684\u5f15\u811a</p> <p></p> <p>\u6267\u884c\u903b\u8f91\u5982\u4e0b\uff1a</p> <ul> <li>\u8f93\u5165\u4fe1\u53f7\u6e90\u7ecf\u8fc7\u6ee4\u6ce2\uff0c\u786e\u5b9a\u6781\u6027\uff0c\u4e0a\u5347\u6cbf\u6216\u4e0b\u964d\u6cbf\u89e6\u53d1\u8f93\u5165\u6355\u83b7</li> <li>\u5c06CNT\u503c\u5199\u5165CCR1\u5bc4\u5b58\u5668</li> <li>\u540c\u65f6TI1FP1\u7ecf\u8fc7\u89e6\u53d1\u6e90\u9009\u62e9\uff0c\u89e6\u53d1\u4ece\u6a21\u5f0f Reset\u81ea\u52a8\u6e05\u96f6CNT</li> </ul> <p></p>"},{"location":"study/STM32/5.Timer%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/#532-pwmi","title":"5.3.2 PWMI\u6a21\u5f0f","text":"<p>Warning</p> <p>\u6ce8\u610f\u8fd9\u91cc<code>TI1FP2</code>\u5e76\u6ca1\u6709\u4f7f\u7528\u4ece\u6a21\u5f0f\uff0c\u8fd9\u662f\u4e3a\u4e86\u540e\u9762\u53ef\u4ee5\u5b9e\u73b0\u9ad8\u7535\u5e73\u5355\u72ec\u6d4b\u91cf\uff0c\u4ece\u800c\u5f97\u51fa\u5360\u7a7a\u6bd4\u7684\u6d4b\u91cf\u3002</p> <p>\u6267\u884c\u903b\u8f91\u5982\u4e0b\uff1a</p> <ul> <li>\u8f93\u5165\u4fe1\u53f7\u6e90\u7ecf\u8fc7\u6ee4\u6ce2\uff0c\u786e\u5b9a\u6781\u6027\uff0c \u8ba9\u4e0a\u5347\u6cbf\u89e6\u53d1\u8f93\u5165\u6355\u83b7 1 \uff0c\u4e0b\u964d\u6cbf\u89e6\u53d1\u8f93\u5165\u6355\u83b7 2 </li> <li>\u4ece\u7b2c\u4e00\u4e2a\u4e0a\u5347\u6cbf\u5f00\u59cb\uff0c\u7ecf\u5386\u7b2c\u4e00\u4e2a\u4e0b\u964d\u6cbf\uff0c\u5c06CNT\u503c\u5199\u5165CCR2\u5bc4\u5b58\u5668\uff0c \u6b64\u65f6\u4e0d\u4f1a\u89e6\u53d1\u4ece\u6a21\u5f0f\u6e05\u96f6CNT</li> <li>\u7ecf\u5386\u7b2c\u4e8c\u4e2a\u4e0a\u5347\u6cbf\uff0c\u5c06CNT\u503c\u5199\u5165CCR1\u5bc4\u5b58\u5668\uff0c \u5e76\u89e6\u53d1\u4ece\u6a21\u5f0f\u6e05\u96f6CNT</li> </ul> <p></p>"},{"location":"study/STM32/5.Timer%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/#533-stm32cubemx","title":"5.3.3 STM32CubeMX\u53c2\u6570","text":"<p>\u5404\u6a21\u5f0f\u53c2\u6570\u914d\u7f6e\u540d\u79f0\u5982\u4e0b\uff1a</p> <p></p> <p>\u4ece\u6a21\u5f0f\u9009\u62e9\uff1a</p> <p></p> <ul> <li>Slave mode \uff1a\u4ece\u6a21\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u914d\u7f6e\u4e3a \u5916\u90e8\u65f6\u949f 1 \u3002<ul> <li>External Clock Mode 1\uff1a\u5916\u90e8\u65f6\u949f\u6a21\u5f0f 1</li> <li>Reset Mode\uff1a\u590d\u4f4d\u6a21\u5f0f</li> <li>Gated Mode\uff1a\u95e8\u63a7\u6a21\u5f0f</li> <li>Trigger Mode\uff1a\u89e6\u53d1\u6a21\u5f0f</li> </ul> </li> </ul> <p>\u4e0e\u524d\u9762\u7684\u8868\u683c\u5bf9\u5e94\uff0c\u5177\u4f53\u529f\u80fd\u4e0a\u9762\u6709\u4ecb\u7ecd\uff0c\u5728\u6b64\u4e0d\u91cd\u590d\u3002\u5916\u90e8\u65f6\u949f\u6a21\u5f0f 1 \u5728\u5b9a\u65f6\u4e2d\u65ad\u540c\u6837\u4ecb\u7ecd\u8fc7\u3002</p> <p>\u89e6\u53d1\u6e90\u9009\u62e9\uff1a</p> <p></p> <ul> <li>Trigger mode \uff1a\u4ece\u6a21\u5f0f\u89e6\u53d1\u6e90\u9009\u62e9\u3002<ul> <li>ITR0</li> <li>ITR1</li> <li>ITR2</li> <li>ITR3</li> <li>ETR1\uff08TIMx_ETR\u5f15\u811a\uff09</li> <li>T1_ED</li> <li>T1FP1</li> <li>TI2FP2</li> </ul> </li> </ul> <p>Warning</p> <p>\u5177\u4f53\u5982\u4f55\u914d\u7f6e\u7ec4\u5408\u8fbe\u5230\u60f3\u8981\u7684\u529f\u80fd\uff0c\u4f1a\u5728\u540e\u9762\u4ecb\u7ecd\uff0c\u6b64\u5904\u5148\u719f\u6089\u5404\u4e2a\u53c2\u6570\u4e0e\u524d\u9762\u7406\u8bba\u90e8\u5206\u7684\u5bf9\u5e94\u3002</p> <p>\u8f93\u5165\u6355\u83b7\u7684\u901a\u9053\u6a21\u5f0f\uff1a</p> <p></p> <ul> <li>Input Capture Direct Mode  \uff0c\u5728\u8f93\u5165\u6355\u83b7\u76f4\u63a5\u6a21\u5f0f\u4e0b\uff0c\u5b9a\u65f6\u5668\u4f1a\u76f4\u63a5\u6355\u83b7\u5916\u90e8\u4fe1\u53f7\uff08\u4f8b\u5982TI1FP1\uff09\u7684\u8109\u51b2\u5e76\u5b58\u50a8\u5176\u65f6\u95f4\u6233\u3002</li> </ul> <ul> <li>Input Capture Indirect Mode \uff0c\u5728\u8f93\u5165\u6355\u83b7\u95f4\u63a5\u6a21\u5f0f\u4e0b\uff0c\u8f93\u5165\u6355\u83b7\u7684\u89e6\u53d1\u6e90\u4e0d\u662f\u76f4\u63a5\u7531\u5916\u90e8\u4fe1\u53f7\u51b3\u5b9a\uff0c\u800c\u662f\u7531\u53e6\u4e00\u4e2a\u4fe1\u53f7\u6216\u4e8b\u4ef6\uff08\u4f8b\u5982TI1FP2\uff09\u89e6\u53d1\u3002</li> </ul> <p>Warning</p> <p>\u4ee5\u901a\u9053\u4e00\u4e3a\u4f8b\uff0c\u82e5\u662f\u76f4\u63a5\u6a21\u5f0f\uff0c\u5373\u662f\u8d70TI1FP1\uff1b\u800cTI2FP1\u5373\u662f\u95f4\u63a5\u6a21\u5f0f\u3002\u82e5\u662f\u901a\u9053\u4e8c\uff0c\u5219\u76f4\u63a5\u6a21\u5f0f\u8d70TI2FP2\uff1b\u800c\u95f4\u63a5\u6a21\u5f0f\u8d70TI1FP2\u3002\u7ed3\u5408\u5b9a\u65f6\u6846\u56fe\u4f1a\u66f4\u5bb9\u6613\u7406\u89e3\uff0c\u770b TF1 \u548c TF2 \u5206\u522b\u600e\u4e48\u8d70\u7684\u3002</p> <ul> <li>**Input Capture Triggered by TRC ** \uff0c\u8be5\u6a21\u5f0f\u4e0b\uff0c\u8f93\u5165\u6355\u83b7\u529f\u80fd\u4f1a\u88ab\u5916\u90e8\u89e6\u53d1\u4fe1\u53f7\uff08\u4f8b\u5982 TRC\uff09\u6240\u6fc0\u6d3b\u3002</li> </ul> <p>Warning</p> <p><code>Input Capture Triggered by TRC</code> \u8fd9\u4e2a\u6a21\u5f0f\u53ea\u6709\u5728\u89e6\u53d1\u6e90\u4e3aITRx\u65f6\u624d\u53ef\u4ee5\u9009\u3002</p> <p>\u4e3b\u6a21\u5f0f\u53c2\u6570\u9009\u62e9\uff1a</p> <p></p> <p>Note</p> <p>\u53c2\u6570\u4e0e\u524d\u9762\u4ecb\u7ecd\u7684\u4e00\u81f4\uff0c\u6545\u4e0d\u505a\u8fc7\u591a\u89e3\u91ca\uff0c\u4e14\u4e3b\u6a21\u5f0f\u6682\u65f6\u7528\u4e0d\u5230\u3002</p>"},{"location":"study/STM32/5.Timer%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/#54","title":"5.4 \u8f93\u5165\u6355\u83b7\u7ec4\u5408\u642d\u914d","text":"<p>\u7531\u4e8e\u8f93\u5165\u6355\u83b7\u7275\u626f\u5230\u4ece\u6a21\u5f0f\u4ee5\u53ca\u5176\u89e6\u53d1\u6e90\uff0c\u6a21\u5f0f\u4f17\u591a\u4e14\u6709\u4e9b\u6a21\u5f0f\u9700\u8981\u7279\u5b9a\u89e6\u53d1\u6e90\u65b9\u80fd\u9009\u62e9\uff0c\u6240\u4ee5\u5355\u72ec\u5217\u4e00\u8282\u4ecb\u7ecd\u6a21\u5f0f\u5982\u4f55\u642d\u914d\u3002</p>"},{"location":"study/STM32/5.Timer%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/#541","title":"5.4.1 \u5355\u8f93\u5165\u6355\u83b7\u901a\u9053","text":"<p>\u5b9e\u73b0\u57fa\u7840\u7ed3\u6784\uff0c\u5373\u5355\u4e2a\u8f93\u5165\u6355\u83b7\u901a\u9053\u914d\u5408\u4ece\u6a21\u5f0f\u81ea\u52a8\u6e05\u96f6CNT\uff0c\u7ed3\u6784\u56fe\u5982\u4e0b\uff1a</p> <p></p> <p>\u90a3\u4e48\u5728STM32CubeMX\u7684\u914d\u7f6e\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <p></p> <p></p> <p>\u4e0a\u5347\u6cbf\u89e6\u53d1\uff0c\u5176\u4ed6\u65e0\u9700\u6539\uff0c<code>Input Filter</code>\u4e3a\u6ee4\u6ce2\u5668\u53c2\u6570\u9ed8\u8ba4\u5373\u53ef</p> <p></p>"},{"location":"study/STM32/5.Timer%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/#532-pwmi_1","title":"5.3.2 PWMI\u6a21\u5f0f","text":"<p>\u5b9e\u73b0PWMI\u7ed3\u6784\uff0c\u7ed3\u6784\u56fe\u5982\u4e0b\uff1a</p> <p></p> <p>\u90a3\u4e48\u5728STM32CubeMX\u7684\u914d\u7f6e\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <p></p> <p></p> <p>\u914d\u7f6e\u901a\u9053 2 \u53c2\u6570\uff1a</p> <p></p>"},{"location":"study/STM32/5.Timer%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/#55","title":"5.5 \u5de5\u7a0b\u914d\u7f6e","text":""},{"location":"study/STM32/5.Timer%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/#551","title":"5.5.1 \u5355\u901a\u9053\u8f93\u5165\u6355\u83b7","text":"<p>\u5b8c\u6210<code>RCC</code>\u3001<code>SYS</code>\u4ee5\u53ca<code>5.4</code>\u4e2d\u7684\u5355\u901a\u9053\u53c2\u6570\u914d\u7f6e\uff0c\u53e6\u5916\u9700\u8981\u5b8c\u6210\u65f6\u57fa\u5355\u5143\u914d\u7f6e\uff0c\u4e3b\u8981\u662f\u9009\u62e9\u8ba1\u6570\u6700\u5927\u503c\uff0c\u4ee5\u53ca\u6d4b\u5468\u6cd5\u7684\u6807\u51c6\u9891\u7387\u9009\u62e9</p> <ul> <li>\u9009\u62e9TIM3\u7684\u901a\u9053 1</li> </ul> <ul> <li>\u81ea\u52a8\u91cd\u88c5\u503c\u9009\u62e9\u6700\u5927\u503c 65535 \uff0c\u9632\u6b62\u63d0\u524d\u6e05\u96f6CNT</li> <li>\u9884\u5206\u9891\u5668\u9009 72-1 \uff0c\u8ba9\u6807\u51c6\u9891\u7387\u5c3d\u91cf\u5927\uff0c\u8fd9\u6837\u4e00\u4e2a\u65b9\u6ce2\u5468\u671f\u53ef\u4ee5\u8bb0\u66f4\u591a\u6570\uff0c\u635f\u5931\u7684\u65f6\u95f4\u8d8a\u5c11\u3002</li> </ul> <p>\u5e94\u6ce8\u610f\u6b64\u65f6\u7684\u6807\u51c6\u9891\u7387\u4e3a1MHZ\uff0c\u5373\u4e00\u4e2a\u6570\u4ee3\u88680.000001s\u3002</p> <p></p> <p>\u914d\u7f6e\u8f93\u5165\u4fe1\u53f7\u5373PWM</p> <ul> <li>\u53c2\u8003\u8f93\u51fa\u6bd4\u8f83\u90a3\u4e00\u8282</li> <li>\u9891\u7387\u81ea\u5b9a\u4e49\uff0c\u6ce8\u610fARR\u503c\u8ba1\u7b97\u5360\u7a7a\u6bd4\u9700\u8981</li> </ul> <p></p> <p>\u4e0b\u9762\u65f6\u4ee3\u7801\u6b63\u6587:</p> <p>\u6253\u5f00\u8f93\u5165\u6bd4\u8f83\u548c\u8f93\u5165\u6355\u83b7\u5b9a\u65f6\u5668\uff0c\u6ce8\u610f\u4ee3\u7801\u4f4d\u7f6e\u5e94\u8be5\u8f6f\u4ef6\u914d\u7f6e\u7684\u521d\u59cb\u5316\uff08xxx_Init\uff09\u4e4b\u540e\u3002</p> C<pre><code>/* USER CODE BEGIN 2 */\nHAL_TIM_IC_Start_IT(&amp;htim3, TIM_CHANNEL_1);\nHAL_TIM_PWM_Start(&amp;htim2, TIM_CHANNEL_1);\n/* USER CODE END 2 */\n</code></pre> <p>\u6211\u7684OLED\u663e\u793a</p> C<pre><code>// OLED\u9759\u6001\u663e\u793a\nOLED_Init();\nOLED_Clear();\nOLED_ShowString(0, 0, \"CCR1:00000\", 16, 1);\nOLED_ShowString(0, 2, \"Freq:00000HZ\", 16, 1);\n</code></pre> <p>\u5728<code>While</code>\u5faa\u73af\u4e2d\u5199\u6d4b\u91cf\u4ee3\u7801\uff0c<code>HAL_TIM_ReadCapturedValue</code>\u8bfb\u53d6\u6355\u83b7\u8ba1\u6570\u503c </p> \\[ \u9891\u7387=\\frac{\u6807\u51c6\u9891\u7387}{CCR1+1} \\] C<pre><code>/* USER CODE BEGIN 3 */\nvalue = HAL_TIM_ReadCapturedValue(&amp;htim3, TIM_CHANNEL_1);\n// TI1FP1\nOLED_ShowNum(40, 0, value, 5, 16, 0);\nOLED_ShowNum(40, 2, 1000000/(value+1), 5, 16, 0);\n/* USER CODE END 3 */\n</code></pre>"},{"location":"study/STM32/5.Timer%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/#552-pwmi","title":"5.5.2 PWMI\u6a21\u5f0f","text":"<p>\u6dfb\u52a0\u8f93\u5165\u6355\u83b7\u901a\u9053 2 \u65f6\u949f\uff0c\u914d\u7f6e\u5360\u7a7a\u6bd4\uff0c500/1000 \u5373 50%</p> C<pre><code>/* USER CODE BEGIN 2 */\nHAL_TIM_IC_Start_IT(&amp;htim3, TIM_CHANNEL_1);\nHAL_TIM_IC_Start_IT(&amp;htim3, TIM_CHANNEL_2);\nHAL_TIM_PWM_Start(&amp;htim2, TIM_CHANNEL_1);\n__HAL_TIM_SetCompare(&amp;htim2,TIM_CHANNEL_1, 500);\n/* USER CODE END 2 */\n</code></pre> <p>\u6211\u7684OLED\u663e\u793a</p> C<pre><code>// OLED\u9759\u6001\u663e\u793a\nOLED_Init();\nOLED_Clear();\nOLED_ShowString(0, 0, \"CCR1:00000\", 16, 1);\nOLED_ShowString(0, 2, \"Freq:00000HZ\", 16, 1);\nOLED_ShowString(0, 4, \"CCR2:00000\", 16, 1);\nOLED_ShowString(0, 6, \"Duty:00000%\", 16, 1);\n</code></pre> <p>\u5728<code>While</code>\u5faa\u73af\u4e2d\u6dfb\u52a0\u901a\u9053 2 \u6d4b\u91cf\u4ee3\u7801</p> \\[ \u5360\u7a7a\u6bd4=\\frac{CCR2+1}{CCR1+1} \\] C<pre><code>/* USER CODE BEGIN 3 */\nvalue = HAL_TIM_ReadCapturedValue(&amp;htim3, TIM_CHANNEL_1);\nvalue_h = HAL_TIM_ReadCapturedValue(&amp;htim3, TIM_CHANNEL_2);\n// TI1FP1\nOLED_ShowNum(40, 0, value, 5, 16, 0);\nOLED_ShowNum(40, 2, 1000000/(value+1), 5, 16, 0);\n// TI1FP2\nOLED_ShowNum(40, 4, value_h, 5, 16, 0);\nOLED_ShowNum(40, 6, (value_h+1)*100 / (value+1), 5, 16, 0);\n/* USER CODE END 3 */\n</code></pre>"},{"location":"study/STM32/5.Timer%E8%BE%93%E5%85%A5%E6%8D%95%E8%8E%B7/#553","title":"5.5.3 \u6355\u83b7\u4e2d\u65ad\u4ecb\u7ecd","text":"<p>\u5173\u4e8e\u5b9a\u65f6\u5668\u4e2d\u8f93\u5165\u6355\u83b7/\u8f93\u51fa\u6bd4\u8f83\u7684\u4e2d\u65ad\u51fd\u6570\uff0c\u6b64\u4e3a\u901a\u9053\u4e00\uff0c\u6211\u4eec\u4e3b\u8981\u5173\u6ce8\u8f93\u5165\u6355\u83b7\u90e8\u5206\u5373\u53ef\uff1a</p> <ul> <li>\u8f93\u5165\u6355\u83b7\u7684\u4e2d\u65ad\u51fd\u6570\uff1a<code>HAL_TIM_IC_CaptureCallback()</code></li> <li>\u8f93\u51fa\u6bd4\u8f83\u7684\u4e2d\u65ad\u51fd\u6570\uff1a<code>HAL_TIM_PWM_PulseFinishedCallback()</code></li> </ul> <p>\u8f93\u51fa\u6bd4\u8f83\u4e2d\u65ad\u7b80\u5355\u4e86\u89e3</p> C<pre><code>/* Capture compare 1 event */\nif ((itflag &amp; (TIM_FLAG_CC1)) == (TIM_FLAG_CC1)) {\n    if ((itsource &amp; (TIM_IT_CC1)) == (TIM_IT_CC1)) {\n        {\n            __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);\n            htim-&gt;Channel = HAL_TIM_ACTIVE_CHANNEL_1;\n\n            /* Input capture event */\n            if ((htim-&gt;Instance-&gt;CCMR1 &amp; TIM_CCMR1_CC1S) != 0x00U) {\n                #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)\n                htim-&gt;IC_CaptureCallback(htim);\n                #else\n                HAL_TIM_IC_CaptureCallback(htim);\n                #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */\n            }\n            /* Output compare event */\n            else {\n                #if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)\n                htim-&gt;OC_DelayElapsedCallback(htim);\n                htim-&gt;PWM_PulseFinishedCallback(htim);\n                #else\n                HAL_TIM_OC_DelayElapsedCallback(htim);\n                HAL_TIM_PWM_PulseFinishedCallback(htim);\n                #endif /* USE_HAL_TIM_REGISTER_CALLBACKS */\n            }\n            htim-&gt;Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;\n        }\n    }\n}\n</code></pre> <p>\u5982\u679c\u9700\u8981\u4f7f\u7528\u4e2d\u65ad\uff0c\u5728<code>stm32f1xx_it.c</code>\u6587\u4ef6\u4e0b\u65b9\u91cd\u5199\u8f93\u5165\u6355\u83b7\u4e2d\u65ad\uff0c\u5f53CNT\u8f6c\u8fd0\u5230CCR\u5bc4\u5b58\u5668\u65f6\uff0c\u89e6\u53d1\u6539\u4e2d\u65ad\uff0c\u6b64\u65f6\u6211\u4eec\u8bfb\u53d6CCR\u7684\u503c\u5373\u53ef\u5206\u6790\u51fa\u8f93\u5165\u4fe1\u53f7\u7684\u9891\u7387\uff1a</p> C<pre><code>/* USER CODE BEGIN 1 */\nvoid HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)\n{\n    if (htim==&amp;htim3)\n    {\n    }\n}\n/* USER CODE END 1 */\n</code></pre>"},{"location":"study/STM32/6.Timer%E7%BC%96%E7%A0%81%E5%99%A8%E6%8E%A5%E5%8F%A3/","title":"\u7b2c\u516d\u7ae0 \u7f16\u7801\u5668\u63a5\u53e3","text":""},{"location":"study/STM32/6.Timer%E7%BC%96%E7%A0%81%E5%99%A8%E6%8E%A5%E5%8F%A3/#61","title":"6.1 \u7f16\u7801\u5668\u63a5\u53e3","text":""},{"location":"study/STM32/6.Timer%E7%BC%96%E7%A0%81%E5%99%A8%E6%8E%A5%E5%8F%A3/#611","title":"6.1.1 \u7f16\u7801\u5668\u63a5\u53e3\u4ecb\u7ecd","text":"<ul> <li>\uff08Encoder Interface \uff09\u7f16\u7801\u5668\u63a5\u53e3</li> <li>\u7f16\u7801\u5668\u63a5\u53e3\u53ef\u63a5\u6536\u589e\u91cf\uff08\u6b63\u4ea4\uff09\u7f16\u7801\u5668\u7684\u4fe1\u53f7\uff0c\u6839\u636e\u7f16\u7801\u5668\u65cb\u8f6c\u4ea7\u751f\u7684\u6b63\u4ea4\u4fe1\u53f7\u8109\u51b2\uff0c\u81ea\u52a8\u63a7\u5236CNT\u81ea\u589e\u6216\u81ea\u51cf\uff0c\u4ece\u800c\u6307\u793a\u7f16\u7801\u5668\u7684\u4f4d\u7f6e\u3001\u65cb\u8f6c\u65b9\u5411\u548c\u65cb\u8f6c\u901f\u5ea6</li> <li>\u6bcf\u4e2a\u9ad8\u7ea7\u5b9a\u65f6\u5668\u548c\u901a\u7528\u5b9a\u65f6\u5668\u90fd\u62e5\u67091\u4e2a\u7f16\u7801\u5668\u63a5\u53e3\uff08\u7528\u4e8e\u7f16\u7801\u5668\u63a5\u53e3\u7684\u5b9a\u65f6\u5668\u65e0\u6cd5\u518d\u505a\u5176\u4ed6\u4e8b\uff09</li> <li>\u5b9a\u65f6\u5668\u7684\u901a\u9053 1 \u548c\u901a\u9053 2 \u4f5c\u4e3a\u7f16\u7801\u5668\u63a5\u53e3</li> </ul> <p>\u5982\u4e0b\u56fe\uff0c\u4e3a\u6b63\u4ea4\u7f16\u7801\u5668\uff08A\u76f8\u4e0eB\u76f8\u76f8\u5dee90\u00b0\uff09\uff0c\u901a\u8fc7\u89c2\u5bdfA\u76f8\u9ad8\u4f4e\u7535\u5e73\u65f6B\u76f8\u7684\u7535\u5e73\u5224\u65ad\u6b63\u53cd\u8f6c\uff0c\u540c\u65f6\u8109\u51b2\u9891\u7387\u5373\u4f53\u73b0\u7535\u673a\u7684\u8f6c\u901f\u3002</p> <p></p>"},{"location":"study/STM32/6.Timer%E7%BC%96%E7%A0%81%E5%99%A8%E6%8E%A5%E5%8F%A3/#612","title":"6.1.2 \u7f16\u7801\u5668\u63a5\u53e3\u7ed3\u6784","text":"<p>Note</p> <p>\u8bf4\u660e\u4e00\u4e0b\u6781\u6027\u9009\u62e9\uff0c\u9009\u62e9\u201c\u4e0a\u5347\u6cbf\u201d\u5219\u6b63\u5e38\u6ce2\u5f62\uff0c\u9009\u62e9\u201c\u4e0b\u964d\u6cbf\u201d\u5219\u9700\u8981\u7ecf\u8fc7\u4e00\u4e2a\u201c\u975e\u95e8\u201d\uff08\u903b\u8f91\uff09</p>"},{"location":"study/STM32/6.Timer%E7%BC%96%E7%A0%81%E5%99%A8%E6%8E%A5%E5%8F%A3/#613","title":"6.1.3 \u7f16\u7801\u5668\u63a5\u53e3\u53e3\u5de5\u4f5c\u6a21\u5f0f","text":"<p>\u7f16\u7801\u5668\u63a5\u53e3\u5de5\u4f5c\u6a21\u5f0f\u5206\u4e09\u79cd\uff1a</p> <ul> <li>\u4ec5\u5728A\u76f8\u4e0a\u5347\u6cbf\u548c\u4e0b\u964d\u6cbf\u8ba1\u6570</li> <li>\u4ec5\u5728B\u76f8\u4e0a\u5347\u6cbf\u548c\u4e0b\u964d\u6cbf\u8ba1\u6570</li> <li>\u5728AB\u76f8\u90fd\u8ba1\u6570\uff08\u7cbe\u5ea6\u6700\u9ad8\uff0c\u4e00\u4e9b\u8d44\u6599\u4f1a\u79f0\u4e3a\u56db\u500d\u9891\uff09</li> </ul> <p></p> <p>\u5de5\u4f5c\u6a21\u5f0f\u8868\u683c\u8981\u5bf9\u5e94 6.1.1\u7f16\u7801\u5668\u63a5\u53e3\u4ecb\u7ecd\u00a0\u7684\u8868\u683c\u770b\uff0c\u5373\u901a\u8fc7\u770bA\u76f8B\u76f8\u5bf9\u5e94\u7535\u5e73\u5224\u65ad\u6b63\u53cd\u8f6c\u3002</p>"},{"location":"study/STM32/6.Timer%E7%BC%96%E7%A0%81%E5%99%A8%E6%8E%A5%E5%8F%A3/#614","title":"6.1.4 #\u56db\u500d\u9891\u6cd5","text":"<p>\u56db\u500d\u9891\u662f\u901a\u8fc7\u7a0b\u5e8f\u63d0\u5347\u6211\u4eec\u7684\u7f16\u7801\u5668\u7684\u7cbe\u5ea6\u7684\u4e00\u79cd\u6570\u636e\u5904\u7406\u65b9\u6cd5\uff0c \u53ef\u4ee5\u6709\u6548\u7684\u6700\u5927\u5316\u6211\u4eec\u7684\u7f16\u7801\u5668\u7684\u7cbe\u5ea6\u548c\u6d4b\u91cf\u7cbe\u5ea6\u3002 </p> <p></p> <p>\u4e0a\u56fe\u662f\u4e00\u4e2a\u6211\u4eec\u7f16\u7801\u5668\u8f93\u51fa\u7684\u6ce2\u5f62\u56fe\uff0c \u6b63\u5e38\u6211\u4eec\u4e00\u822c\u7684\u5904\u7406\u65b9\u5f0f\u662f\u901a\u8fc7 A \u76f8\u53bb\u8ba1\u6570\uff0c B \u76f8\u53bb\u5224\u65ad\u76ee\u524d\u7684\u8f6c\u52a8\u65b9\u5411\u3002 \u5177\u4f53\u5b9e\u73b0\u6bd4\u5982\uff1a A \u76f8\u7684\u4e0a\u5347\u6cbf\u8ba1\u6570\u6216\u8005\u4e0b\u964d\u6cbf\u8ba1\u6570\uff0c \u540c\u65f6\u5728 A \u76f8\u7684\u4e0a\u5347\u6cbf\u6216\u8005\u4e0b\u964d\u6cbf\u6765\u6839\u636e B \u76f8\u6b64\u65f6\u7684\u7535\u5e73\u72b6\u6001\u6765\u5224\u65ad\u8f6c\u5411\u3002\u56db\u500d\u9891\u5219\u662f\u540c\u65f6\u8ba1\u7b97 AB \u4e24\u76f8\u7684\u6bcf\u4e2a\u8df3\u8fb9\u6cbf\uff0c \u8fd9\u6837\u5b50\u539f\u672c\u5728 A \u76f8\u8ba1\u6570\u7684\u4e00\u4e2a\u8109\u51b2\u5468\u671f\u5185\u5c31\u5b9e\u73b0\u4e86\u56db\u6b21\u8ba1\u6570\uff0c \u4ece\u800c\u5b9e\u73b0\u4e86\u7cbe\u5ea6\u7684\u63d0\u5347\u3002 </p>"},{"location":"study/STM32/6.Timer%E7%BC%96%E7%A0%81%E5%99%A8%E6%8E%A5%E5%8F%A3/#615","title":"6.1.5 \u8ba1\u6570\u793a\u4f8b\uff08\u6781\u6027\u9009\u62e9\uff09","text":"<ul> <li>\u6b63\u5e38\u4e0d\u53cd\u76f8\uff0c\u6b63\u8f6c\u81ea\u589e\uff0c\u53cd\u8f6c\u81ea\u51cf\u3002</li> </ul> <ul> <li>TI1\u6781\u6027\u53cd\u8f6c\uff08\u9700\u8981\u5c06TI1\u7684**\u9ad8\u4f4e\u7535\u5e73\u53cd\u8f6c**\uff0c\u5728\u5bf9\u5e94\u8868\u683c\u627e\u6b63\u53cd\u8f6c\uff09</li> </ul>"},{"location":"study/STM32/6.Timer%E7%BC%96%E7%A0%81%E5%99%A8%E6%8E%A5%E5%8F%A3/#62-stm32cubemx","title":"6.2 STM32CubeMX\u53c2\u6570","text":"<p>\u4ee5<code>TIM3</code>\u4e3a\u4f8b\uff0c\u627e\u5230Combined Channels \uff0c\u9009\u62e9Encoder Mode\u7f16\u7801\u5668\u63a5\u53e3\u6a21\u5f0f</p> <p></p> <p>\u5173\u4e8e\u5176\u4ed6\u53c2\u6570\u4ecb\u7ecd</p> <ul> <li>PWM Input on CH1 \uff0c\u8f93\u5165\u6355\u83b7\uff0c\u5c31\u662f\u81ea\u52a8\u914d\u7f6eCH1\u4e3a\u76f4\u63a5\u6355\u83b7CH2\u4e3a\u95f4\u63a5\u6355\u83b7\u4ee5\u53ca\u4ece\u6a21\u5f0f\uff0c\u4e0e\u4e0a\u4e00\u8282\u624b\u52a8\u914d\u7f6e\u7684\u5355\u901a\u9053\u6548\u679c\u4e00\u6837\uff0c\u9009\u62e9\u8be5\u6a21\u5f0f\u540e\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u914d\u7f6e\u7684\u53c2\u6570\u5982\u4e0b\uff1a</li> </ul> <p></p> <ul> <li>PWM Input on CH2 \uff0c\u4ec5\u8f93\u5165\u4fe1\u53f7\u901a\u9053\u6539\u6210CH2\u5f15\u811a\uff0c\u5176\u4ed6\u4e0e\u4e0a\u4e00\u4e2a\u6a21\u5f0f\u539f\u7406\u4e00\u81f4\u3002</li> </ul> <ul> <li>XOR ON / Hall Sensor Mode \uff0c\u7528\u4e8e\u5904\u7406\u4e09\u76f8\u970d\u5c14\u4f20\u611f\u5668\u4fe1\u53f7\uff0c\u4e3b\u8981\u5728BLDC \u7535\u673a\u63a7\u5236\u65f6\u4f7f\u7528\uff0c\u4e14\u9700\u8981\u914d\u7f6eXOR Activation\u6a21\u5f0f\uff0c\u5373\u970d\u5c14\u4f20\u611f\u5668\u6a21\u5f0f\u3002</li> </ul>"},{"location":"study/STM32/6.Timer%E7%BC%96%E7%A0%81%E5%99%A8%E6%8E%A5%E5%8F%A3/#63","title":"6.3 \u5de5\u7a0b\u914d\u7f6e","text":""},{"location":"study/STM32/6.Timer%E7%BC%96%E7%A0%81%E5%99%A8%E6%8E%A5%E5%8F%A3/#631","title":"6.3.1 \u7f16\u7801\u5668\u6a21\u5f0f\u914d\u7f6e","text":"<p>\u9009\u62e9<code>TIM3</code>\u914d\u7f6e\u4e3a\u7f16\u7801\u5668\u63a5\u53e3\u6a21\u5f0f</p> <p></p> <p></p>"},{"location":"study/STM32/6.Timer%E7%BC%96%E7%A0%81%E5%99%A8%E6%8E%A5%E5%8F%A3/#632","title":"6.3.2 \u5b9a\u65f6\u4e2d\u65ad\u914d\u7f6e","text":"<p>\u7528<code>TIM2</code>\u521b\u5efa\u4e00\u4e2a\u5b9a\u65f6\u4e2d\u65ad\uff0c\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u8bfb\u53d6\u4e00\u4e0b\u5b9a\u65f6\u5668\u7684\u8ba1\u6570\u503c\u5373\u4e3a\u8f6c\u52a8\u7684\u901f\u5ea6</p> <p></p> <p></p>"},{"location":"study/STM32/6.Timer%E7%BC%96%E7%A0%81%E5%99%A8%E6%8E%A5%E5%8F%A3/#633","title":"6.3.3 \u4ee3\u7801\u7f16\u5199","text":"<p><code>main.c</code>\u4e2d\uff0c\u5b9a\u4e49\u901f\u5ea6\u53d8\u91cf</p> C<pre><code>/* USER CODE BEGIN PV */\nuint16_t speed;\n/* USER CODE END PV */\n</code></pre> <p><code>main.c</code>\u4e2d\uff0c\u91cd\u5199\u5b9a\u65f6\u4e2d\u65ad\uff0c\u8bfb\u53d6\u7f16\u7801\u5668\u901f\u5ea6</p> C<pre><code>/* USER CODE BEGIN 4 */\nvoid HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {\n    if (htim == (&amp;htim2)) {\n        speed = __HAL_TIM_GET_COUNTER(&amp;htim3);\n        __HAL_TIM_SET_COUNTER(&amp;htim3, 0);\n    }\n}\n/* USER CODE END 4 */\n</code></pre> <p>\u6dfb\u52a0OLED\u663e\u793a</p> C<pre><code>/* USER CODE BEGIN 2 */\nOLED_Init();\nOLED_Clear();\nOLED_ShowString(0, 0, \"Speed:\", 16, 0);\n/* USER CODE END 2 */\n\n/* Infinite loop */\n/* USER CODE BEGIN WHILE */\nwhile (1) {\n    OLED_ShowNum(0, 24, speed, 6, 16, 0);\n    /* USER CODE END WHILE */\n\n    /* USER CODE BEGIN 3 */\n}\n/* USER CODE END 3 */\n</code></pre>"},{"location":"study/STM32/7.ADC%E6%95%B0%E6%A8%A1%E8%BD%AC%E6%8D%A2/","title":"\u7b2c\u4e03\u7ae0 ADC","text":""},{"location":"study/STM32/7.ADC%E6%95%B0%E6%A8%A1%E8%BD%AC%E6%8D%A2/#71-adc-","title":"7.1 ADC\u6a21\u62df-\u6570\u5b57\u8f6c\u6362\u5668","text":""},{"location":"study/STM32/7.ADC%E6%95%B0%E6%A8%A1%E8%BD%AC%E6%8D%A2/#711-adc","title":"7.1.1 ADC\u7b80\u4ecb","text":"<ul> <li>ADC\uff08Analog-Digital Converter\uff09\u6a21\u62df-\u6570\u5b57\u8f6c\u6362\u5668</li> <li>ADC\u53ef\u4ee5\u5c06\u5f15\u811a\u4e0a\u8fde\u7eed\u53d8\u5316\u7684\u6a21\u62df\u7535\u538b\u8f6c\u6362\u4e3a\u5185\u5b58\u4e2d\u5b58\u50a8\u7684\u6570\u5b57\u53d8\u91cf\uff0c\u5efa\u7acb\u6a21\u62df\u7535\u8def\u5230\u6570\u5b57\u7535\u8def\u7684\u6865\u6881</li> <li>12\u4f4d\u9010\u6b21\u903c\u8fd1\u578bADC\uff0c1us\u8f6c\u6362\u65f6\u95f4</li> <li>\u8f93\u5165\u7535\u538b\u8303\u56f4\uff1a0<sub>3.3V\uff0c\u8f6c\u6362\u7ed3\u679c\u8303\u56f4\uff1a0</sub>4095</li> <li>18\u4e2a\u8f93\u5165\u901a\u9053\uff0c\u53ef\u6d4b\u91cf16\u4e2a\u5916\u90e8\u548c2\u4e2a\u5185\u90e8\u4fe1\u53f7\u6e90</li> <li>\u89c4\u5219\u7ec4\u548c\u6ce8\u5165\u7ec4\u4e24\u4e2a\u8f6c\u6362\u5355\u5143</li> <li>\u6a21\u62df\u770b\u95e8\u72d7\u81ea\u52a8\u76d1\u6d4b\u8f93\u5165\u7535\u538b\u8303\u56f4</li> </ul> <p>STM32F103C8T6 ADC\u8d44\u6e90\uff1aADC1\u3001ADC2\uff0c10\u4e2a\u5916\u90e8\u8f93\u5165\u901a\u9053</p>"},{"location":"study/STM32/7.ADC%E6%95%B0%E6%A8%A1%E8%BD%AC%E6%8D%A2/#712-adc","title":"7.1.2 \u9010\u6b21\u903c\u8fd1\u6cd5ADC","text":"<p>\u9010\u6b21\u903c\u8fd1\u6cd5\uff1a\u5373 \u4e8c\u5206\u6bd4\u8f83\u786e\u5b9a\u7535\u538b\u503c</p> <p>12 \u4f4d\u6700\u5927\u503c\u4e3a 4095\uff08\u53731111111111\uff09 \uff0c\u5148\u53bb\u4e00\u534a 2048 \u4e0e\u5f85\u6d4b\u7535\u538b\u6bd4\u8f83\uff0c\u82e5\u5c0f\u4e8e 2048 \u5219\u8bb0 0 \uff0c\u7136\u540e\u4e0e 2048 \u7684\u4e00\u534a 1024 \u6bd4\u8f83\uff0c\u82e5\u5f85\u6d4b\u7535\u538b\u5927\u4e8e 1024 \uff0c\u5219\u8bb0\u4f5c 1 \uff0c\u4f9d\u6b21\u6bd4\u8f83 12 \u6b21\uff0c \u5f97\u5230\u4e00\u4e2a 16 \u4f4d\u7684\u4e8c\u8fdb\u5236\u6570\uff0c\u6309\u6bd4\u4f8b\u4e0e 3.3V \u6362\u7b97\u5f97\u5230\u5f85\u6d4b\u7535\u538b\u7684\u5b9e\u9645\u503c\u3002</p> <p></p> <p>\u5982\u4e0b\u56fe\u4e2d\u6bd4\u8f83\u5668\u7684\u4f4d\u7f6e\u5373\u4e3a\u9010\u6b21\u903c\u8fd1\u6cd5\u5b9e\u73b0\u7684\u7535\u8def\uff0c\u4e00\u8def\u4e3a\u5916\u90e8\u8f93\u5165\u7684\u5f85\u6d4b\u7535\u538b\uff0c\u4e00\u8def\u4e3a\u5185\u90e8\u53c2\u8003\u7535\u538b\uff0c\u5e76\u7ecf\u8fc7DAC\uff08\u6570\u5b57\u6a21\u62df\u8f6c\u6362\u5668\uff09\u8f6c\u6362\u8fdb\u884c\u6bd4\u8f83\u3002</p> <p></p>"},{"location":"study/STM32/7.ADC%E6%95%B0%E6%A8%A1%E8%BD%AC%E6%8D%A2/#713-adc","title":"7.1.3 ADC\u6846\u56fe","text":"<ul> <li>\u89c4\u5219\u7ec4\uff1a \u5341\u516d\u4e2a\u901a\u9053\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e00\u6b21\u63a516\u4e2aGPIO\uff1b\u4f46\u662f\u53ea\u6709\u4e00\u4e2a\u6570\u636e\u5bc4\u5b58\u5668\u6240\u4ee5\u53ea\u80fd\u5b58\u50a8\u4e00\u4e2a\u6570\u636e\uff0c\u5373\u53ea\u4f1a\u4fdd\u7559\u6700\u540e\u4e00\u4e2a\u901a\u9053\u6570\u636e\u3002</li> <li>\u6ce8\u5165\u7ec4\uff1a \u56db\u4e2a\u901a\u9053\uff0c\u53ef\u4ee5\u4e00\u6b21\u63a54\u4e2aGPIO\uff1b\u800c\u4e14\u6709\u56db\u4e2a\u6570\u636e\u5bc4\u5b58\u5668\uff0c\u53ef\u4ee5\u540c\u65f6\u5b58\u50a8\u56db\u4e2a\u6570\u636e\u3002</li> </ul> Danger <p>\u7531\u4e8e\u89c4\u5219\u7ec4\u53ea\u6709\u4e00\u4e2a\u6570\u636e\u5bc4\u5b58\u5668\uff0c\u5f53\u4f7f\u7528\u591a\u901a\u9053\u65f6\u6700\u597d\u914d\u5408 DMA \uff08\u6570\u636e\u642c\u8fd0\u5c0f\u52a9\u624b\uff09\u3002</p> <p>STM32\u7684ADC\u7684\u603b\u6846\u56fe\u5982\u4e0b\uff1a</p> <p></p> <p>ADC\u5f00\u59cb\u8f6c\u6362\u7684\u89e6\u53d1\u6e90\u5982\u4e0b\uff0c\u4e3b\u8981\u662f\u4e00\u4e9b\u5b9a\u65f6\u5668\u89e6\u53d1\uff0c\u5176\u4e2d\u9700\u8981\u6ce8\u610f\u7684\u662f<code>TIM4_TRGO</code>\u53ef\u4ee5\u7528\u4e8e\u89e6\u53d1\u4e3b\u6a21\u5f0f\u5b9e\u73b0\u786c\u4ef6\u7684\u5168\u81ea\u52a8\u89e6\u53d1ADC\uff0c\u907f\u514d\u9891\u7e41\u8fdb\u4e2d\u65ad\u89e6\u53d1ADC\u3002</p> <p></p> <p>\u5173\u4e8eADC\u7684\u8f6c\u6362\u901a\u9053\uff1a</p> <p></p> Danger <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1aADCCLK\u6700\u9ad8\u9891\u7387\u4e3a 14MHZ \uff0c\u6240\u4ee5ADC\u9884\u5206\u9891\u5668\u6700\u5c0f\u5e94\u4e3a 6 \u5206\u9891\uff1bREF\u53c2\u8003\u7535\u5e73\u4e00\u822c\u662f\u548cADC\u7684\u4f9b\u7535\u5f15\u811a\u76f8\u8fde\u7684\u3002</p>"},{"location":"study/STM32/7.ADC%E6%95%B0%E6%A8%A1%E8%BD%AC%E6%8D%A2/#714-adc","title":"7.1.4 ADC\u57fa\u672c\u7ed3\u6784","text":"Note <p>EOC\u5373\u8f6c\u6362\u7ed3\u675f\u6216\u6ce8\u5165\u8f6c\u6362\u7ed3\u675f\u7684\u6807\u5fd7\u4f4d\uff1b\u8fd9\u91cc\u7684\u6a21\u62df\u770b\u95e8\u72d7\u662f\u7528\u4e8e\u76d1\u63a7\u8f6c\u6362\u7ed3\u679c\u7684\u8303\u56f4\u662f\u5426\u8d85\u51fa\u9608\u503c\uff0c\u82e5\u8d85\u8fc7\u9608\u503c\u5219\u53ef\u4ee5\u7533\u8bf7\u4e2d\u65ad\u63a7\u5236\u3002</p>"},{"location":"study/STM32/7.ADC%E6%95%B0%E6%A8%A1%E8%BD%AC%E6%8D%A2/#72","title":"7.2 \u8f93\u5165\u901a\u9053\u4e0e\u8f6c\u6362\u6a21\u5f0f","text":""},{"location":"study/STM32/7.ADC%E6%95%B0%E6%A8%A1%E8%BD%AC%E6%8D%A2/#721","title":"7.2.1 \u8f93\u5165\u901a\u9053","text":"<p>GPIO\u7684 16 \u4e2a\u8f93\u5165\u901a\u9053\uff1a</p> \u901a\u9053 ADC1 ADC2 ADC3 \u901a\u90530 PA0 PA0 PA0 \u901a\u90531 PA1 PA1 PA1 \u901a\u90532 PA2 PA2 PA2 \u901a\u90533 PA3 PA3 PA3 \u901a\u90534 PA4 PA4 PF6 \u901a\u90535 PA5 PA5 PF7 \u901a\u90536 PA6 PA6 PF8 \u901a\u90537 PA7 PA7 PF9 \u901a\u90538 PB0 PB0 PF10 \u901a\u90539 PB1 PB1 \u901a\u905310 PC0 PC0 PC0 \u901a\u905311 PC1 PC1 PC1 \u901a\u905312 PC2 PC2 PC2 \u901a\u905313 PC3 PC3 PC3 \u901a\u905314 PC4 PC4 \u901a\u905315 PC5 PC5 \u901a\u905316 \u6e29\u5ea6\u4f20\u611f\u5668 \u901a\u905317 \u5185\u90e8\u53c2\u8003\u7535\u538b Note <p>ADC1\u548cADC2\u7684\u5f15\u811a\u5b8c\u5168\u76f8\u540c\uff0c\u53ef\u4ee5\u7528\u4e8e\u914d\u7f6e\u53ccADC\u6a21\u5f0f\uff0c\u4ec5\u4f5c\u4e3a\u4e86\u89e3\u5373\u53ef\u3002</p>"},{"location":"study/STM32/7.ADC%E6%95%B0%E6%A8%A1%E8%BD%AC%E6%8D%A2/#722","title":"7.2.2 \u8f6c\u6362\u6a21\u5f0f","text":"<p>\u4e3b\u8981\u7684\u8f6c\u6362\u6a21\u5f0f\u6709\u56db\u79cd\uff0c\u662f\u5355\u6b21\u8f6c\u6362\u3001\u8fde\u7eed\u8f6c\u6362\u548c\u975e\u626b\u63cf\u6a21\u5f0f\u3001\u626b\u63cf\u6a21\u5f0f\u7684\u56db\u79cd\u7ec4\u5408\u3002</p> <ul> <li>\u5355\u6b21\u8f6c\u6362 \uff1a\u5373\u5b8c\u6210\u4e00\u6b21\u8f93\u5165\u901a\u9053\u5e8f\u5217\u7684\u6a21\u6570\u8f6c\u6362\u540e\uff0c\u89e6\u53d1EOC\u6807\u5fd7\u4f4d\uff0c\u9700\u8981\u518d\u6b21\u89e6\u53d1\u624d\u4f1a\u518d\u8fdb\u884c\u8f93\u5165\u901a\u9053\u5e8f\u5217\u7684\u6a21\u6570\u8f6c\u6362\u3002</li> <li>\u8fde\u7eed\u8f6c\u6362 \uff1a\u5373\u5b8c\u6210\u4e00\u6b21\u8f93\u5165\u901a\u9053\u5e8f\u5217\u7684\u6a21\u6570\u8f6c\u6362\u540e\uff0c\u89e6\u53d1EOC\u6807\u5fd7\u4f4d\uff0c\u7d27\u63a5\u7740\u7ee7\u7eed\u8fdb\u884c\u8f93\u5165\u901a\u9053\u5e8f\u5217\u7684\u6a21\u6570\u8f6c\u6362\uff0c\u4f9d\u6b21\u5faa\u73af\u4e0d\u4f1a\u4e2d\u65ad\uff0c\u8981\u83b7\u53d6ADC\u503c\u8bfb\u53d6\u6570\u636e\u5bc4\u5b58\u5668\u5373\u53ef\u3002</li> <li>\u975e\u626b\u63cf\u6a21\u5f0f \uff1a\u5373\u8f93\u5165\u901a\u9053\u5e8f\u5217\u4e2d\u4ec5\u6709\u4e00\u4e2a\u8f93\u5165\u901a\u9053\u3002</li> <li>\u626b\u63cf\u6a21\u5f0f \uff1a\u5373\u8f93\u5165\u901a\u9053\u5e8f\u5217\u4e2d\u4ec5\u6709\u591a\u4e2a\u8f93\u5165\u901a\u9053\u3002</li> </ul> Danger <p>\u4f7f\u7528\u626b\u63cf\u6a21\u5f0f\u65f6\uff0c\u4e3a\u907f\u514d\u6570\u636e\u8986\u76d6\uff0c\u5e94\u7ed3\u5408DMA\u4f7f\u7528\u3002</p> <ol> <li>\u5355\u6b21\u8f6c\u6362\u975e\u626b\u63cf\u6a21\u5f0f</li> </ol> <p></p> <ol> <li>\u8fde\u7eed\u8f6c\u6362\uff0c\u975e\u626b\u63cf\u6a21\u5f0f</li> </ol> <p></p> <ol> <li>\u5355\u6b21\u8f6c\u6362\uff0c\u626b\u63cf\u6a21\u5f0f</li> </ol> <p></p> <ol> <li>\u8fde\u7eed\u8f6c\u6362\uff0c\u626b\u63cf\u6a21\u5f0f</li> </ol> <p></p>"},{"location":"study/STM32/7.ADC%E6%95%B0%E6%A8%A1%E8%BD%AC%E6%8D%A2/#73","title":"7.3 \u5176\u4ed6\u76f8\u5173\u77e5\u8bc6\u70b9","text":""},{"location":"study/STM32/7.ADC%E6%95%B0%E6%A8%A1%E8%BD%AC%E6%8D%A2/#731","title":"7.3.1 \u89e6\u53d1\u63a7\u5236\u6e90","text":"<p>\u5206\u4e3a\u8f6f\u4ef6\u548c\u786c\u4ef6\u89e6\u53d1\uff1a</p> <p></p>"},{"location":"study/STM32/7.ADC%E6%95%B0%E6%A8%A1%E8%BD%AC%E6%8D%A2/#732-adc","title":"7.3.2 ADC\u6570\u636e\u5bf9\u9f50","text":"<ul> <li>\u53f3\u5bf9\u9f50</li> </ul> <ul> <li>\u5de6\u5bf9\u9f50</li> </ul>"},{"location":"study/STM32/7.ADC%E6%95%B0%E6%A8%A1%E8%BD%AC%E6%8D%A2/#734","title":"7.3.4 \u8f6c\u6362\u65f6\u95f4","text":"<p>AD\u8f6c\u6362\u7684\u6b65\u9aa4\uff1a\u91c7\u6837\uff0c\u4fdd\u6301\uff0c\u91cf\u5316\uff0c\u7f16\u7801</p> <ul> <li>\u91c7\u6837\u4fdd\u6301\uff0c\u5373\u63a5\u4e00\u4e2a\u91c7\u7528\u5f00\u5173\uff0c\u5728\u91cf\u5316\u7f16\u7801\u524d\u6536\u96c6\u7535\u538b\uff0c\u91cf\u5316\u7f16\u7801\u5f00\u59cb\u540e\u65ad\u5f00\u91c7\u6837\u5f00\u5173\uff0c\u9632\u6b62\u7535\u538b\u8fde\u7eed\u8df3\u53d8\u5f71\u54cd\u8f6c\u6362\u7ed3\u679c</li> <li>\u91cf\u5316\u7f16\u7801\uff0c\u5373\u9010\u6b21\u903c\u8fd1\u6d4b\u7535\u538b\u503c</li> </ul> <p>STM32 ADC\u7684\u603b\u8f6c\u6362\u65f6\u95f4\u4e3a\uff1a     TCONV = \u91c7\u6837\u65f6\u95f4 + 12.5\u4e2aADC\u5468\u671f</p> <p>12.5\u4e2aADC\u5468\u671f\u5c31\u662f\u91cf\u5316\u7f16\u7801\u65f6\u95f4</p> <p>\u4f8b\u5982\uff1a\u5f53ADCCLK=14MHz\uff0c\u91c7\u6837\u65f6\u95f4\u4e3a1.5\u4e2aADC\u5468\u671f     TCONV = 1.5 + 12.5 = 14\u4e2aADC\u5468\u671f = 1\u03bcs</p>"},{"location":"study/STM32/7.ADC%E6%95%B0%E6%A8%A1%E8%BD%AC%E6%8D%A2/#734-adc","title":"7.3.4 ADC\u6821\u51c6","text":"<ol> <li> <p>ADC\u6709\u4e00\u4e2a\u5185\u7f6e\u81ea\u6821\u51c6\u6a21\u5f0f\u3002\u6821\u51c6\u53ef\u5927\u5e45\u51cf\u5c0f\u56e0\u5185\u90e8\u7535\u5bb9\u5668\u7ec4\u7684\u53d8\u5316\u800c\u9020\u6210\u7684\u51c6\u7cbe\u5ea6\u8bef\u5dee\u3002\u6821\u51c6\u671f\u95f4\uff0c\u5728\u6bcf\u4e2a\u7535\u5bb9\u5668\u4e0a\u90fd\u4f1a\u8ba1\u7b97\u51fa\u4e00\u4e2a\u8bef\u5dee\u4fee\u6b63\u7801(\u6570\u5b57\u503c)\uff0c\u8fd9\u4e2a\u7801\u7528\u4e8e\u6d88\u9664\u5728\u968f\u540e\u7684\u8f6c\u6362\u4e2d\u6bcf\u4e2a\u7535\u5bb9\u5668\u4e0a\u4ea7\u751f\u7684\u8bef\u5dee\u3002</p> </li> <li> <p>\u5efa\u8bae\u5728\u6bcf\u6b21\u4e0a\u7535\u540e\u6267\u884c\u4e00\u6b21\u6821\u51c6\u3002</p> </li> <li> <p>\u542f\u52a8\u6821\u51c6\u524d\uff0c ADC\u5fc5\u987b\u5904\u4e8e\u5173\u7535\u72b6\u6001\u8d85\u8fc7\u81f3\u5c11\u4e24\u4e2aADC\u65f6\u949f\u5468\u671f</p> </li> </ol>"},{"location":"study/STM32/7.ADC%E6%95%B0%E6%A8%A1%E8%BD%AC%E6%8D%A2/#74-stm32cubemx","title":"7.4 STM32CubeMX\u53c2\u6570","text":"Danger <p>stm32f103c8t6\u7684\u5916\u90e8\u4fe1\u53f7\u6e90\u4ec5\u5f15\u51fa\u4e86 10 \u4e2a\uff0c\u9700\u6ce8\u610f\u3002</p> <p></p> <ol> <li>ADC\u6a21\u5f0f\u4e00\u822c\u4f7f\u7528\u5355ADC\uff0c\u4f7f\u7528\u591aADC\u5219\u9700\u8981\u540c\u65f6\u6253\u5f00ADC1\u548cADC2\uff08\u591aADC\u4e0d\u5e38\u7528\uff09</li> <li>ADC\u8bbe\u7f6e\uff0c\u4f9d\u6b21\u4e3aADC\u6570\u636e\u5bf9\u9f50\uff0c\u626b\u63cf\u6a21\u5f0f\uff0c\u8fde\u7eed\u8f6c\u6362\uff0c\u975e\u8fde\u7eed\u8f6c\u6362</li> <li>ADC\u89c4\u5219\u7ec4\u8f6c\u6362\u6a21\u5f0f\uff0c\u4f9d\u6b21\u4e3a\u89c4\u5219\u7ec4\u8f6c\u6362\u4f7f\u80fd\uff0c\u8f6c\u6362\u901a\u9053\u6570\u91cf\uff0c\u5916\u90e8\u89e6\u53d1\u6e90\uff08\u8fd9\u91cc\u7684\u53c2\u6570\u4e00\u822c\u9ed8\u8ba4\u5373\u53ef\uff09<ul> <li>\u9700\u6ce8\u610f<code>Number Of Conversions</code>\u53c2\u6570\uff0c\u5f53\u91c7\u7528\u626b\u63cf\u6a21\u5f0f \u524d \u9700\u8981\u5c06\u5176\u6570\u503c\u63d0\u9ad8\u81f3\u9009\u7528\u901a\u9053\u7684\u6570\u91cf\uff0c\u7136\u540e\u5c31\u4f1a\u51fa\u73b0\u591a\u4e2a<code>Rank</code>\u3002</li> <li><code>Rank</code>\u8868\u793a\u4e00\u4e2a\u901a\u9053\uff0c\u4e0b\u5c5e\u53c2\u6570\u6709\u6240\u5c5e\u901a\u9053\uff0c\u91c7\u7528\u5468\u671f\uff0c\u4e00\u822c\u9700\u53c2\u8003\u624b\u518c\u8c03\u6574\u91c7\u7528\u5468\u671f\uff0c\u9ed8\u8ba4\u4e5f\u53ef\u4ee5\u3002</li> </ul> </li> <li>\u6a21\u62df\u5f00\u95e8\u72d7</li> </ol>"},{"location":"study/STM32/7.ADC%E6%95%B0%E6%A8%A1%E8%BD%AC%E6%8D%A2/#75-adc","title":"7.5 ADC\u8bfb\u53d6\u7535\u538b\u503c","text":"<p>\u5747\u91c7\u7528\u5355ADC</p> <p>\u7535\u4f4d\u8ba1\u63a5\u7ebf\u56fe\uff0c\u53c2\u8003\u6c5f\u534f\u79d1\u6280\u8d44\u6599\uff0c\u5c06GPIO\u5f15\u811a\u6309\u60c5\u51b5\u4fee\u6539\uff1a</p> <p></p>"},{"location":"study/STM32/7.ADC%E6%95%B0%E6%A8%A1%E8%BD%AC%E6%8D%A2/#751","title":"7.5.1 \u5355\u6b21\u8f6c\u6362\u975e\u626b\u63cf\u6a21\u5f0f","text":"<p>\u914d\u7f6e\u4e32\u53e3\u8f93\u51fa\u7535\u538b\u503c</p> <p></p> <p>\u5b9a\u4e49\u4e32\u53e3\uff0c\u6a21\u62df\u503c\uff0c\u7535\u538b\u53d8\u91cf</p> C<pre><code>/* USER CODE BEGIN 2 */\nuint32_t value = 0;\ndouble voltage = 0.0;\nchar message[20] = \"\";\n/* USER CODE END 2 */\n</code></pre> <p>\u4e3b\u8981\u529f\u80fd\u4ee3\u7801</p> C<pre><code>/* USER CODE BEGIN WHILE */\nwhile (1) {\n    // \u6253\u5f00ADC\u8f6c\u6362\n    HAL_ADC_Start(&amp;hadc1);\n    //\u7b49\u5f85ADC\u8f6c\u6362\uff0c\u9632\u6b62\u7b2c\u4e00\u6b21\u8bfb\u53d6\u9ed8\u8ba4\u503c\n    HAL_ADC_PollForConversion(&amp;hadc1, HAL_MAX_DELAY);\n    //\u8bfb\u53d6ADC\u6570\u636e\u5bc4\u5b58\u5668\u7684\u503c\n    value = HAL_ADC_GetValue(&amp;hadc1);\n    //\u7535\u538b\u6362\u7b97\n    voltage = (value / 4095.0) * 3.3 ;\n\n    sprintf(message, \"ADC: %lu   %.2fV\", value, voltage);\n    //\u4e32\u53e3\u53d1\u9001\u51fd\u6570\n    HAL_UART_Transmit(&amp;huart1, message, strlen(message), HAL_MAX_DELAY);\n    HAL_Delay(500);\n    /* USER CODE END WHILE */\n\n    /* USER CODE BEGIN 3 */\n}\n/* USER CODE END 3 */\n</code></pre> <p>HAL_MAX_DELAY\u4e3a\u4e00\u76f4\u7b49\u5f85\uff0c\u5173\u4e8e\u4e32\u53e3\u53d1\u9001\u51fd\u6570\u53ef\u4ee5\u53bb\u7b2c\u4e5d\u7ae0\u7784\u4e00\u773c\uff0c\u4e5f\u53ef\u4ee5\u5148\u4e0d\u7ba1\u5c31\u7528\u5c31\u53ef\u4ee5\u3002</p> <p></p> <p>\u4e0d\u96be\u770b\u51fa\u5373\u4f7f\u7535\u4f4d\u8ba1\u65cb\u8f6c\u5230\u6700\u5927\uff0cADC\u503c\u4e5f\u4e0d\u662f\u6700\u5927\u7684 4095 \uff0c\u662f\u56e0\u4e3a\u6211\u4eec\u7f3a\u5c11\u4e86\u6821\u51c6\u7684\u4e00\u6b65\uff1a</p> C<pre><code>/* USER CODE BEGIN 2 */\nuint32_t value = 0;\ndouble voltage = 0.0;\nchar message[20] = \"\";\n//ADC\u6821\u51c6\nHAL_ADCEx_Calibration_Start(&amp;hadc1);\n/* USER CODE END 2 */\n</code></pre>"},{"location":"study/STM32/7.ADC%E6%95%B0%E6%A8%A1%E8%BD%AC%E6%8D%A2/#752","title":"7.5.2 \u8fde\u7eed\u8f6c\u6362\u975e\u626b\u63cf\u6a21\u5f0f","text":"<p>\u6253\u5f00\u8fde\u7eed\u8f6c\u6362\u5373\u53ef\uff1a</p> <p></p> <p>\u4ee3\u7801\u53ea\u9700\u8981\u628a\u5f00\u542f\u8f6c\u6362\u548c\u7b49\u5f85\u8f6c\u6362\u7684\u51fd\u6570\u653e\u5728\u5faa\u73af\u524d\u5373\u53ef</p> C<pre><code>/* USER CODE BEGIN 2 */\nuint32_t value = 0;\ndouble voltage = 0.0;\nchar message[20] = \"\";\nHAL_ADCEx_Calibration_Start(&amp;hadc1);\nHAL_ADC_Start(&amp;hadc1);\nHAL_ADC_PollForConversion(&amp;hadc1, HAL_MAX_DELAY);\n/* USER CODE END 2 */\n</code></pre>"},{"location":"study/STM32/7.ADC%E6%95%B0%E6%A8%A1%E8%BD%AC%E6%8D%A2/#753","title":"7.5.3 \u626b\u63cf\u6a21\u5f0f\u8bf4\u660e","text":"<p>\u7531\u4e8e\u89c4\u5219\u7ec4\u591a\u901a\u9053\u4f1a\u6709\u6570\u636e\u8986\u76d6\u95ee\u9898\uff0c\u6545\u5728DMA\u7ae0\u8282\u5728\u5b9e\u73b0ADC\u7684\u591a\u901a\u9053\u626b\u63cf\u6a21\u5f0f\u3002</p>"},{"location":"study/STM32/8.DMA/","title":"\u7b2c\u516b\u7ae0 DMA","text":""},{"location":"study/STM32/8.DMA/#81-dma","title":"8.1 DMA","text":""},{"location":"study/STM32/8.DMA/#811-dma","title":"8.1.1 DMA\u7b80\u4ecb","text":"<ul> <li>DMA\uff08Direct Memory Access\uff09\u76f4\u63a5\u5b58\u50a8\u5668\u5b58\u53d6</li> <li>DMA\u53ef\u4ee5\u63d0\u4f9b\u5916\u8bbe\u548c\u5b58\u50a8\u5668\u6216\u8005\u5b58\u50a8\u5668\u548c\u5b58\u50a8\u5668\u4e4b\u95f4\u7684\u9ad8\u901f\u6570\u636e\u4f20\u8f93\uff0c\u65e0\u987bCPU\u5e72\u9884\uff0c\u8282\u7701\u4e86CPU\u7684\u8d44\u6e90</li> <li>12\u4e2a\u72ec\u7acb\u53ef\u914d\u7f6e\u7684\u901a\u9053\uff1a DMA1\uff087\u4e2a\u901a\u9053\uff09\uff0c DMA2\uff085\u4e2a\u901a\u9053\uff09</li> <li>\u6bcf\u4e2a\u901a\u9053\u90fd\u652f\u6301\u8f6f\u4ef6\u89e6\u53d1\u548c\u7279\u5b9a\u7684\u786c\u4ef6\u89e6\u53d1</li> </ul> <p>STM32F103C8T6 DMA\u8d44\u6e90\uff1aDMA1\uff087\u4e2a\u901a\u9053\uff09</p> Note <p>\u5916\u8bbe\u548c\u5b58\u50a8\u5668\u4e4b\u95f4\u7684\u6570\u636e\u8f6c\u8fd0\u4e00\u822c\u4f7f\u7528\u786c\u4ef6\u89e6\u53d1\uff0c\u6bd4\u5982AD\u8f6c\u6362\u5b8c\u6210\u540e\u89e6\u53d1\uff1b\u800c\u5b58\u50a8\u5668\u548c\u5b58\u50a8\u5668\u4e4b\u95f4\u6570\u636e\u8f6c\u8fd0\u4e00\u822c\u4f7f\u7528\u8f6f\u4ef6\u89e6\u53d1\uff0c\u53ef\u4ee5\u5feb\u901f\u7684\u628a\u6570\u636e\u8f6c\u8fd0\u5230\u60f3\u8981\u7684\u4f4d\u7f6e\u3002\u6ce8\u610f\u8fd9\u91cc\u7684\u5916\u8bbe\u6307\u6570\u636e\u5bc4\u5b58\u5668\uff0c\u5982ADC\u7684\u6570\u636e\u5bc4\u5b58\u5668\uff1b\u5b58\u50a8\u5668\u6307Flash\u548cSRAM</p>"},{"location":"study/STM32/8.DMA/#812","title":"8.1.2 \u5b58\u50a8\u5668\u6620\u50cf","text":"\u7c7b\u578b \u8d77\u59cb\u5730\u5740 \u5b58\u50a8\u5668 \u7528\u9014 ROM 0x0800 0000 \u7a0b\u5e8f\u5b58\u50a8\u5668Flash \u5b58\u50a8C\u8bed\u8a00\u7f16\u8bd1\u540e\u7684\u7a0b\u5e8f\u4ee3\u7801 ROM 0x1FFF F000 \u7cfb\u7edf\u5b58\u50a8\u5668 \u5b58\u50a8BootLoader\uff0c\u7528\u4e8e\u4e32\u53e3\u4e0b\u8f7d ROM 0x1FFF F800 \u9009\u9879\u5b57\u8282 \u5b58\u50a8\u4e00\u4e9b\u72ec\u7acb\u4e8e\u7a0b\u5e8f\u4ee3\u7801\u7684\u914d\u7f6e\u53c2\u6570 RAM 0x2000 0000 \u8fd0\u884c\u5185\u5b58SRAM \u5b58\u50a8\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u7684\u4e34\u65f6\u53d8\u91cf RAM 0x4000 0000 \u5916\u8bbe\u5bc4\u5b58\u5668 \u5b58\u50a8\u5404\u4e2a\u5916\u8bbe\u7684\u914d\u7f6e\u53c2\u6570 RAM 0xE000 0000 \u5185\u6838\u5916\u8bbe\u5bc4\u5b58\u5668 \u5b58\u50a8\u5185\u6838\u5404\u4e2a\u5916\u8bbe\u7684\u914d\u7f6e\u53c2\u6570"},{"location":"study/STM32/8.DMA/#813-dma","title":"8.1.3 DMA\u6846\u56fe","text":"<ol> <li>AHB\u4ece\u8bbe\u5907 \uff0c\u7528\u4e8e\u914d\u7f6eDMA\u53c2\u6570</li> <li>\u4ef2\u88c1\u5668 \uff0cDMA\u5185\u90e8\u7684\u4ef2\u88c1\u7528\u4e8e\u7ed9\u5185\u90e8\u901a\u9053\u914d\u7f6e\u4f18\u5148\u7ea7\uff0c\u603b\u7ebf\u77e9\u9635\u4e5f\u662f\u4e00\u4e2a\u4ef2\u88c1\u5668\uff0c\u7528\u4e8e\u5904\u7406CPU\u548cDMA\u4efb\u52a1\u51b2\u7a81</li> <li>DMA\u7684\u5185\u90e8\u901a\u9053 \uff0cDMA1\u6709 7 \u4e2a\uff0c DMA2\u6709 5 \u4e2a</li> <li>Flash \uff0cCPU\u548cDMA\u76f4\u63a5\u8bbf\u95eeFlash\u53ea\u80fd\u8bfb\u800c\u4e0d\u80fd\u5199\uff0c\u8981\u5199\u5165\u6570\u636e\u9700\u8981\u4f7f\u7528Flash\u63a5\u53e3\u63a7\u5236\u5668</li> </ol>"},{"location":"study/STM32/8.DMA/#814-dma","title":"8.1.4 DMA\u57fa\u672c\u7ed3\u6784","text":"<ul> <li>\u89e6\u53d1\u6a21\u5f0f \uff0cM2M\u7f6e 1 \u4e3a\u8f6f\u4ef6\u89e6\u53d1\uff0c\u7f6e 0 \u4e3a\u786c\u4ef6\u89e6\u53d1\u3002</li> <li>\u4f20\u8f93\u8ba1\u6570\u5668 \uff0c\u6bcf\u89e6\u53d1\u4e00\u6b21\uff0c\u4f20\u8f93\u8ba1\u6570\u5668\u51cf\u4e00\uff0c\u5f53\u4f20\u8f93\u8ba1\u6570\u5668\u4e3a 0 \u65f6\uff0c\u5373\u4f7f\u89e6\u53d1\u8f6c\u8fd0\uff0c\u4e5f\u4e0d\u4f1a\u518d\u53d1\u751f\u6570\u636e\u8f6c\u8fd0\u3002</li> <li>\u81ea\u52a8\u91cd\u88c5\u5668 \uff0c\u5f53\u4f20\u8f93\u8ba1\u6570\u5668\u51cf\u81f3 0 \uff0c\u4f1a\u81ea\u52a8\u91cd\u88c5\uff0c\u5373\u5faa\u73af\u6a21\u5f0f\uff1b\u4e0eADC\u7684\u8fde\u7eed\u6a21\u5f0f\u7c7b\u4f3c\uff0c\u914d\u5408ADC\u626b\u63cf\u6a21\u5f0f\u4f7f\u7528\u3002</li> <li>\u5916\u8bbe\u4e0e\u5b58\u50a8\u5668 \uff0c\u8fdb\u884c\u6570\u636e\u8f6c\u8fd0\u9700\u8981\u7684\u4e09\u4e2a\u53c2\u6570\uff0c\u5373\u8d77\u59cb\u5730\u5740\u3001\u6570\u636e\u5bbd\u5ea6\u3001\u5730\u5740\u662f\u5426\u81ea\u589e\u3002</li> </ul> Danger <p>\u8f6f\u4ef6\u89e6\u53d1\u548c\u5faa\u73af\u6a21\u5f0f\u4e0d\u8981\u540c\u65f6\u4f7f\u7528\uff0c\u56e0\u4e3a\u8f6f\u4ef6\u89e6\u53d1\u4e0d\u9700\u8981\u65f6\u673a\uff0c \u65e8\u5728\u5feb\u901f\u5c06\u4f20\u8f93\u8ba1\u6570\u5668\u6e05\u96f6 \uff0c\u800c\u5faa\u73af\u6a21\u5f0f\u662f \u6e05\u96f6\u540e\u81ea\u52a8\u91cd\u88c5 \uff0c\u4e24\u8005\u903b\u8f91\u53e0\u52a0\uff0cDMA\u4fbf\u4f1a\u4e00\u76f4\u8fdb\u884c\u65e0\u6cd5\u505c\u6b62\u3002\u53e6\u5916\uff0c\u5728\u5199\u5165\u4f20\u8f93\u8ba1\u6570\u5668\u4e4b\u524d\uff0c\u9700\u8981DMA\u6682\u505c\u5de5\u4f5c\u3002</p> <p></p>"},{"location":"study/STM32/8.DMA/#82-dma","title":"8.2 DMA\u8bf7\u6c42\u4e0e\u6570\u636e\u5bbd\u5ea6","text":""},{"location":"study/STM32/8.DMA/#821-dma","title":"8.2.1 DMA\u8bf7\u6c42\u6620\u50cf","text":"Note <p>\u4ec5\u5173\u6ce8\u5404\u901a\u9053\u7684\u5916\u8bbe\u8bf7\u6c42\u4fe1\u53f7\uff0c\u540e\u90e8\u5206\u4fe1\u53f7\u770bDMA\u57fa\u672c\u7ed3\u6784\u56fe\u66f4\u597d\u7406\u89e3\u3002</p> <p></p>"},{"location":"study/STM32/8.DMA/#822","title":"8.2.2 \u6570\u636e\u5bbd\u5ea6\u4e0e\u5bf9\u9f50","text":"<p>\u603b\u7684\u6765\u8bf4\uff0c\u8868\u683c\u7684\u610f\u601d\u5c31\u662f\uff1a</p> <ol> <li>\u5c0f\u7684\u6570\u636e\u8f6c\u5230\u5927\u7684\u91cc\u9762\uff0c\u9ad8\u4f4d\u8865\u96f6</li> <li>\u5927\u7684\u6570\u636e\u8f6c\u5230\u5c0f\u7684\u91cc\u9762\uff0c\u9ad8\u4f4d\u820d\u5f03</li> </ol> <p></p>"},{"location":"study/STM32/8.DMA/#83-stm32cubemx","title":"8.3 STM32CubeMX\u53c2\u6570","text":"<p>\u5173\u4e8e\u6570\u636e\u5bbd\u5ea6\u5206\u4e3a \u5b57(Word) \u3001 \u534a\u5b57(Half Word) \u3001 \u5b57\u8282(Byte)\u3002\u53e6\u5916\uff0c\u201cIncrement Address\u201d \u6307\u5730\u5740\u662f\u5426\u81ea\u589e\u3002</p> Waring <p>\u6211\u4eec\u5e94\u4e86\u89e3\uff0c\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u662f\u4e00\u4e2a \u6bd4\u7279\u4f4d(Bit) \uff0c\u4e00\u4e2a \u5b57\u8282(Byte) \u662f 8 \u4e2aBit\u3002\u800c \u5b57(Word) \u53d6\u51b3\u4e8e\u5904\u7406\u5668\uff0c\u4f8b\u5982\uff1a\u5bf9\u4e8e32\u4f4d\u7684\u5355\u7247\u673a\uff0c\u4e00\u4e2a \u5b57(Word)\u5373\u4e3a 32 Bit(\u56db\u4e2a\u5b57\u8282)\uff0c\u534a\u5b57\u5c31\u662f 16 Bit(\u4e24\u4e2a\u5b57\u8282)\u3002</p> <p></p>"},{"location":"study/STM32/8.DMA/#84","title":"8.4 \u5de5\u7a0b\u914d\u7f6e","text":""},{"location":"study/STM32/8.DMA/#841","title":"8.4.1 \u5b58\u50a8\u5668\u5230\u5b58\u50a8\u5668","text":"<ul> <li>\u914d\u7f6e\u4e00\u4e2aDMA\u901a\u9053\uff0c\u52fe\u9009\u5730\u5740\u81ea\u589e\u548c\u6570\u636e\u5bbd\u5ea6\u4e3a\u5b57\u8282</li> <li>\u914d\u7f6eUART\u8f93\u51fa\u6570\u636e</li> </ul> <p>\u5b9a\u4e49\u6d4b\u8bd5\u6570\u7ec4\u4e3a\u5168\u5c40\u53d8\u91cf</p> C<pre><code>/* USER CODE BEGIN PV */\nuint8_t DataA[4] = {0x01, 0x02, 0x03, 0x04};                //\u5b9a\u4e49\u6d4b\u8bd5\u6570\u7ec4DataA\nuint8_t DataB[4] = {1, 1, 1, 1};                            //\u5b9a\u4e49\u6d4b\u8bd5\u6570\u7ec4DataB\n/* USER CODE END PV */\n</code></pre> Danger <p>\u8fd9\u91cc\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u4e3a<code>uint8_t</code> \uff0c\u56e0\u4e3a<code>uint8_t</code>\u6b63\u597d\u662f\u4e00\u4e2a\u5b57\u8282</p> <p>\u5efa\u7acb\u4e00\u4e2aDMA\u8f6c\u8fd0\u51fd\u6570\uff0c\u5c06\u8f6c\u8fd0\u6570\u7ec4\u548c\u76ee\u6807\u6570\u7ec4\u586b\u8fdb\u53bb\uff0c\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u662f\u6570\u636e\u957f\u5ea6\u4e3a 4</p> C<pre><code>/* USER CODE BEGIN 0 */\nvoid MyDMA_Transfer(void) {\n    HAL_DMA_Start(&amp;hdma_memtomem_dma1_channel2, (uint32_t)DataA, (uint32_t)DataB, 4);\n    HAL_DMA_PollForTransfer(&amp;hdma_memtomem_dma1_channel2, HAL_DMA_FULL_TRANSFER, HAL_MAX_DELAY);\n}\n/* USER CODE END 0 */\n</code></pre> <p>\u4e32\u53e3\u53d1\u9001\u7f13\u51b2\u533a</p> C<pre><code>/* USER CODE BEGIN 2 */\nchar buffer[64];\n/* USER CODE END 2 */\n</code></pre> <p>\u4e3b\u5faa\u73af\u4ee3\u7801 \uff0c\u8f6c\u6362\u6570\u7ec4\u81ea\u589e\uff0c\u8c03\u7528\u8f6c\u6362\u51fd\u6570\uff0c\u4e32\u53e3\u53d1\u9001\u8f6c\u6362\u524d\u540e\u7684\u6570\u636e</p> C<pre><code>/* USER CODE BEGIN WHILE */\nwhile (1) {\n    DataA[0]++;        //\u53d8\u6362\u6d4b\u8bd5\u6570\u636e\n    DataA[1]++;\n    DataA[2]++;\n    DataA[3]++;\n    MyDMA_Transfer();\n    for (uint8_t i = 0; i &lt; 4; i++) {\n    int len1 = snprintf(buffer, sizeof(buffer), \"Array[%d] = %hhu\\r\\n\", i, DataA[i]);\n    HAL_UART_Transmit(&amp;huart1, (uint8_t *) buffer, len1, HAL_MAX_DELAY);  // \u4e32\u53e3\u53d1\u9001\n    int len2 = snprintf(buffer, sizeof(buffer), \"Array[%d] = %hhu\\r\\n\", i, DataB[i]);\n    HAL_UART_Transmit(&amp;huart1, (uint8_t *) buffer, len2, HAL_MAX_DELAY);  // \u4e32\u53e3\u53d1\u9001\n}\n\n    HAL_Delay(2000);\n    /* USER CODE END WHILE */\n\n    /* USER CODE BEGIN 3 */\n}\n/* USER CODE END 3 */\n</code></pre> <p>\u6d4b\u8bd5\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"study/STM32/8.DMA/#842-adcdma","title":"8.4.2 ADC\u5355\u6b21\u8f6c\u6362\u626b\u63cf\u6a21\u5f0fDMA\u8f6c\u8fd0","text":"<p>\u8fd9\u91cc\u7ee7\u7eed\u501f\u9274\u6c5f\u534f\u79d1\u6280\u7684\u56fe\uff0c\u6211\u5c06\u4e24\u4e2a\u7535\u4f4d\u8ba1\u63a5\u5728PA3\u548cPA4\uff0c\u4e5f\u53ef\u4ee5\u8282\u70ed\u654f\u7535\u963b\u7b49\u53ef\u4ee5\u6d4b\u6a21\u62df\u91cf\u7684\u4f20\u611f\u5668\u3002</p> <p></p> <p>STM32CubeMX\u914d\u7f6e</p> <p></p> <p>DMA\u8bbe\u7f6e\uff0c\u534a\u5b57\u4f20\u8f93</p> <p></p> <p>\u914d\u7f6e\u4e32\u53e3\u8f93\u51fa</p> <p></p> <p>\u914d\u7f6e\u65f6\u949f</p> <p></p> <p>\u5b9a\u4e49\u6570\u636e\u63a5\u6536\u6570\u7ec4\u5168\u5c40\u53d8\u91cf</p> C<pre><code>/* USER CODE BEGIN PV */\n//\u63a5\u6536\u6570\u7ec4\nuint16_t values[2];\n//\u4e32\u53e3\u7f13\u5b58\nchar buffer[64];\n/* USER CODE END PV */\n</code></pre> <p>\u5728\u975e\u8fde\u7eed\u6a21\u5f0f\u4e0b\uff0c\u4e00\u6b21ADC\u6570\u636e\u5168\u90e8\u8f6c\u6362\u5b8c\u6210\u4f1a\u89e6\u53d1\u4e2d\u65ad\uff0c\u6240\u4ee5\u5728 \u4e2d\u65ad\u4e2d\u8bfb\u53d6\u6570\u636e\u00a0\uff1a</p> C<pre><code>/* USER CODE BEGIN 4 */\nvoid HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc) {\n    if (hadc == &amp;hadc1) {\n        sprintf(buffer, \"%d %d\", values[0], values[1]);\n        HAL_UART_Transmit(&amp;huart1, (uint8_t *)buffer, strlen(buffer), HAL_MAX_DELAY);\n    }\n}\n/* USER CODE END 4 */\n</code></pre> <p>\u4e3b\u51fd\u6570\uff0c\u8c03\u7528ADC\u6821\u51c6\u548c\u5f00\u59cb\uff0c\u56e0\u4e3a\u975e\u8fde\u7eed\u6a21\u5f0f\uff0c ADC\u5f00\u59cb\u653e\u5faa\u73af\u4e2d</p> C<pre><code>/* USER CODE BEGIN 2 */\nHAL_ADCEx_Calibration_Start(&amp;hadc1);\n/* USER CODE END 2 */\n\n/* Infinite loop */\n/* USER CODE BEGIN WHILE */\nwhile (1) {\n    HAL_ADC_Start_DMA(&amp;hadc1, (uint32_t *) values, 2);\n    HAL_Delay(500);\n    /* USER CODE END WHILE */\n\n    /* USER CODE BEGIN 3 */\n}\n/* USER CODE END 3 */\n</code></pre> <p></p>"},{"location":"study/STM32/8.DMA/#843-adcdma","title":"8.4.3 ADC\u8fde\u7eed\u8f6c\u6362\u626b\u63cf\u6a21\u5f0fDMA\u5faa\u73af\u8f6c\u8fd0","text":"<p>\u5f00\u542fADC\u8fde\u7eed\u6a21\u5f0f\uff0c\u7ecf\u6d4b\u8bd5\u8fd9\u91cc\u9700\u8981\u628a \u91c7\u6837\u65f6\u95f4\u63d0\u9ad8\u00a0\uff0c\u4e0d\u7136\u91c7\u4e0d\u5230\u6570\u636e\u3002</p> <p></p> <p>DMA\u5faa\u73af\u6a21\u5f0f\uff0c\u5176\u4f59\u4e0e\u4e0a\u4e2a\u5de5\u7a0b\u4e00\u81f4</p> <p></p> <p>\u53ea\u9700\u5c06ADC\u5f00\u59cb\u62ff\u51fa\u5faa\u73af\uff0c\u5220\u9664\u4e2d\u65ad\u5e76\u628a\u4e2d\u65ad\u7684\u7a0b\u5e8f\u653e\u4e3b\u5faa\u73af\uff0c\u56e0\u4e3a\u8fde\u7eed\u6a21\u5f0f\u53ef\u4ee5\u968f\u65f6\u8bfb\u53d6ADC\u503c\u3002</p> C<pre><code>/* USER CODE BEGIN 2 */\nHAL_ADCEx_Calibration_Start(&amp;hadc1);\nHAL_ADC_Start_DMA(&amp;hadc1, (uint32_t *) values, 2);\n/* USER CODE END 2 */\n\n/* Infinite loop */\n/* USER CODE BEGIN WHILE */\nwhile (1) {\n    HAL_Delay(500);\n    sprintf(buffer, \"%d %d\", values[0], values[1]);\n    HAL_UART_Transmit(&amp;huart1, (uint8_t *) buffer, strlen(buffer), HAL_MAX_DELAY);\n\n    /* USER CODE END WHILE */\n\n    /* USER CODE BEGIN 3 */\n}\n/* USER CODE END 3 */\n</code></pre>"},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/","title":"\u7b2c\u4e5d\u7ae0 UART","text":""},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#91","title":"9.1 \u901a\u4fe1\u534f\u8bae","text":"<ul> <li>\u901a\u4fe1\u7684\u76ee\u7684\uff1a \u5c06\u4e00\u4e2a\u8bbe\u5907\u7684\u6570\u636e\u4f20\u9001\u5230\u53e6\u4e00\u4e2a\u8bbe\u5907\uff0c\u6269\u5c55\u786c\u4ef6\u7cfb\u7edf</li> <li>\u901a\u4fe1\u534f\u8bae\uff1a \u5236\u5b9a\u901a\u4fe1\u7684\u89c4\u5219\uff0c\u901a\u4fe1\u53cc\u65b9\u6309\u7167\u534f\u8bae\u89c4\u5219\u8fdb\u884c\u6570\u636e\u6536\u53d1</li> </ul> \u540d\u79f0 \u5f15\u811a \u53cc\u5de5 \u65f6\u949f \u7535\u5e73 \u8bbe\u5907 USART TX\u3001RX \u5168\u53cc\u5de5 \u5f02\u6b65 \u5355\u7aef \u70b9\u5bf9\u70b9 I2C SCL\u3001SDA \u534a\u53cc\u5de5 \u540c\u6b65 \u5355\u7aef \u591a\u8bbe\u5907 SPI SCLK\u3001MOSI\u3001MISO\u3001CS \u5168\u53cc\u5de5 \u540c\u6b65 \u5355\u7aef \u591a\u8bbe\u5907 CAN CAN_H\u3001CAN_L \u534a\u53cc\u5de5 \u5f02\u6b65 \u5dee\u5206 \u591a\u8bbe\u5907 USB DP\u3001DM \u534a\u53cc\u5de5 \u5f02\u6b65 \u5dee\u5206 \u70b9\u5bf9\u70b9 <p>\u53cc\u5de5\uff1a\u6307\u901a\u4fe1\u53cc\u65b9\u662f\u5426\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\u53cc\u5411\u901a\u4fe1\uff08\u53d1\u9001\u548c\u63a5\u6536\uff09\u3002</p> <p>\u5355\u5de5\uff1a\u6570\u636e\u53ea\u80fd\u4ece\u4e00\u4e2a\u8bbe\u5907\u5230\u53e6\u4e00\u4e2a\u8bbe\u5907\uff0c\u4e0d\u80fd\u53cd\u7740\u6765\u3002</p> <p>\u65f6\u949f\uff1a I2C \u548c SPI \u6709\u5355\u72ec\u7684\u65f6\u949f\u7ebf\uff0c\u6240\u4ee5\u662f\u540c\u6b65\u3002</p> <p>\u7535\u5e73\uff1a\u5355\u7aef\u4fe1\u53f7\uff0c\u5373\u5f15\u811a\u7684\u9ad8\u4f4e\u7535\u5e73\u662f\u76f8\u5bf9GND\u7684\u7535\u538b\u5dee\uff0c\u6240\u4ee5\u9700\u8981\u5171\u5730\u3002</p>"},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#92","title":"9.2 \u4e32\u53e3\u901a\u4fe1","text":""},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#921","title":"9.2.1 \u4e32\u53e3\u901a\u4fe1\u7b80\u4ecb","text":"<ul> <li>\u4e32\u53e3\u662f\u4e00\u79cd\u5e94\u7528\u5341\u5206\u5e7f\u6cdb\u7684\u901a\u8baf\u63a5\u53e3\uff0c\u4e32\u53e3\u6210\u672c\u4f4e\u3001\u5bb9\u6613\u4f7f\u7528\u3001\u901a\u4fe1\u7ebf\u8def\u7b80\u5355\uff0c\u53ef\u5b9e\u73b0\u4e24\u4e2a\u8bbe\u5907\u7684\u4e92\u76f8\u901a\u4fe1</li> <li>\u5355\u7247\u673a\u7684\u4e32\u53e3\u53ef\u4ee5\u4f7f\u5355\u7247\u673a\u4e0e\u5355\u7247\u673a\u3001\u5355\u7247\u673a\u4e0e\u7535\u8111\u3001\u5355\u7247\u673a\u4e0e\u5404\u5f0f\u5404\u6837\u7684\u6a21\u5757\u4e92\u76f8\u901a\u4fe1\uff0c\u6781\u5927\u5730\u6269\u5c55\u4e86\u5355\u7247\u673a\u7684\u5e94\u7528\u8303\u56f4\uff0c\u589e\u5f3a\u4e86\u5355\u7247\u673a\u7cfb\u7edf\u7684\u786c\u4ef6\u5b9e\u529b</li> </ul>"},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#922","title":"9.2.2 \u786c\u4ef6\u7535\u8def","text":"<ul> <li>\u7b80\u5355\u53cc\u5411\u4e32\u53e3\u901a\u4fe1\u6709\u4e24\u6839\u901a\u4fe1\u7ebf\uff08\u53d1\u9001\u7aefTX\u548c\u63a5\u6536\u7aefRX\uff09</li> <li>TX\u4e0eRX\u8981\u4ea4\u53c9\u8fde\u63a5</li> <li>\u5f53\u53ea\u9700\u5355\u5411\u7684\u6570\u636e\u4f20\u8f93\u65f6\uff0c\u53ef\u4ee5\u53ea\u63a5\u4e00\u6839\u901a\u4fe1\u7ebf</li> <li>\u5f53\u7535\u5e73\u6807\u51c6\u4e0d\u4e00\u81f4\u65f6\uff0c\u9700\u8981\u52a0\u7535\u5e73\u8f6c\u6362\u82af\u7247</li> </ul>"},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#923","title":"9.2.3 \u7535\u5e73\u6807\u51c6","text":"<ul> <li>\u7535\u5e73\u6807\u51c6\u662f\u6570\u636e1\u548c\u6570\u636e0\u7684\u8868\u8fbe\u65b9\u5f0f\uff0c\u662f\u4f20\u8f93\u7ebf\u7f06\u4e2d\u4eba\u4e3a\u89c4\u5b9a\u7684\u7535\u538b\u4e0e\u6570\u636e\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u4e32\u53e3\u5e38\u7528\u7684\u7535\u5e73\u6807\u51c6\u6709\u5982\u4e0b\u4e09\u79cd\uff1a</li> <li>TTL\u7535\u5e73\uff1a+3.3V \u6216 +5V \u8868\u793a 1\uff0c0V \u8868\u793a 0</li> <li>RS232\u7535\u5e73\uff1a-3 \u81f3 -15V \u8868\u793a 1\uff0c+3 \u81f3 +15V \u8868\u793a 0</li> <li>RS485\u7535\u5e73\uff1a\u4e24\u7ebf\u538b\u5dee +2 \u81f3 +6V \u8868\u793a 1\uff0c-2 \u81f3 -6V \u8868\u793a 0\uff08\u5dee\u5206\u4fe1\u53f7\uff09</li> </ul>"},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#924","title":"9.2.4 \u4e32\u53e3\u53c2\u6570\u53ca\u65f6\u5e8f","text":"<ul> <li>\u6ce2\u7279\u7387\uff1a \u4e32\u53e3\u901a\u4fe1\u7684\u901f\u7387</li> <li>\u8d77\u59cb\u4f4d\uff1a \u6807\u5fd7\u4e00\u4e2a\u6570\u636e\u5e27\u7684\u5f00\u59cb\uff0c \u56fa\u5b9a\u4e3a\u4f4e\u7535\u5e73</li> <li>\u6570\u636e\u4f4d\uff1a \u6570\u636e\u5e27\u7684\u6709\u6548\u8f7d\u8377\uff0c1 \u4e3a\u9ad8\u7535\u5e73\uff0c0 \u4e3a\u4f4e\u7535\u5e73\uff0c\u4f4e\u4f4d\u5148\u884c</li> <li>\u6821\u9a8c\u4f4d\uff1a \u7528\u4e8e\u6570\u636e\u9a8c\u8bc1\uff0c\u6839\u636e\u6570\u636e\u4f4d\u8ba1\u7b97\u5f97\u6765(\u65e0\u6821\u9a8c\u3001\u5947\u6821\u9a8c--\u5373\u4fdd\u6301\u4e8c\u8fdb\u5236\u6570\u636e1\u7684\u4e2a\u6570\u4e3a\u5947\u6570\u3001\u5076\u6821\u9a8c)</li> <li>\u505c\u6b62\u4f4d\uff1a \u7528\u4e8e\u6570\u636e\u5e27\u95f4\u9694\uff0c \u56fa\u5b9a\u4e3a\u9ad8\u7535\u5e73</li> </ul> <p>Note</p> <p>\u6821\u9a8c\u4f4d\u5206\u4e3a--\u5947\u6821\u9a8c--\u5076\u6821\u9a8c--\u65e0\u6821\u9a8c--\u4e09\u79cd\u3002\u65e0\u6821\u9a8c\u5373\u4e3a\u4e0a\u56fe\u5de6\u4fa7\u6548\u679c\uff0c\u5947\u5076\u6821\u9a8c\u5373\u4e3a\u5224\u65ad\u6570\u636e\u9ad8\u7535\u5e73\u7684\u4e2a\u6570\u662f\u4e3a\u5947\u6570\u6216\u662f\u5076\u6570\uff0c\u5728\u6700\u540e\u8865\u4e00\u4f4d\u6821\u9a8c\u4f4d\u3002\u4f8b\u5982\uff0c\u82e5\u4e3a\u5947\u6821\u9a8c\u4e14\u6570\u636e\u4e2d\u6709\u5947\u6570\u4e2a\u9ad8\u7535\u5e73\uff0c\u5219\u6700\u540e\u4e00\u4f4d\u8865\u4e00\u4e2a 1 \uff0c\u5426\u5219\u8865\u4e00\u4e2a 0 \uff0c\u5076\u6821\u9a8c\u5219\u540c\u7406\u7c7b\u4f3c\u3002</p>"},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#93-usart","title":"9.3 USART\u5916\u8bbe","text":""},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#931-usart","title":"9.3.1 USART\u4ecb\u7ecd","text":"<ul> <li>USART\uff08Universal Synchronous/Asynchronous Receiver/Transmitter\uff09\u901a\u7528\u540c\u6b65/\u5f02\u6b65\u6536\u53d1\u5668</li> <li>USART\u662fSTM32\u5185\u90e8\u96c6\u6210\u7684\u786c\u4ef6\u5916\u8bbe\uff0c\u53ef\u6839\u636e\u6570\u636e\u5bc4\u5b58\u5668\u7684\u4e00\u4e2a\u5b57\u8282\u6570\u636e\u81ea\u52a8\u751f\u6210\u6570\u636e\u5e27\u65f6\u5e8f\uff0c\u4eceTX\u5f15\u811a\u53d1\u9001\u51fa\u53bb\uff0c\u4e5f\u53ef\u81ea\u52a8\u63a5\u6536RX\u5f15\u811a\u7684\u6570\u636e\u5e27\u65f6\u5e8f\uff0c\u62fc\u63a5\u4e3a\u4e00\u4e2a\u5b57\u8282\u6570\u636e\uff0c\u5b58\u653e\u5728\u6570\u636e\u5bc4\u5b58\u5668\u91cc</li> <li>\u81ea\u5e26\u6ce2\u7279\u7387\u53d1\u751f\u5668\uff0c\u6700\u9ad8\u8fbe4.5Mbits/s</li> <li>\u53ef\u914d\u7f6e\u6570\u636e\u4f4d\u957f\u5ea6\uff088/9\uff09\u3001\u505c\u6b62\u4f4d\u957f\u5ea6\uff080.5/1/1.5/2\uff09</li> <li>\u53ef\u9009\u6821\u9a8c\u4f4d\uff08\u65e0\u6821\u9a8c/\u5947\u6821\u9a8c/\u5076\u6821\u9a8c\uff09</li> <li>\u652f\u6301\u540c\u6b65\u6a21\u5f0f\u3001\u786c\u4ef6\u6d41\u63a7\u5236\u3001DMA\u3001\u667a\u80fd\u5361\u3001IrDA\u3001LIN</li> </ul> <p>STM32F103C8T6 USART\u8d44\u6e90\uff1a USART1\u3001 USART2\u3001 USART3</p>"},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#932-usart","title":"9.3.2 USART\u6846\u56fe","text":"<ul> <li>\u786c\u4ef6\u6570\u636e\u6d41\u63a7<ul> <li>RTS\uff1a\u53d1\u9001\u7aef\u6307\u793a\u63a5\u6536\u7aef\u662f\u5426\u51c6\u5907\u597d\u63a5\u6536\u6570\u636e\u3002</li> <li>CTS\uff1a\u63a5\u6536\u7aef\u6307\u793a\u53d1\u9001\u7aef\u662f\u5426\u53ef\u4ee5\u7ee7\u7eed\u53d1\u9001\u6570\u636e\u3002</li> </ul> </li> </ul> <ul> <li>SCLK \u5f15\u811a<ul> <li>USART \u7684 SCLK \u5f15\u811a\u7528\u4e8e\u540c\u6b65\u65f6\u949f\uff0c\u6b64\u6a21\u5f0f\u9700\u8981\u4e3b\u8bbe\u5907\u751f\u6210\u65f6\u949f\u4fe1\u53f7\uff0c\u4f9b\u4ece\u8bbe\u5907\u540c\u6b65\u63a5\u6536/\u53d1\u9001\u6570\u636e\u3002</li> </ul> </li> </ul> <ul> <li>\u6ce2\u7279\u7387\u53d1\u751f\u5668<ul> <li>\u6839\u636e\u5916\u8bbe\u65f6\u949f\u9891\u7387\uff08f_PCLK\uff09\u548c\u671f\u671b\u6ce2\u7279\u7387\uff0c\u8ba1\u7b97\u5e76\u8bbe\u7f6e\u6ce2\u7279\u7387\u5bc4\u5b58\u5668\uff08BRR\uff09\u7684\u503c\u3002</li> <li>\u7c7b\u4f3c\u4e8e\u5206\u9891\u5668\u3002</li> </ul> </li> </ul> <p>Warning</p> <p>\u4ee5\u4e0a\u5747\u7b80\u5355\u4e86\u89e3\u5373\u53ef\u3002</p>"},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#933-usart","title":"9.3.3 USART\u6570\u636e\u6536\u53d1\u7ed3\u6784","text":"<ol> <li>\u9996\u5148\u7531\u6ce2\u7279\u7387\u53d1\u751f\u5668\u914d\u7f6e\u53d1\u9001\u548c\u63a5\u53d7\u7684\u9891\u7387</li> <li>\u5f00\u59cb\u5199\u64cd\u4f5c\uff0c\u628a\u6570\u636e\u653e\u5230\u53d1\u9001\u6570\u636e\u5bc4\u5b58\u5668\u6682\u5b58\uff0c\u82e5\u53d1\u9001\u79fb\u4f4d\u5bc4\u5b58\u5668\u4e3a\u7a7a\uff0c\u5219\u5c06\u53d1\u9001\u6570\u636e\u5bc4\u5b58\u5668\u7684\u6570\u636e\u8f6c\u8fd0\u5230\u53d1\u9001\u79fb\u4f4d\u5bc4\u5b58\u5668\uff0c\u6700\u540e\u901a\u8fc7TX\u5f15\u811a\u53d1\u9001\u6570\u636e\u3002</li> <li>\u5f00\u59cb\u8bfb\u64cd\u4f5c\uff0c\u628aRX\u5f15\u811a\u63a5\u6536\u7684\u6570\u636e\u653e\u5230\u63a5\u6536\u79fb\u4f4d\u5bc4\u5b58\u5668\u6682\u5b58\uff0c\u82e5\u63a5\u6536\u6570\u636e\u5bc4\u5b58\u5668\u4e3a\u7a7a\uff0c\u5219\u5c06\u63a5\u6536\u79fb\u4f4d\u5bc4\u5b58\u5668\u7684\u6570\u636e\u8f6c\u8fd0\u5230\u63a5\u6536\u6570\u636e\u5bc4\u5b58\u5668\u3002</li> <li>\u5f53\u4e00\u4e2a\u5b57\u8282\u7684\u6570\u636e\u53d1\u9001\u6216\u63a5\u6536\u5b8c\u6210\u540e\uff0c\u4f1a\u7f6e\u6807\u5fd7\u4f4d\u3002</li> </ol>"},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#94","title":"9.4 \u5de5\u7a0b\u914d\u7f6e","text":""},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#941-stm32cubemx","title":"9.4.1 STM32CubeMX\u53c2\u6570","text":"<p>USART\u6a21\u5f0f\u9009\u62e9</p> <p></p> \u6a21\u5f0f \u7279\u70b9 \u5e94\u7528\u573a\u666f Asynchronous\uff08\u5f02\u6b65\u6a21\u5f0f\uff09 \u65e0\u9700\u540c\u6b65\u65f6\u949f\uff0c\u7b80\u5355\u3001\u5e38\u7528 \u6807\u51c6\u4e32\u53e3\u901a\u4fe1\uff0c\u5982\u4f20\u611f\u5668\u548c\u6a21\u5757\u8fde\u63a5 Synchronous\uff08\u540c\u6b65\u6a21\u5f0f\uff09 \u4f7f\u7528\u65f6\u949f\u540c\u6b65\uff0c\u652f\u6301\u66f4\u9ad8\u4f20\u8f93\u901f\u7387 \u9ad8\u901f\u901a\u4fe1\uff0c\u4e3b\u8bbe\u5907\u4e0e\u5916\u8bbe\u901a\u4fe1 Single Wire(Half-Duplex)\uff08\u5355\u7ebf\u534a\u53cc\u5de5\uff09 \u6536\u53d1\u5171\u7528\u4e00\u6839\u7ebf\uff0c\u8282\u7701\u5f15\u811a\u8d44\u6e90 \u8d44\u6e90\u53d7\u9650\u573a\u666f\uff0c\u5e26\u5730\u5740\u7684\u591a\u8bbe\u5907\u901a\u4fe1 Multiprocessor Communication\uff08\u591a\u5904\u7406\u5668\u901a\u4fe1\u6a21\u5f0f\uff09 \u4e00\u4e3b\u591a\u4ece\u7ed3\u6784\uff0c\u4e3b\u8bbe\u5907\u901a\u8fc7\u5730\u5740\u9009\u62e9\u4ece\u8bbe\u5907 \u590d\u6742\u7cfb\u7edf\u7684\u4e00\u4e3b\u591a\u4ece\u901a\u4fe1\uff0c\u5982\u7f51\u7edc\u901a\u4fe1 IrDA\uff08\u7ea2\u5916\u901a\u4fe1\uff09 \u77ed\u8ddd\u79bb\u7ea2\u5916\u6570\u636e\u4f20\u8f93 \u9065\u63a7\u5668\u3001\u77ed\u8ddd\u79bb\u65e0\u7ebf\u901a\u4fe1 SmartCard\uff08\u667a\u80fd\u5361\u6a21\u5f0f\uff09 \u652f\u6301 ISO 7816 \u6807\u51c6\uff0c\u9002\u7528\u4e8e\u5b89\u5168\u901a\u4fe1 \u94f6\u884c\u7cfb\u7edf\u3001\u95e8\u7981\u5361\u8bfb\u5199\u5668 Danger Text Only<pre><code>\u53ea\u6709Asynchronous\u4e3a\u5e38\u7528\u7684\uff0c\u5176\u4ed6\u4ec5\u4f5c\u4e3a\u4e86\u89e3\u3002\n</code></pre> <p></p> <p>Hardware Flow Control \u5373STM32 USART \u7684\u786c\u4ef6\u6570\u636e\u6d41\u63a7\u9009\u9879</p> \u6d41\u63a7\u6a21\u5f0f \u63cf\u8ff0 \u5e94\u7528\u573a\u666f Disable \u65e0\u6d41\u63a7\uff0c\u7b80\u5355\u6a21\u5f0f \u4f4e\u901f\u901a\u4fe1\u3001\u65e0\u53ef\u9760\u6027\u8981\u6c42\u573a\u666f CTS Only \u53d1\u9001\u7aef\u53d7\u63a5\u6536\u7aef\u63a7\u5236 \u63a5\u6536\u7aef\u7f13\u51b2\u533a\u53ef\u80fd\u8f83\u5c0f\u7684\u573a\u666f RTS Only \u63a5\u6536\u7aef\u63a7\u5236\u53d1\u9001\u7aef \u53d1\u9001\u7aef\u6570\u636e\u53ef\u80fd\u9891\u7e41\u4ea7\u751f\u7684\u573a\u666f CTS &amp; RTS \u53cc\u5411\u6d41\u63a7 \u9ad8\u901f\u901a\u4fe1\u6216\u53ef\u9760\u6027\u8981\u6c42\u9ad8\u7684\u573a\u666f Danger <p>\u4f5c\u4e3a\u4e86\u89e3\uff0c\u5e76\u4e0d\u5e38\u7528\u3002</p>"},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#942-usart","title":"9.4.2 USART\u6807\u51c6\u793a\u4f8b","text":"<p>STM32CubeMX\u53c2\u6570\uff1a</p> <p></p> <p>\u4e32\u53e3\u8f6f\u4ef6\u53c2\u6570\u53c2\u8003\uff1a</p> <p></p>"},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#943","title":"9.4.3 \u4e32\u53e3\u53d1\u9001\u4ee3\u7801","text":"<p><code>HAL_UART_Transmit(&amp;huart1, text, 1, 10);</code>\u4e3a\u53d1\u9001\u51fd\u6570</p> <ul> <li><code>text</code>\u4e3a\u53d1\u9001\u7684\u6570\u636e\u6570\u7ec4</li> <li>1 \u4e3a\u6570\u636e\u957f\u5ea6</li> <li>100 \u4e3a\u7b49\u5f85\u65f6\u95f4\uff0cms</li> </ul> C<pre><code>/* USER CODE BEGIN 2 */\nuint8_t text[] = {0x43};\n/* USER CODE END 2 */\n\n/* Infinite loop */\n/* USER CODE BEGIN WHILE */\nwhile (1) {\n    HAL_UART_Transmit(&amp;huart1, text, 1, 100);\n    HAL_Delay(1000);\n    /* USER CODE END WHILE */\n\n    /* USER CODE BEGIN 3 */\n}\n/* USER CODE END 3 */\n</code></pre> <p>\u7ecf\u8fc7\u4f7f\u7528\u793a\u6ce2\u5668\u89c2\u5bdf\uff0c\u4ece\u5de6\u5411\u53f3\u6570\u636e\u4e3a<code>11000010</code>\uff0c\u7136\u6ce8\u610f\u4e32\u53e3\u662f\u4ece\u4f4e\u4f4d\u5148\u53d1\uff0c\u6240\u4ee5\u5e94\u8be5\u53cd\u8fc7\u6765\u8bfb\u5373\u5b9e\u9645\u6570\u636e\u4e3a<code>01000011</code> \uff0c\u4e5f\u5c31\u662f16\u8fdb\u5236\u6240\u8868\u793a\u7684<code>0x43</code></p> <p></p>"},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#944","title":"9.4.4 \u4e32\u53e3\u63a5\u6536\u4ee3\u7801","text":"<p><code>HAL_UART_Receive(&amp;huart1, receiver, 2, HAL_MAX_DELAY);</code> \u4e3a\u63a5\u6536\u51fd\u6570\uff0c</p> <ul> <li><code>HAL_MAX_DELAY</code>\u8868\u793a\u4e00\u76f4\u7b49\u5f85\u6307\u5b9a\u6536\u5230\u6570\u636e</li> <li><code>receiver</code>\u63a5\u6536\u7684\u6570\u636e\u5b58\u50a8\u7684\u6570\u7ec4</li> <li>2 \u8868\u793a\u6570\u636e\u957f\u5ea6</li> </ul> C<pre><code>/* USER CODE BEGIN 2 */\nuint8_t receiver[2];\n/* USER CODE END 2 */\n\n/* Infinite loop */\n/* USER CODE BEGIN WHILE */\nwhile (1) {\nHAL_UART_Receive(&amp;huart1, receiver, 2, HAL_MAX_DELAY);\nHAL_UART_Transmit(&amp;huart1, receiver, 2, 100);\n/* USER CODE END WHILE */\n\n/* USER CODE BEGIN 3 */\n}\n/* USER CODE END 3 */\n</code></pre>"},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#945","title":"9.4.5 \u4e32\u53e3\u4e2d\u65ad","text":"<p>\u8bb0\u5f97\u5728STM32CubeMX\u6253\u5f00\u4e2d\u65ad</p> <p></p> <p>\u4f7f\u7528\u4e2d\u65ad\u7684\u63a5\u6536\u548c\u53d1\u9001\u51fd\u6570\u5982\u4e0b\uff1a</p> C<pre><code>// \u4ee5\u4e2d\u65ad\u65b9\u5f0f\u53d1\u9001\u6570\u636e\nHAL_UART_Transmit_IT(&amp;huart1, receiver, 1);\n// \u4ee5\u4e2d\u65ad\u65b9\u5f0f\u63a5\u6536\u6570\u636e\nHAL_UART_Receive_IT(&amp;huart1, receiver, 1);\n</code></pre> <p>\u63a5\u6536\u548c\u53d1\u9001\u540e\u5904\u7406\u903b\u8f91\u7684\u4e2d\u65ad\uff1a</p> C<pre><code>//\u7528\u6237\u53ef\u4ee5\u5728\u6b64\u56de\u8c03\u51fd\u6570\u4e2d\u5904\u7406\u53d1\u9001\u5b8c\u6210\u540e\u7684\u903b\u8f91\nvoid HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart);\n//\u7528\u6237\u53ef\u4ee5\u5728\u6b64\u56de\u8c03\u51fd\u6570\u4e2d\u5904\u7406\u63a5\u6536\u5230\u7684\u6570\u636e\u3002\nvoid HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart);\n</code></pre> <p>\u5c06\u63a5\u6536\u6570\u636e\u7684\u6570\u7ec4\u58f0\u660e\u4e3a\u5168\u5c40\u53d8\u91cf\uff1a</p> C<pre><code>/* USER CODE BEGIN PV */\nuint8_t receiver[1];\n/* USER CODE END PV */\n</code></pre> <p><code>while</code> \u5faa\u73af\u524d\u58f0\u660e\u4e00\u6b21\u4e2d\u65ad\u63a5\u6536\u6570\u636e\u51fd\u6570\uff1a</p> C<pre><code>/* USER CODE BEGIN 2 */\nHAL_UART_Receive_IT(&amp;huart1, receiver, 2);\n/* USER CODE END 2 */\n</code></pre> <p>\u4f7f\u7528\u63a5\u6536\u5230\u6570\u636e\u540e\u7684\u4e2d\u65ad\u51fd\u6570\uff0c\u5728\u51fd\u6570\u7ed3\u675f\u540e\u518d\u6b21\u58f0\u660e\u4e2d\u65ad\u63a5\u6536\u6570\u636e\u51fd\u6570\uff0c\u4fdd\u8bc1\u4e0b\u6b21\u63a5\u6536\u987a\u5229\u5e76\u53ef\u4ee5\u8fdb\u5165\u4e2d\u65ad\uff0c\u653e\u5728<code>main</code>\u51fd\u6570\u4e2d:</p> C<pre><code>/* USER CODE BEGIN 4 */\nvoid HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {\n    HAL_UART_Transmit_IT(&amp;huart1, receiver, 1);\n    HAL_UART_Receive_IT(&amp;huart1, receiver, 1);\n}\n/* USER CODE END 4 */\n</code></pre> <p></p>"},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#95","title":"9.5 \u6570\u636e\u5305\u63a5\u6536","text":""},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#951","title":"9.5.1 \u6570\u636e\u6a21\u5f0f","text":"<ul> <li>HEX\u6a21\u5f0f/\u5341\u516d\u8fdb\u5236\u6a21\u5f0f/\u4e8c\u8fdb\u5236\u6a21\u5f0f\uff1a\u4ee5\u539f\u59cb\u6570\u636e\u7684\u5f62\u5f0f\u663e\u793a</li> <li>\u6587\u672c\u6a21\u5f0f/\u5b57\u7b26\u6a21\u5f0f\uff1a\u4ee5\u539f\u59cb\u6570\u636e\u7f16\u7801\u540e\u7684\u5f62\u5f0f\u663e\u793a</li> </ul>"},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#952-hex","title":"9.5.2 HEX\u6570\u636e\u5305","text":"<ul> <li>\u56fa\u5b9a\u5305\u957f\uff0c\u542b\u5305\u5934\u5305\u5c3e</li> </ul> <ul> <li>\u53ef\u53d8\u5305\u957f\uff0c\u542b\u5305\u5934\u5305\u5c3e</li> </ul>"},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#953","title":"9.5.3 \u6587\u672c\u6570\u636e\u5305","text":"<ul> <li>\u56fa\u5b9a\u5305\u957f\uff0c\u542b\u5305\u5934\u5305\u5c3e</li> </ul> <ul> <li>\u53ef\u53d8\u5305\u957f\uff0c\u542b\u5305\u5934\u5305\u5c3e</li> </ul>"},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#954-hex","title":"9.5.4 HEX\u6570\u636e\u5305\u63a5\u6536","text":""},{"location":"study/STM32/9.URAT%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/#955","title":"9.5.5 \u6587\u672c\u6570\u636e\u5305\u63a5\u6536","text":""},{"location":"study/YOLOv8/BPU%E6%A8%A1%E5%9E%8B%E8%BD%AC%E6%8D%A2/","title":"BPU\u6a21\u578b\u91cf\u5316(RDK X5)","text":""},{"location":"study/YOLOv8/BPU%E6%A8%A1%E5%9E%8B%E8%BD%AC%E6%8D%A2/#1-docker","title":"1. \u914d\u7f6e\u5de5\u5177\u94feDocker\u73af\u5883","text":""},{"location":"study/YOLOv8/BPU%E6%A8%A1%E5%9E%8B%E8%BD%AC%E6%8D%A2/#11","title":"1.1 \u865a\u62df\u673a\u73af\u5883","text":"<p>\u5b98\u65b9\u5bf9\u4e8e\u5929\u5de5\u5f00\u7269\u5f00\u53d1\u673a\u7684\u8981\u6c42\uff1a</p> <p></p> <p>\u4f7f\u7528Ubuntu20.04\u865a\u62df\u673a\u5373\u53ef\uff0c\u7531\u4e8e\u865a\u62df\u673a\u4e0d\u50cf\u7269\u7406\u673a\u4e00\u6837\u8f7b\u677e\u8c03\u7528GPU\u52a0\u901f\uff0c\u6240\u4ee5\u540e\u9762\u5747\u91c7\u7528CPU\u65b9\u5f0f\u3002</p> <p>\u53c2\u8003\uff1a\u865a\u62df\u673a\u5b89\u88c5\u8d44\u6599</p>"},{"location":"study/YOLOv8/BPU%E6%A8%A1%E5%9E%8B%E8%BD%AC%E6%8D%A2/#12-docker","title":"1.2 \u865a\u62df\u673a\u5b89\u88c5Docker","text":"<ol> <li>\u66f4\u65b0\u7cfb\u7edf\u5305\u7d22\u5f15</li> </ol> Bash<pre><code>sudo apt update\nsudo apt upgrade -y\n</code></pre> <ol> <li>\u5b89\u88c5\u5fc5\u8981\u4f9d\u8d56</li> </ol> Bash<pre><code>sudo apt install -y apt-transport-https ca-certificates curl software-properties-common\n</code></pre> <ol> <li>\u6dfb\u52a0Docker\u5b98\u65b9GPG\u5bc6\u94a5</li> </ol> Bash<pre><code>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n</code></pre> <ol> <li>\u914d\u7f6eDocker APT\u4ed3\u5e93</li> </ol> Bash<pre><code>echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n</code></pre> <ol> <li>\u5b89\u88c5Docker\u5f15\u64ce</li> </ol> Bash<pre><code>sudo apt update\nsudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre> <ol> <li>\u542f\u52a8\u5e76\u9a8c\u8bc1\u670d\u52a1</li> </ol> Bash<pre><code>sudo systemctl start docker\nsudo systemctl enable docker\ndocker --version  # \u67e5\u770b\u7248\u672c\n</code></pre> <ol> <li>\u914d\u7f6e\u975eRoot\u7528\u6237\u6743\u9650</li> </ol> Bash<pre><code>sudo usermod -aG docker $USER\nnewgrp docker  # \u7acb\u5373\u751f\u6548\u6216\u91cd\u65b0\u767b\u5f55\nsudo groupadd docker\nsudo gpasswd -a ${USER} docker\nsudo service docker restart\n</code></pre> <p>\u76f4\u63a5\u590d\u5236\u7c98\u8d34\u547d\u4ee4\u5c31\u53ef\u4ee5\u5b89\u88c5\u5b8c\u6210\uff0c\u6b64\u65f6\u7f51\u4e0a\u5f88\u591a\u4f1a\u8ba9\u6211\u4eec\u4f7f\u7528<code>sudo docker run hello-world</code>\u8fd0\u884c\u6d4b\u8bd5\u5bb9\u5668\uff0c\u7136\u540e\u5c31\u4f1a\u53d1\u73b0\u7f51\u7edc\u9519\u8bef\uff0c\u5f88\u591a\u89e3\u51b3\u65b9\u6cd5\u90fd\u662f\u4e0d\u5bf9\u7684\u3002</p>"},{"location":"study/YOLOv8/BPU%E6%A8%A1%E5%9E%8B%E8%BD%AC%E6%8D%A2/#13-docker","title":"1.3 \u89e3\u51b3Docker\u7f51\u7edc\u95ee\u9898","text":"<p>\u521b\u5efa\u6587\u4ef6\u5939</p> Bash<pre><code>sudo mkdir -p /etc/systemd/system/docker.service.d\n</code></pre> <p>\u6dfb\u52a0\u6587\u4ef6</p> Bash<pre><code>sudo touch /etc/systemd/system/docker.service.d/http-proxy.conf\n</code></pre> <p>\u6253\u5f00\u6587\u4ef6</p> Bash<pre><code>sudo nano /etc/systemd/system/docker.service.d/http-proxy.conf\n</code></pre> <p>\u6dfb\u52a0\u4e0b\u9762\u5185\u5bb9\uff1a</p> Text Only<pre><code>[Service]\nEnvironment=\"HTTP_PROXY=http://proxy.example.com:8080/\"\nEnvironment=\"HTTPS_PROXY=http://proxy.example.com:8080/\"\nEnvironment=\"NO_PROXY=localhost,127.0.0.1\"\n</code></pre> <p>\u5176\u4e2d<code>http://proxy.example.com</code>\u9700\u8981\u66ff\u6362\u4e3a\u81ea\u5df1\u7684IP\uff0c<code>8080</code>\u7aef\u53e3\u4e5f\u9700\u8981\u66ff\u6362\u4e3a7890\u3002</p> <p></p> <p>\u8fd9\u6837\u4ee5\u540eDocker\u62c9\u53bb\u5c31\u4e0d\u4f1a\u51fa\u73b0\u7f51\u7edc\u95ee\u9898\u4e86\u3002</p>"},{"location":"study/YOLOv8/BPU%E6%A8%A1%E5%9E%8B%E8%BD%AC%E6%8D%A2/#2-docker","title":"2. \u914d\u7f6eDocker\u955c\u50cf","text":""},{"location":"study/YOLOv8/BPU%E6%A8%A1%E5%9E%8B%E8%BD%AC%E6%8D%A2/#21","title":"2.1 \u4e0b\u8f7d\u4e0e\u52a0\u8f7d\u955c\u50cf","text":"<p>\u955c\u50cf\u4e0b\u8f7d\u5730\u5740\uff1ahttps://developer.horizon.auto/docs/J5/toolchain/1.1.77/download</p> <p>\u5efa\u8bae\u79bb\u7ebf\u4e0b\u8f7d\uff0c\u4f1a\u5feb\u4e00\u4e9b\u3002</p> <p></p> <p>\u5f00\u53d1\u5305\u53ef\u4ee5\u9009\u4e0b\uff0c\u6211\u4e2a\u4eba\u4e0d\u4f1a\u4f7f\u7528\uff0c\u6211\u53ea\u662f\u8fdb\u884c\u6a21\u578b\u8f6c\u5316\u6682\u65f6\u4e5f\u7528\u4e0d\u5230\u3002</p> <p></p> <p>\u5c06\u955c\u50cf\u79fb\u52a8\u5230\u6839\u76ee\u5f55\uff0c\u52a0\u8f7d\u955c\u50cf(\u865a\u62df\u673a\u5185\u5b58\u591a\u4e00\u4e9b\uff0c\u4e0d\u7136\u52a0\u8f7d\u4f1a\u51fa\u73b0\u5185\u5b58\u4e0d\u8db3)\uff1a</p> Bash<pre><code>docker load -i &lt;\u955c\u50cf\u540d\u79f0.tar.gz&gt;\n</code></pre>"},{"location":"study/YOLOv8/BPU%E6%A8%A1%E5%9E%8B%E8%BD%AC%E6%8D%A2/#22","title":"2.2 \u4f7f\u7528\u955c\u50cf","text":"<p>\u672c\u90e8\u5206\u662f\u81ea\u5df1\u6478\u7d22\u7684\u4f7f\u7528\u6b65\u9aa4\uff0c\u5e76\u4e0d\u4e13\u4e1a\uff0c\u4f46\u5e94\u8be5\u591f\u7528\u3002</p> <p>\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939<code>models</code>\u7528\u4e8e\u5355\u72ec\u5b58\u653e\u6a21\u578b\u8f6c\u6362\u6587\u4ef6</p> Bash<pre><code>mkdir models\n</code></pre> <p>\u8fd0\u884cdocker\u5e76\u6302\u8f7d\u8be5\u76ee\u5f55</p> Bash<pre><code>docker run -it --rm \\\n  -v /home/lzh/models/:/open_explorer \\\n  -v $(pwd):/openexplorer \\\n  openexplorer/ai_toolchain_ubuntu_20_j5_cpu:v1.1.77-py38 \\\n  /bin/bash\n</code></pre>"},{"location":"study/YOLOv8/BPU%E6%A8%A1%E5%9E%8B%E8%BD%AC%E6%8D%A2/#23","title":"2.3 \u914d\u7f6e\u6a21\u578b\u8f6c\u5316\u73af\u5883","text":"<p>\u8ddf\u7740\u8fd9\u4e2a\u5730\u5e73\u7ebf\u5b98\u65b9\u535a\u5ba2\u8d70\u5c31\u884c\uff1aYOLOv11\uff0c\u5730\u74dcRDK X5\u5f00\u53d1\u677f\uff0cTROS\u7aef\u5230\u7aef140FPS\uff01-CSDN\u535a\u5ba2</p> <p>\u4e00\u76f4\u5230<code>PTQ\u65b9\u6848\u91cf\u5316\u8f6c\u5316</code>\u8fd9\u4e00\u8282\u68c0\u67e5\u6a21\u578b\u5b8c\u6210\uff0c\u90e8\u5206\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a</p> <p></p> <p>\u5173\u4e8e\u6821\u51c6\u6570\u636e\u51c6\u5907\u535a\u5ba2\u5e76\u672a\u63d0\u53ca\uff0c\u800c\u662f\u5728\u540e\u6765\u7684\u53e6\u4e00\u7bc7\u535a\u5ba2\u63d0\u5230\uff1a</p> <p>YOLO12\u5728RDK X5\u4e0a\u7684\u90e8\u7f72\uff0c\u4f53\u9a8c\u7eaf\u89c6\u89c9Transformer\u7684YOLO\u76ee\u6807\u68c0\u6d4b\uff01_yolov12 transformer-CSDN\u535a\u5ba2</p> <p>\u4e2a\u4eba\u8ba4\u4e3a\u5bf9\u4e8e\u6211\u8fd9\u79cd\u5c0f\u767d\u63d0\u4e00\u53e5\u8fd8\u9700\u8981\u7422\u78e8\u5f88\u4e45\uff0c\u6240\u4ee5\u628a\u8fd9\u90e8\u5206\u5927\u81f4\u5217\u4e00\u4e0b\uff0c\u5176\u5b9e\u6709\u5b98\u65b9\u811a\u672c\u8fd8\u7b97\u5bb9\u6613\uff0c\u7f8e\u4e2d\u4e0d\u8db3\u7684\u5c31\u662f\u5b98\u65b9\u7684\u8d44\u6599\u5bf9\u5c0f\u767d\u5e76\u4e0d\u53cb\u597d\u3002</p>"},{"location":"study/YOLOv8/BPU%E6%A8%A1%E5%9E%8B%E8%BD%AC%E6%8D%A2/#24","title":"2.4 \u51c6\u5907\u6821\u51c6\u6570\u636e","text":"<p>\u2460 \u627e\u7167\u7247\u6570\u636e</p> <p>\u5982\u679c\u662f\u81ea\u5df1\u8bad\u7ec3\u7684\u6a21\u578b\uff0c\u6700\u597d\u5728\u81ea\u5df1\u7684\u6570\u636e\u96c6\u91cc\u9762\u627e\u7167\u7247\u3002</p> <p>\u4e0b\u9762\u662f\u5b98\u65b9\u63d0\u4f9b\u7684\u5730\u5740\uff0c\u4e0d\u591f\u53c8\u662f\u5728\u53e6\u4e00\u4e2a\u6587\u6863\u6258\u7ba1\u7f51\u7ad9\u4e86\uff0c\u5c31\u4e0d\u518d\u5217\u4e3e\u4e86\u3002\u5176\u4e2d\u6211\u5728<code>COCO</code>\u968f\u610f\u4e0b\u8f7d\u4e86\u4e00\u4e2a\u6570\u636e\u96c6\uff0c\u7136\u540e\u4ece\u4e2d\u9009\u4e86\u4e00\u767e\u5f20\u5355\u72ec\u4e00\u4e2a\u6587\u4ef6\u5939\u653e<code>models</code>\u76ee\u5f55\u3002</p> \u6570\u636e\u96c6 \u4e0b\u8f7d\u5730\u5740 \u4e0b\u8f7d\u7ed3\u6784 ImageNet https://www.image-net.org/download.php \u4e0b\u8f7d\u7ed3\u6784\u8bf7\u60a8\u53c2\u8003 ImageNet\u6570\u636e\u96c6\u53c2\u8003\u7ed3\u6784 COCO https://cocodataset.org/ \u4e0b\u8f7d\u7ed3\u6784\u8bf7\u60a8\u53c2\u8003 COCO\u6570\u636e\u96c6\u53c2\u8003\u7ed3\u6784 VOC http://host.robots.ox.ac.uk/pascal/VOC/ \u9700\u8981\u4e0b\u8f7d2007\u548c2012\u4e24\u4e2a\u7248\u672c\uff0c\u4e0b\u8f7d\u7ed3\u6784\u8bf7\u60a8\u53c2\u8003 VOC\u6570\u636e\u96c6\u53c2\u8003\u7ed3\u6784 Cityscapes https://github.com/mcordts/cityscapesScripts \u4e0b\u8f7d\u7ed3\u6784\u8bf7\u60a8\u53c2\u8003 Cityscapes\u6570\u636e\u96c6\u53c2\u8003\u7ed3\u6784 CIFAR-10 http://www.cs.toronto.edu/~kriz/cifar.html \u4e0b\u8f7d\u7ed3\u6784\u8bf7\u60a8\u53c2\u8003 CIFAR-10\u6570\u636e\u96c6\u53c2\u8003\u7ed3\u6784 FlyingChairs https://lmb.informatik.uni-freiburg.de/resources/datasets/FlyingChairs.en.html \u4e0b\u8f7d\u7ed3\u6784\u8bf7\u60a8\u53c2\u8003 \u6570\u636e\u9884\u5904\u7406 \u4e2d\u7684\u76f8\u5173\u63cf\u8ff0 KITTI3D https://www.cvlibs.net/datasets/kitti/eval_object.php?obj_benchmark=3d \u4e0b\u8f7d\u7ed3\u6784\u8bf7\u60a8\u53c2\u8003 \u6570\u636e\u9884\u5904\u7406 \u4e2d\u7684\u76f8\u5173\u63cf\u8ff0 CULane https://xingangpan.github.io/projects/CULane.html \u4e0b\u8f7d\u7ed3\u6784\u8bf7\u60a8\u53c2\u8003 \u6570\u636e\u9884\u5904\u7406 \u4e2d\u7684\u76f8\u5173\u63cf\u8ff0 Nuscenes https://www.nuscenes.org/nuscenes \u4e0b\u8f7d\u7ed3\u6784\u8bf7\u60a8\u53c2\u8003 \u6570\u636e\u9884\u5904\u7406 \u4e2d\u7684\u76f8\u5173\u63cf\u8ff0 Mot17 https://opendatalab.com/MOT17 \u4e0b\u8f7d\u7ed3\u6784\u8bf7\u60a8\u53c2\u8003 \u6570\u636e\u9884\u5904\u7406 \u4e2d\u7684\u76f8\u5173\u63cf\u8ff0 Carfusion http://www.cs.cmu.edu/~ILIM/projects/IM/CarFusion/cvpr2018/index.html \u4e0b\u8f7d\u7ed3\u6784\u8bf7\u60a8\u53c2\u8003 \u6570\u636e\u9884\u5904\u7406 \u4e2d\u7684\u76f8\u5173\u63cf\u8ff0 Argoverse 1 https://www.argoverse.org/av1.html \u4e0b\u8f7d\u7ed3\u6784\u8bf7\u60a8\u53c2\u8003 \u6570\u636e\u9884\u5904\u7406 \u4e2d\u7684\u76f8\u5173\u63cf\u8ff0 SceneFlow https://lmb.informatik.uni-freiburg.de/resources/datasets/SceneFlowDatasets.en.html \u4e0b\u8f7d\u7ed3\u6784\u8bf7\u60a8\u53c2\u8003 \u6570\u636e\u9884\u5904\u7406 \u4e2d\u7684\u76f8\u5173\u63cf\u8ff0 <p>\u2461 \u4e0b\u8f7d\u5b98\u65b9\u811a\u672c</p> <p>\u4e0b\u8f7d\u5730\u5740\uff1a</p> <p>https://github.com/D-Robotics/rdk_model_zoo/blob/main/demos/tools/generate_calibration_data/generate_calibration_data.py</p> <p>\u8be5\u6587\u4ef6\u540c\u6837\u653e<code>models</code>\u76ee\u5f55\u3002</p> <p>\u2462 \u6574\u7406\u76ee\u5f55</p> <p>\u5728<code>\u914d\u7f6e\u6a21\u578b\u8f6c\u5316\u73af\u5883</code>\u7ae0\u8282\uff0c\u6211\u4eec\u5f97\u5230\u4e00\u4e2a<code>yolo11n.onnx</code>\uff0c\u52a0\u4e0a\u7167\u7247\u6570\u636e\u6587\u4ef6\u5939\u547d\u540d\u4e3a<code>origin_coco_imgs_200</code>\uff0c\u65b0\u5efa\u7a7a\u6587\u4ef6\u5939<code>calibration_data</code>\u3002</p> <p>\u7136\u540e\u65b0\u5efa<code>yolo11</code>\u6587\u4ef6\u5c06\u4ee5\u4e0a\u6587\u4ef6/\u6587\u4ef6\u5939\u90fd\u653e\u8fdb\u6b64\u76ee\u5f55\uff0c\u5305\u62ec<code>generate_calibration_data.py</code>\u811a\u672c\u3002</p> <p>\u6b64\u65f6\u7684docker\u76ee\u5f55\u5e94\u8be5\u4e3a\uff1a</p> <p>\u9ed8\u8ba4\u521a\u8fdb\u5165docker\u662f\u5728<code>/open_explorer#</code>\u76ee\u5f55\uff0cdocker\u4e2d\u4e0d\u663e\u793amodels\u76ee\u5f55\u3002(\u53ef\u80fd\u539f\u7406\u4e0d\u592a\u5bf9\uff0c\u5e94\u4e3a\u5bf9docker\u4e0d\u719f\uff0c\u4f46\u76ee\u5f55\u662f\u8fd9\u6837\u4ee5\u540e\u6a21\u578b\u8f6c\u6362\u5c31\u6ca1\u6709\u95ee\u9898)</p> Bash<pre><code>\u251c\u2500\u2500 ultralytics\n\u2514\u2500\u2500 yolo11\n    \u251c\u2500\u2500 calibration_data\n    \u251c\u2500\u2500 generate_calibration_data.py\n    \u251c\u2500\u2500 origin_coco_imgs_200\n    \u2514\u2500\u2500 yolo11n.onnx\n</code></pre> <p>\u2463 \u8fd0\u884cpython\u811a\u672c</p> <p>\u76ee\u5f55\u6b63\u786e\u540e\uff0c\u5c31\u8fd0\u884cpython\u811a\u672c</p> Bash<pre><code>python3 generate_calibration_data.py --src origin_coco_imgs_200 --dist calibration_data\n</code></pre> <p><code>--src</code>\u53c2\u6570\u662f\u539f\u56fe\u7247\u76ee\u5f55\uff0c<code>--dist</code>\u662f\u8f93\u51fa\u76ee\u5f55\u3002</p>"},{"location":"study/YOLOv8/BPU%E6%A8%A1%E5%9E%8B%E8%BD%AC%E6%8D%A2/#25","title":"2.5 \u91cf\u5316\u8f6c\u5316","text":"<p>\u7ee7\u7eed\u8ddf\u7740\u6a21\u578b\u68c0\u6d4b\u540e\u7684\u6b65\u9aa4\u5c31\u884c\u4e86\uff0c\u8bb0\u5f97\u6539\u4e00\u4e2a\u53c2\u6570\u3002</p> <p>\u6839\u636e\u6a21\u578b\u68c0\u67e5\u7ed3\u679c\uff0c\u627e\u5230\u624b\u52a8\u91cf\u5316\u7b97\u5b50Softmax, \u5e94\u6709\u8fd9\u6837\u7684\u5185\u5bb9, Softmax\u7b97\u5b50\u5c06\u6a21\u578b\u62c6\u4e3a\u4e86\u4e24\u4e2aBPU\u5b50\u56fe\u3002\u8fd9\u91cc\u7684Softmax\u7b97\u5b50\u540d\u79f0\u4e3a\"/model.10/m/m.0/attn/Softmax\"\u3002</p> <p>\u65b0\u5efa\u5e76\u6253\u5f00<code>yolo11_config.yaml</code></p> Bash<pre><code>touch yolo11_config.yaml\nnano yolo11_config.yaml\n</code></pre> <p>\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff0c\u5176\u4e2d\u5b98\u65b9\u535a\u5ba2\u4e3a<code>calibration_data_rgb_f32_640</code>\uff0c\u6211\u4eec\u6539\u6210\u81ea\u5df1\u7684<code>calibration_data</code>\u3002</p> YAML<pre><code>model_parameters:\n  onnx_model: './yolo11n.onnx'\n  march: \"bayes-e\"\n  layer_out_dump: False\n  working_dir: 'bin_dir/yolo11n_detect_bayese_640x640_nv12'\n  output_model_file_prefix: 'yolo11n_detect_bayese_640x640_nv12'\n  # YOLO11 n, s, m\n  node_info: {\"/model.10/m/m.0/attn/Softmax\": {'ON': 'BPU','InputType': 'int16','OutputType': 'int16'}}\n  # YOLO11 l, x\n  # node_info: {\"/model.10/m/m.0/attn/Softmax\": {'ON': 'BPU','InputType': 'int16','OutputType': 'int16'},\n  #             \"/model.10/m/m.1/attn/Softmax\": {'ON': 'BPU','InputType': 'int16','OutputType': 'int16'}}\ninput_parameters:\n  input_name: \"\"\n  input_type_rt: 'nv12'\n  input_type_train: 'rgb'\n  input_layout_train: 'NCHW'\n  norm_type: 'data_scale'\n  scale_value: 0.003921568627451\ncalibration_parameters:\n  cal_data_dir: './calibration_data'\n  cal_data_type: 'float32'\ncompiler_parameters:\n  compile_mode: 'latency'\n  debug: False\n  optimize_level: 'O3'\n</code></pre> <p>\u91cf\u5316\u8f6c\u5316</p> Bash<pre><code>hb_mapper makertbin --model-type onnx --config yolo11_config.yaml\n</code></pre> <p><code>.bin</code>\u6587\u4ef6\u751f\u6210\u5728<code>bin_dir</code>\u76ee\u5f55\uff0c\u7136\u540e\u4f7f\u7528\u5730\u5e73\u7ebf\u7684API\u5c31\u53ef\u4ee5\u5dee\u4e0d\u591a\u5f97\u5230BPU\u768410TOPS\u7b97\u529b\u4e86\u3002</p>"},{"location":"study/YOLOv8/BPU%E6%A8%A1%E5%9E%8B%E8%BD%AC%E6%8D%A2/#n","title":"n. \u53c2\u8003\u8d44\u6599","text":"<p>4.1. \u73af\u5883\u90e8\u7f72 \u2014 Horizon Open Explorer</p> <p>\u5f7b\u5e95\u89e3\u51b3docker\uff1adocker: Get https://registry-1.docker.io/v2/: net/http: request canceled \u62a5\u9519-CSDN\u535a\u5ba2</p> <p>YOLOv11\uff0c\u5730\u74dcRDK X5\u5f00\u53d1\u677f\uff0cTROS\u7aef\u5230\u7aef140FPS\uff01-CSDN\u535a\u5ba2</p> <p>YOLO12\u5728RDK X5\u4e0a\u7684\u90e8\u7f72\uff0c\u4f53\u9a8c\u7eaf\u89c6\u89c9Transformer\u7684YOLO\u76ee\u6807\u68c0\u6d4b\uff01_yolov12 transformer-CSDN\u535a\u5ba2</p>"},{"location":"study/YOLOv8/YOLOv8-1/","title":"YOLOv8\u7b80\u4ecb","text":""},{"location":"study/YOLOv8/YOLOv8-1/#_1","title":"\u5f15\u8a00","text":"<p>\u968f\u7740\u57ce\u5e02\u5316\u8fdb\u7a0b\u7684\u4e0d\u65ad\u63a8\u8fdb\uff0c\u5168\u7403\u8303\u56f4\u5185\u673a\u52a8\u8f66\u6570\u91cf\u6025\u5267\u589e\u52a0\uff0c\u4ea4\u901a\u7ba1\u7406\u548c\u5b89\u5168\u95ee\u9898\u65e5\u76ca\u51f8\u663e\u3002\u5982\u4f55\u9ad8\u6548\u3001\u51c6\u786e\u5730\u8fdb\u884c\u8f66\u8f86\u68c0\u6d4b\uff0c\u6210\u4e3a\u89e3\u51b3\u4ea4\u901a\u62e5\u5835\u3001\u51cf\u5c11\u4ea4\u901a\u4e8b\u6545\u3001\u63d0\u5347\u516c\u5171\u5b89\u5168\u7684\u91cd\u8981\u624b\u6bb5\u3002\u4f20\u7edf\u7684\u4ea4\u901a\u76d1\u63a7\u624b\u6bb5\uff0c\u5982\u8def\u53e3\u6444\u50cf\u5934\u548c\u4eba\u5de5\u5de1\u903b\uff0c\u5df2\u7ecf\u65e0\u6cd5\u6ee1\u8db3\u73b0\u4ee3\u57ce\u5e02\u5bf9\u5b9e\u65f6\u3001\u9ad8\u6548\u3001\u667a\u80fd\u5316\u4ea4\u901a\u7ba1\u7406\u7684\u9700\u6c42\u3002\u901a\u8fc7\u8f66\u8f86\u68c0\u6d4b\u6280\u672f\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u8f66\u8f86\u6d41\u91cf\u7684\u5b9e\u65f6\u76d1\u63a7\uff0c\u53ca\u65f6\u53d1\u73b0\u548c\u5904\u7406\u4ea4\u901a\u5f02\u5e38\u60c5\u51b5\uff0c\u4ece\u800c\u63d0\u9ad8\u9053\u8def\u901a\u884c\u6548\u7387\uff0c\u51cf\u5c11\u4ea4\u901a\u4e8b\u6545\u7684\u53d1\u751f\u3002\u8fd1\u5e74\u6765\uff0c\u6df1\u5ea6\u5b66\u4e60\u6280\u672f\u7279\u522b\u662f\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\u7684\u5feb\u901f\u53d1\u5c55\uff0c\u6781\u5927\u5730\u63a8\u52a8\u4e86\u76ee\u6807\u68c0\u6d4b\u6280\u672f\u7684\u8fdb\u6b65\u3002\u5176\u4e2d\uff0cYOLO\uff08You Only Look Once\uff09\u7cfb\u5217\u6a21\u578b\u5728\u76ee\u6807\u68c0\u6d4b\u5177\u5907\u6781\u9ad8\u7684\u4f7f\u7528\u7387\u548c\u9ad8\u7cbe\u5ea6\u68c0\u6d4b\u80fd\u529b\u3002\u7ecf\u8fc7YOLO\u7248\u672c\u7684\u4e0d\u65ad\u8fed\u4ee3\u548c\u5347\u7ea7\uff0c\u5df2\u7ecf\u5230yolov8\u7248\u672c\uff0c\u5177\u5907\u5206\u7c7b\u3001\u68c0\u6d4b\u3001\u5206\u5272\u3001\u8ffd\u8e2a\u3001\u59ff\u6001\u7b49\u529f\u80fd\uff0c\u540c\u65f6\u5177\u6709\u66f4\u597d\u7684\u51c6\u786e\u6027\u548c\u5feb\u901f\u6027\u3002</p>"},{"location":"study/YOLOv8/YOLOv8-1/#yolov8","title":"YOLOV8\u7f51\u7edc\u4ecb\u7ecd","text":"<p>YOLOv8\u662f YOLO \u7cfb\u5217\u7684\u6700\u65b0\u7248\u672c\uff0c\u5728\u51c6\u786e\u6027\u548c\u901f\u5ea6\u65b9\u9762\u63d0\u4f9b\u4e86\u5c16\u7aef\u6027\u80fd\u3002\u57fa\u4e8e\u4ee5\u524d YOLO \u7248\u672c\u7684\u6539\u8fdb\uff0cYOLOv8\u5f15\u5165\u4e86\u65b0\u7684\u7279\u6027\u548c\u4f18\u5316\uff0c\u4f7f\u5176\u6210\u4e3a\u5e7f\u6cdb\u5e94\u7528\u4e2d\u5404\u79cd\u76ee\u6807\u68c0\u6d4b\u4efb\u52a1\u7684\u7406\u60f3\u9009\u62e9\u3002\ud83d\udd3a\u4e3b\u8981\u5305\u62ec\u9ad8\u7ea7\u9aa8\u5e72\u548c\u9888\u90e8\u67b6\u6784\u3001\u65e0\u951a\u70b9\u5206\u5272 Ultralytics \u5934\u90e8\u3001\u4f18\u5316\u7cbe\u5ea6-\u901f\u5ea6\u6743\u8861\u3001\u5404\u79cd\u9884\u8bad\u7ec3\u6a21\u578b\u7b49\u3002</p> \u4e3b\u8981\u7279\u70b9 \u63cf\u8ff0 \u9ad8\u7ea7\u9aa8\u5e72\u548c\u9888\u90e8\u67b6\u6784 YOLOv8\u91c7\u7528\u4e86\u6700\u5148\u8fdb\u7684\u9aa8\u5e72\u548c\u9888\u90e8\u67b6\u6784\uff0c\u63d0\u9ad8\u4e86\u7279\u5f81\u63d0\u53d6\u548c\u76ee\u6807\u68c0\u6d4b\u6027\u80fd\u3002 \u65e0\u951a\u70b9\u5206\u5272 Ultralytics \u5934\u90e8 YOLOv8\u91c7\u7528\u4e86\u65e0\u951a\u5206\u79bb\u8d85\u58f0\u5934\uff0c\u4e0e\u57fa\u4e8e\u951a\u7684\u65b9\u6cd5\u76f8\u6bd4\uff0c\u6709\u52a9\u4e8e\u63d0\u9ad8\u51c6\u786e\u6027\u548c\u66f4\u6709\u6548\u7684\u68c0\u6d4b\u8fc7\u7a0b\u3002 \u4f18\u5316\u7cbe\u5ea6-\u901f\u5ea6\u6743\u8861 YOLOv8\u4e13\u6ce8\u4e8e\u4fdd\u6301\u7cbe\u5ea6\u548c\u901f\u5ea6\u4e4b\u95f4\u7684\u6700\u4f73\u5e73\u8861\uff0c\u9002\u7528\u4e8e\u4e0d\u540c\u5e94\u7528\u9886\u57df\u7684\u5b9e\u65f6\u76ee\u6807\u68c0\u6d4b\u4efb\u52a1\u3002 \u5404\u79cd\u9884\u8bad\u7ec3\u6a21\u578b YOLOv8\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u9884\u8bad\u7ec3\u6a21\u578b\uff0c\u4ee5\u6ee1\u8db3\u5404\u79cd\u4efb\u52a1\u548c\u6027\u80fd\u9700\u6c42\uff0c\u4f7f\u60a8\u66f4\u5bb9\u6613\u4e3a\u7279\u5b9a\u7528\u4f8b\u627e\u5230\u5408\u9002\u7684\u6a21\u578b\u3002 <p>YOLOv8\u6a21\u578b\u4e3b\u8981\u7531\u56db\u4e2a\u90e8\u5206\u7ec4\u6210\uff0c\u5206\u522b\u4e3a\u8f93\u5165\u7aef\u3001\u4e3b\u5e72\u7f51\u7edc\u3001\u9888\u90e8\u548c\u68c0\u6d4b\u5934\u3002YOLOv8\u8f93\u5165\u7aef\u91c7\u7528\u81ea\u9002\u5e94\u7f29\u653e\u7b56\u7565\uff0c\u5728\u7f29\u653e\u8f93\u5165\u56fe\u7247\u65f6\u80fd\u591f\u81ea\u9002\u5e94\u5730\u6dfb\u52a0\u6700\u5c11\u7684\u8865\u5145\u8fb9\uff0c\u4ece\u800c\u51cf\u5c11\u5197\u4f59\u4fe1\u606f\uff0c\u5bf9\u5b9e\u9645\u8f66\u8f86\u68c0\u6d4b\u4efb\u52a1\u4e2d\u4e0d\u540c\u5927\u5c0f\u7684\u8f93\u5165\u56fe\u7247\u5177\u6709\u8f83\u5f3a\u7684\u9002\u5e94\u6027\u3002YOLOv8\u4e3b\u5e72\u7279\u5f81\u63d0\u53d6\u7f51\u7edc\u91c7\u7528\u4e00\u7cfb\u5217\u5377\u79ef\u5c42\u6765\u63d0\u53d6\u56fe\u50cf\u7279\u5f81\uff0c\u540c\u65f6\u91c7\u7528\u4e86\u74f6\u9888\u7ed3\u6784\u548c\u6b8b\u5dee\u8fde\u63a5\u6765\u964d\u4f4e\u6a21\u578b\u5927\u5c0f\u548c\u63d0\u9ad8\u7f51\u7edc\u6027\u80fd\u3002\u8be5\u90e8\u5206\u7531C2f\u3001CBS\u3001SPPF\u4e09\u79cd\u6a21\u5757\u6784\u6210\u3002\u4e0eYOLOv5\u7684C3\u6a21\u5757\u76f8\u6bd4\uff0cC2f\u6a21\u5757\u53c2\u6570\u91cf\u66f4\u5c11\u3001\u7279\u5f81\u63d0\u53d6\u80fd\u529b\u66f4\u5f3a\u3002\u5728\u7279\u5f81\u878d\u5408\u7684\u9888\u90e8\uff0cYOLOv8\u76f8\u6bd4YOLOv5\u51cf\u53bb\u4e86\u4e24\u4e2a\u5377\u79ef\u8fde\u63a5\u5c42\uff0c\u6cbf\u7528\u4e86YOLOv5\u7684PAN-FPN\u7ed3\u6784\uff0c\u901a\u8fc7\u81ea\u9876\u5411\u4e0b\u548c\u81ea\u5e95\u5411\u4e0a\u7684\u53cc\u5411\u8de8\u5c42\u8fde\u63a5\uff0c\u8fdb\u884c\u591a\u5c3a\u5ea6\u7684\u7279\u5f81\u878d\u5408\u3002\ud83d\udd3a</p> <p></p>"},{"location":"study/YOLOv8/YOLOv8-2/","title":"\u6570\u636e\u96c6\u5212\u5206","text":""},{"location":"study/YOLOv8/YOLOv8-2/#_1","title":"\u6570\u636e\u96c6\u6536\u96c6\u5212\u5206","text":"<p>\u6587\u4ef6\u683c\u5f0f\uff1a</p> \u683c\u5f0f \u63cf\u8ff0 VOC \u4f7f\u7528labelimg\u6807\u8bb0\u4fdd\u5b58\u7684\u6570\u636e\u6587\u4ef6\u683c\u5f0f TXT yolo\u8bad\u7ec3\u9700\u8981\u7684\u6570\u636e\u6587\u4ef6\u683c\u5f0f"},{"location":"study/YOLOv8/YOLOv8-2/#_2","title":"\u6807\u8bb0\u6570\u636e\u96c6","text":""},{"location":"study/YOLOv8/YOLOv8-2/#labelimg","title":"\u5b89\u88c5labelimg","text":"Bash<pre><code>pip install labelimg\n</code></pre>"},{"location":"study/YOLOv8/YOLOv8-2/#_3","title":"\u521b\u5efa\u6587\u4ef6\u7ed3\u6784","text":"<p>\u521b\u5efa\u6587\u4ef6\u5939\u7ed3\u6784---\u521b\u5efa\u6587\u4ef6\u5939VOCdevkit\uff0c\u518d\u6b21\u6587\u4ef6\u5939\u4e0b\u65b0\u5efaVOC2007\uff0c\u5176\u4ed6\u5982\u4e0b\uff1a</p> <p>\u251c\u2500\u2500 VOC2007</p> <p>\u2502\u251c\u2500\u2500 JPEGImages  \u5b58\u653e\u9700\u8981\u6253\u6807\u7b7e\u7684\u56fe\u7247\u6587\u4ef6</p> <p>\u2502\u251c\u2500\u2500 Annotations  \u5b58\u653e\u6807\u6ce8\u7684\u6807\u7b7e\u6587\u4ef6</p> <p>\u2502\u251c\u2500\u2500 predefined_classes.txt  \u5b9a\u4e49\u81ea\u5df1\u8981\u6807\u6ce8\u7684\u6240\u6709\u7c7b\u522b</p> <p>\u6839\u636e\u4e0a\u9762\u6807\u6ce8\uff0c\u628a\u7167\u7247\u653e\u5230<code>JPEGImages</code>\u6587\u4ef6\u5939\uff0c\u5c06\u8981\u6807\u6ce8\u7684\u6240\u6709\u7c7b\u522b\u653e\u5728<code>predefined_classes.txt</code>\u6587\u4ef6</p> <p></p> <p>\u4e00\u4e9b\u5e38\u7528\u5feb\u6377\u952e\uff1a</p> <ul> <li>A\uff1a\u5207\u6362\u5230\u4e0a\u4e00\u5f20\u56fe\u7247</li> <li>D\uff1a\u5207\u6362\u5230\u4e0b\u4e00\u5f20\u56fe\u7247</li> <li>W\uff1a\u8c03\u51fa\u6807\u6ce8\u5341\u5b57\u67b6</li> <li>del \uff1a\u5220\u9664\u6807\u6ce8\u6846\u6846</li> <li>Ctrl+u\uff1a\u9009\u62e9\u6807\u6ce8\u7684\u56fe\u7247\u6587\u4ef6\u5939</li> <li>Ctrl+r\uff1a\u9009\u62e9\u6807\u6ce8\u597d\u7684label\u6807\u7b7e\u5b58\u5728\u7684\u6587\u4ef6\u5939</li> </ul> <p></p>"},{"location":"study/YOLOv8/YOLOv8-2/#_4","title":"\u5212\u5206\u6570\u636e\u96c6","text":""},{"location":"study/YOLOv8/YOLOv8-2/#_5","title":"\u66f4\u65b0\u76ee\u5f55","text":"<p>\u66f4\u6539\u76ee\u5f55\u5982\u4e0b\uff0c\u65b0\u5efa <code>select.py</code> \u6587\u4ef6\uff0c\u4e0eVOC2007\u540c\u4e00\u6587\u4ef6\u5939</p> <p>\u251c\u2500\u2500 VOCdevkit</p> <p>\u2502\u251c\u2500\u2500<code>select.py</code></p> <p>\u2502\u251c\u2500\u2500 VOC2007</p> <p>\u2502\u2502\u251c\u2500\u2500 JPEGImages  \u5b58\u653e\u9700\u8981\u6253\u6807\u7b7e\u7684\u56fe\u7247\u6587\u4ef6</p> <p>\u2502\u2502\u251c\u2500\u2500 Annotations  \u5b58\u653e\u6807\u6ce8\u7684\u6807\u7b7e\u6587\u4ef6</p> <p>\u2502\u2502\u251c\u2500\u2500 predefined_classes.txt  \u5b9a\u4e49\u81ea\u5df1\u8981\u6807\u6ce8\u7684\u6240\u6709\u7c7b\u522b</p>"},{"location":"study/YOLOv8/YOLOv8-2/#_6","title":"\u4fee\u6539\u53c2\u6570","text":""},{"location":"study/YOLOv8/YOLOv8-2/#_7","title":"\u68c0\u9a8c\u6570\u636e","text":"<p>\u5212\u5206\u5b8c\u6210\u4ee5\u540e\u7684\u76ee\u5f55\u7ed3\u6784\uff1a</p> <p></p>"},{"location":"study/YOLOv8/YOLOv8-3/","title":"\u6a21\u578b\u8bad\u7ec3","text":""},{"location":"study/YOLOv8/YOLOv8-3/#yolov8","title":"YOLOV8\u6a21\u578b\u8bad\u7ec3","text":""},{"location":"study/YOLOv8/YOLOv8-3/#yolov8_1","title":"YOLOv8\u7b80\u4ecb","text":"<p>YOLOV8\u4e0b\u8f7d</p>"},{"location":"study/YOLOv8/YOLOv8-3/#_1","title":"\u6587\u4ef6\u4ecb\u7ecd","text":"<p>\u6587\u4ef6\u4e00\u89c8\uff0c\u4e3b\u8981\u914d\u7f6e\u6587\u4ef6\u5728<code>ultralytics</code>\u6587\u4ef6\u5939</p> <p></p>"},{"location":"study/YOLOv8/YOLOv8-3/#_2","title":"\u5b89\u88c5\u4f9d\u8d56","text":"Bash<pre><code>pip install ultralytics\n</code></pre>"},{"location":"study/YOLOv8/YOLOv8-3/#_3","title":"\u914d\u7f6e\u53c2\u6570","text":""},{"location":"study/YOLOv8/YOLOv8-3/#_4","title":"\u6dfb\u52a0\u6570\u636e\u96c6","text":"<p>\u5c06\u6570\u636e\u96c6\u590d\u5236\u5230<code>yolov8</code>\u7684\u6839\u76ee\u5f55\uff0c\u5176\u4e2d\u6570\u636e\u96c6\u76ee\u5f55\u4e3a\u4e0b\uff1a</p> Text Only<pre><code>VOCdevkit\n|-images\n| |-train\n| |-val\n|-labels\n  |-train\n  |-val\n</code></pre>"},{"location":"study/YOLOv8/YOLOv8-3/#coco8yaml","title":"\u4fee\u6539coco8.yaml","text":"<p>\u6839\u636e --ultralytics/cfg/datasets/coco8.yaml -- \u76ee\u5f55\uff0c\u627e\u5230 <code>coco8.yaml</code> \u6587\u4ef6</p> <p></p> <p>\u6839\u636e\u6807\u7b7e\u8fdb\u884c\u6587\u4ef6\u5185\u5bb9\u4fee\u6539-- \u6dfb\u52a0\u6570\u636e\u96c6\u76ee\u5f55\u548c\u6807\u7b7e \uff0c\u53e6\u5c06\u65e0\u7528\u8fdb\u884c\u6ce8\u91ca</p> <p></p>"},{"location":"study/YOLOv8/YOLOv8-3/#yolov8yaml","title":"\u4fee\u6539yolov8.yaml","text":"<p>\u6839\u636e--ultralytics/cfg/models/v8/yolov8.yaml--\u627e\u5230<code>yolov8.yaml</code>\u6587\u4ef6</p> <p></p> <p>\u4fee\u6539\"number of classes\"\u7684\u6570\u91cf\uff0c\u5982\u4e0b\u56fe\u6240\u793a</p> <p></p>"},{"location":"study/YOLOv8/YOLOv8-3/#_5","title":"\u6a21\u578b\u8bad\u7ec3","text":""},{"location":"study/YOLOv8/YOLOv8-3/#_6","title":"\u8bad\u7ec3\u4ee3\u7801","text":"<p>\u8bad\u7ec3\u6a21\u578b\u7684\u4ee3\u7801\u5206\u4e3a\u56db\u6b65</p> <ol> <li>\u52a0\u8f7d\u9884\u8bad\u7ec3\u7684 YOLO \u6a21\u578b\uff08yolov8s\uff0c yolov8n\u7b49\u5747\u53ef\uff09</li> <li>\u4f7f\u7528 'coco8.yaml' \u8fdb\u884c\u6a21\u578b\u8bad\u7ec3</li> <li>\u8bc4\u4f30\u6a21\u578b\u5728\u9a8c\u8bc1\u96c6\u4e0a\u7684\u6027\u80fd</li> <li>\u5c06\u6a21\u578b\u5bfc\u51fa\u4e3aONNX\u683c\u5f0f</li> </ol> Python<pre><code>from ultralytics import YOLO\n\n\ndef main():\n    ### \u52a0\u8f7d\u9884\u8bad\u7ec3\u7684 YOLO \u6a21\u578b\n    model = YOLO(\"yolov8s.pt\")\n\n    ## \u4f7f\u7528 'coco8.yaml' \u6570\u636e\u96c6\u8bad\u7ec3 10\u4e2a epoch \u7684\u6a21\u578b\n    results = model.train(data=\"coco8.yaml\", epochs=20, device=0, imgsz=320)\n\n    ## \u8bc4\u4f30\u6a21\u578b\u5728\u9a8c\u8bc1\u96c6\u4e0a\u7684\u6027\u80fd\n    results = model.val()\n\n    ## \u5c06\u6a21\u578b\u5bfc\u51fa\u4e3a ONNX \u683c\u5f0f\n    success = model.export(format=\"onnx\")\n\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <p>\u5173\u952e\u53c2\u6570\u4ecb\u7ecd\uff1a</p> \u53c2\u6570 \u9ed8\u8ba4\u503c \u63cf\u8ff0 data None \u6570\u636e\u96c6\u914d\u7f6e\u6587\u4ef6\u7684\u8def\u5f84\uff08\u4e00\u822c\u7528 coco8.yaml\uff09 epochs 100 \u8bad\u7ec3\u8f6e\u6570\uff08\u6309\u9700\u6c42\u5b9a\uff0c\u4e0d\u5b9c\u592a\u591a\u6216\u592a\u5c11\uff09 device None \u6307\u5b9a\u7528\u4e8e\u8bad\u7ec3\u7684\u8ba1\u7b97\u8bbe\u5907: \u5355\u4e2a GPU (device = 0)\u3001\u591a\u4e2a GPU (device = [0,1])\u3001 CPU (device = CPU). imgsz 640 \u8bad\u7ec3\u7528\u76ee\u6807\u56fe\u50cf\u5927\u5c0f\uff08\u82e5\u63a8\u7406\u6240\u7528\u8bbe\u5907\u7b97\u529b\u4f4e\uff0c\u53ef\u8c03\u8282\u7167\u7247\u5927\u5c0f\uff09"},{"location":"study/YOLOv8/YOLOv8-3/#_7","title":"\u8bad\u7ec3\u8fc7\u7a0b\u4e0e\u7ed3\u679c","text":""},{"location":"study/YOLOv8/YOLOv8-3/#_8","title":"\u68c0\u6d4b\u9a8c\u8bc1","text":"<p>\u68c0\u6d4b\u4ee3\u7801\uff0c\u5206\u56db\u6b65</p> <ol> <li>\u52a0\u8f7d\u81ea\u8bad\u7ec3\u6a21\u578b</li> <li>\u52a0\u5165\u7167\u7247\u8fdb\u884c\u63a8\u7406\uff0c\u4f46\u4f1a\u4e00\u4e2a\u7ed3\u679c<code>results</code></li> <li>\u89e3\u6790<code>results</code>\u7ed3\u679c\u5bf9\u8c61\uff0c\u5f97\u5230\u6807\u7b7e\u3001\u89d2\u70b9\u5750\u6807\u7b49\u6570\u636e</li> <li>\u663e\u793a\u7ed3\u679c\uff0c\u4fdd\u5b58\u7ed3\u679c\u7167\u7247</li> </ol> <p><code>results</code>\u5bf9\u8c61\u4e2a\u522b\u5c5e\u6027\u4ecb\u7ecd\uff1a</p> \u53c2\u6570 \u63cf\u8ff0 boxes \u68c0\u6d4b\u8fb9\u6846 masks \u68c0\u6d4b\u63a9\u7801 probs \u5206\u7c7b\u4efb\u52a1\u7684\u6bcf\u4e2a\u7c7b\u7684\u6982\u7387 keypoints \u6bcf\u4e2a\u5bf9\u8c61\u68c0\u6d4b\u5230\u7684\u5173\u952e\u70b9 obb \u9762\u5411\u8fb9\u754c\u6846\u7684 OBB \u5bf9\u8c61 <p>\u5176\u4e2d<code>boxes</code>\u5305\u542b\u6700\u91cd\u8981\u7684\u4fe1\u606f</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 cpu() \u65b9\u6cd5 \u5c06\u5bf9\u8c61\u79fb\u5230CPU\u5185\u5b58\uff0c\u7528\u4e8e\u4e0d\u4f7f\u7528GPU\u65f6\u3002 numpy() \u65b9\u6cd5 \u5c06\u5bf9\u8c61\u8f6c\u6362\u6210numpy\u6570\u7ec4\uff0c\u4ee5\u4fbf\u4e0e\u5176\u4ed6\u5e93\u4e00\u8d77\u4f7f\u7528\u3002 cuda() \u65b9\u6cd5 \u5c06\u5bf9\u8c61\u79fb\u5230GPU\u5185\u5b58\uff0c\u4ee5\u52a0\u901f\u8ba1\u7b97\u3002 to() \u65b9\u6cd5 \u5c06\u5bf9\u8c61\u79fb\u5230\u6307\u5b9a\u7684\u8bbe\u5907\uff08\u5982CPU\u6216GPU\uff09\u3002 xyxy \u5c5e\u6027 (torch.Tensor) \u4ee5xyxy\u683c\u5f0f\u8fd4\u56de\u6846\u7684\u5750\u6807\u3002(\u8868\u793a\u6846\u7684\u5de6\u4e0a\u89d2\u548c\u53f3\u4e0b\u89d2\u7684\u5750\u6807) conf \u5c5e\u6027 (torch.Tensor) \u8fd4\u56de\u6846\u7684\u7f6e\u4fe1\u5ea6\u503c\uff08\u8868\u793a\u6846\u662f\u5426\u53ef\u9760\uff09\u3002 cls \u5c5e\u6027 (torch.Tensor) \u8fd4\u56de\u6846\u7684\u7c7b\u522b\uff08\u8868\u793a\u6846\u4e2d\u7269\u4f53\u7684\u7c7b\u578b\uff09\u3002 id \u5c5e\u6027 (torch.Tensor) \u8fd4\u56de\u6846\u7684\u8ddf\u8e2aID\uff08\u5982\u679c\u6709\uff0c\u7528\u4e8e\u8ddf\u8e2a\u591a\u4e2a\u7269\u4f53\uff09\u3002 xywh \u5c5e\u6027 (torch.Tensor) \u4ee5xywh\u683c\u5f0f\u8fd4\u56de\u6846\u7684\u5750\u6807\u3002(\u8868\u793a\u6846\u7684\u4e2d\u5fc3\u70b9\u5750\u6807\u548c\u5bbd\u9ad8) xyxyn \u5c5e\u6027 (torch.Tensor) \u8fd4\u56de\u5f52\u4e00\u5316\u5230\u539f\u59cb\u56fe\u50cf\u5927\u5c0f\u7684xyxy\u683c\u5f0f\u6846\u5750\u6807\u3002 xywhn \u5c5e\u6027 (torch.Tensor) \u8fd4\u56de\u5f52\u4e00\u5316\u5230\u539f\u59cb\u56fe\u50cf\u5927\u5c0f\u7684xywh\u683c\u5f0f\u6846\u5750\u6807\u3002 <p>\u5c06\u5750\u6807\u5f52\u4e00\u5316\u662f\u6307\u5c06\u5750\u6807\u8f6c\u6362\u5230 [0, 1] \u8303\u56f4\u5185\uff0c\u4ee5\u4fbf\u5728\u4e0d\u540c\u5927\u5c0f\u7684\u56fe\u50cf\u4e4b\u95f4\u8fdb\u884c\u5bf9\u6bd4\u3002</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a</p> Python<pre><code>from ultralytics import YOLO\n\n\nmodel = YOLO(\"runs/detect/train17/weights/best.pt\")\n\n\nresults = model([\"testPic/car2.jpeg\"], stream=True)\n\nfor result in results:\n    boxes = result.boxes\n    ## xyxy\u5750\u6807\n    xy = boxes.xyxy\n    print('-'*80)\n    ## \u7f6e\u4fe1\u5ea6\n    conf = boxes.conf\n    ## \u6807\u7b7e\n    label = boxes.cls\n    print(f\"xyxy\u5750\u6807:{xy}\")\n    print(f\"\u7f6e\u4fe1\u5ea6:{conf}\")\n    print(f\"label:{label}\")\n    result.show()\n    result.save(filename=\"result.jpg\")\n</code></pre> <p>\u63a8\u7406\u7ed3\u679c\u5982\u4e0b,\u540c\u65f6\u8fd4\u56de**\u5750\u6807**\u3001\u7f6e\u4fe1\u5ea6\u3001\u6807\u7b7e\u4fe1\u606f\uff1a</p> <p></p> <p></p>"},{"location":"study/competition/1/","title":"\u5185\u5bb9\u7b80\u4ecb","text":""},{"location":"study/competition/1/#_1","title":"\u81ea\u6211\u4ecb\u7ecd","text":"<p>\u674e\u5fd7\u8c6a\uff0c\u6cb3\u5357\u4eba\uff0c\u5f55\u53d6\u4e13\u4e1a\u662f\u5de5\u4e1a\u5de5\u7a0b\uff0c\u5927\u4e00\u8f6c\u4e13\u4e1a\u5230\u4e86 \u667a\u80fd\u5236\u9020\u5de5\u7a0b (\u5982\u679c\u662f\u5927\u4e00\u65b0\u751f\u60f3\u8981 \u8f6c\u4e13\u4e1a \u7684\u8bdd\u53ef\u4ee5\u8ddf\u6211\u8054\u7cfb\u4e86\u89e3\u3002\u4e0d\u8fc7\u5927\u4e00\u7684\u540c\u5b66\u4e0d\u4e00\u5b9a\u80fd\u8bfb\u5230\u6211\u7684\u8fd9\u4efd\u6587\u6863\ud83d\ude36\u200d\ud83c\udf2b\ufe0f\u54c8\u54c8\u54c8\uff01)\u3002\u5927\u4e00\u5230\u5927\u4e8c\u66fe\u5728\u6821\u56ed\u5355\u8f66\u5fd7\u613f\u670d\u52a1\u961f\u5446\u8fc7\u4e00\u6bb5\u65f6\u95f4\uff0c\u5bf9\u4e8e\u6211\u8fd9\u79cd\u5185\u5411\u7684\u4eba\u5c5e\u5b9e\u662f\u5e2e\u5230\u4e86\u633a\u591a\u7684\u4e1c\u897f\uff0c\u6240\u4ee5\u4e5f\u63a8\u8350\u5927\u5bb6\u53bb\u670d\u52a1\u961f\u5b66\u4e60\u8fdb\u6b65\u3002\u672c\u4eba\u5462\uff0c\u6280\u672f\u4e3b\u8981\u8d70\u7684 \u5d4c\u5165\u5f0f\u8f6f\u4ef6 \u65b9\u5411\uff0c\u6b22\u8fce\u5927\u5bb6\u627e\u6211\u8fdb\u884c\u6280\u672f\u4ea4\u6d41(\u5982\u679c\u6211\u5728\u5fd9\u7740\u8003\u7814\u90a3\u5c31\u7b97\u55bd\u54c8\u54c8\ud83e\udd23)\uff0c\u4f46\u662f\u7531\u4e8e\u8d77\u6b65\u6bd4\u8f83\u665a\uff0c\u5927\u4e8c\u63a5\u89e6\u5d4c\u5165\u5f0f\u8bfe\u7a0b\u624d\u5f00\u59cb\u5b66\u4e60\uff0c\u6240\u4ee5\u6280\u672f\u65b9\u9762\u4e5f\u4e0d\u662f\u5f88\u6210\u719f\u3002</p> <p>\u597d\u55bd\uff0c\u81ea\u6211\u4ecb\u7ecd\u5c31\u8fd9\u6837\u5427\uff0c\u6bd5\u7adf\u54b1\u4e5f\u4e0d\u662f\u6280\u672f\u5927\u4f6c\uff0c\u62ff\u7684\u5956\u4e5f\u4e0d\u591a\u3002\u5982\u679c\u4f60\u8bfb\u5230\u8fd9\u91cc\uff0c\u90a3\u4e48\u6211\u5f88\u5e86\u5e78\u80fd\u591f\u8ba4\u8bc6\u4f60\ud83e\udd1e\uff0c\u52a0\u6cb9\u54e6\ud83d\udc7b\ud83d\udc7b\ud83d\udc7b\ud83d\udc7b\ud83d\udc7b\ud83d\udc7b\u3002</p>"},{"location":"study/competition/1/#_2","title":"\u521d\u8877","text":"<p>2023\u5e74\u516d\u6708\u4efd\uff0c\u5373\u6691\u5047\u671f\u95f4\uff0c\u6211\u548c\u4e00\u4f4d\u540c\u5b66\u4e86\u89e3\u5e76\u53c2\u52a0\u4e862023\u5e74\u4e2d\u56fd\u5927\u5b66\u751f\u5de5\u7a0b\u5b9e\u8df5\u4e0e\u521b\u65b0\u80fd\u529b\u5927\u8d5b\u7684\u6821\u5185\u9009\u62d4\u8d5b\uff0c\u6210\u529f\u8fdb\u5165\u5e02\u8d5b\u5e76\u53d6\u5f97\u4e0a\u6d77\u5e02\u7279\u7b49\u5956\u8fdb\u5165\u5f53\u65f6\u7684\u56fd\u8d5b\u3002</p> <p>\u56fd\u8d5b\u7ed3\u675f\u540e\u4e0e\u6307\u5bfc\u8001\u5e08\u5546\u91cf\uff0c\u51b3\u5b9a\u7f16\u5199\u5de5\u521b\u8d5b\u667a\u80fd\u751f\u6d3b\u5783\u573e\u5206\u7c7b\u8d5b\u9053\u7684\u6bd4\u8d5b\u6307\u5bfc\u6587\u6863\uff0c\u4e3b\u8981\u76ee\u7684\u5982\u4e0b\uff1a</p> <ul> <li>\u5206\u4eab\u6bd4\u8d5b\u7ecf\u9a8c\uff0c\u5e0c\u671b\u540e\u7eed\u7684\u540c\u5b66\u53ef\u4ee5\u8e0a\u8dc3\u53c2\u52a0\u5de5\u521b\u8d5b\u53ca\u5176\u4ed6\u7ade\u8d5b\u3002</li> <li>\u5c06\u7ade\u8d5b\u4f20\u627f\u4e0b\u53bb\uff0c\u5e0c\u671b\u540e\u7eed\u540c\u5b66\u53ef\u4ee5\u5728\u201c\u5de8\u4eba\u201d\u7684\u80a9\u8180\u4e0a\u66f4\u4e0a\u4e00\u5c42\u697c\u3002</li> <li>\u5206\u4eab\u5b66\u4e60\u7ecf\u9a8c\uff0c\u5e0c\u671b\u540e\u7eed\u540c\u5b66\u5728\u6280\u672f\u5b66\u4e60\u4e0a\u5c11\u8d70\u4e00\u4e9b\u5f2f\u8def\u3002</li> <li>\u5f25\u8865\u56fd\u8d5b\u9057\u61be\uff0c\u5e0c\u671b\u80fd\u5e2e\u52a9\u540e\u7eed\u540c\u5b66\u5728\u56fd\u8d5b\u53d6\u5f97\u94f6\u5956\u751a\u81f3\u91d1\u5956\u7684\u597d\u6210\u7ee9\uff0c\u5f25\u8865\u6211\u4eec\u5728\u56fd\u8d5b\u7559\u4e0b\u7684\u9057\u61be\u3002</li> </ul> <p>\u6587\u6863\u7b2c\u4e00\u90e8\u5206\u662f\u5de5\u521b\u8d5b\u8d5b\u9053\u7684\u4ecb\u7ecd\uff0c\u6211\u4f1a\u4e3b\u8981\u4ecb\u7ecd\u201c\u667a\u80fd+\u201d\u7684\u7269\u6d41\u5c0f\u8f66\u548c\u751f\u6d3b\u5783\u573e\u5206\u7c7b\u8d5b\u9053\u3002\u7b2c\u4e8c\u90e8\u5206\u662f\u9488\u5bf92023\u5e74\u5de5\u521b\u8d5b\u667a\u80fd\u751f\u6d3b\u5783\u573e\u5206\u7c7b\u8d5b\u9053\u7684\u6bd4\u8d5b\u4f7f\u7528\u65b9\u6848\uff0c\u5176\u4e2d\u4e5f\u5305\u62ec\u4e00\u4e9b\u6d89\u53ca\u5230\u7684\u6280\u672f\u3001\u6e90\u4ee3\u7801\u3001\u5efa\u6a21\u6587\u4ef6\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6211\u4f1a\u6574\u7406\u4e0a\u4f20\u5230Github\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4f1a\u653e\u4e00\u4e9b\u81ea\u5df1\u5728\u7528\u7684\u5b66\u4e60\u5730\u5740\uff0c\u548c\u6211\u81ea\u5df1\u603b\u7ed3\u7684\u77e5\u8bc6\u5728\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff0c\u65b9\u4fbf\u5927\u5bb6\u5b66\u4e60\u76f8\u5173\u6280\u672f.</p>"},{"location":"study/competition/2/","title":"\u6bd4\u8d5b\u4ecb\u7ecd","text":""},{"location":"study/competition/2/#_1","title":"\u4ec0\u4e48\u662f\u5de5\u521b\u8d5b","text":"<p>\u5168\u56fd\u5927\u5b66\u751f\u5de5\u7a0b\u5b9e\u8df5\u4e0e\u521b\u65b0\u80fd\u529b\u5927\u8d5b\u539f\u540d\u5168\u56fd\u5927\u5b66\u751f \u5de5\u7a0b\u8bad\u7ec3\u7efc\u5408\u80fd\u529b\u7ade\u8d5b \ud83e\udd3a\ud83e\udd3a\ud83e\udd3a</p> <p>\u540e\u9762\u5185\u5bb9\u4f1a\u7b80\u79f0\u5176\u4e3a \u5de5\u521b\u8d5b \u3002</p> <p>\u5927\u8d5b\u7684\u7b80\u4ecb\uff1a</p> <p>\u5168\u56fd\u5927\u5b66\u751f\u5de5\u7a0b\u8bad\u7ec3\u7efc\u5408\u80fd\u529b\u7ade\u8d5b\u662f\u516c\u76ca\u6027\u7684\u5927\u5b66\u751f\u79d1\u6280\u521b\u65b0\u7ade\u6280\u6d3b\u52a8\uff0c\u662f\u6709\u8f83\u5927\u5f71\u54cd\u529b\u7684\u56fd\u5bb6\u7ea7\u5927\u5b66\u751f\u79d1\u6280\u521b\u65b0\u7ade\u8d5b\uff0c\u662f\u6559\u80b2\u90e8\u3001\u8d22\u653f\u90e8\u8d44\u52a9\u7684\u5927\u5b66\u751f\u7ade\u8d5b\u9879\u76ee\uff0c\u76ee\u7684\u662f\u52a0\u5f3a\u5b66\u751f\u521b\u65b0\u80fd\u529b\u548c\u5b9e\u8df5\u80fd\u529b\u57f9\u517b\uff0c\u63d0\u9ad8\u672c\u79d1\u6559\u80b2\u6c34\u5e73\u548c\u4eba\u624d\u57f9\u517b\u8d28\u91cf\u3002\u4e3a\u5f00\u529e\u6b64\u9879\u7ade\u8d5b\uff0c\u7ecf\u6559\u80b2\u90e8\u9ad8\u7b49\u6559\u80b2\u53f8\u6279\u51c6\uff0c\u4e13\u95e8\u6210\u7acb\u4e86\u5168\u56fd\u5927\u5b66\u751f\u5de5\u7a0b\u8bad\u7ec3\u7efc\u5408\u80fd\u529b\u7ade\u8d5b\u7ec4\u7ec7\u59d4\u5458\u4f1a\u548c\u4e13\u5bb6\u59d4\u5458\u4f1a\u3002\u7ade\u8d5b\u7ec4\u59d4\u4f1a\u79d8\u4e66\u5904\u8bbe\u5728\u5927\u8fde\u7406\u5de5\u5927\u5b66\u3002\u6bcf\u4e24\u5e74\u4e00\u5c4a\u3002</p> <p>2023\u5de5\u521b\u8d5b\u7684\u5927\u8d5b\u4e3b\u9898\u4e0e\u76ee\u7684\uff1a</p> <p>\u672c\u5c4a\u5927\u8d5b\u4ee5 \u4ea4\u53c9\u878d\u5408 \u5de5\u7a0b\u521b\u65b0\u6c42\u5353\u8d8a\uff0c\u5b88\u5fb7\u5d07\u52b3 \u5236\u9020\u5f3a\u56fd \u52c7\u62c5\u5f53\u4e3a\u4e3b\u9898\uff0c\u9762\u5411\u9002\u5e94\u5168\u7403\u53ef\u6301\u7eed\u53d1\u5c55\u9700\u6c42\u7684\u5de5\u7a0b\u5e08\u57f9\u517b\uff0c\u670d\u52a1\u4e8e\u56fd\u5bb6\u521b\u65b0\u9a71\u52a8\u4e0e\u5236\u9020\u5f3a\u56fd\u6218\u7565\uff0c\u5f3a\u5316 \u5de5\u7a0b\u521b\u65b0\u80fd\u529b \uff0c\u575a\u6301\u7406\u8bba\u5b9e\u8df5\u7ed3\u5408\u3001\u5b66\u79d1\u4e13\u4e1a\u4ea4\u53c9\u3001\u6821\u4f01\u534f\u540c\u521b\u65b0\u3001\u7406\u5de5\u4eba\u6587\u878d\u901a\uff0c\u521b\u5efa\u5177\u6709\u9c9c\u660e\u4e2d\u56fd\u7279\u8272\u7684\u9ad8\u7aef\u5de5\u7a0b\u521b\u65b0\u8d5b\u4e8b\uff0c\u5efa\u8bbe\u5f15\u9886\u4e16\u754c\u5de5\u7a0b\u5b9e\u8df5\u6559\u80b2\u53d1\u5c55\u65b9\u5411\u7684\u7cbe\u54c1\u5de5\u7a0b\uff0c\u6784\u5efa\u9762\u5411\u5de5\u7a0b\u5b9e\u9645\u3001\u670d\u52a1\u793e\u4f1a\u9700\u6c42\u3001\u6821\u4f01\u534f\u540c\u521b\u65b0\u7684\u5b9e\u8df5\u80b2\u4eba\u5e73\u53f0\uff0c\u57f9\u517b\u670d\u52a1\u5236\u9020\u5f3a\u56fd\u7684\u5353\u8d8a\u5de5\u7a0b\u6280\u672f\u540e\u5907\u4eba\u624d\uff0c\u6253\u9020\u5177\u6709\u4e2d\u56fd\u7279\u8272\u4e16\u754c\u4e00\u6d41\u5de5\u7a0b\u5b9e\u8df5\u4e0e\u521b\u65b0\u6559\u80b2\u4f53\u7cfb\u3002</p> <p>\u5404\u5927\u8d5b\u9053\u53c2\u52a0\u60c5\u51b5\uff1a</p> <p></p> <p>\u5de5\u521b\u8d5b\u4e3b\u8981\u5206\u4ee5\u4e0a\u516d\u4e2a\u8d5b\u9053\uff0c\u5176\u4e2d\u201c\u667a\u80fd+\u201d\u8d5b\u9053\u5206\u4e3a\u7269\u6d41\u5c0f\u8f66\u548c\u751f\u6d3b\u5783\u573e\u5206\u7c7b\uff0c\u4e3b\u8981\u8003\u5bdf\u5d4c\u5165\u5f0f\u3001\u89c6\u89c9\u3001\u76ee\u6807\u68c0\u6d4b\u3001\u673a\u68b0\u7ed3\u6784\u8bbe\u8ba1\u7b49\u6280\u672f\u3002\u201c\u65b0\u80fd\u6e90\u8f66\u201d\u8d5b\u9053\u5206\u4e3a\u592a\u9633\u80fd\u548c\u6e29\u5dee\uff0c\u4e3b\u8981\u8003\u5bdf\u51f8\u8f6e\u8bbe\u8ba1\u3001RFID\u7b49\u3002\u5176\u4ed6\u8d5b\u9053\u4e0d\u592a\u4e86\u89e3\uff0c\u53ef\u4ee5\u53bb\u5b98\u7f51\u770b\u4ecb\u7ecd\u6587\u6863\u30022023\u5e74\u6211\u6821\u53c2\u52a0\u7684\u4e3b\u8981\u5c31\u662f\u6807\u6ce8\u7684\u56db\u4e2a\u8d5b\u9053\uff0c\u5176\u4e2d\u592a\u9633\u80fd\u3001\u751f\u6d3b\u5783\u573e\u5206\u7c7b\u3001\u98de\u884c\u5668\u4eff\u771f\u90fd\u5404\u6709\u4e00\u961f\u8fdb\u5165\u56fd\u8d5b\uff0c\u53d6\u5f97\u4e24\u94dc\u4e00\u94f6\u7684\u6210\u7ee9\u3002</p>"},{"location":"study/competition/2/#_2","title":"\u5de5\u521b\u8d5b\u542b\u91d1\u91cf","text":"<p>\u9996\u5148\uff0c\u5168\u56fd\u5927\u5b66\u751f\u5de5\u7a0b\u5b9e\u8df5\u4e0e\u521b\u65b0\u80fd\u529b\u5927\u8d5b\u5373\u5de5\u521b\u8d5b\u7684 \u56fd\u8d5b \uff0c\u5c5e\u4e8e\u5927\u5b66\u751f\u7ade\u8d5b\u4e2d\u7684A\u7c7b\u8d5b\u4e8b\u3002\u5927\u5b66\u751f\u7ade\u8d5b\u4e3b\u8981\u5206\u4e3aABCD\u7c7b\u7ade\u8d5b\uff0cA\u7c7b\u7ade\u8d5b\u542b\u91d1\u91cf\u548c\u8ba4\u53ef\u5ea6\u4e3a\u6700\u9ad8\uff0c\u5982\u5927\u5bb6\u4e86\u89e3\u6bd4\u8f83\u591a\u7684 \u4e92\u8054\u7f51+\u3001\u6311\u6218\u676f\u3001\u6570\u5b66\u5efa\u6a21\u3001\u7535\u8d5b \u7b49\u7b49\u540c\u5c5eA\u7c7b\u7ade\u8d5b\uff0c\u6211\u4eec\u5b66\u6821\u5bf9\u4e8eA\u7c7b\u7ade\u8d5b\u540c\u6837\u6709\u8bf4\u660e\uff1a</p> <p></p> <p>\u8fd9\u4e2a\u8868\u683c\u6765\u6e90\u4e8e\u5b66\u4e60 \u4e0a\u6d77\u7b2c\u4e8c\u5de5\u4e1a\u5927\u5b66\u521b\u65b0\u521b\u4e1a\u5b66\u5206\u7ba1\u7406\u529e\u6cd5 \u6587\u6863\uff0c\u5728\u5927\u56db\u6bcf\u4e2a\u4e13\u4e1a\u90fd\u6709\u4e00\u95e8\u521b\u65b0\u521b\u4e1a\u8bfe\u7a0b\u9700\u8981\u4e0a\uff0c\u800c\u8fd9\u95e8\u8bfe\u6709\u4e00\u79cd\u514d\u4fee\u529e\u6cd5\uff0c\u53ea\u8981\u6ee1\u8db3\u6761\u4ef6\u7684\u540c\u5b66\u4fbf\u53ef\u4ee5\u63d0\u51fa\u514d\u4fee\u7533\u8bf7\uff0c\u6761\u4ef6\u5982\u4e0b\uff1a</p> <p></p> <p>\u26a0\u26a0\u26a0--\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u4e00\u70b9\uff0cA\u7c7b\u8d5b\u4e8b\u6307\u7684\u662f\u67d0\u7c7b\u8d5b\u4e8b\u7684\u56fd\u8d5b\uff0c\u8be5\u8d5b\u4e8b\u7684\u5e02\u8d5b\u53ea\u662fC\u7c7b\u6216\u8005\u662fB\u7c7b\u3002\u4f8b\u5982 \u4e0a\u6d77\u7b2c\u4e8c\u5de5\u4e1a\u5927\u5b66\u521b\u65b0\u521b\u4e1a\u5b66\u5206\u7ba1\u7406\u529e\u6cd5 \u6587\u6863\u660e\u786e\u6307\u51fa \u5168\u56fd\u5927\u5b66\u751f\u673a\u68b0\u521b\u65b0\u8bbe\u8ba1\u5927\u8d5b \u4e3aA\u7c7b\uff0c\u800c \u4e0a\u6d77\u5e02\u5927\u5b66\u751f\u673a\u68b0\u5de5\u7a0b\u521b\u65b0\u5927\u8d5b \u662fC\u7c7b\u8d5b\u4e8b\u3002</p> <p>\u603b\u7684\u6765\u8bf4\uff0c\u5de5\u521b\u8d5b\u4f5c\u4e3aA\u7c7b\u8d5b\u4e8b\u542b\u91d1\u91cf\u8fd8\u662f\u5f88\u8db3\u7684\uff0c\u5bf9\u4e8e\u4e2a\u4eba\u6280\u672f\u7684\u5b9e\u8df5\u521b\u65b0\u548c\u56e2\u961f\u7ec4\u7ec7\u80fd\u529b\u90fd\u662f\u4e00\u79cd\u6311\u6218\u3002</p>"},{"location":"study/competition/2/#_3","title":"\u5de5\u521b\u8d5b\u6bd4\u8d5b\u5f62\u5f0f","text":"<p>\u50cf\u673a\u68b0\u521b\u65b0\u8bbe\u8ba1\u5927\u8d5b\u3001\u6311\u6218\u676f\u7b49\u6bd4\u8d5b\u662f\u5e26\u7740\u521b\u65b0\u4f5c\u54c1\u53c2\u4e0e\u7b54\u8fa9\u8bc4\u5206\uff0c\u5bf9\u4e8e\u4f5c\u54c1\u7684\u5f62\u5f0f\u3001\u79cd\u7c7b\u6ca1\u6709\u8981\u6c42\uff0c\u6216\u8005\u53ea\u4f1a\u89c4\u5b9a\u4e00\u4e2a\u5927\u6982\u7684\u65b9\u5411\u3002\u5982\u673a\u521b\u4f1a\u89c4\u5b9a\u4e00\u4e2a\u519c\u4e1a\u673a\u68b0\u548c\u4eff\u751f\u4e3b\u9898\uff0c\u5176\u4ed6\u81ea\u7531\u53d1\u6325\u3002\u800c\u5de5\u521b\u8d5b\u4e0d\u540c\u5176\u4ed6\u4e00\u4e9b\u521b\u65b0\u521b\u4e1a\u7c7b\u7684\u6bd4\u8d5b\uff0c\u5de5\u521b\u8d5b\u4f1a\u89c4\u5b9a\u4e00\u4e2a\u5e94\u7528\u573a\u666f\u548c\u88c5\u7f6e\u9700\u8981\u5b8c\u6210\u7684\u4efb\u52a1\uff0c\u4ee5\u53ca\u4e00\u4e9b\u5c3a\u5bf8\u7535\u538b\u7684\u7ec6\u81f4\u8981\u6c42\uff1b\u6700\u540e\u7684\u6bd4\u8d5b\u5f62\u5f0f \u6ca1\u6709\u7b54\u8fa9 \uff0c\u6bd4\u8d5b\u8fc7\u7a0b\u5206\u4e3a\u521d\u8d5b\u548c\u51b3\u8d5b\uff0c\u521d\u8d5b\u5206\u6570\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a</p> <ul> <li>\u6587\u6863\u3001\u5916\u89c2\u3001\u521b\u610f\u8bbe\u8ba1 \u536030%</li> <li>\u88c5\u7f6e\u81ea\u52a8 \u5b8c\u6210\u6307\u5b9a\u4efb\u52a1 \uff0c\u6839\u636e\u51c6\u786e\u7387\u8bc4\u5206\uff0c\u536070%</li> </ul> <p>\u901a\u8fc7\u521d\u8d5b\u51b3\u5b9a\u51fa\u51b3\u8d5b\u540d\u5355\uff0c\u7136\u540e\u51b3\u8d5b\u56e2\u961f\u8fdb\u5165 \u521b\u65b0\u5b9e\u8df5\u73af\u8282 \u73af\u8282\uff0c\u6839\u636e\u6bd4\u8d5b\u8981\u6c42\u66f4\u6539\u88c5\u7f6e\u7684\u67d0\u4e00\u4e2a\u7ed3\u6784(\u73b0\u573a\u516c\u5e03\uff0c\u6bd4\u8d5b\u524d\u5e76\u4e0d\u77e5\u9053)\uff0c\u6b64\u73af\u8282\u975e\u5e38\u8003\u9a8c\u8d5b\u524d\u51c6\u5907\u548c\u5e94\u53d8\u80fd\u529b\u3002-----\u5360\u520630%</p> <p>\u540e\u9762\u662f\u73b0\u573a\u51b3\u8d5b\uff0c\u8ddf\u521d\u8d5b\u4e00\u6837\u5b8c\u6210 \u6307\u5b9a\u4efb\u52a1 \uff0c\u4f1a\u6bd4\u521d\u8d5b\u96be\u3002-----\u5360\u520670%</p> <p></p> <p>\u5173\u4e8e\u73b0\u573a\u521d\u8d5b\u4e0e\u73b0\u573a\u51b3\u8d5b\uff1a</p> <p>\u73b0\u573a\u521d\u8d5b\u548c\u51b3\u8d5b\u662f\u57fa\u672c\u4e00\u6837\u7684\uff0c\u4e0d\u540c\u8d5b\u9879\u5177\u4f53\u5dee\u5f02\u53c2\u8003\u8d5b\u9053\u7684\u8bf4\u660e\u6587\u6863\u3002\u73b0\u573a\u6bd4\u8d5b\u6709\u4e24\u6b21\u673a\u4f1a\uff0c\u6bcf\u6b21\u5f00\u59cb\u524d\u6709\u4e00\u5b9a\u51c6\u5907\u65f6\u95f4\uff0c2023 \u5e02\u8d5b \u51c6\u5907\u65f6\u95f4\uff1a\u7b2c\u4e00\u8f6e5\u5206\u949f\uff0c\u7b2c\u4e8c\u8f6e3\u5206\u949f\uff1b2023**\u56fd\u8d5b**\u51c6\u5907\u65f6\u95f4\uff1a\u7b2c\u4e00\u8f6e3\u5206\u949f\uff0c\u7b2c\u4e8c\u8f6e3\u5206\u949f \u4e14\u201c\u667a\u80fd+\u201d\u8d5b\u9053\u90fd\u6709 \u65f6\u95f4\u9650\u5236 \uff0c\u8981\u7279\u522b\u6ce8\u610f\u3002</p> <p>\u26a0\u4e00\u5b9a\u8981\u4ed4\u7ec6\u9605\u8bfb\u8d5b\u9053\u8bf4\u660e\u6587\u6863\uff0c\u5f88\u91cd\u8981\uff0c\u4e0d\u8981\u51fa\u73b0\u8fdd\u89c4\u3002</p>"},{"location":"study/competition/3/","title":"\u8d5b\u9053\u4ecb\u7ecd","text":""},{"location":"study/competition/3/#_1","title":"\u667a\u80fd \"+\" \u8d5b\u9053\u4ecb\u7ecd","text":"<p>\u667a\u80fd \"+\" \u8d5b\u9053\u6709\u7269\u6d41\u5c0f\u8f66\u548c\u751f\u6d3b\u5783\u573e\u5206\u7c7b\u4e24\u4e2a\u8d5b\u9879</p> <p>\u6211\u53c2\u52a0\u7684\u662f \u751f\u6d3b\u5783\u573e\u5206\u7c7b \uff0c\u6240\u4ee5\u6b64\u8d5b\u9879\u505a\u6ce8\u610f\u6307\u5bfc\u8bf4\u660e\uff0c\u5bf9\u4e8e \u7269\u6d41\u5c0f\u8f66 \u4e5f\u4e86\u89e3\u4e00\u4e9b\u505a\u7b80\u5355\u4ecb\u7ecd\u63d0\u4e00\u4e9b\u610f\u89c1\u3002</p>"},{"location":"study/competition/3/#_2","title":"\u7269\u6d41\u5c0f\u8f66","text":"<p>\u9605\u8bfb\u58f0\u660e\uff1a \u672c\u4eba\u5e76\u4e0d\u662f\u53c2\u52a0\u7684\u8fd9\u4e2a\u8d5b\u9053\uff0c\u6211\u4ee5\u81ea\u5df1\u56fd\u8d5b\u3001\u5e02\u8d5b\u89c1\u5230\u7684\u5f88\u591a\u4f18\u79c0\u5c0f\u8f66\u65b9\u6848\u505a\u4e00\u4e2a\u63a8\u8350\uff0c\u4e5f\u6709\u4e00\u4e9b\u81ea\u5df1\u7684\u89c1\u89e3\uff0c\u56e0\u4e3a\u5bf9\u89c4\u5219\u7814\u7a76\u5e76\u4e0d\u662f\u5f88\u591a\u6240\u4ee5\u6709\u4e0d\u6070\u5f53\u7684\u5730\u65b9\u591a\u591a\u5305\u542b\u3002</p>"},{"location":"study/competition/3/#_3","title":"\u8d5b\u9879\u7b80\u4ecb","text":"<p>\u9996\u5148\u770b\u4e00\u4e0b \u4f5c\u54c1\u8981\u6c42\uff1a</p> <p></p> <p>\u6bd4\u8d5b\u573a\u5730\uff1a</p> <p></p> <p>\u7269\u6d41\u7684\u6bd4\u8d5b\u8fc7\u7a0b\u5927\u81f4\u5982\u4e0b\uff1a</p> <ol> <li>\u653e\u7f6e\u5230\u51fa\u53d1\u70b9\uff0c\u4e00\u952e\u542f\u52a8\u7269\u6d41\u5c0f\u8f66\u3002</li> <li>\u626b\u63cf\u5e76\u8bfb\u53d6\u4e8c\u7ef4\u7801\uff0c\u83b7\u53d6\u7269\u6599\u987a\u5e8f\u4fe1\u606f\u3002</li> <li>\u7269\u6d41\u5c0f\u8f66\u6839\u636e\u4e8c\u7ef4\u7801\u4fe1\u606f\uff0c\u5b8c\u6210\u7269\u6d41\u642c\u8fd0\u4efb\u52a1\u3002</li> </ol>"},{"location":"study/competition/3/#_4","title":"\u529f\u80fd\u65b9\u6848","text":"<p>\u6839\u636e\u6bd4\u8d5b\u8981\u6c42\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u6280\u672f\u65b9\u5411\uff1a</p> <ul> <li>\u5c0f\u8f66\u5e95\u76d8\uff0c\u63a7\u5236\u5c0f\u8f66\u79fb\u52a8\u5230\u6307\u5b9a\u4f4d\u7f6e\uff0c\u8981\u975e\u5e38\u7cbe\u786e\uff0c\u4e0d\u7136\u7269\u6599\u6293\u4e0d\u5230\u3002</li> <li>\u673a\u68b0\u81c2\uff0c\u8bbe\u8ba1\u4e00\u6b3e\u673a\u68b0\u81c2\u6293\u53d6\u7269\u6599\u3002</li> <li>\u89c6\u89c9\uff1a\u89c6\u89c9\u662f\u5f88\u91cd\u8981\u7684\u4e00\u73af\uff0c\u9700\u8981\uff1a\u626b\u63cf\u4e8c\u7ef4\u7801\u3001\u8bc6\u522b\u7269\u6599\u989c\u8272\u3001\u8f85\u52a9\u5e95\u76d8\u89c6\u89c9\u5b9a\u4f4d\u3002</li> </ul> <p>\u8fd9\u4e2a\u6bd4\u8d5b\u5408\u7406\u5206\u5de5\u5f88\u91cd\u8981\uff0c\u50cf\u6211\u6821\u8d5b\u6280\u672f\u65b9\u9762\u4e00\u4e2a\u4eba\u8d1f\u8d23\uff0c\u8bf4\u5b9e\u8bdd\u633a\u7d2f\u7684\u3002\u53ef\u4ee5\u6839\u636e\u4ee5\u4e0a\u4e09\u4e2a\u6280\u672f\u65b9\u9762\u505a\u4e00\u4e2a\u5206\u5de5\uff0c\u7559\u4e00\u4e2a\u4eba\u5199\u6587\u6863\u3002</p>"},{"location":"study/competition/3/#_5","title":"\u5e95\u76d8\uff1a","text":"<p>\u8f6e\u5b50\u662f\u9ea6\u514b\u7eb3\u59c6\u8f6e\u6216\u5168\u5411\u8f6e\uff0c\u4e24\u79cd\u8f6e\u5b50\u90fd\u53ef\u4ee5\u8fdb\u884c\u591a\u65b9\u5411\u81ea\u7531\u79fb\u52a8\uff0c\u63a8\u8350 \u4f7f\u7528 \u9ea6\u514b\u7eb3\u59c6\u8f6e \uff0c\u597d\u4e0a\u624b\uff0c\u4e5f\u662f\u6211\u4eec\u5b66\u6821\u540c\u5b66\u90fd\u4f7f\u7528\u7684\u65b9\u6848\u3002</p> <p></p> <p></p> <p>\u7535\u673a\u9009\u62e9\uff0c\u76f4\u6d41\u51cf\u901f\u7535\u673a\u548c\u6b65\u8fdb\u7535\u673a\uff0c\u63a8\u8350 \u76f4\u6d41\u51cf\u901f\u7535\u673a \u5373\u53ef\uff0c\u914d\u5408PID\u7b97\u6cd5\u505a\u95ed\u73af\u63a7\u5236\u3002\u9009\u62e9\u51cf\u901f\u7535\u673a\u8981\u6ce8\u610f\u4e00\u4e2a\u53c2\u6570\uff1a\u51cf\u901f\u6bd4 \uff0c30\u5373\u53ef\u4e0d\u8981\u592a\u4f4e\u548c\u592a\u9ad8\u3002</p> <p></p> <p>\u63a8\u8350\u5546\u5bb6\uff1a\u4e9a\u535a\u667a\u80fd \u548c \u8f6e\u8da3\u79d1\u6280</p> <p>\u5f00\u53d1\u677f\u9009\u62e9\uff0c\u63a8\u8350stm32\u548carduino\uff0c\u6709\u57fa\u7840\u53ef\u4ee5\u4f7f\u7528stm32\uff0c\u5b66\u4e60\u8d77\u6765\u53ef\u80fd\u96be\u4e00\u4e9b\uff1barduino\u76f8\u5bf9\u7b80\u5355\u5f88\u591a\u3002</p> <p>stm32\u53ef\u4ee5\u9009\u7528 stm32f103c8t6 \u548c stm32f103ZET6 \u4e24\u79cd\u82af\u7247\uff0c\u6ee1\u8db3\u56db\u4e2a\u7f16\u7801\u5668\u7684\u5b9a\u65f6\u5668\u9700\u6c42\uff0c\u53ef\u4ee5\u6302\u8f7d\u591a\u4e2a\u5916\u8bbe\uff0c\u5f15\u811a\u591f\u7528\u3002\u4e0d\u63a8\u8350\u8d2d\u4e70\u5b66\u4e60\u677f\uff0c\u4e70\u4e00\u4e2a\u5c0f\u4e00\u4e9b\u8d44\u6e90\u591f\u7528\u7684\u677f\u5b50\u5c31\u53ef\u4ee5\uff0c\u6709\u80fd\u529b\u7528PCB\u753b\u4e00\u4e2a\u5916\u8bbe\u62d3\u5c55\u677f\uff0c\u6bd4\u7528\u675c\u90a6\u7ebf\u8fde\u6765\u8fde\u53bb\u53ef\u9760\u5f88\u591a\u3002</p> <p>arduino\u9009\u578b\u5c31\u7b80\u5355\u5f88\u591a\uff0c\u6015\u8d44\u6e90\u4e0d\u591f\u5c31\u7528 arduino mega \uff0c\u6216\u8005 arduino uno \uff0c\u8d44\u6e90\u5c11\u4e00\u4e9b\u3002</p> <p></p> <p></p>"},{"location":"study/competition/3/#_6","title":"\u673a\u68b0\u81c2\uff1a","text":"<p>\u673a\u68b0\u81c2\u6bd4\u8d5b\u4f7f\u7528\u7684\u5206\u4e09\u7c7b</p> <p>1.\u516d\u81ea\u7531\u5ea6\u8235\u673a\u673a\u68b0\u81c2</p> <p>\u57fa\u672c\u673a\u6784\u5927\u5dee\u4e0d\u5dee\uff0c\u6709\u4e00\u4e9b\u540c\u5b66\u4f1a\u5bf9\u673a\u68b0\u8fdb\u884c\u7b80\u5355\u6539\u9020\uff0c\u7b2c\u4e00\u4e2a\u81ea\u7531\u5ea6\u8235\u673a\u6700\u540e\u7528\u4e00\u4e2a\u626d\u77e9\u5927\u4e00\u4e9b\u9632\u6b62\u7a81\u7136\u70e7\u574f\u3002\u540c\u65f6\u673a\u68b0\u722a\u90e8\u5206\u6700\u540e\u81ea\u5df1\u8bbe\u8ba1\uff0c\u6839\u636e\u7269\u6599\u548c\u81ea\u5df1\u8bbe\u8ba1\u7684\u673a\u68b0\u81c2\u8fd0\u52a8\u65b9\u5f0f\u3002</p> <p></p> <p>2.\u56db\u81ea\u7531\u5ea6</p> <p></p> <p>3.\u4e24\u81ea\u7531\u5ea6\u6b65\u8fdb\u7535\u673a\u673a\u68b0\u81c2</p> <p>\u8fd9\u79cd\u90fd\u662f\u81ea\u5df13D\u6253\u5370\u8bbe\u8ba1</p> <p>\u70b9\u51fb\u67e5\u770b\u6848\u4f8b</p> <p>1\u30012\u65b9\u6848\u90fd\u9700\u8981\u591a\u4e2a\u8235\u673a\uff0c\u5efa\u8bae\u4e70\u4e00\u4e2a\u8235\u673a\u62d3\u5c55\u677f</p> <p></p>"},{"location":"study/competition/3/#_7","title":"\u89c6\u89c9","text":"<p>\u89c6\u89c9\u91c7\u7528openmv\u6216\u8005\u5de5\u63a7\u673a\u642d\u914dopencv\uff0c\u5de5\u63a7\u673a\u53ef\u4ee5\u7528\u6811\u8393\u6d3e\u3002\u63a8\u8350 openmv \u5373\u53ef\uff0c\u4e0a\u624b\u7b80\u5355\u3002</p> <p>openmv\u8d2d\u4e70\u94fe\u63a5</p> <p></p> <p>\u786c\u4ef6\u65b9\u6848\u90fd\u662f\u5176\u6b21\u7684\uff0c\u91cd\u8981\u7684\u662f\u5b9a\u4f4d\u7b97\u6cd5\u548c\u673a\u68b0\u81c2\u8def\u5f84\u89c4\u5212\u7684\u51c6\u786e\u6027\u3002</p>"},{"location":"study/competition/3/#_8","title":"\u6ce8\u610f\u4e8b\u9879","text":""},{"location":"study/competition/3/#_9","title":"\u751f\u6d3b\u5783\u573e\u5206\u7c7b","text":""},{"location":"study/competition/3/#_10","title":"\u8d5b\u9879\u7b80\u4ecb","text":""},{"location":"study/competition/3/#_11","title":"\u4f5c\u54c1\u8981\u6c42\uff1a","text":"<p>\u8fd9\u4e00\u90e8\u5206\u662f\u5bf9\u4f5c\u54c1\u529f\u80fd\u7684\u603b\u4f53\u6982\u62ec\uff0c\u770b\u770b\u5c31\u884c\uff0c\u91cd\u70b9\u90fd\u5df2\u7ecf\u52a0\u6df1\u6807\u6ce8\u4e86\u3002\u9700\u8981\u6ce8\u610f\u7684\u5c31\u662f\u5206\u7c7b\u6807\u7b7e\u3001\u538b\u7f29\u88c5\u7f6e\uff0c\u540e\u9762\u4f1a\u8be6\u7ec6\u8bf4\u660e\u3002</p> <p></p>"},{"location":"study/competition/3/#_12","title":"\u529f\u80fd\u8981\u6c42\uff1a","text":"<p>\u8fd9\u4e00\u90e8\u5206\u662f\u6700\u91cd\u8981\u7684\uff0c\u6db5\u76d6\u4e86\u6211\u4eec\u4f5c\u54c1\u6700\u540e\u7684\u529f\u80fd</p> <ul> <li>\u4f5c\u54c1\u9876\u90e8\uff0c\u56fa\u5b9a\u6295\u653e\u53e3(\u521d\u8d5b130x130\uff0c\u51b3\u8d5b\u73b0\u573a\u516c\u5e03)\u3002</li> <li>\u7531 \u4e00\u4e2a\u4eba \u5c06\u5783\u573e\u653e\u5165\u6295\u653e\u53e3\u3002\u4f5c\u54c1 \u81ea\u52a8\u8bc6\u522b\u5206\u7c7b \u81f3\u5783\u573e\u6876\u3002</li> <li>\u53ef\u56de\u6536\u5783\u573e\u9700\u8981 \u538b\u7f29\u88c5\u7f6e \uff0c\u4e14\u5fc5\u987b\u5728\u5168\u90e8\u5783\u573e\u5206\u7c7b\u4efb\u52a1\u5b8c\u6210\u524d\u5b8c\u6210\u3002</li> <li>\u9ad8\u4eae\u663e\u793a\u5c4f\uff0c\u53ef\u4ee5\u64ad\u653e\u5ba3\u4f20\u89c6\u9891\uff0c\u663e\u793a\u6295\u653e\u5783\u573e\u7684\u4fe1\u606f\u3001\u6ee1\u8f7d\u60c5\u51b5\u3002</li> <li>\u5f85\u673a \u65f6 \u5faa\u73af\u64ad\u653e \u5ba3\u4f20\u89c6\u9891\u3002</li> </ul> <p></p>"},{"location":"study/competition/3/#_13","title":"\u9a71\u52a8\u8981\u6c42\uff1a","text":"<p>\u6ce8\u610f\u7535\u538b\u8981\u6c42\uff0c\u4e0d\u5927\u4e8e24\u4f0f\uff0c\u6211\u4eec\u56fd\u8d5b\u56e0\u4e3a\u9ad8\u4e860.03V\u6ca1\u6709\u7ed9\u6210\u7ee9\u6392\u5e8f\ud83d\ude2d\ud83d\ude2d\ud83d\ude2d(\u8fd9\u91cc\u4e0d\u5410\u69fd\u4e86\uff0c\u5218\u8001\u5e08\u6bd4\u8d5b\u524d\u80af\u5b9a\u4f1a\u5631\u5490\u4f60\u4eec\u7684\uff0c\u4e0d\u8981\u62a5\u6709\u4fa5\u5e78\u5fc3\u7406\uff0c\u4e25\u683c\u6309\u7167\u89c4\u5219)\u3002</p> <p></p>"},{"location":"study/competition/3/#_14","title":"\u673a\u68b0\u7ed3\u6784\u8981\u6c42\uff1a","text":"<p>\u8fd9\u91cc\u4e0d\u7528\u88ab\u81ea\u4e3b\u8bbe\u8ba1\u5413\u5230\uff0c\u53ea\u8981\u4e0d\u662f\u6574\u7406\u5168\u4e70\u7684\u6210\u54c1\u5c31\u884c\uff0c\u80fd\u75283D\u6253\u5370\u5c31\u7528\uff0c\u6bd5\u7adf\u7ecf\u8d39\u6709\u9650\u54c8\u54c8\u54c8\u3002</p> <p></p>"},{"location":"study/competition/3/#_15","title":"\u5916\u5f62\u5c3a\u5bf8\u8981\u6c42\uff1a","text":"<p>\u4f5c\u54c1\u5236\u4f5c\u65f6\u4e00\u5b9a\u8981\u8003\u8651\u9ad8\u5ea6\uff0c\u7279\u522b\u662f\u6821\u8d5b\uff0c\u56e0\u4e3a\u540e\u9762\u8981\u8003\u8651\u51b3\u8d5b\u7684\u591a\u79cd\u5783\u573e\u5206\u7c7b\uff0c\u80af\u5b9a\u4f1a\u6216\u591a\u6216\u5c11\u52a0\u9ad8\u3002</p> <p></p> <p>\u6295\u653e\u7684\u7269\u6599\uff1a</p> <p>\u7269\u6599\u8fd9\u91cc\u4e0d\u7ec6\u8bf4\uff0c\u540e\u9762\u7684\u7a0b\u5e8f\u90e8\u5206\u4f1a\u8be6\u7ec6\u8bf4\uff0c\u6211\u4eec\u56fd\u8d5b\u4e5f\u662f\u8e29\u4e86\u5751\u7684\u3002</p> <p></p> <p>\u751f\u6d3b\u5783\u573e\u5206\u7c7b\u8d5b\u9053\u6700\u91cd\u8981\u7684\u9664\u4e86\u89c6\u89c9\u65b9\u9762\u5c31\u662f\u7ed3\u6784\u642d\u5efa\u65b9\u9762\uff0c\u6700\u8017\u65f6\u95f4\u7684\u4e5f\u662f\u7ed3\u6784\u8bbe\u8ba1\u548c\u642d\u5efa\uff0c\u642d\u5efa\u4ee5\u540e\u8c03\u8bd5\u7a0b\u5e8f\u5c31\u662f\u5f88\u65b9\u4fbf\u548c\u5feb\u4e50\u7684\u3002</p> <p>\u4e0a\u8bc9\u4e3a 2023 \u5e74\u7684\u6bd4\u8d5b\u8bf4\u660e\u6587\u6863\uff0c\u6bcf\u5e74\u6587\u6863\u5dee\u7684\u4e0d\u591a\uff0c\u4f46\u4e00\u5b9a\u4ee5\u81ea\u5df1 \u5f53\u4e0b\u6587\u6863\u4e3a\u6807\u51c6 \u5236\u4f5c\u4f5c\u54c1\uff0c\u7279\u522b\u662f \u5c3a\u5bf8\u8981\u6c42 \uff0c\u4e00\u70b9\u90fd\u4e0d\u80fd\u8d85\u8fc7\u3002</p>"},{"location":"study/competition/3/#_16","title":"\u4eba\u5458\u5206\u5de5","text":"<p>\u4eba\u5458\u5206\u5de5\u5f88\u91cd\u8981\uff0c\u8fd9\u91cc\u7279\u522b\u8bf4\u660e\u56e2\u961f\u4e2d \u4e0d\u8981\u6709\u6df7\u5b50 \uff0c\u6211\u662f\u6df1\u6709\u4f53\u4f1a\u7684\u3002\u6821\u8d5b\u671f\u95f4\u662f\u6211\u548c\u4e00\u4f4d\u670b\u53cb\u4e24\u4e2a\u4eba\u53c2\u8d5b\u7684\uff0c\u4e00\u5f00\u59cb4\u4e2a\u4eba\u56e0\u4e3a\u6001\u5ea6\u6d88\u6781\u6c9f\u901a\u540e\u8e22\u4e86\u4e24\u4e2a\uff0c\u540e\u9762\u6211\u8d1f\u8d23\u6280\u672f\u90e8\u5206\uff0c\u53e6\u4e00\u4f4d\u540c\u5b66\u8d1f\u8d23\u6587\u6863\u548c\u5668\u4ef6\u8d2d\u4e70\u7b49\u5de5\u4f5c\uff0c\u6700\u540e\u901a\u5bb5\u597d\u51e0\u5929\u624d\u5b8c\u6210\u4f5c\u54c1\u3002\u8fd8\u8981\u4e00\u7ec4\u65f6\u4e00\u4e2a\u4eba\u5e72\u7684\u6821\u8d5b\uff0c\u540e\u9762\u8fdb\u56fd\u8d5b\u4e86\uff0c\u4e5f\u662f\u5f88\u5f3a\u54c8\u54c8\u54c8\ud83d\udc4d\ud83d\udc4d\ud83d\udc4d\u3002\u5e9f\u8bdd\u4e0d\u591a\u8bf4\u4e86\uff0c\u4e0b\u9762\u8bf4\u56db\u4e2a\u4eba\u5206\u5de5\uff0c\u4e5f\u662f\u7406\u60f3\u72b6\u6001\u7684\u56db\u4e2a\u4eba\u7684\u5b9a\u4f4d\uff1a</p> <ol> <li>\u673a\u68b0\u7ed3\u6784\u8bbe\u8ba1\uff0c\u8d1f\u8d23\u4f5c\u54c1\u6574\u4f53\u5f97\u7ed3\u6784\u8bbe\u8ba1\uff0c\u5305\u62ec\u6750\u6599\u9009\u62e9\u3001\u5206\u7c7b\u65b9\u5f0f\u3001\u6295\u653e\u53e3\u3001\u538b\u7f29\u88c5\u7f6e\u3001\u5916\u89c2\u7b49\u7b49\uff0c\u5f53\u7136\u5f88\u591a\u9700\u8981\u8ba8\u8bba\u5546\u91cf\uff0c\u6700\u540e\u4e3b\u8981\u7531\u8fd9\u4f4d\u540c\u5b66\u548c\u7ec4\u957f\u6572\u5b9a\u5373\u53ef\u3002</li> <li>\u63a7\u5236\u7ed3\u6784\u8bbe\u8ba1\uff0c\u8d1f\u8d23\u5206\u7c7b\u88c5\u7f6e\u5f97\u63a7\u5236\u90e8\u5206\uff0c\u6839\u636e\u6572\u5b9a\u5f97\u5206\u7c7b\u65b9\u5f0f\u8fdb\u884c\u63a7\u5236\u8bbe\u8ba1\uff0c\u4e3b\u8981\u5305\u62ec\u6ee1\u8f7d\u3001\u7ffb\u6597\u8fd0\u52a8\u3001\u673a\u68b0\u81c2\u8fd0\u52a8\u7b49\uff0c\u9700\u8981\u6700\u540e\u548c\u89c6\u89c9\u540c\u5b66\u4e00\u8d77\u8c03\u8bd5\u4f5c\u54c1\u3002</li> <li>\u89c6\u89c9\u7ed3\u6784\uff0c\u8d1f\u8d23\u76ee\u6807\u68c0\u6d4b\u6a21\u578b\u3001\u89c6\u89c9\u65b9\u6848\u9009\u62e9\uff0c\u8fd9\u90e8\u5206\u5f88\u91cd\u8981\uff0c\u6ca1\u6709\u89c6\u89c9\u5176\u4ed6\u90e8\u5206\u90fd\u662f0\uff0c\u4e00\u5206\u62ff\u4e0d\u5230\u7684\u3002</li> <li>\u6587\u6863\u548c\u6750\u6599\u8d2d\u4e70\uff0c\u6211\u4eec\u5b66\u6821\u62a5\u9500\u91c7\u7528\u4ee3\u4ed8\u65b9\u5f0f\uff0c\u9700\u8981\u6574\u7406\u53d1\u7968\uff0c\u6240\u4ee5\u53d1\u7968\u5728\u4e00\u4e2a\u4eba\u624b\u91cc\u5f88\u65b9\u4fbf\uff0c\u53e6\u5916\u5c31\u662f\u6587\u6863\u4e66\u5199\uff0c\u901a\u5e38\u8981\u75315\u5343\u5b57\u4ee5\u4e0a\u6bd4\u8f83\u597d\u3002</li> </ol> <p>\u5f53\u7136\u4ee5\u4e0a\u65f6\u7406\u60f3\u4e2d\u7684\u4eba\u5458\u5206\u5de5\uff0c\u5b9e\u65f6\u4e0a\u5f88\u96be\u627e\u7684\u6ee1\u8db3\u4ee5\u4e0a\u80fd\u529b\u7684\u4eba\uff0c\u6240\u4ee5\u9700\u8981\u4e2a\u522b\u80fd\u529b\u5f3a\u7684\u6210\u5458\u591a\u8d1f\u8d23\u4e00\u90e8\u5206\u5185\u5bb9\u3002\u6211\u4eec\u5f53\u65f6\u5e02\u8d5b\u53ca\u56fd\u8d5b\u7684\u5206\u5de5\u662f\uff1a</p> <ol> <li>\u6211\uff0c\u8d1f\u8d23\u89c6\u89c9\u6a21\u578b\u8bad\u7ec3\u3001\u673a\u68b0\u7ed3\u6784\u8bbe\u8ba1\uff0c\u90e8\u5206\u7ed3\u6784\u9009\u578b\u3002\u5e02\u8d5b\u7ed3\u6784\u9664\u5206\u7c7b\u65b9\u5f0f\u5927\u4f53\u6700\u540e\u6cbf\u7528\u6211\u6821\u8d5b\u8bbe\u8ba1\u5185\u5bb9\uff0c\u6240\u4ee5\u6821\u8d5b\u4ee5\u540e\u7684\u673a\u68b0\u7ed3\u6784\u90e8\u5206\u7531\u63a7\u5236\u7ed3\u6784\u7684\u540c\u5b66\u627f\u62c5\u4e86\u5f88\u591a\u3002</li> <li>\u96f7\u540c\u5b66\uff0c\u8d1f\u8d23\u63a7\u5236\u7ed3\u6784\u8bbe\u8ba1\uff0c\u63a7\u5236\u7a0b\u5e8f\u3001\u51b3\u8d5b\u673a\u68b0\u81c2\u7ed3\u6784\u8bbe\u8ba1\u3001\u90e8\u5206\u673a\u68b0\u7ed3\u6784\u8bbe\u8ba1\u3002</li> <li>\u6bdb\u540c\u5b66\uff0c\u8d1f\u8d23\u6587\u6863\u4e66\u5199\u3002</li> <li>\u9f99\u540c\u5b66\uff0c\u8d1f\u8d23\u6a21\u578b\u8bad\u7ec3\u7684\u7167\u7247\u6807\u6ce8\uff0c\u6fc0\u5149\u5207\u5272\uff0c\u6750\u6599\u8d2d\u4e70\u7b49\u3002</li> </ol> <p>\u5728\u6211\u770b\u6765\u6211\u4eec\u7684\u5206\u5de5\u4e5f\u662f\u6bd4\u8f83\u5408\u7406\u7684\uff0c\u6211\u548c\u96f7\u540c\u5b66\u5206\u62c5\u4e86\u673a\u68b0\u7ed3\u6784\u8bbe\u8ba1\u90e8\u5206\uff0c\u8fd9\u6837\u4e3a\u6211\u4eec\u7a0b\u5e8f\u8c03\u8bd5\u4e5f\u63d0\u4f9b\u4e00\u5b9a\u4fbf\u5229\u3002</p> <p>\u26a0\u8fd8\u662f\u5efa\u8bae\u673a\u68b0\u7ed3\u6784\u5c3d\u91cf\u5355\u72ec\u627e\u4e00\u4e2a\u540c\u5b66\uff0c\u5199\u7a0b\u5e8f\u4ee5\u5916\u8d1f\u8d23\u673a\u68b0\u7ed3\u6784\u8bbe\u8ba1\uff0c\u4f1a\u4e00\u5b9a\u7a0b\u5ea6\u62d6\u6162\u7a0b\u5e8f\u8fdb\u5ea6\uff0c\u4e14\u7ed3\u6784\u8bbe\u8ba1\u771f\u7684\u5f88\u70e6\uff0c\u7279\u522b\u5bf9\u6211\u8fd9\u79cd\u4e0d\u559c\u6b22\u505a\u673a\u68b0\u7ed3\u6784\u7684\u4eba\u54c8\u54c8\u54c8\u54c8\u3002</p>"},{"location":"study/competition/4/","title":"\u65b9\u6848\u4ecb\u7ecd","text":""},{"location":"study/competition/4/#_1","title":"\u673a\u68b0\u7ed3\u6784\u8bbe\u8ba1","text":"<p>\u5148\u8bf4\u4e00\u8bf4\u673a\u68b0\u7ed3\u6784\u8bbe\u8ba1\u5427\uff0c\u6bd5\u7adf\u7528\u4e86\u5f88\u957f\u7684\u65f6\u95f4\u3002</p>"},{"location":"study/competition/4/#_2","title":"\u6750\u6599\u9009\u62e9","text":"<p>\u94dd\u6750\uff1a \u7ed3\u6784\u4e00\u5b9a\u8981\u7a33\u5b9a\uff0c\u56e0\u4e3a\u8981\u8003\u8651\u540e\u7eed\u53bb\u5176\u4ed6\u5b66\u6821\u6bd4\u8d5b\u7684\u65f6\u5019\u8981\u957f\u9014\u8fd0\u8f93\uff0c\u7279\u522b\u662f\u56fd\u8d5b\u8de8\u7701\u8fd0\u8fc7\u53bb\u4f1a\u6389\u5f88\u591a\u87ba\u4e1d\u3002\u6240\u4ee5\u4f5c\u54c1 \u9aa8\u9abc \u6846\u67b6\u7528\u6b27\u680720\u7684\u94dd\u6750\uff0c\u6700\u597d\u4e0d\u8981\u752830\u621640\u4ee5\u4e0a\u9664\u975e\u7ed3\u6784\u9700\u8981\uff0c\u56e0\u4e3a\u771f\u7684\u5f88\u91cd\u3002\u957f\u5ea6\u4e0d\u5bf9\u53ef\u4ee5\u4f7f\u7528\u5de5\u8bad\u4e2d\u5fc3\u4e00\u697c\u7684\u94e3\u5e8a\u94bb\u65ad\u3002</p> <p></p> <p>\u94dd\u6750\u8fde\u63a5\u952e\uff1a\u5efa\u8bae\u4f7f\u7528\u8fd9\u79cd\u76f4\u89d2\u89d2\u7801\uff1b\u6211\u4eec\u4e5f\u7528\u8fc7\u4e00\u4e9b\u5185\u7f6e\u7684\u8fde\u63a5\u4ef6\u5e76\u4e0d\u597d\u7528\uff0c\u5f53\u65f6\u8003\u8651\u88c5\u4e9a\u514b\u529b\u677f\u597d\u88c5\u4f46\u6070\u6070\u76f8\u53cd\uff0c\u6240\u4ee5\u4e0d\u63a8\u8350\uff0c\u76f4\u89d2\u89d2\u7801\u76f8\u5bf9\u5b89\u88c5\u66f4\u7b80\u5355\u3002</p> <p></p> <p></p> <p>\u524d\u9762\u63d0\u5230\u8fd0\u8f93\u8fc7\u7a0b\u4e2d\u87ba\u4e1d\u5bb9\u6613\u6389\uff0c\u6240\u4ee5\u5728\u94dd\u6750\u5e95\u90e8\u7528\u76f4\u89d2\u94c1\u56fa\u5b9a\uff0c\u9632\u6b62\u7ed3\u6784\u53d8\u578b\u3002</p> <p></p> <p>\u4e9a\u514b\u529b\u677f\uff0c\u6839\u636e\u4e0d\u540c\u7528\u5904\u5bf9\u4e8e\u4e9a\u514b\u529b\u677f\u7684\u539a\u5ea6\u9009\u62e9\u6709\u4e00\u70b9\u9009\u62e9\uff1a</p> <ul> <li>4mm\uff0c---&gt;\u7528\u4e8e\u5916\u58f3\u88c5\u914d\u6216\u5c0f\u7a0b\u5ea6\u652f\u6491\u9762\u3002</li> <li>4mm\u4ee5\u4e0a\uff0c---&gt;\u7528\u4e8e\u9700\u8981\u652f\u6491\u91cd\u91cf\u8f83\u5927\u7684\u5730\u65b9\u3002</li> <li>8mm\u4ee5\u4e0a\uff0c---&gt;\u7528\u4e8e\u538b\u7f29\u62b5\u6321\u9762\uff0c\u9700\u8981\u627f\u53d71000N\u4ee5\u4e0a\u7684\u529b\u3002</li> </ul> <p></p>"},{"location":"study/competition/4/#_3","title":"\u7ed3\u6784\u8bbe\u8ba1","text":"<p>\u4e0b\u9762\u662f\u7ed3\u6784\u8bbe\u8ba1\u65b9\u6848\uff0c\u4ece\u4e0b\u5f80\u4e0a\u4ecb\u7ecd\u3002</p> <p>\u88c5\u914d\u56fe\uff1a</p> <p></p> <p>\u5783\u573e\u6876\uff0c\u56db\u4e2a\u6876\u5c3a\u5bf8\u4e00\u6837\uff0c\u6bd4\u89c4\u5b9a\u5c3a\u5bf8\u8981\u5927\u4e00\u4e9b\u5177\u4f53\u591a\u5c11\u5fd8\u8bb0\u4e86\uff0c\u53ef\u4ee5\u91cf\u4e00\u91cf\u3002\u5efa\u8bae\u6bd4\u6211\u4eec\u7684\u6876\u5c0f\u4e00\u4e9b\u3002</p> <p>\u538b\u7f29\u88c5\u7f6e\uff0c\u4f7f\u7528\u8def\u661324V\u7535\u52a8\u63a8\u6746\u5e73\u5e95\u5ea7\uff0c\u6709\u5f88\u591a\u901f\u5ea6\u548c\u63a8\u529b\u53ef\u9009\uff0c\u7ed3\u5408\u9700\u6c42\u9009\u8d2d\u3002</p> <p></p> <p>\u5206\u7c7b\u88c5\u7f6e\uff0c\u7528\u4e9a\u514b\u529b\u677f\u62fc\u88c5\u7684\uff0c\u5c3a\u5bf8\u770b\u6211\u7684UG\u56fe\u7eb8\u5c31\u597d\uff0c\u8868\u9762\u94fa\u7684A4\u7eb8\u3002\u505a\u7684\u6bd4\u8f83\u7b80\u964b\uff0c\u8fd9\u91cc \u4e0d\u5efa\u8bae\u7ee7\u7eed\u91c7\u7528 \uff0c\u56fd\u8d5b\u5409\u5927\u7ed9\u7684\u571f\u8c46\u5f88\u5c0f\u800c\u4e14\u662f\u6e7f\u7684(\u5fc5\u987b\u5410\u69fd\u4e00\u4e0b\u5409\u5927\ud83e\udd23)\uff0c\u5f88\u5bb9\u6613\u6cbe\u4e0a\u9762\u3002</p> <p>\u5f88\u591a\u4e1c\u897f\u53c2\u8003\u5b9e\u9a8c\u5ba4\u7684\u5b9e\u7269\u4f1a\u66f4\u6e05\u695a\u4e00\u4e9b\u3002</p>"},{"location":"study/competition/4/#_4","title":"\u63a7\u5236\u7ed3\u6784\u8bbe\u8ba1","text":"<p>\u63a7\u5236\u7ed3\u6784\u5206\u521d\u8d5b\u548c\u51b3\u8d5b\uff0c\u521d\u8d5b\u8f83\u4e3a\u7b80\u5355\uff0c\u51b3\u8d5b\u5c31\u662f\u628a\u5206\u7c7b\u65b9\u6cd5\u6539\u4e3a\u4e86\u673a\u68b0\u81c2\u6293\u53d6\u3002\u7531\u4e8e\u521d\u8d5b\u51b3\u8d5b\u6700\u597d\u662f\u4e00\u4e2a\u6210\u54c1\uff0c\u6240\u4ee5\u653e\u5728\u4e00\u8d77\u8bf4\u3002\u533a\u5206\u65b9\u6cd5\u4e3a\u5783\u573e\u4e2a\u6570\uff0c\u5783\u573e\u4e3a\u4e00\u4e2a\u5373\u521d\u8d5b\uff0c\u5783\u573e\u591a\u4e2a\u5373\u51b3\u8d5b\u3002</p>"},{"location":"study/competition/4/#_5","title":"\u786c\u4ef6\u9009\u62e9","text":""},{"location":"study/competition/4/#_6","title":"\u4e3b\u63a7\u9009\u62e9","text":"<p>\u63a7\u5236\u677f\u9009\u62e9\u7684\u662f Arduino mega (\u7269\u6599\u5c0f\u8f66\u90e8\u5206\u6709\u63d0\u5230)\uff0c\u5173\u4e8eArduino mega\uff1a</p> <p>Arduino Mega 2560\u662f\u57fa\u4e8eATmega2560\u7684\u4e3b\u63a7\u5f00\u53d1\u677f\u3002Arduino Mega2560\u662f\u91c7\u7528USB\u63a5\u53e3\u7684\u6838\u5fc3\u7535\u8def\u677f\u3002\u5177\u670954\u8def\u6570\u5b57\u8f93\u5165\u8f93\u51fa\uff0c\u9002\u5408\u9700\u8981\u5927\u91cfIO\u63a5\u53e3\u7684\u8bbe\u8ba1\u3002\u5904\u7406\u5668\u6838\u5fc3\u662fATmega2560,\u540c\u65f6\u5177\u670954\u8def\u6570\u5b57\u8f93\u5165/\u8f93\u51fa\u53e3\uff0c16\u8def\u6a21\u62df\u8f93\u5165\uff0c4\u8defUART\u63a5\u53e3\uff0c\u4e00\u4e2a16MHz\u6676\u4f53\u632f\u8361\u5668\uff0c\u4e00\u4e2aUSB\u53e3\uff0c\u4e00\u4e2a\u7535\u6e90\u63d2\u5ea7\uff0c\u4e00\u4e2aICSP header\u548c\u4e00\u4e2a\u590d\u4f4d\u6309\u94ae\u3002\u677f\u4e0a\u6709\u652f\u6301\u4e00\u4e2a\u4e3b\u63a7\u677f\u7684\u6240\u6709\u8d44\u6e90\u3002Arduino Mega2560\u4e5f\u80fd\u517c\u5bb9\u4e3aArduino NUO\u8bbe\u8ba1\u7684\u6269\u5c55\u677f\u3002\u53ef\u4ee5\u81ea\u52a8\u9009\u62e93\u4e2d\u4f9b\u7535\u65b9\u5f0f\uff1a\u5916\u90e8\u76f4\u6d41\u7535\u6e90\u901a\u8fc7\u7535\u6e90\u63d2\u5ea7\u4f9b\u7535\uff1b\u7535\u6c60\u8fde\u63a5\u7535\u6e90\u8fde\u63a5\u5668\u7684GND\u548cVIN\u5f15\u811a\uff1bUSB\u63a5\u53e3\u76f4\u6d41\u4f9b\u7535\u3002</p> <p></p>"},{"location":"study/competition/4/#_7","title":"\u5206\u7c7b\u88c5\u7f6e\u63a7\u5236\u9009\u62e9","text":"<ol> <li>\u5355\u79cd\u5783\u573e \u5206\u7c7b\u9009\u62e9\u4e8c\u8f74\u4e91\u53f0\u63a7\u5236\uff0c\u5373\u4e24\u4e2a\u8235\u673a\u5b8c\u6210\u7ffb\u8f6c\u8fd0\u52a8\uff1b\u8981\u9009\u62e9\u9ad8\u7cbe\u5ea6\u8235\u673a\uff0c20kg\u4ef7\u683c\u572870~90\u4e4b\u95f4\u3002</li> </ol> <p>\u53ef\u4ee5\u8bd5\u8bd5\u4e9a\u535a\u667a\u80fd\u7684\u8235\u673a\uff1a\u4e9a\u535a\u667a\u80fd15/20/25kg\u91d1\u5c5e\u6570\u5b57\u8235\u673a</p> <p></p> <ol> <li>\u591a\u79cd\u5783\u573e \u662f\u91c7\u7528\u4e24\u4e2a\u6b65\u8fdb\u7535\u673a\u63a7\u5236\u673a\u68b0\u81c2x\u3001y\u8f74\u8fd0\u52a8\uff0c\u7136\u540e\u75314\u4e2a\u8235\u673a\u63a7\u5236\u6293\u53d6\u3002\u6b65\u8fdb\u7535\u673a\u9009\u7528\u597d\u4e00\u4e9b\u7684\u4f46\u4e5f\u4e0d\u9700\u8981\u5f88\u5927\uff0c\u8fd9\u91cc\u63a8\u8350\u6211\u4eec\u4f7f\u7528\u7684\u6b65\u8fdb\u7535\u673a\uff1a42\u6b65\u8fdb\u7535\u673a \uff0c\u7ecf\u8fc7\u4f7f\u7528\u6d4b\u8bd5\uff0c\u8d28\u91cf\u662f\u591f\u7528\u7684\u3002\u9632\u6b62\u6b65\u8fdb\u7535\u673a\u4e22\u6b65\u60c5\u51b5\uff0c\u6b65\u8fdb\u7535\u673a\u987b\u914d\u5907\u95ed\u73af\u63a7\u5236\u5668\uff1a42\u6b65\u8fdb\u95ed\u73af\u7535\u673a\u9a71\u52a8\u5668\u6a21\u5757\uff0c\u9009\u7528 3D\u6253\u5370\u5957\u9910 \u5373\u53ef\u3002</li> </ol> <p></p>"},{"location":"study/competition/4/#_8","title":"\u6ee1\u8f7d\u68c0\u6d4b","text":"<p>\u9009\u7528\u8d85\u58f0\u6ce2\uff0c\u6839\u636e\u6d4b\u8ddd\u5224\u65ad\u662f\u5426\u6ee1\u8f7d\u3002\u56e0\u4e3a\u5783\u573e\u6876\u89c4\u5b9a\u4e3a\u900f\u660e\uff0c\u7ea2\u5916\u6d4b\u8ddd\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u8d85\u58f0\u6ce2\u5219\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\u3002</p> <p></p>"},{"location":"study/competition/4/#_9","title":"\u9a71\u52a8\u9009\u62e9","text":"<p>\u9a71\u52a8\u65b9\u9762\u4e3b\u8981\u5c31\u662f\u6d89\u53ca\u5230\u8235\u673a\u3001\u6b65\u8fdb\u7535\u673a\u3001\u7a33\u538b\u3002</p>"},{"location":"study/competition/4/#_10","title":"\u8235\u673a\u62d3\u5c55\u677f","text":"<p>\u88c5\u7f6e\u6d89\u53ca\u5230\u7684\u8235\u673a\u8fbe\u5230\u4e8610\u4e2a\u5de6\u53f3\uff0c\u6240\u4ee5\u914d\u5907\u4e00\u4e2a\u8235\u673a\u62d3\u5c55\u677f\u63a7\u5236\u66f4\u7b80\u5355\u4e14\u65b9\u4fbf\uff0c\u5e7b\u5c14\u79d1\u6280\u548c\u4e9a\u535a\u667a\u80fd\u7684\u62d3\u5c55\u677f\u529f\u80fd\u591a\u4e00\u4e9b\uff0c\u5177\u5907\u4e32\u53e3\u6216\u84dd\u7259\u8c03\u8bd5\u529f\u80fd(\u5bf9\u4e8e\u673a\u68b0\u81c2\u66f4\u6709\u7528)\uff0c\u4ef7\u683c\u4e5f\u66f4\u9ad8\u4e00\u4e9b\uff1b\u7b2c\u4e09\u4e2a\u94fe\u63a5\u5219\u4fbf\u5b9c\u4e00\u4e9b\uff0c\u4e0d\u5177\u5907\u4e32\u53e3\u6216\u84dd\u7259\u8c03\u8bd5\u529f\u80fd\u3002</p> <p>\u5e7b\u5c14\u79d1\u628016\u8def\u8235\u673a\u63a7\u5236\u5668</p> <p>\u4e9a\u535a\u667a\u80fd16\u8def\u8235\u673a\u9a71\u52a8\u677f</p> <p>16\u8defPWM Servo\u8235\u673a\u9a71\u52a8\u677f\u6a21\u5757</p> <p>\u8235\u673a\u62d3\u5c55\u677f\u9700\u8981\u901a\u8fc7\u7535\u6c60\u7a33\u538b\u63a5\u5165\u7535\u6e90\uff0c\u800c\u8235\u673a\u7535\u6e90\u4e00\u822c\u4e3a5~8V\uff0c\u8c03\u52306.5V\u4e2a\u4eba\u8ba4\u4e3a\u8f83\u5408\u9002\u3002\u8235\u673a\u6570\u91cf\u589e\u52a0\u4f1a\u5bfc\u81f4\u7535\u6d41\u589e\u9ad8\uff0c\u6240\u4ee5\u7a33\u538b\u6a21\u5757\u7684\u8f93\u51fa\u7535\u6d41\u8981\u5c3d\u53ef\u80fd\u9ad8\uff0c\u63a8\u8350\u6700\u540e\u4e00\u4e2a\u94fe\u63a5\u7684\u7a33\u538b\u6a21\u5757\u3002</p> <p>\u6570\u663e8A\u5e26\u7a33\u538b\u964d\u538b\u6a21\u5757</p>"},{"location":"study/competition/4/#_11","title":"\u6b65\u8fdb\u7535\u673a\u95ed\u73af\u9a71\u52a8","text":"<p>\u6b65\u8fdb\u7535\u673a\u7528\u4e8e\u51b3\u8d5b\u6293\u53d6\uff0c\u7cbe\u5ea6\u8981\u6c42\u5f88\u9ad8\uff0c\u95ed\u73af\u9a71\u52a8\u677f\u5c5e\u4e8e\u5fc5\u5907\uff01</p> <p>42\u6b65\u8fdb\u95ed\u73af\u7535\u673a\u9a71\u52a8\u5668\u6a21\u5757</p>"},{"location":"study/competition/4/#_12","title":"\u76ee\u6807\u68c0\u6d4b\u73af\u5883\u642d\u5efa","text":""},{"location":"study/competition/4/#_13","title":"\u786c\u4ef6\u9009\u62e9","text":"<p>\u89c6\u89c9\u91c7\u7528 \u6811\u8393\u6d3e4B + USB\u6444\u50cf\u5934 + 7\u5bf8\u7535\u5bb9\u5c4f</p> <p>\u6811\u8393\u6d3e\u63a8\u8350\u4e86\u4e24\u5bb6\uff0c\u4e9a\u535a\u667a\u80fd\u662f\u5927\u5382\uff0c\u4ef7\u683c\u4f1a\u8d35\u4e00\u4e9b\u4e5f\u4f1a\u9001\u4e00\u4e9b\u8d44\u6599\u548c\u4ea4\u6d41\u7fa4(\u4e2a\u4eba\u611f\u89c9\u8d44\u6599\u7528\u5904\u4e0d\u5927\uff0c\u4e0d\u5982\u4e0a\u7f51\u67e5)\uff0c\u4e0d\u8fc7\u73b0\u5728\u6811\u8393\u6d3e\u964d\u4ef7\u4e86\uff0c\u4e5f\u53ef\u4ee5\u63a5\u53d7\u3002\u540e\u4e00\u5bb6\u4f1a\u4fbf\u5b9c\u4e00\u4e9b\uff0c\u6211\u540e\u9762\u90fd\u662f\u5728\u8fd9\u4e00\u5bb6\u4e70\u7684\uff0c\u552e\u540e\u4e5f\u6709\u89e3\u51b3\u8fc7\u4e00\u4e9b\u95ee\u9898\u3002</p> <p>\u6811\u8393\u6d3e4B-4GB\uff1a\u6811\u8393\u6d3e4B Raspberry Pi 4 \uff0c\u4e9a\u535a\u667a\u80fd Raspberry Pi\u6811\u8393\u6d3e4B </p> <p>\u8fd9\u4e2a\u6811\u8393\u6d3e\u6559\u7a0b\u7b97\u662f\u542c\u4e0d\u9519\u7684\uff0c\u57fa\u7840\u914d\u7f6e\u4f1a\u6559\uff0c\u5d4c\u5165\u5f0f\u5f00\u53d1\u4e5f\u4f1a\u6559\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u7cfb\u5217\u597d\u50cf\u6ca1\u6709\u66f4\u65b0\u5b8c\uff0c\u4e0d\u8fc7\u770b\u5b8c\u5c31\u5bf9\u6811\u8393\u6d3e\u4e86\u89e3\u4e0d\u5c11\u4e86\u3002\u53e6\u5916\uff0c\u6211\u7528\u6811\u8393\u6d3e\u5f15\u811a\u60c5\u51b5\u5f88\u5c11\uff0c\u66f4\u591a\u662f\u505a\u89c6\u89c9\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u6444\u50cf\u5934\u5c31\u597d\u4e86\uff0c\u5ea7\u6905\u4e0d\u9700\u8981\u8fc7\u591a\u5b66\u4e60\uff0c\u4f46\u8981\u4e86\u89e3Linux\u547d\u4ee4\uff0c\u7528\u591a\u4e86\u5c31\u719f\u7ec3\u4e86\u3002</p> <p>\u6811\u8393\u6d3e\u89c6\u9891\u5b66\u4e60\uff1a\u6811\u8393\u6d3e\u5341\u5206\u949f\u73a9\u8f6c\u7cfb\u5217\u5165\u95e8\u7bc7_</p> <p>\u6444\u50cf\u5934\u5176\u5b9e\u4e00\u5f00\u59cb\u7528\u7684\u662f\u5b98\u65b9\u4e8c\u4ee3\u6444\u50cf\u5934\uff0c\u4f46\u662f\u6821\u8d5b\u524d\u4e00\u5929\u665a\u4e0a\u7a81\u7136\u574f\u4e86\uff0c\u5f53\u65f6\u4e34\u65f6\u501f\u7684\u4e00\u4e2a\u6444\u50cf\u5934\uff0c\u91cd\u65b0\u8c03\u8bd5\u89d2\u5ea6\u5b8c\u6210\u7684\u6bd4\u8d5b\uff1b\u540e\u6765\u4e70\u4e86\u4e00\u4e2a\u53c8\u83ab\u540d\u5176\u5999\u7684\u574f\u4e86\uff0c\u6240\u4ee5\u540e\u6765\u6362\u4e86USB\u6444\u50cf\u5934\uff0c\u4e0d\u5bb9\u6613\u574f\u3002</p> <p>\u6811\u8393\u6d3e\u5b98\u65b9\u6444\u50cf\u5934\uff1a\u6811\u8393\u6d3e\u5b98\u65b9\u539f\u88c5\u6444\u50cf\u5934Pi </p> <p>\u6811\u8393\u6d3e\u5b98\u65b9\u4e8c\u4ee3\u6444\u50cf\u5934\u50cf\u7d20\u662f800\u4e07\uff0c\u5176\u5b9e\u591f\u7528\uff0c\u8fd9\u4e2aUSB\u6444\u50cf\u5934\u662f1200\u4e07\uff0c\u5f88\u6e05\u6670\u3002\u6211\u8fd8\u662f \u63a8\u8350 \u6811\u8393\u6d3e\u5b98\u65b9\u4e8c\u4ee3\u6444\u50cf\u5934\uff0c\u53ea\u6709\u4ed6\u4e0d\u51fa\u5947\u602a\u95ee\u9898\u8fd8\u662f\u5f88\u597d\u7528\u7684\u3002(\u63d0\u9192\u4e00\u4e0b \u4e0d\u8981\u4e703\u4ee3 \uff0c\u5b83\u4ec5\u652f\u6301\u6700\u65b0\u7cfb\u7edf\uff0c\u5f88\u591a\u914d\u7f6e\u90fd\u4e0d\u65b9\u4fbf\uff0c\u627e\u4e0d\u5230\u6559\u7a0b)</p> <p>USB\u6444\u50cf\u5934\uff1a1200\u4e07\u7535\u8111\u6444\u5f71\u5934USB\u5de5\u4e1a\u6444\u50cf\u59344K</p> <p>\u663e\u793a\u5c4f\u4e00\u822c\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u6570\u636e\u7ebf\u63a5\u53e3\u5728\u540e\u9762\u4e00\u79cd\u5728\u4fa7\u9762\uff0c\u63a8\u8350 \u4e70\u5728\u4fa7\u9762\u7684\u3002\u6700\u597d\u9009\u89e6\u6478\u6b3e\uff0c\u8c03\u8bd5\u4ee3\u7801\u65b9\u4fbf\u3002</p> <p>7\u5bf8\u663e\u793a\u5c4f\uff1a\u6811\u8393\u6d3e\u663e\u793a\u5c4f 4B 7\u5bf8 \u8d85\u6e05\u89e6\u6478\u5c4f</p>"},{"location":"study/competition/4/#_14","title":"\u76ee\u6807\u68c0\u6d4b\u6a21\u578b","text":"<p>\u4e0a\u4e00\u8282\u8bf4\u4e86\u786c\u4ef6\u9009\u578b\uff0c\u5b8c\u6210\u4ee5\u540e\u5c31\u53ef\u4ee5\u51c6\u5907\u8f6f\u4ef6\u65b9\u9762\u4e86\u3002</p> <p>\u6700\u540e\u7684\u89c6\u89c9\u65b9\u6848\u662fYOLOv5-Lite + onnx\u63a8\u7406\u52a0\u901f</p>"},{"location":"study/competition/4/#_15","title":"\u8bad\u7ec3\u73af\u5883\u642d\u5efa\uff08\u6709\u4fee\u6539\uff09","text":"<p>\u89e3\u91ca\u4e00\u4e0b\uff0cyolo\u662f\u4e00\u79cd\u76ee\u6807\u68c0\u6d4b\u6a21\u578b\uff0c\u6709\u5f88\u591a\u7248\u672c\uff0cyolov5\u662f\u4ed6\u7684\u4e00\u4e2a\u5b98\u65b9\u7248\u672c\uff0c\u800cyolov5-lite\u662f\u7531\u4e00\u4f4d\u5927\u4f6c\u6539\u826f\u540e\u7684\u4e00\u79cd\u66f4\u8f7b\u91cf\u7ea7\u6a21\u578b\uff0c\u4e3a\u4ec0\u4e48\u9700\u8981\u8f7b\u91cf\u7ea7\u5462\uff0c\u56e0\u4e3a\u592a\u5927\u7684\u6a21\u578b\u8ba1\u7b97\u91cf\u5927\uff0c\u6811\u8393\u6d3e\u5e26\u4e0d\u52a8\uff0c\u7b97\u529b\u4e0d\u591f\uff0c\u5c31\u4f1a\u5bfc\u81f4\u89c6\u9891\u753b\u9762\u5f88\u5361\uff0c\u68c0\u6d4b\u901f\u5ea6\u4e5f\u6162\u3002\u672c\u8d28\u4e0ayolov5\u548cyolov5-lite\u4f7f\u7528\u65b9\u5f0f\u662f\u4e00\u6837\u7684\u3002</p> <p>\u5b8c\u6574\u7684\u89c6\u9891\u6559\u7a0b\uff0c\u642d\u5efayolov5-lite\u6a21\u578b\u8bad\u7ec3\u73af\u5883\uff1a\u624b\u628a\u624b\u6559\u4f60\u642d\u5efa\u81ea\u5df1\u7684yolov5\u76ee\u6807\u68c0\u6d4b\u5e73\u53f0</p> <p>\u5b8c\u6574\u7684\u535a\u5ba2\u6587\u6863\uff1a\u76ee\u6807\u68c0\u6d4b--\u624b\u628a\u624b\u6559\u4f60\u642d\u5efa\u81ea\u5df1\u7684YOLOv5\u76ee\u6807\u68c0\u6d4b\u5e73\u53f0_\u70ae\u54e5\u5e26\u4f60\u5b66\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u4ee5\u4e0a\u6559\u7a0b\u8bbe\u8ba1\u5230\u5185\u5bb9\u5305\u62ec\uff1a</p> <ul> <li>\u642d\u5efayolov5-lite\u8bad\u7ec3\u73af\u5883\u3002</li> <li>\u6570\u636e\u96c6\u7684\u6807\u6ce8\u3002</li> <li>\u8bad\u7ec3\u81ea\u5b9a\u4e49\u6570\u636e\u96c6\uff0c\u5bfc\u51fapt\u6587\u4ef6\u3002</li> </ul> <p>\u5728<code>export.py</code>\u6587\u4ef6\u76ee\u5f55\u7ec8\u7aef\u53ef\u4ee5\u8fd0\u884c\u4e0b\u5217\u4ee3\u7801 \u8fdb\u884c\u6a21\u578b\u8f6c\u6362(.pt-&gt;.onnx) \uff1a</p> <p>\u7b2c\u4e00\u7248\u6587\u6863\u8fd9\u91cc\u6709\u4e2a\u9519\u8bef\uff0c\u6587\u5b57\u63cf\u8ff0\u9519\u8bef\uff0c\u4ee5\u6b64\u7248\u4e3a\u4e3b\u3002</p> Bash<pre><code>python export.py --weights best.pt\n</code></pre>"},{"location":"study/competition/4/#_16","title":"\u6811\u8393\u6d3e\u73af\u5883\u642d\u5efa","text":"<p>\u7ecf\u8fc7\u4e0a\u4e00\u4e2a\u8fc7\u7a0b\uff0c\u6211\u4eec\u5c31\u5df2\u7ecf\u628a\u6211\u4eec\u7684\u6a21\u578b\u8bad\u7ec3\u5b8c\u6210\uff0c \u540e\u7eed\u9700\u8981 \u7684\u662f\u901a\u8fc7\u4ee3\u7801\u89e3\u6790\u8fd9\u4e2apt\u6587\u4ef6\uff0c\u7136\u540e\u901a\u8fc7\u5b83\u53bb\u68c0\u6d4b\u6444\u50cf\u5934\u4e00\u5e27\u4e00\u5e27\u7684\u56fe\u50cf\u6570\u636e\uff0c\u5206\u6790\u6211\u4eec\u76ee\u6807\u7684\u79cd\u7c7b\u3002\u6b65\u9aa4\u5982\u4e0b\uff1a</p>"},{"location":"study/competition/4/#_17","title":"\u914d\u7f6e\u6811\u8393\u6d3e\u73af\u5883","text":"<p>\u6811\u8393\u6d3e4b\u5b89\u88c5yolov5\u5b9e\u73b0\u5b9e\u65f6\u76ee\u6807\u68c0\u6d4b_\u6811\u8393\u6d3e4b\u8dd1yolov5\u5e27\u7387\u4f4e-CSDN\u535a\u5ba2\uff0c\u8fd9\u4e2a\u597d\u50cf\u9700\u8981\u4f1a\u5458\u770b\u4e86</p> <p>\u57fa\u4e8e\u6811\u8393\u6d3e4B\u7684YOLOv5-Lite\u76ee\u6807\u68c0\u6d4b\u7684\u79fb\u690d\u4e0e\u90e8\u7f72\uff08\u542b\u8bad\u7ec3\u6559\u7a0b\uff09_\u6811\u8393\u6d3eyolo-CSDN\u535a\u5ba2</p> <p>\u6811\u8393\u6d3e-\u5feb\u901f\u76ee\u6807\u68c0\u6d4byoloV5-lite\u8bad\u7ec3\u4e0e\u79fb\u690d_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>\u4ee5\u4e0a\u4ec5\u4f5c\u53c2\u8003\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6709\u4e9b\u5e93\u53ef\u80fd\u5b89\u88c5\u4e0d\u4e0a\uff0c\u4e14\u63a8\u7406\u4ee3\u7801\u7531\u4e9b\u8bb8BUG\uff0c\u5927\u5bb6\u6839\u636e\u6211\u7684\u6d41\u7a0b\u5e76\u53c2\u8003\u4ed6\u4eec\u7684\u4e00\u8d77\u770b\uff0c\u6211\u4f1a\u628a\u6211\u4fee\u6539\u8fc7\u7684\u63a8\u7406\u4ee3\u7801\u653e\u5728\u8fd9\u91cc\u3002</p> <p>\u5176\u5b9e\u672c\u6765\u7531\u5f88\u591a\u8d44\u6599\u3001\u955c\u50cf\u3001\u5e93\u6587\u4ef6\u6211\u4fdd\u5b58\u597d\u4e86\uff0c\u4f46\u662f\u6bd4\u8d5b\u7684\u65f6\u5019\u6211\u628a\u5b58\u8d44\u6599\u7684U\u76d8\u4e22\u4e86\uff0c\u8d44\u6599\u4e5f\u4e22\u4e86\ud83d\ude2d\ud83d\ude2d\ud83d\ude2d\uff0c\u6211\u65b0\u4e70\u7684U\u76d8\u8fd8\u662f\ud83d\ude23\ud83d\ude23\ud83d\ude23\u3002\u4e0d\u8fc7\u95ee\u9898\u4e0d\u5927\uff0c\u6211\u624b\u6572\u4e00\u904d\u8fc7\u7a0b\uff0c\u518d\u627e\u4e00\u904d\u8d44\u6599\u3002</p> <p>\u6811\u8393\u6d3e\u5f00\u673a\uff0c\u5b8c\u6210\u57fa\u7840\u914d\u7f6e\u3002</p> <p>\u8fd9\u91cc\u662f\u6211\u8d2d\u4e70\u6811\u8393\u6d3e\u83b7\u5f97\u7684\u4e9a\u535a\u667a\u80fd\u7684\u8d44\u6599\uff0c\u514d\u8d39\u5206\u7ed9\u5927\u5bb6\uff1a</p> <p>\u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1Jm9qrot5CN4mZSJJhASeXg?pwd=cmzz  \u63d0\u53d6\u7801\uff1acmzz</p> <p>\u5b8c\u6210 \u57fa\u7840\u8bbe\u7f6e \u90e8\u5206\u65e2\u53ef\u3002\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f \u8bbe\u7f6e\u5f00\u673a\u81ea\u542f\u52a8\u7a0b\u5e8f \uff0c\u6bd4\u8d5b\u8981\u6c42\u4e00\u952e\u542f\u52a8\uff0c\u6240\u4ee5\u8981\u5728\u81ea\u542f\u52a8\u6587\u4ef6\u91cc\u9762\u628a\u6211\u4eec\u7684\u7a0b\u5e8f\u542f\u52a8\u3002</p>"},{"location":"study/competition/4/#yolov5-lite","title":"yolov5-lite\u79fb\u690d","text":"<p>\u7531\u4e8e\u624b\u8fb9\u6ca1\u6709\u6811\u8393\u6d3e\uff0c\u6240\u4ee5\u90e8\u5206\u5185\u5bb9\u6211\u7528\u865a\u62df\u673a\u6f14\u793a\uff0c\u5b9e\u9645\u662f\u57fa\u672c\u4e00\u81f4\u7684\u3002</p> <ol> <li>\u514b\u9686yolov5-lite</li> </ol> <p>\u8bbf\u95eeGithub\u7684yolov5-lite\u5730\u5740(\u8bb0\u5f97\u4f7f\u7528\u9b54\u6cd5)\uff1a\u4e0b\u8f7dYOLOv5-Lite</p> <p></p> <p>\u63a8\u8350 \u76f4\u63a5\u4e0b\u8f7d\u538b\u7f29\u5305\u628a\u538b\u7f29\u5305\u4f20\u5230\u6811\u8393\u6d3e\uff0c\u76f4\u63a5\u53f3\u952e\u89e3\u538b\u6216 \u7ec8\u7aef\u89e3\u538b \uff0c\u56fe\u793a\u7684\u6587\u4ef6\u5c06\u90fd\u4f1a\u5b58\u5728\u4e8e\u6587\u4ef6\u5939\u3002</p> Bash<pre><code>unzip your_file.zip # \u89e3\u538b\n</code></pre> <p>\u89e3\u538b\u4ee5\u540e\u7684\u6587\u4ef6\u7ed3\u6784\u5982\u4e0b\u56fe\uff0cYOLO-Lite-master\u662f\u6587\u4ef6\u5939\u540d\u79f0\uff0c\u540e\u7eed\u5c31\u79f0\u4e4b\u4e3a yolov5-lite\u6587\u4ef6\u5939</p> <p></p> <p>\u89e3\u91ca\u4e00\u4e0b \u6587\u4ef6\u5939\u4e0b\u6253\u5f00\u7ec8\u7aef \uff0c\u4f8b\u5982\uff1a\u5728 yolov5-lite\u6587\u4ef6\u5939 \u4e0b\u6253\u5f00\u7ec8\u7aef\uff0c\u5373\u7ec8\u7aef\u4f4d\u7f6e\u5728 yolov5-lite\u6587\u4ef6\u5939 \u4f4d\u7f6e\u3002</p> <p></p> <p>\u64cd\u4f5c\u65b9\u6cd5\u4e3a\u9ed8\u8ba4\u7ec8\u7aef\u8f93\u5165<code>cd + your_path</code>\uff0c\u4f8b\u5982\uff1a</p> <p></p> <p>\u53ef\u4ee5\u6572\u524d\u51e0\u4e2a\u5b57\u6bcd\uff0c\u7528Tab\u952e\u8865\u9f50\u3002 \u540e\u7eed\u4f1a\u76f4\u63a5\u8bf4\u5728\u67d0\u4e00\u4e2a\u6587\u4ef6\u5939\u4e0b\u6253\u5f00\u7ec8\u7aef\uff0c\u627e\u5230\u8def\u5f84\u81ea\u884c\u64cd\u4f5c\u3002</p> <ol> <li>\u5b89\u88c5pytorch</li> </ol> <p>\u5b89\u88c5\u4f9d\u8d56</p> Bash<pre><code>sudo apt-get install libopenblas-dev libblas-dev m4 cmake cython python3-dev python3-yaml python3-setuptools python3-wheel python3-pillow python3-numpy\n</code></pre> <p>\u5728\u6211\u7684\u8d44\u6599\u5305\u627e\u5230pytorch\u5b89\u88c5\u5305\uff0c\u901a\u8fc7\u6587\u4ef6\u4f20\u8f93\u52a9\u624b WinSCP \u4f20\u8f93\u5230\u6811\u8393\u6d3e(4\u4e2a\u6587\u4ef6\u90fd\u4f20\u8f93\uff0c\u540e\u9762\u90fd\u8981\u6709)\uff0c\u5728 pytorch\u5b89\u88c5\u6587\u4ef6\u7684\u76ee\u5f55\u4e0b\u6253\u5f00\u7ec8\u7aef \uff0c\u6267\u884c\u4e0b\u9762\u547d\u4ee4\u5b89\u88c5pytorch\uff1a</p> Bash<pre><code>pip3 install torch-1.8.0a0+56b43f4-cp37-cp37m-linux_armv7l.whl\npip3 install torchvision-0.9.0a0+8fb5838-cp37-cp37m-linux_armv7l.whl\n</code></pre> <p></p> <p></p> <ol> <li>\u5b89\u88c5\u4f9d\u8d56</li> </ol> <p>yolov5-lite\u6587\u4ef6\u5939 \u4e0b\u627e\u5230 requirements.txt \uff0c\u8fd9\u91cc\u662f\u9700\u8981\u5b89\u88c5\u7684\u5e93\u7684\u7248\u672c\uff0c\u628a\u6211\u4eec\u5df2\u7ecf\u5b89\u88c5\u8fc7\u7684torch\u548ctorchvision\u6ce8\u91ca\u6389\uff0c\u7136\u540e \u6587\u4ef6\u5939\u4e0b\u6253\u5f00\u7ec8\u7aef \u6267\u884c\u5b89\u88c5\u547d\u4ee4\uff1a</p> Bash<pre><code>pip3 install -r requirements.txt\n</code></pre> <p></p> <p>\u5c06 v5lite-s.pt \u6587\u4ef6\u8f6c\u79fb\u5230\u6811\u8393\u6d3e\u4e0b **yolov5-lite\u6587\u4ef6\u5939**\u4e0b</p> <p></p> <ol> <li>\u6444\u50cf\u5934\u914d\u7f6e</li> </ol> <p>\u68c0\u6d4b\u6811\u8393\u6d3e\u662f\u5426\u6709 opencv \uff0c\u6253\u5f00\u7ec8\u7aef\uff0c\u8f93\u5165<code>python3</code>\u8c03\u51fapython\u7ec8\u7aef\uff0c\u8f93\u5165<code>import cv2</code>\u4e0d\u62a5\u9519\u5373\u53ef</p> <p></p> <p>\u65b0\u5efaPyProjects\u6587\u4ef6\u5939\uff0c\u6587\u4ef6\u5939\u4e0b\u65b0\u5efa\u6587\u4ef6cv_test.py</p> Bash<pre><code>mkdir PyProjects\ncd PyProjects\ntouch cv_test.py\n</code></pre> <p></p> <p>\u590d\u5236\u4e0b\u9762\u4ee3\u7801\u5230cv_test.py\u6587\u4ef6\u3002</p> Python<pre><code>import cv2\n\n# \u521b\u5efa\u6444\u50cf\u5934\u5bf9\u8c61\ncap = cv2.VideoCapture(-1)  # 0 \u8868\u793a\u9ed8\u8ba4\u6444\u50cf\u5934\uff0c\u5982\u679c\u6709\u591a\u4e2a\u6444\u50cf\u5934\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4e0d\u540c\u7684\u7f16\u53f7\n\n# \u68c0\u67e5\u6444\u50cf\u5934\u662f\u5426\u6210\u529f\u6253\u5f00\nif not cap.isOpened():\n    print(\"\u65e0\u6cd5\u6253\u5f00\u6444\u50cf\u5934\")\n    exit()\n\n# \u8bbe\u7f6e\u6444\u50cf\u5934\u5206\u8fa8\u7387\uff08\u53ef\u9009\uff09\n# cap.set(cv2.CAP_PROP_FRAME_WIDTH, 640)\n# cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)\n\nwhile True:\n    # \u4ece\u6444\u50cf\u5934\u8bfb\u53d6\u4e00\u5e27\u56fe\u50cf\n    ret, frame = cap.read()\n\n    # \u68c0\u67e5\u5e27\u662f\u5426\u6210\u529f\u8bfb\u53d6\n    if not ret:\n        print(\"\u65e0\u6cd5\u8bfb\u53d6\u5e27\")\n        break\n\n    # \u5728\u7a97\u53e3\u4e2d\u663e\u793a\u56fe\u50cf\n    cv2.imshow('\u6444\u50cf\u5934\u6d4b\u8bd5', frame)\n\n    # \u6309\u4e0b 'q' \u952e\u9000\u51fa\u5faa\u73af\n    if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n        break\n\n# \u91ca\u653e\u6444\u50cf\u5934\u8d44\u6e90\ncap.release()\n\n# \u5173\u95ed\u6240\u6709\u7a97\u53e3\ncv2.destroyAllWindows()\n</code></pre> <p>\u6253\u5f00\u7ec8\u7aef\uff0c\u8fd0\u884c\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230\u6444\u50cf\u5934\u753b\u9762\u5219\u6ca1\u6709\u95ee\u9898\u3002</p> Bash<pre><code>python3 cv_test.py\n</code></pre> <p></p> <p>Ctrl+c\u9000\u51fa\uff0c\u8f93\u5165<code>ls /dev/video*</code>\u67e5\u770b\u6444\u50cf\u5934\u8bbe\u5907\uff0c\u4e00\u822c\u662f0/1</p> <p></p> <ol> <li>\u63a8\u7406</li> </ol> <p>yolov5-lite\u7684\u6839\u76ee\u5f55\u4e0b\uff0c\u6253\u5f00\u7ec8\u7aef\u5c1d\u8bd5\u63a8\u7406\uff1a</p> Text Only<pre><code>python3 detect.py --source 0\n</code></pre> <p>source 0\u4e0d\u884c\u53ef\u4ee5\u8bd5\u8bd5source 1\uff0c\u53d6\u51b3\u4e8e\u6444\u50cf\u5934\u8bbe\u5907\u3002</p>"},{"location":"study/competition/4/#onnx","title":"onnx\u63a8\u7406","text":"<p>\u5b89\u88c5onnxruntime</p> <p>\u5728\u6211\u7684\u8d44\u6599\u5305\u91cc\uff0c onnx\u63a8\u7406 \u6587\u4ef6\u5939\u4e0b\u6709\u4e00\u4e2aonnxruntime\u5e93\u7684\u5b89\u88c5\u6587\u4ef6\uff0c\u901a\u8fc7\u6587\u4ef6\u4f20\u8f93\u52a9\u624bWinSCP\u4f20\u8f93\u5230\u6811\u8393\u6d3e\uff0c\u6267\u884c\u4e0b\u9762\u547d\u4ee4\u5b89\u88c5\uff1a</p> Bash<pre><code>pip3 install onnxruntime-1.9.1-cp37-none-linux_armv7l.whl\n</code></pre> <p>\u6ce8\u610f\uff1aonnxruntime\u7684\u5b89\u88c5\u9700\u8981python3.7 \u548c numpy 1.21\u4ee5\u4e0a</p> Bash<pre><code>pip3 install numpy # \u5b89\u88c5numpy\n</code></pre> <p></p> <p>onnx\u63a8\u7406</p> <p>\u65b0\u5efa\u6587\u4ef6yolo.py\uff0c<code>python3 yolo.py</code>\u8fd0\u884c\u5373\u53ef\u3002</p> Python<pre><code>import random\n\nimport cv2\nimport numpy as np\nimport onnxruntime as ort\nimport time\n\n\ndef plot_one_box(x, img, color=None, label=None, line_thickness=None):\n    \"\"\"\n    description: Plots one bounding box on image img,\n                 this function comes from YoLov5 project.\n    param: \n        x:      a box likes [x1,y1,x2,y2]\n        img:    a opencv image object\n        color:  color to draw rectangle, such as (0,255,0)\n        label:  str\n        line_thickness: int\n    return:\n        no return\n    \"\"\"\n    tl = (\n            line_thickness or round(0.002 * (img.shape[0] + img.shape[1]) / 2) + 1\n    )  # line/font thickness\n    color = color or [random.randint(0, 255) for _ in range(3)]\n    x = x.squeeze()\n    c1, c2 = (int(x[0]), int(x[1])), (int(x[2]), int(x[3]))\n    cv2.rectangle(img, c1, c2, color, thickness=tl, lineType=cv2.LINE_AA)\n    if label:\n        tf = max(tl - 1, 1)  # font thickness\n        t_size = cv2.getTextSize(label, 0, fontScale=tl / 3, thickness=tf)[0]\n        c2 = c1[0] + t_size[0], c1[1] - t_size[1] - 3\n        cv2.rectangle(img, c1, c2, color, -1, cv2.LINE_AA)  # filled\n        cv2.putText(\n            img,\n            label,\n            (c1[0], c1[1] - 2),\n            0,\n            tl / 3,\n            [225, 255, 255],\n            thickness=tf,\n            lineType=cv2.LINE_AA,\n        )\n\n\ndef _make_grid(nx, ny):\n    xv, yv = np.meshgrid(np.arange(ny), np.arange(nx))\n    return np.stack((xv, yv), 2).reshape((-1, 2)).astype(np.float32)\n\n\ndef cal_outputs(outs, nl, na, model_w, model_h, anchor_grid, stride):\n    row_ind = 0\n    grid = [np.zeros(1)] * nl\n    for i in range(nl):\n        h, w = int(model_w / stride[i]), int(model_h / stride[i])\n        length = int(na * h * w)\n        if grid[i].shape[2:4] != (h, w):\n            grid[i] = _make_grid(w, h)\n\n        outs[row_ind:row_ind + length, 0:2] = (outs[row_ind:row_ind + length, 0:2] * 2. - 0.5 + np.tile(\n            grid[i], (na, 1))) * int(stride[i])\n        outs[row_ind:row_ind + length, 2:4] = (outs[row_ind:row_ind + length, 2:4] * 2) ** 2 * np.repeat(\n            anchor_grid[i], h * w, axis=0)\n        row_ind += length\n    return outs\n\n\ndef post_process_opencv(outputs, model_h, model_w, img_h, img_w, thred_nms, thred_cond):\n    conf = outputs[:, 4].tolist()\n    c_x = outputs[:, 0] / model_w * img_w\n    c_y = outputs[:, 1] / model_h * img_h\n    w = outputs[:, 2] / model_w * img_w\n    h = outputs[:, 3] / model_h * img_h\n    p_cls = outputs[:, 5:]\n    if len(p_cls.shape) == 1:\n        p_cls = np.expand_dims(p_cls, 1)\n    cls_id = np.argmax(p_cls, axis=1)\n\n    p_x1 = np.expand_dims(c_x - w / 2, -1)\n    p_y1 = np.expand_dims(c_y - h / 2, -1)\n    p_x2 = np.expand_dims(c_x + w / 2, -1)\n    p_y2 = np.expand_dims(c_y + h / 2, -1)\n    areas = np.concatenate((p_x1, p_y1, p_x2, p_y2), axis=-1)\n\n    areas = areas.tolist()\n    ids = cv2.dnn.NMSBoxes(areas, conf, thred_cond, thred_nms)\n    if len(ids) &gt; 0:\n        return np.array(areas)[ids], np.array(conf)[ids], cls_id[ids]\n    else:\n        return [], [], []\n\n\ndef infer_img(img0, net, model_h, model_w, nl, na, stride, anchor_grid, thred_nms=0.4, thred_cond=0.5):\n    # \u56fe\u50cf\u9884\u5904\u7406\n    img = cv2.resize(img0, (model_w, model_h), interpolation=cv2.INTER_AREA)\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n    img = img.astype(np.float32) / 255.0\n    blob = np.expand_dims(np.transpose(img, (2, 0, 1)), axis=0)\n\n    # \u6a21\u578b\u63a8\u7406\n    outs = net.run(None, {net.get_inputs()[0].name: blob})[0].squeeze(axis=0)\n\n    # \u8f93\u51fa\u5750\u6807\u77eb\u6b63\n    outs = cal_outputs(outs, nl, na, model_w, model_h, anchor_grid, stride)\n\n    # \u68c0\u6d4b\u6846\u8ba1\u7b97\n    img_h, img_w, _ = np.shape(img0)\n    boxes, confs, ids = post_process_opencv(outs, model_h, model_w, img_h, img_w, thred_nms, thred_cond)\n\n    return boxes, confs, ids\n\n\n# \u5f97\u5230\u4e2d\u5fc3\u5750\u6807\ndef get_centre(x_list):\n    c_x = (x_list[0] + x_list[2]) / 2\n    c_y = (x_list[1] + x_list[3]) / 2\n    # c_x = c_x*np.cos(np.radians(45))-c_y*np.sin(np.radians(45))\n    # c_y = c_y*np.cos(np.radians(45))+c_x*np.sin(np.radians(45))\n    c_list = [c_x, c_y]\n    # \u8fd4\u56de\u4e2d\u5fc3\u5750\u6807\u5217\u8868\n    return c_list\n\n\n# \u5f97\u5230\u9762\u79ef\ndef get_area(label_list):\n    length = label_list[2] - label_list[0]\n    height = label_list[3] - label_list[1]\n    area = []\n    # \u9762\u79ef\n    area.append(length * height)\n    area.append(length/height)\n    return area\n\n\n# \u5f97\u5230\u6700\u5927\u9762\u79ef\u7684\u5750\u6807\ndef get_data(c_list, ids_, scores_):\n\n    # \u83b7\u53d6\u5750\u6807\u8bc6\u522b\u6807\u7b7e\u4e2a\u6570\n    coordinate_length = len(c_list)\n    # \u4e2d\u5fc3\u5750\u6807\u5217\u8868\n    centre_list = []\n    area_list = []\n    l_h_list = []\n    # \u5206\u522b\u8bfb\u53d6\u6bcf\u4e2a\u6807\u7b7e\u7684\u6570\u636e\n    for i in range(int(coordinate_length)):\n        # \u83b7\u53d6\u6bcf\u4e2a\u6807\u7b7e\u7684\u5750\u6807\u5217\u8868\n        coordinate = c_list[i]\n        # \u83b7\u53d6\u9762\u79ef\u548c\u957f\u5bbd\u6bd4\n        area, l_h = get_area(coordinate)\n        # \u4e2d\u5fc3\u70b9\u5750\u6807\u5217\u8868\n        centre_list.append(get_centre(coordinate))\n        # \u9762\u79ef\u5217\u8868\n        area_list.append(area)\n        # \u83b7\u53d6\u957f\u5bbd\u6bd4()\n        l_h_list.append(l_h)\n    if area_list:\n        max_area = max(area_list)\n        # \u8bfb\u53d6\u9762\u79ef\u6700\u5927\u7684\u6807\u7b7e\u7684 \u7d22\u5f15\n        area_index = area_list.index(max_area)\n        # \u6839\u636e\u7d22\u5f15\u83b7\u53d6\u9762\u79ef\u6700\u5927\u7684\u6807\u7b7e\u7684\u6570\u636e\n        target = centre_list[area_index]\n        label = dic_labels[ids_[area_index]]\n        score = scores_[area_index]\n        box = c_list[area_index]\n        l_h = l_h_list[area_index]\n        return box, target, label, score, l_h, len(area_list)\n    else:\n        return None, None, None, None, None, None\n\n\nif __name__ == \"__main__\":\n\n    # \u6a21\u578b\u52a0\u8f7d\n    model_pb_path = \"FINAL.onnx\"\n    so = ort.SessionOptions()\n    net = ort.InferenceSession(model_pb_path, so)\n\n    # \u6807\u7b7e\u5b57\u5178\n    dic_labels = {\n        0: '0-plastic_bottle',\n        1: '0-drink_can',\n        2: '0-paper',\n        3: '0-carton',\n        4: '0-milkCarton',\n        5: '1-pericarp',\n        6: '1-vegetable_leaf',\n        7: '1-radish',\n        8: '1-potato',\n        9: '1-fruits',\n        10: '2-battery',\n        11: '2-Expired_drug',\n        12: '2-button cell',\n        13: '2-thermometer',\n        14: '3-tile',\n        15: '3-cobblestone',\n        16: '3-brick',\n        17: '3-paperCup',\n        18: '3-tableware',\n        19: '3-chopsticks',\n        20: '3-butt',\n        21: '3-mask'\n\n    }\n\n    # \u6a21\u578b\u53c2\u6570\n    model_h = 320\n    model_w = 320\n    nl = 3\n    na = 3\n    stride = [8., 16., 32.]\n    anchors = [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]]\n    anchor_grid = np.asarray(anchors, dtype=np.float32).reshape(nl, -1, 2)\n\n    video = 1\n    cap = cv2.VideoCapture(video)\n    flag_det = True  # \u521d\u59cb\u5316\u8bbe\u4e3aFalse\uff0c\u6536\u5230\u4fe1\u53f7\u5219\u53d8\u4e3aTrue\n    while True:\n        success, img0 = cap.read()\n        # \u53d6\u611f\u5174\u8da3\u533a\u57df\n        # img0 = img0[20:220, 30: 290]\n\n        if success:\n\n            if flag_det:\n                t1 = time.time()\n                det_boxes, scores, ids = infer_img(img0, net, model_h, model_w, nl, na, stride, anchor_grid,\n                                                   thred_nms=0.4, thred_cond=0.5)\n                time.sleep(0.02)\n                t2 = time.time()\n                # print(det_boxes)\n                # print(ids)\n                print(\"-\"*100)\n                box, target, label, score, l_h, lens = get_data(det_boxes, ids, scores)\n                print(f\"box:{box}\\ntarget:{target}\\nlabel:{label}\\nscore:{score}\\n L-h:{l_h}\\nlongs:{lens}\")\n                print(\"-\" * 100)\n                str_FPS = f\"FPS: {(1 / (t2 - t1)):.2f}\"\n                if label:\n                    label = f\"{label}:{score:.2f}\"\n                    plot_one_box(box.astype(np.int16), img0, color=(255, 0, 0), label=label, line_thickness=1)\n                    cv2.putText(img0, \"str_FPS\", (20, 20), cv2.FONT_HERSHEY_COMPLEX, 0.5, (0, 255, 0), 1)\n\n\n            cv2.imshow(\"video\", img0)\n        key = cv2.waitKey(1) &amp; 0xFF\n        if key == ord('q'):\n            break\n\n    cap.release()\n</code></pre> <p></p> <p>\u5982\u679c\u53ef\u4ee5\u6b63\u5e38\u8bc6\u522b\u68c0\u6d4b\u76ee\u6807\uff0c\u73af\u5883\u642d\u5efa\u5c31\u6ca1\u6709\u95ee\u9898\uff0c\u540e\u7eed\u6839\u636e\u6bd4\u8d5b\u8981\u6c42\u6dfb\u52a0\u901a\u4fe1\u4ee3\u7801\u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"study/competition/4/#_18","title":"\u81ea\u542f\u52a8\u7a0b\u5e8f","text":"<p>\u6253\u5f00\u7ec8\u7aef\uff0c\u8f93\u5165<code>sudo nano /etc/rc.local</code>\uff0c\u4fee\u6539\u4ee3\u7801\u4e3a\u4e00\u4e0b\u5f62\u5f0f\uff0c\u5176\u4e2d<code>#my codes</code>\u4e3a\u4e3b\u8981\u6dfb\u52a0\u4ee3\u7801\uff0c<code>autoboot.sh</code>\u4e3a\u542f\u52a8\u7a0b\u5e8f\u6587\u4ef6\uff0c\u81ea\u5df1\u547d\u540d\u5373\u53ef\u3002</p> <p></p> <p>\u6839\u636e\u76ee\u5f55\u521b\u5efa<code>autoboot.sh</code>\u6587\u4ef6\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e0b\u5185\u5bb9</p> Bash<pre><code>#!/bin/bash\n\nexport DISPLAY=:0\nstartx\n\n# \u65e5\u5fd7\nexec &amp;&gt;&gt; /home/pi/logfile.log\necho \"Script started at: $(date)\"\n\n# \u5e02\u8d5b\npython3 /home/pi/Py_Projects/Municipal_contest.py\n# \u521d\u8d5b\n# python3 /home/pi/Py_Projects/preliminary_contest.py\n</code></pre> <p>\u5176\u4e2d<code>#!/bin/bash</code>\u4e3a\u5fc5\u987b\u5185\u5bb9\uff0c<code>export DISPLAY=:0 startx</code>\u662f\u6211\u6478\u7d22\u5f88\u4e45\uff0c\u53ef\u4ee5\u5b9e\u73b0QT\u754c\u9762\u5f00\u673a\u663e\u793a\u7684\u5fc5\u987b\u5185\u5bb9\uff0c\u5426\u5219\u5f00\u673aQT\u754c\u9762\u65e0\u6cd5\u6b63\u5e38\u663e\u793a\u3002\u65e5\u5fd7\u90e8\u5206\u5efa\u8bae\u586b\u5199\uff0c\u65b9\u4fbf\u5f00\u673a\u81ea\u542f\u51fa\u95ee\u9898\u627e\u539f\u56e0\uff0c\u8f93\u51fa\u7684\u65e5\u5fd7\u4f1a\u5728<code>/home/pi/logfile.log</code>\u76ee\u5f55\u4e0b\u3002<code>python3 /home/pi/Py_Projects/Municipal_contest.py</code>\u4e3a\u9700\u8981\u8fd0\u884c\u7684\u4ee3\u7801\u3002</p>"},{"location":"study/competition/4/#_19","title":"\u663e\u793a\u5c4f\u754c\u9762\u8bbe\u8ba1","text":"<p>\u6ca1\u4ec0\u4e48\u53ef\u8bb2\u7684\uff0c\u81ea\u5df1\u53bb\u5b66\u4e00\u5b66pyqt5\uff0c\u7b80\u5355\u8bbe\u8ba1\u4e00\u4e2a\u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"study/competition/4/#pythonwindows","title":"python\u73af\u5883\u642d\u5efa(windows)","text":"<p>Python\u73af\u5883\u914d\u7f6e\uff1a</p> <p>\u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1WBBtduC-grJw9ZM88HqXfg?pwd=cmzz  \u63d0\u53d6\u7801\uff1acmzz</p> <p></p> <p>PyQt5\u73af\u5883\u914d\u7f6e\uff1a\u754c\u9762\u5f00\u53d1\uff081\uff09 --- PyQt5\u73af\u5883\u914d\u7f6e_pyqt5 \u914d\u7f6e-CSDN\u535a\u5ba2</p> <p>QT\u5b66\u4e60\uff1aPython Qt \u7b80\u4ecb | \u767d\u6708\u9ed1\u7fbd (byhy.net)</p> <p>\u754c\u9762\u8bbe\u8ba1\u4e3b\u8981\u9700\u8981\u6ce8\u610f\u7684\u5462\u5c31\u4e24\u70b9\uff1a</p> <ol> <li>\u662f\u5426\u663e\u793a\u6444\u50cf\u5934\u753b\u9762\uff0c\u6211\u9009\u62e9\u662f\u663e\u793a\uff0c\u56e0\u4e3a\u6211\u770b\u5230\u753b\u9762\u5b89\u5fc3\u4e00\u4e9b\uff0c\u4e5f\u77e5\u9053\u54ea\u4e9b\u68c0\u6d4b\u9519\u4e86\u518d\u53bb\u4f18\u5316\u6570\u636e\u96c6\u3002\u6211\u7528\u7684\u5c31\u662f\u4e00\u5e27\u4e00\u5e27\u7684\u56fe\u50cf\uff0c\u4ee5\u7167\u7247\u7684\u5f62\u5f0f\u663e\u793a\u51fa\u6765\u3002(QImage\uff09</li> <li>\u89c6\u9891\u7684\u64ad\u653e\uff0c\u4e00\u5f00\u59cb\u7528\u7684Pyqt5\u7684player\u7ec4\u4ef6\uff0c\u4f46\u662f\u79fb\u690d\u5230\u6811\u8393\u6d3e\u4f1a\u4e00\u76f4\u62a5\u9519\uff0c\u5e76\u4e14\u4f1a\u5bfc\u81f4\u5206\u89e3\u6811\u8393\u6d3e\u7b97\u529b\u4f7f\u7528\uff0c\u5bfc\u81f4\u76ee\u6807\u68c0\u6d4b\u63a8\u7406\u66f4\u6162\u3002\u540e\u6765\u9009\u7528\u4e86\u6811\u8393\u6d3e\u7684\u4e00\u4e2a\u64ad\u653e\u8f6f\u4ef6omxplayer\uff0c\u5b89\u88c5\u4ed6\u7684python\u5e93\uff0c\u7528\u4ee3\u7801\u63a7\u5236\u64ad\u653e\u3002</li> </ol>"},{"location":"study/competition/4/#_20","title":"\u4ee3\u7801\u683c\u5f0f","text":"<p>\u8fd9\u662f\u4e00\u4e2a \u7b2c\u4e00\u7248\u754c\u9762\u8bbe\u8ba1 \uff0c\u6ca1\u6709\u52a0\u4e32\u53e3\u901a\u4fe1\u3001\u89c6\u9891\u3001\u76ee\u6807\u68c0\u6d4b\u3002</p> Python<pre><code>from pathlib import Path\nfrom threading import Thread\nfrom PyQt5.QtCore import Qt\nfrom PyQt5.QtMultimediaWidgets import QVideoWidget\nfrom PyQt5.QtWidgets import *\nfrom PyQt5.QtGui import QIcon, QPixmap, QFont\nfrom PyQt5.QtMultimedia import QMediaPlayer, QMediaPlaylist, QMediaContent\nfrom PyQt5.Qt import QUrl\nimport sys\nimport time\n\n\ndef is_mp4(file_path):\n    # \u4f7f\u7528Path\u7c7b\u521b\u5efa\u6587\u4ef6\u8def\u5f84\u5bf9\u8c61\n    path = Path(file_path)\n\n    # \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728\n    if not path.exists():\n        return False\n\n    # \u68c0\u67e5\u6587\u4ef6\u6269\u5c55\u540d\u662f\u5426\u4e3a.mp4\n    if path.suffix.lower() == '.mp4':\n        return True\n    return False\n\n\nclass Demo:\n    def __init__(self):\n\n        \"\"\"\u63a7\u4ef6\u521d\u59cb\u5316\"\"\"\n        self.ui = QMainWindow()\n        # self.player = QMediaPlayer(self.ui)\n        self.label = QLabel(self.ui)\n        self.map_label = QLabel(self.ui)\n        self.map2_label = QLabel(self.ui)\n        # self.playlist = QMediaPlaylist(self.ui)\n        # self.video_widget = QVideoWidget(self.ui)\n\n        # self.slider = QSlider(Qt.Horizontal, self.ui)\n        self.video_button = QPushButton(\"\u9009\u62e9\u89c6\u9891\u6587\u4ef6\", self.ui)\n        self.map_button = QPushButton(\"\u9009\u62e9\u56fe\u7247\u6587\u4ef6\", self.ui)\n\n        # self.textLabel = QLabel(self.ui)\n        self.list = QListWidget(self.ui)\n        # \u521b\u5efa\u8868\u683c\n        rows = 4  # \u884c\n        columns = 2  # \u5217\n        self.table = QTableWidget(rows, columns, self.ui)\n        thread_text = Thread(\n            target=self.Text_time\n        )\n        # \u5c5e\u6027\u521d\u59cb\u5316\u51fd\u6570\u8c03\u7528\n        self.LayoutInit()\n        self.WidgetInit()\n        self.tabel_items()\n        self.add_list_items()\n        # self.Player()\n        self.Signal()\n        thread_text.start()\n\n    # \u89c6\u9891\u64ad\u653e\u51fd\u6570\n    # def Player(self):\n    #     self.player.setVideoOutput(self.video_widget)  # \u8bbe\u7f6e\u89c6\u9891\u8f93\u51fa\n    #     self.player.setPlaylist(self.playlist)\n    #     self.playlist.addMedia(QMediaContent(QUrl.fromLocalFile(\"bak.mp4\")))\n    #     self.playlist.addMedia(QMediaContent(QUrl.fromLocalFile(\"lajifenlei.mp4\")))\n    #     self.playlist.setPlaybackMode(QMediaPlaylist.Loop)\n    #\n    #     self.player.setVolume(50)\n    #\n    #     self.player.play()\n\n    # Layout\u754c\u9762\n    def LayoutInit(self):\n        central_widget = QWidget(self.ui)\n        self.ui.setCentralWidget(central_widget)\n        layout_v = QVBoxLayout(central_widget)\n        layout_h = QHBoxLayout(central_widget)\n        layout_h2 = QHBoxLayout(central_widget)\n        layout_h3 = QHBoxLayout(central_widget)\n\n        layout_h.addWidget(self.label)\n        layout_h.addWidget(self.video_button)\n        layout_h.addWidget(self.map_button)\n        layout_h.setStretch(0, 5)\n        layout_h.setStretch(1, 1)\n        layout_h.setStretch(2, 1)\n        layout_h.setSpacing(170)\n\n        layout_h2.addWidget(self.map2_label)\n        layout_h2.addWidget(self.map_label)\n        layout_h2.setStretch(0, 5)\n        layout_h2.setStretch(1, 5)\n        layout_h2.setSpacing(0)\n\n        layout_h3.addWidget(self.table)\n        layout_h3.addWidget(self.list)\n        layout_h3.setStretch(0, 1)\n        layout_h3.setStretch(1, 3)\n        layout_h3.setSpacing(50)\n\n        layout_v.addLayout(layout_h)\n        layout_v.addLayout(layout_h2)\n        # layout_v.addWidget(self.slider)\n        layout_v.addLayout(layout_h3)\n        layout_v.setStretch(0, 1)\n        layout_v.setStretch(1, 5)\n        layout_v.setStretch(2, 1)\n        layout_v.setStretch(3, 3)\n\n        self.ui.setLayout(layout_v)\n\n\n\n    def Text_time(self):\n        while True:\n            text = \"\u2764\u2764\u2764\u2764\u2764\u5730\u7403\u73af\u4fdd\u536b\u58eb\u2764\u2764\u2764\u2764\u2764\"\n            for i in range(108):\n                self.label.setText(text)\n                time.sleep(0.1)\n                text = ' ' + text\n\n\n    def tabel_items(self):\n        font_tabel = self.table.font()\n        font_tabel.setPointSize(20)\n        self.table.setFont(font_tabel)\n        self.item1 = QTableWidgetItem(\"\u53ef\u56de\u6536\u5783\u573e\")\n        self.table.setItem(0, 0, self.item1)\n        self.item2 = QTableWidgetItem(\"\u6709\u5bb3\u5783\u573e\")\n        self.table.setItem(1, 0, self.item2)\n        self.item3 = QTableWidgetItem(\"\u53a8\u4f59\u5783\u573e\")\n        self.table.setItem(2, 0, self.item3)\n        self.item4 = QTableWidgetItem(\"\u5176\u4ed6\u5783\u573e\")\n        self.table.setItem(3, 0, self.item4)\n        self.item5 = QTableWidgetItem(\"\u672a\u6ee1\u8f7d\")\n        self.item6 = QTableWidgetItem(\"\u672a\u6ee1\u8f7d\")\n        self.item7 = QTableWidgetItem(\"\u672a\u6ee1\u8f7d\")\n        self.item8 = QTableWidgetItem(\"\u672a\u6ee1\u8f7d\")\n        self.table.setItem(0, 1, self.item5)\n        self.table.setItem(1, 1, self.item6)\n        self.table.setItem(2, 1, self.item7)\n        self.table.setItem(3, 1, self.item8)\n\n    def add_list_items(self):\n        for i in range(10):\n            print(self.list.count())\n            news = QListWidgetItem(\"\u53ef\u56de\u6536\u5783\u573e\")\n            self.list.addItem(news)\n            self.list.scrollToItem(news, QListWidget.PositionAtBottom)\n\n    # \u63a7\u4ef6\u521d\u59cb\u5316\n    def WidgetInit(self):\n        self.ui.setWindowTitle(\"\u64ad\u653e\u89c6\u9891\")\n        self.ui.resize(177 * 4, 400)\n        self.label.setFrameStyle(QFrame.Panel | QFrame.Sunken)\n        self.table.setShowGrid(False)  # \u662f\u5426\u663e\u793a\u7f51\u683c\n        self.table.setHorizontalHeaderLabels([\"\u7c7b\u522b\", \"\u662f\u5426\u6ee1\u8f7d\"])\n        self.table.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)\n        font_list = self.list.font()\n        font_list.setPointSize(18)\n        self.list.setFont(font_list)\n        # self.label.setAlignment(Qt.AlignCenter)\n        map_widget = QPixmap(\"../../pictures/bu2.jpg\")\n        map_widget = map_widget.scaled(177 * 3, 300)\n        self.map_label.setPixmap(map_widget)\n        self.map_label.setScaledContents(True)\n\n    # \u4fe1\u53f7\u69fd\u51fd\u6570\u521d\u59cb\u5316\n    def Signal(self):\n        # self.slider.sliderMoved.connect(self.GetMoved)\n        # self.player.durationChanged.connect(self.GetDuration)\n        # self.player.positionChanged.connect(self.GetPosition)\n        self.video_button.clicked.connect(self.GetMap2)\n        self.map_button.clicked.connect(self.GetMap)\n\n    # \u69fd\u51fd\u6570\n    # def GetDuration(self, d):\n    #     if d:\n    #         self.slider.setRange(0, d)\n    #         seconds = int(d / 1000)\n    #         minutes = int(seconds / 60)\n    #         seconds -= minutes * 60\n    #         # self.label.setText(f\"\u603b\u65f6\u957f\uff1a{minutes}:{seconds}\")\n    #         print(f\"\u603b\u65f6\u957f\uff1a{minutes}:{seconds}\")\n\n    # def GetPosition(self, time):\n    #     if time:\n    #         self.slider.setValue(time)\n    #\n    # def GetMoved(self, time):\n    #     self.player.setPosition(time)\n\n    # def GetFiles(self):\n    #     video = QFileDialog()\n    #     url = video.getOpenFileUrl()[0].toLocalFile()\n    #     self.playlist.addMedia(QMediaContent(QUrl.fromLocalFile(url)))\n    #     if is_mp4(url):\n    #         num = self.playlist.mediaCount()\n    #         for i in range(num):\n    #             files = []\n    #             file = self.playlist.media(i).canonicalUrl().toString()\n    #             files.append(file)\n    #             print(files)\n    #\n    #         self.playlist.setCurrentIndex(num - 1)\n    #     else:\n    #         QMessageBox.warning(self.ui, \"\u8b66\u544a\", \"\u6240\u9009\u6570\u636e\u7c7b\u578b\u4e0d\u662f'.MP4\uff01'\", QMessageBox.Yes | QMessageBox.No)\n\n    def GetMap2(self):\n        video = QFileDialog()\n        url = video.getOpenFileUrl()[0].toLocalFile()\n        map_widget = QPixmap(url)\n        map_widget = map_widget.scaled(177 * 3, 300)\n        self.map2_label.setPixmap(map_widget)\n        self.map2_label.setScaledContents(True)\n\n    def GetMap(self):\n        video = QFileDialog()\n        url = video.getOpenFileUrl()[0].toLocalFile()\n        map_widget = QPixmap(url)\n        map_widget = map_widget.scaled(177 * 3, 300)\n        self.map_label.setPixmap(map_widget)\n        self.map_label.setScaledContents(True)\n\n\nif __name__ == \"__main__\":\n    while 1:\n        app = QApplication(sys.argv)\n        app.setWindowIcon(QIcon(\"../ico/social-gears.ico\"))\n        bar = Demo()\n\n        bar.ui.show()\n        bar.ui.showFullScreen()\n        sys.exit(app.exec_())\n</code></pre> <p>\u8fd9\u91cc\u4e0d\u63a8\u8350\u6211\u8fd9\u79cd\u4ee3\u7801\u683c\u5f0f\uff0c\u4fee\u6539\u8d77\u6765\u5f88\u9ebb\u70e6\uff0c\u5230\u540e\u9762\u51e0\u767e\u53f7\u7684\u4ee3\u7801\u5728\u4e00\u4e2a\u6587\u4ef6\u91cc\uff0c\u4fee\u6539\u8d77\u6765\u5f88\u4e0d\u65b9\u4fbf\u3002 \u63a8\u8350\u7684\u65b9\u5f0f\u662f\u6bcf\u4e00\u4e2a\u529f\u80fd\u5355\u72ec\u4e00\u4e2apython\u6587\u4ef6\uff0c\u5efa\u7acb\u4e00\u7cfb\u5217\u7684\u51fd\u6570\u5e93\uff0c\u6700\u540e\u5199\u4e00\u4e2a\u5355\u72ec\u7684\u8c03\u7528\u6587\u4ef6\uff1b\u5f53\u67d0\u4e2a\u529f\u80fd\u51fa\u95ee\u9898\u4ee5\u540e\u5c31\u53ef\u4ee5\u5728\u5176\u6587\u4ef6\u91cc\u4fee\u6539\uff0c\u4ee3\u7801\u91cf\u5c11\uff0c\u4e14\u66f4\u76f4\u89c2\u3002</p> <p>\u4e0b\u9762\u5c55\u793a\u4e00\u4e0b\u6211\u540e\u9762\u5199\u7684\u4e00\u4e2a\u7c97\u7cd9\u7248QT\u767b\u5f55\u754c\u9762\uff0c\u5c55\u793a\u4e00\u4e0b\u51fd\u6570\u5e93\u8fd0\u7528\uff1a</p> <p></p> <p>\u51fd\u6570\u5e93\uff1a</p> <p><code>demoUI.py</code></p> Python<pre><code># -*- coding: utf-8 -*-\n\n# Form implementation generated from reading ui file 'demoUI.ui'\n#\n# Created by: PyQt5 UI code generator 5.15.9\n#\n# WARNING: Any manual changes made to this file will be lost when pyuic5 is\n# run again.  Do not edit this file unless you know what you are doing.\n\n\nfrom PyQt5 import QtCore, QtGui, QtWidgets\n\n\nclass Ui_Form(object):\n    def setupUi(self, Form):\n        Form.setObjectName(\"Form\")\n        Form.resize(640, 480)\n        self.resign = QtWidgets.QPushButton(Form)\n        self.resign.setGeometry(QtCore.QRect(210, 230, 91, 41))\n        font = QtGui.QFont()\n        font.setPointSize(11)\n        self.resign.setFont(font)\n        self.resign.setObjectName(\"resign\")\n        self.forget = QtWidgets.QPushButton(Form)\n        self.forget.setGeometry(QtCore.QRect(340, 230, 91, 41))\n        font = QtGui.QFont()\n        font.setPointSize(11)\n        self.forget.setFont(font)\n        self.forget.setObjectName(\"forget\")\n        self.label_username = QtWidgets.QLabel(Form)\n        self.label_username.setGeometry(QtCore.QRect(210, 120, 72, 30))\n        font = QtGui.QFont()\n        font.setPointSize(12)\n        self.label_username.setFont(font)\n        self.label_username.setObjectName(\"label_username\")\n        self.label_passwd = QtWidgets.QLabel(Form)\n        self.label_passwd.setGeometry(QtCore.QRect(230, 160, 72, 30))\n        font = QtGui.QFont()\n        font.setPointSize(12)\n        self.label_passwd.setFont(font)\n        self.label_passwd.setTabletTracking(False)\n        self.label_passwd.setObjectName(\"label_passwd\")\n        self.UserName = QtWidgets.QLineEdit(Form)\n        self.UserName.setGeometry(QtCore.QRect(290, 120, 141, 31))\n        self.UserName.setObjectName(\"UserName\")\n        self.Passwd = QtWidgets.QLineEdit(Form)\n        self.Passwd.setGeometry(QtCore.QRect(290, 160, 141, 31))\n        self.Passwd.setObjectName(\"Passwd\")\n        self.Inter = QtWidgets.QPushButton(Form)\n        self.Inter.setGeometry(QtCore.QRect(270, 290, 91, 41))\n        font = QtGui.QFont()\n        font.setPointSize(12)\n        self.Inter.setFont(font)\n        self.Inter.setStyleSheet(\"background-color: rgb(0, 85, 255);\")\n        self.Inter.setObjectName(\"Inter\")\n        self.label = QtWidgets.QLabel(Form)\n        self.label.setGeometry(QtCore.QRect(220, 30, 201, 51))\n        font = QtGui.QFont()\n        font.setPointSize(20)\n        self.label.setFont(font)\n        self.label.setStyleSheet(\"background-color: rgb(255, 170, 255);\")\n        self.label.setObjectName(\"label\")\n\n        self.retranslateUi(Form)\n        QtCore.QMetaObject.connectSlotsByName(Form)\n\n    def retranslateUi(self, Form):\n        _translate = QtCore.QCoreApplication.translate\n        Form.setWindowTitle(_translate(\"Form\", \"\u4eba\u673a\u4ea4\u4e92\u754c\u9762\"))\n        self.resign.setText(_translate(\"Form\", \"\u6ce8\u518c\u8d26\u53f7\"))\n        self.forget.setText(_translate(\"Form\", \"\u5fd8\u8bb0\u5bc6\u7801\"))\n        self.label_username.setText(_translate(\"Form\", \"\u7528\u6237\u540d\uff1a\"))\n        self.label_passwd.setText(_translate(\"Form\", \"\u5bc6\u7801\uff1a\"))\n        self.Inter.setText(_translate(\"Form\", \"\u767b\u5f55\"))\n        self.label.setText(_translate(\"Form\", \"\u7528\u6237\u767b\u5f55\u754c\u9762\"))\n</code></pre> <p><code>drug.py</code></p> Python<pre><code># -*- coding: utf-8 -*-\n\n# Form implementation generated from reading ui file 'drug.ui'\n#\n# Created by: PyQt5 UI code generator 5.15.9\n#\n# WARNING: Any manual changes made to this file will be lost when pyuic5 is\n# run again.  Do not edit this file unless you know what you are doing.\n\n\nfrom PyQt5 import QtCore, QtGui, QtWidgets\n\n\nclass Ui_drug(object):\n    def setupUi(self, Form):\n        Form.setObjectName(\"Form\")\n        Form.resize(640, 480)\n        self.label = QtWidgets.QLabel(Form)\n        self.label.setGeometry(QtCore.QRect(210, 40, 211, 61))\n        font = QtGui.QFont()\n        font.setPointSize(20)\n        self.label.setFont(font)\n        self.label.setStyleSheet(\"background-color: rgb(255, 170, 255);\")\n        self.label.setObjectName(\"label\")\n        self.red = QtWidgets.QPushButton(Form)\n        self.red.setGeometry(QtCore.QRect(140, 150, 121, 81))\n        font = QtGui.QFont()\n        font.setPointSize(20)\n        self.red.setFont(font)\n        self.red.setStyleSheet(\"background-color: rgb(255, 36, 17);\")\n        self.red.setObjectName(\"red\")\n        self.green = QtWidgets.QPushButton(Form)\n        self.green.setGeometry(QtCore.QRect(140, 280, 121, 81))\n        font = QtGui.QFont()\n        font.setPointSize(20)\n        self.green.setFont(font)\n        self.green.setStyleSheet(\"background-color: rgb(29, 255, 29);\")\n        self.green.setObjectName(\"green\")\n        self.title = QtWidgets.QPushButton(Form)\n        self.title.setGeometry(QtCore.QRect(360, 150, 121, 81))\n        font = QtGui.QFont()\n        font.setPointSize(20)\n        self.title.setFont(font)\n        self.title.setStyleSheet(\"background-color: rgb(31, 24, 255);\")\n        self.title.setObjectName(\"title\")\n        self.crey = QtWidgets.QPushButton(Form)\n        self.crey.setGeometry(QtCore.QRect(360, 280, 121, 81))\n        font = QtGui.QFont()\n        font.setPointSize(20)\n        self.crey.setFont(font)\n        self.crey.setStyleSheet(\"background-color: rgb(102, 240, 255);\")\n        self.crey.setObjectName(\"crey\")\n\n        self.retranslateUi(Form)\n        QtCore.QMetaObject.connectSlotsByName(Form)\n\n    def retranslateUi(self, Form):\n        _translate = QtCore.QCoreApplication.translate\n        Form.setWindowTitle(_translate(\"Form\", \"Form\"))\n        self.label.setText(_translate(\"Form\", \"\u836f\u54c1\u4ed3\u5e93\u793a\u610f\"))\n        self.red.setText(_translate(\"Form\", \"1\u53f7\"))\n        self.green.setText(_translate(\"Form\", \"3\u53f7\"))\n        self.title.setText(_translate(\"Form\", \"2\u53f7\"))\n        self.crey.setText(_translate(\"Form\", \"4\u53f7\"))\n</code></pre> <p><code>regist.py</code></p> Python<pre><code># -*- coding: utf-8 -*-\n\n# Form implementation generated from reading ui file 'regist.ui'\n#\n# Created by: PyQt5 UI code generator 5.15.9\n#\n# WARNING: Any manual changes made to this file will be lost when pyuic5 is\n# run again.  Do not edit this file unless you know what you are doing.\n\n\nfrom PyQt5 import QtCore, QtGui, QtWidgets\n\n\nclass Ui_regist(object):\n    def setupUi(self, widget):\n        widget.setObjectName(\"widget\")\n        widget.resize(640, 480)\n        self.regist_user = QtWidgets.QLabel(widget)\n        self.regist_user.setGeometry(QtCore.QRect(180, 90, 91, 31))\n        self.regist_user.setMinimumSize(QtCore.QSize(0, 0))\n        self.regist_user.setBaseSize(QtCore.QSize(0, 0))\n        font = QtGui.QFont()\n        font.setPointSize(12)\n        self.regist_user.setFont(font)\n        self.regist_user.setObjectName(\"regist_user\")\n        self.text_user = QtWidgets.QLineEdit(widget)\n        self.text_user.setGeometry(QtCore.QRect(280, 90, 141, 31))\n        font = QtGui.QFont()\n        font.setPointSize(12)\n        self.text_user.setFont(font)\n        self.text_user.setObjectName(\"text_user\")\n        self.text_passwd = QtWidgets.QLineEdit(widget)\n        self.text_passwd.setGeometry(QtCore.QRect(280, 150, 141, 31))\n        font = QtGui.QFont()\n        font.setPointSize(12)\n        self.text_passwd.setFont(font)\n        self.text_passwd.setObjectName(\"text_passwd\")\n        self.text_passwd_Q = QtWidgets.QLineEdit(widget)\n        self.text_passwd_Q.setGeometry(QtCore.QRect(280, 210, 141, 31))\n        font = QtGui.QFont()\n        font.setPointSize(12)\n        self.text_passwd_Q.setFont(font)\n        self.text_passwd_Q.setObjectName(\"text_passwd_Q\")\n        self.regist_passwd_Q = QtWidgets.QLabel(widget)\n        self.regist_passwd_Q.setGeometry(QtCore.QRect(180, 210, 91, 31))\n        self.regist_passwd_Q.setMinimumSize(QtCore.QSize(0, 0))\n        self.regist_passwd_Q.setBaseSize(QtCore.QSize(0, 0))\n        font = QtGui.QFont()\n        font.setPointSize(12)\n        self.regist_passwd_Q.setFont(font)\n        self.regist_passwd_Q.setObjectName(\"regist_passwd_Q\")\n        self.regist_passwd = QtWidgets.QLabel(widget)\n        self.regist_passwd.setGeometry(QtCore.QRect(180, 150, 91, 31))\n        self.regist_passwd.setMinimumSize(QtCore.QSize(0, 0))\n        self.regist_passwd.setBaseSize(QtCore.QSize(0, 0))\n        font = QtGui.QFont()\n        font.setPointSize(12)\n        self.regist_passwd.setFont(font)\n        self.regist_passwd.setObjectName(\"regist_passwd\")\n        self.Regist = QtWidgets.QPushButton(widget)\n        self.Regist.setGeometry(QtCore.QRect(250, 280, 111, 41))\n        font = QtGui.QFont()\n        font.setPointSize(12)\n        self.Regist.setFont(font)\n        self.Regist.setStyleSheet(\"background-color: rgb(0, 0, 255);\")\n        self.Regist.setObjectName(\"Regist\")\n\n        self.retranslateUi(widget)\n        QtCore.QMetaObject.connectSlotsByName(widget)\n\n    def retranslateUi(self, widget):\n        _translate = QtCore.QCoreApplication.translate\n        widget.setWindowTitle(_translate(\"widget\", \"\u6ce8\u518c\"))\n        self.regist_user.setText(_translate(\"widget\", \"\u8f93\u5165\u8d26\u53f7:\"))\n        self.regist_passwd_Q.setText(_translate(\"widget\", \"\u786e\u8ba4\u5bc6\u7801:\"))\n        self.regist_passwd.setText(_translate(\"widget\", \"\u8f93\u5165\u5bc6\u7801:\"))\n        self.Regist.setText(_translate(\"widget\", \"\u6ce8\u518c\"))\n</code></pre> <p>\u8c03\u7528\u51fd\u6570<code>Demo1.py</code>\uff1a</p> Python<pre><code>import sys\n# \u8fd9\u90e8\u5206\u5c31\u662f\u81ea\u5b9a\u4e49\u51fd\u6570\u5e93\uff0cfrom \u6587\u4ef6\u540d import \u51fd\u6570\u540d/\u7c7b\nfrom demoUI import Ui_Form\nfrom regist import Ui_regist\nfrom drug import Ui_drug\n#\nfrom PyQt5.QtWidgets import QApplication, QMainWindow\n\n\nclass MainWindow(QMainWindow, Ui_Form):\n    def __init__(self):\n        super(MainWindow, self).__init__()\n        self.setupUi(self)\n\n\nclass Register(QMainWindow, Ui_regist):\n    def __init__(self, parent=None):\n        super(Register, self).__init__(parent)\n        self.setupUi(self)\n\n    def Open(self):\n        self.show()\n\n\nclass Drug(QMainWindow, Ui_drug):\n    def __init__(self, parent=None):\n        super(Drug, self).__init__(parent)\n        self.setupUi(self)\n\n    def Open(self):\n        self.show()\n\n\nif __name__ == \"__main__\":\n    app = QApplication(sys.argv)\n    main = MainWindow()\n    register = Register()\n    drug = Drug()\n    main.resign.clicked.connect(register.Open)\n    main.Inter.clicked.connect(drug.Open)\n    main.show()\n    sys.exit(app.exec_())\n</code></pre>"},{"location":"study/competition/5/","title":"\u4f18\u5316\u5efa\u8bae","text":""},{"location":"study/competition/5/#_1","title":"\u91cd\u8981\u8bf4\u660e","text":"<p>\u91cd\u70b9\u8bf4\u660e\uff1a</p> <p>\u6807\u7ea2\u7684\u662f\u6587\u6863\u660e\u786e\u8bf4\u660e\u7684\u79cd\u7c7b\uff0c\u5176\u4ed6\u4e3a\u6211\u4eec\u81ea\u5df1\u6dfb\u52a0\u7684\u79cd\u7c7b\u3002\u4f46\u662f\uff0c\u6709\u51e0\u70b9\u91cd\u8981\u8bf4\u660e\uff1a</p> <ul> <li>\u65e0\u8bba\u662f\u5e02\u8d5b\u8fd8\u662f\u56fd\u8d5b\uff0c\u521d\u8d5b\u671f\u95f4\u5783\u573e\u79cd\u7c7b\u90fd\u6ca1\u6709\u8d85\u8fc7\u6807\u7ea2\u8303\u56f4\u3002</li> <li>\u5e02\u8d5b\u7684\u51b3\u8d5b\uff0c\u591a\u51fa\u6765\u7684\u5783\u573e\u4e3a\u5e9f\u7eb8\u56e2\u548c\u7eb8\u676f\u3002</li> <li>\u56fd\u8d5b\u521d\u8d5b\u6709\u4e00\u4e9b\u6bd4\u8f83\u62bd\u8c61\u7684\u5783\u573e\u3002</li> </ul> <p>\u56fd\u8d5b\u62bd\u8c61\u5783\u573e\uff1a</p> <ol> <li>\u5c0f\u7c73\u6a59\u8272\u7535\u6c60\uff0c\u5f88\u5bb9\u6613\u8bc6\u522b\u6210\u80e1\u841d\u535c\u3002</li> </ol> <p></p> <ol> <li>\u7eaf\u767d\u8272\u74f7\u7247</li> <li>\u5c0f\u571f\u8c46\uff0c\u5f88\u5c0f\uff0c\u4e14\u662f\u6e7f\u7684\u3002</li> </ol> <p>\u8bad\u7ec3\u6a21\u578b\u6ce8\u91cd\u6587\u6863\u8bf4\u660e\u7684\u5783\u573e\u79cd\u7c7b\uff0c\u6ce8\u91cd\u79cd\u7c7b\uff0c\u6bd4\u5982\u7535\u6c60\uff0c\u627e\u5404\u79cd\u5404\u6837\u7684\u7535\u6c60\uff0c\u5176\u6b21\u624d\u662f\u6570\u91cf\u3002</p>"},{"location":"study/competition/5/#_2","title":"\u5e02\u8d5b\u7684\u51b3\u8d5b\u4efb\u52a1","text":"<p>\u8fd9\u4e9b\u4efb\u52a1\u4e2d\uff0c\u6211\u4eec\u5f53\u65f6\u57fa\u672c\u90fd\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u9664\u4e86\u7eb8\u676f\u548c\u5e9f\u7eb8\u662f\u6587\u6863\u4e2d\u6ca1\u6709\u8bf4\u660e\u7684\uff0c\u4e0d\u8fc7\u95ee\u9898\u4e0d\u5927\uff0c\u5176\u4ed6\u7ec4\u51c6\u5907\u7684\u4e5f\u4e0d\u5b8c\u7f8e\u3002</p> <p></p>"},{"location":"study/yolov5/1/","title":"\u57fa\u7840\u73af\u5883\u914d\u7f6e","text":"<p> YOLOv5 \ud83d\ude80\u662f\u4e00\u79cd\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u7528\u4e8e\u7269\u4f53\u68c0\u6d4b\u4efb\u52a1\u3002\u5b83\u7684\u5168\u79f0\u662f\u201c\u4f60\u53ea\u770b\u4e00\u6b21\u201d\uff08You Only Look Once\uff09\uff0c\u53ef\u4ee5\u5feb\u901f\u4e14\u51c6\u786e\u5730\u8bc6\u522b\u56fe\u50cf\u4e2d\u7684\u7269\u4f53\u5e76\u6807\u8bb0\u5b83\u4eec\u7684\u4f4d\u7f6e\u3002</p>"},{"location":"study/yolov5/1/#yolov5","title":"Yolov5\u7684\u914d\u7f6e\u4f7f\u7528\u601d\u8def","text":""},{"location":"study/yolov5/1/#_1","title":"\u5b89\u88c5\u663e\u5361\u9a71\u52a8","text":"<p>\u7535\u8111\u7248\u672c\u4e0d\u540c\u53ef\u80fd\u6709\u4e9b\u540d\u79f0\u4e0d\u4e00\u6837\uff0c\u4e3b\u8981\u662f\u627e\u5230\u8bbe\u5907\u7ba1\u7406\u5668\u3002</p>"},{"location":"study/yolov5/1/#_2","title":"\u786e\u5b9a\u663e\u5361\u7248\u672c","text":"<p>\u627e\u5230\u63a7\u5236\u9762\u677f\u2192\u786c\u4ef6\u4e0e\u58f0\u97f3\u2192\u8bbe\u5907\u7ba1\u7406\u5668\u2192\u663e\u793a\u9002\u914d\u5668\u2192\u663e\u5361\u7248\u672c</p> <p>\u8fd9\u91cc\u663e\u793a\u7248\u672c\uff0c\u8bf4\u660e\u7535\u8111\u6709\u82f1\u4f1f\u8fbe\u7684\u663e\u5361</p> <p></p> <p>\u7136\u540e\u53ef\u4ee5\u53bb\u82f1\u4f1f\u8fbe\u9a71\u52a8\u63a7\u5236\u9762\u677f\uff0c\u518d\u67e5\u770b\u4e00\u4e0b\u5177\u4f53\u7248\u672c\u53f7\u3002</p> <p></p>"},{"location":"study/yolov5/1/#_3","title":"\u5b89\u88c5\u663e\u5361\u9a71\u52a8","text":"<p>\u4e0b\u8f7d\u5730\u5740L\uff1a\u5b98\u65b9\u9a71\u52a8 | NVIDIA</p> <p></p> <p></p> <p>\u5b89\u88c5\uff08\u66f4\u65b0\uff09\u597d\u4e86\u663e\u5361\u9a71\u52a8\u4ee5\u540e\u3002\u6309\u4e0bwin+R\u7ec4\u5408\u952e\uff0c\u6253\u5f00cmd\u547d\u4ee4\u7a97\u53e3\uff0c\u67e5\u770b\u6700\u9ad8\u652f\u6301\u7684CUDA\u7248\u672c</p> Text Only<pre><code>nvidia-smi\n</code></pre> <p></p>"},{"location":"study/yolov5/1/#anaconda","title":"Anaconda\u73af\u5883\u914d\u7f6e","text":"<p>Python\u73af\u5883\u914d\u7f6e\uff1a</p> <p>\u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1WBBtduC-grJw9ZM88HqXfg?pwd=cmzz  \u63d0\u53d6\u7801\uff1acmzz</p> <p>\u6dfb\u52a0\u89e3\u91ca\u5668</p> <p></p> <p></p> <p></p>"},{"location":"study/yolov5/2/","title":"YOLOv5\u73af\u5883\u914d\u7f6e","text":""},{"location":"study/yolov5/2/#_1","title":"\u521b\u5efa\u865a\u62df\u73af\u5883","text":""},{"location":"study/yolov5/2/#_2","title":"\u67e5\u770b\u865a\u62df\u73af\u5883","text":"<p>\u8fd9\u91cc\u6709\u4e00\u4e2a\u91cd\u8981\u547d\u4ee4\uff0c\u67e5\u770b\u5f53\u524d\u7684\u865a\u62df\u73af\u5883\u6570\u91cf\uff0c\u9ed8\u8ba4\u53ea\u6709\u4e00\u4e2a<code>base</code>(\u6211\u8fd9\u91cc\u5b89\u88c5\u8fc7\u5176\u4ed6\u865a\u62df\u73af\u5883)</p> Bash<pre><code>conda env list\n</code></pre> <p></p>"},{"location":"study/yolov5/2/#pytorch","title":"\u521b\u5efapytorch\u865a\u62df\u73af\u5883","text":"<p>\uff01\uff01\uff01\u9996\u5148\u67e5\u770b\u4e00\u4e0b\u81ea\u5df1python\u7248\u672c</p> <p></p> <p>\u8f93\u5165\u4ee5\u4e0b\u4ee3\u7801\u9000\u51fapython</p> Python<pre><code>quit()\n</code></pre> <p></p> <p>\u521b\u5efa\u865a\u62df\u73af\u5883\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff0c\u6ce8\u610fpython\u7248\u672c\u548c\u81ea\u5df1\u7684\u4e00\u81f4</p> Bash<pre><code>conda create -n pytorch python=3.11.9\n</code></pre> <p>\u8f93\u5165y</p> <p></p> <p>\u518d\u6b21\u7528\u524d\u9762\u7684\u547d\u4ee4\u67e5\u770b\u4f1a\u591a\u4e00\u4e2a\u73af\u5883\uff0c\u4f7f\u7528\u4e0b\u9762\u547d\u4ee4\u6fc0\u6d3b\u73af\u5883</p> Bash<pre><code>conda activate pytorch\n</code></pre>"},{"location":"study/yolov5/2/#_3","title":"\u66f4\u6362\u955c\u50cf\u6e90","text":"<p>\u6e05\u534e\u6e90</p> Bash<pre><code>conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/\nconda config --set show_channel_urls yes\n</code></pre>"},{"location":"study/yolov5/2/#pytorch_1","title":"\u4e0b\u8f7dpytorch","text":"<p>\u5b98\u7f51\uff1aPyTorch</p> <p></p> <p>\u7b49\u5f85\u4e0b\u8f7d\u5b8c\u6210\u5373\u53ef\u3002</p>"},{"location":"study/yolov5/2/#_4","title":"\u5207\u6362\u89e3\u91ca\u5668","text":"<p>\u4f7f\u7528<code>Anaconda\u73af\u5883\u914d\u7f6e</code>\u90e8\u5206\u5185\u5bb9\u6dfb\u52a0\u89e3\u91ca\u5668\uff0c\u5e76\u5207\u6362\u5230pytorch\u89e3\u91ca\u5668\u3002</p>"},{"location":"study/yolov5/2/#yolov5","title":"\u5b89\u88c5yolov5\u4f9d\u8d56","text":""},{"location":"study/yolov5/2/#yolov5_1","title":"\u4e0b\u8f7dyolov5\u6e90\u4ee3\u7801","text":"<p>yolov5\u4e0b\u8f7d\u5730\u5740\uff1a YOLOv5 \ud83d\ude80</p> <p></p>"},{"location":"study/yolov5/2/#_5","title":"\u5b89\u88c5\u4f9d\u8d56","text":"<p>\u4ee5\u5de5\u7a0b\u6253\u5f00yolov5\u6587\u4ef6\u5939</p> <p></p> <p>\u5b89\u88c5\u4f9d\u8d56</p> <p></p> <p>\u5982\u679c\u4e0b\u8f7d\u6bd4\u8f83\u6162\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e2d\u79d1\u5927\u955c\u50cf\u6e90\uff0c\u6c38\u4e45\u66ff\u6362</p> Bash<pre><code>pip config set global.index-url https://pypi.mirrors.ustc.edu.cn/simple\n</code></pre>"},{"location":"study/yolov5/2/#_6","title":"\u9a8c\u8bc1","text":"<p>\u7ec8\u7aef\u8f93\u5165\u547d\u4ee4</p> Bash<pre><code>python detect.py --source 0\n</code></pre> <p></p>"},{"location":"study/yolov5/3/","title":"\u6570\u636e\u96c6\u5212\u5206","text":""},{"location":"study/yolov5/3/#_1","title":"\u6807\u8bb0\u6570\u636e\u96c6","text":""},{"location":"study/yolov5/3/#labelimg","title":"\u5b89\u88c5labelimg","text":"Bash<pre><code>pip install labelimg\n</code></pre>"},{"location":"study/yolov5/3/#_2","title":"\u6807\u8bb0\u6570\u636e\u96c6","text":"<p>\u521b\u5efa\u6587\u4ef6\u5939\u7ed3\u6784---\u521b\u5efa\u6587\u4ef6\u5939VOCdevkit\uff0c\u518d\u6b21\u6587\u4ef6\u5939\u4e0b\u65b0\u5efaVOC2007\uff0c\u5176\u4ed6\u5982\u4e0b</p> Text Only<pre><code>\u251c\u2500\u2500 VOC2007\n\u2502\u251c\u2500\u2500 JPEGImages  \u5b58\u653e\u9700\u8981\u6253\u6807\u7b7e\u7684\u56fe\u7247\u6587\u4ef6\n\u2502\u251c\u2500\u2500 Annotations  \u5b58\u653e\u6807\u6ce8\u7684\u6807\u7b7e\u6587\u4ef6\n\u2502\u251c\u2500\u2500 predefined_classes.txt  \u5b9a\u4e49\u81ea\u5df1\u8981\u6807\u6ce8\u7684\u6240\u6709\u7c7b\u522b\n</code></pre> <p></p> <p>\u6839\u636e\u4e0a\u9762\u6807\u6ce8\uff0c\u628a\u7167\u7247\u653e\u5230<code>JPEGImages</code>\u6587\u4ef6\u5939</p> <p>\u5c06\u8981\u6807\u6ce8\u7684\u6240\u6709\u7c7b\u522b\u653e\u5728<code>predefined_classes.txt</code>\u6587\u4ef6</p> <p></p> <p>\u5728\u7ec8\u7aef\u4e2d\u6253\u5f00labelimg</p> <p></p> <p>\u4e00\u4e9b\u5e38\u7528\u5feb\u6377\u952e\uff1a</p> <ul> <li>A\uff1a\u5207\u6362\u5230\u4e0a\u4e00\u5f20\u56fe\u7247</li> <li>D\uff1a\u5207\u6362\u5230\u4e0b\u4e00\u5f20\u56fe\u7247</li> <li>W\uff1a\u8c03\u51fa\u6807\u6ce8\u5341\u5b57\u67b6</li> <li>del \uff1a\u5220\u9664\u6807\u6ce8\u6846\u6846</li> <li>Ctrl+u\uff1a\u9009\u62e9\u6807\u6ce8\u7684\u56fe\u7247\u6587\u4ef6\u5939</li> <li>Ctrl+r\uff1a\u9009\u62e9\u6807\u6ce8\u597d\u7684label\u6807\u7b7e\u5b58\u5728\u7684\u6587\u4ef6\u5939</li> </ul> <p></p>"},{"location":"study/yolov5/3/#_3","title":"\u5212\u5206\u6570\u636e\u96c6","text":"<p>\u8fd9\u4e00\u6b65\u9700\u8981\u5c06\u6807\u8bb0\u597d\u7684\u7167\u7247\u548c\u6807\u7b7e\u6309\u4e00\u5b9a\u6bd4\u4f8b\u5212\u5206\u4e3a\u6d4b\u8bd5\u96c6\u548c\u8bad\u7ec3\u96c6\uff0c\u7528\u4e8e\u540e\u7eed\u6a21\u578b\u8bad\u7ec3\u3002</p> <p>\u26a0\u26a0\u26a0---\u7167\u7247\u548c\u6807\u7b7e\u6570\u91cf\u548c\u540d\u79f0\u8981\u4e00\u76f4\uff0c\u5426\u5219\u4f1a\u51fa\u9519\u3002</p>"},{"location":"study/yolov5/3/#_4","title":"\u4ee3\u7801\u53c2\u6570\u4fee\u6539","text":"<p>\u5212\u5206\u6570\u636e\u96c6\u4ee3\u7801\u5982\u4e0b\uff1a</p> Python<pre><code>import xml.etree.ElementTree as ET\nimport pickle\nimport os\nfrom os import listdir, getcwd\nfrom os.path import join\nimport random\nfrom shutil import copyfile\n\nclasses = [\n    \"cap\"\n]\n\n\nTRAIN_RATIO = 80\n\n\ndef clear_hidden_files(path):\n    dir_list = os.listdir(path)\n    for i in dir_list:\n        abspath = os.path.join(os.path.abspath(path), i)\n        if os.path.isfile(abspath):\n            if i.startswith(\"._\"):\n                os.remove(abspath)\n        else:\n            clear_hidden_files(abspath)\n\n\ndef convert(size, box):\n    dw = 1. / size[0]\n    dh = 1. / size[1]\n    x = (box[0] + box[1]) / 2.0\n    y = (box[2] + box[3]) / 2.0\n    w = box[1] - box[0]\n    h = box[3] - box[2]\n    x = x * dw\n    w = w * dw\n    y = y * dh\n    h = h * dh\n    return (x, y, w, h)\n\n\ndef convert_annotation(image_id):\n    in_file = open('VOCdevkit/VOC2007/Annotations/%s.xml' % image_id, encoding='utf-8')\n    out_file = open('VOCdevkit/VOC2007/YOLOLabels/%s.txt ' % image_id, 'w')\n    tree = ET.parse(in_file)\n    root = tree.getroot()\n    size = root.find('size')\n    w = int(size.find('width').text)\n    h = int(size.find('height').text)\n\n    for obj in root.iter('object'):\n        difficult = obj.find('difficult').text\n        cls = obj.find('name').text\n        if cls not in classes or int(difficult) == 1:\n            continue\n        cls_id = classes.index(cls)\n        xmlbox = obj.find('bndbox')\n        b = (float(xmlbox.find('xmin').text), float(xmlbox.find('xmax').text), float(xmlbox.find('ymin').text),\n             float(xmlbox.find('ymax').text))\n        bb = convert((w, h), b)\n        out_file.write(str(cls_id) + \" \" + \" \".join([str(a) for a in bb]) + '\\n')\n    in_file.close()\n    out_file.close()\n\n\nwd = os.getcwd()\nwd = os.getcwd()\ndata_base_dir = os.path.join(wd, \"VOCdevkit/\")\nif not os.path.isdir(data_base_dir):\n    os.mkdir(data_base_dir)\nwork_sapce_dir = os.path.join(data_base_dir, \"VOC2007/\")\nif not os.path.isdir(work_sapce_dir):\n    os.mkdir(work_sapce_dir)\nannotation_dir = os.path.join(work_sapce_dir, \"Annotations/\")\nif not os.path.isdir(annotation_dir):\n    os.mkdir(annotation_dir)\nclear_hidden_files(annotation_dir)\nimage_dir = os.path.join(work_sapce_dir, \"JPEGImages/\")\nif not os.path.isdir(image_dir):\n    os.mkdir(image_dir)\nclear_hidden_files(image_dir)\nyolo_labels_dir = os.path.join(work_sapce_dir, \"YOLOLabels/\")\nif not os.path.isdir(yolo_labels_dir):\n    os.mkdir(yolo_labels_dir)\nclear_hidden_files(yolo_labels_dir)\nyolov5_images_dir = os.path.join(data_base_dir, \"images/\")\nif not os.path.isdir(yolov5_images_dir):\n    os.mkdir(yolov5_images_dir)\nclear_hidden_files(yolov5_images_dir)\nyolov5_labels_dir = os.path.join(data_base_dir, \"labels/\")\nif not os.path.isdir(yolov5_labels_dir):\n    os.mkdir(yolov5_labels_dir)\nclear_hidden_files(yolov5_labels_dir)\nyolov5_images_train_dir = os.path.join(yolov5_images_dir, \"train/\")\nif not os.path.isdir(yolov5_images_train_dir):\n    os.mkdir(yolov5_images_train_dir)\nclear_hidden_files(yolov5_images_train_dir)\nyolov5_images_test_dir = os.path.join(yolov5_images_dir, \"val/\")\nif not os.path.isdir(yolov5_images_test_dir):\n    os.mkdir(yolov5_images_test_dir)\nclear_hidden_files(yolov5_images_test_dir)\nyolov5_labels_train_dir = os.path.join(yolov5_labels_dir, \"train/\")\nif not os.path.isdir(yolov5_labels_train_dir):\n    os.mkdir(yolov5_labels_train_dir)\nclear_hidden_files(yolov5_labels_train_dir)\nyolov5_labels_test_dir = os.path.join(yolov5_labels_dir, \"val/\")\nif not os.path.isdir(yolov5_labels_test_dir):\n    os.mkdir(yolov5_labels_test_dir)\nclear_hidden_files(yolov5_labels_test_dir)\n\ntrain_file = open(os.path.join(wd, \"yolov5_train.txt\"), 'w')\ntest_file = open(os.path.join(wd, \"yolov5_val.txt\"), 'w')\ntrain_file.close()\ntest_file.close()\ntrain_file = open(os.path.join(wd, \"yolov5_train.txt\"), 'a')\ntest_file = open(os.path.join(wd, \"yolov5_val.txt\"), 'a')\nlist_imgs = os.listdir(image_dir)  # list image files\nprob = random.randint(1, 100)\nprint(\"Probability: %d\" % prob)\nfor i in range(0, len(list_imgs)):\n    path = os.path.join(image_dir, list_imgs[i])\n    if os.path.isfile(path):\n        image_path = image_dir + list_imgs[i]\n        voc_path = list_imgs[i]\n        (nameWithoutExtention, extention) = os.path.splitext(os.path.basename(image_path))\n        (voc_nameWithoutExtention, voc_extention) = os.path.splitext(os.path.basename(voc_path))\n        annotation_name = nameWithoutExtention + '.xml'\n        annotation_path = os.path.join(annotation_dir, annotation_name)\n        label_name = nameWithoutExtention + '.txt'\n        label_path = os.path.join(yolo_labels_dir, label_name)\n    prob = random.randint(1, 100)\n    print(\"Probability: %d\" % prob)\n    if (prob &lt; TRAIN_RATIO):  # train dataset\n        if os.path.exists(annotation_path):\n            train_file.write(image_path + '\\n')\n            convert_annotation(nameWithoutExtention)  # convert label\n            copyfile(image_path, yolov5_images_train_dir + voc_path)\n            copyfile(label_path, yolov5_labels_train_dir + label_name)\n    else:  # test dataset\n        if os.path.exists(annotation_path):\n            test_file.write(image_path + '\\n')\n            convert_annotation(nameWithoutExtention)  # convert label\n            copyfile(image_path, yolov5_images_test_dir + voc_path)\n            copyfile(label_path, yolov5_labels_test_dir + label_name)\ntrain_file.close()\ntest_file.close()\n</code></pre> <p>\u9700\u8981\u4fee\u6539\u7684\u53c2\u6570\u5982\u4e0b\u56fe\uff1a</p> <p></p>"},{"location":"study/yolov5/3/#_5","title":"\u5212\u5206\u6570\u636e\u96c6","text":"<p>\u5c06\u4ee3\u7801\u653e\u5728<code>select.py</code>\u6587\u4ef6\u4e2d\uff0c\u5e76\u4e14**\u4e0eVOCdevkit\u6587\u4ef6\u5939\u5904\u4e8e\u540c\u7ea7\u76ee\u5f55**\uff0c\u7136\u540e\u76f4\u63a5\u8fd0\u884c\u4ee3\u7801\u5373\u53ef\uff1a</p> <p></p> <p>\u5212\u5206\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"study/yolov5/3/#_6","title":"\u79fb\u52a8\u81f3\u5de5\u7a0b\u6587\u4ef6\u5939","text":"<p>\u5c06VOCdevkit\u6574\u4e2a\u6587\u4ef6\u5939\u7684\u5185\u5bb9\u590d\u5236\u5230yolo\u5de5\u7a0b\u7684\u6839\u76ee\u5f55\u4e0b\uff1a</p> <p></p>"},{"location":"study/yolov5/4/","title":"\u6a21\u578b\u8bad\u7ec3","text":""},{"location":"study/yolov5/4/#yolo","title":"\u4fee\u6539yolo\u6587\u4ef6\u53c2\u6570","text":"<p>\u627e\u5230<code>data</code>\u6587\u4ef6\u5939\u4e0b\u7684<code>coco128.yaml</code>\u6587\u4ef6</p> <p></p> <p>\u4fee\u6539\u6587\u4ef6\u53c2\u6570</p> <p></p> <p>\u627e\u5230<code>models</code>\u6587\u4ef6\u5939\u4e0b\u7684yolov5s.yaml\u6587\u4ef6</p> <p>\u8fd9\u91cc\u8fd8\u6709n\u3001x\u7b49\u7c7b\u578b\u7684\uff0c\u5177\u4f53\u533a\u522b\u53ef\u4ee5\u53c2\u8003Github\u7684\u6570\u636e\u66f2\u7ebf\u3002</p> <p></p> <p>\u4fee\u6539\u6807\u7b7e\u6570\u91cf\u53c2\u6570\uff1a</p> <p></p> <p>\u6253\u5f00<code>train.py</code>\u6587\u4ef6</p> <p></p> <p>\u627e\u5230<code>parse_opt</code>\u51fd\u6570\uff0c\u8fd9\u91cc\u9762\u6709\u6a21\u578b\u7684\u4e3b\u8981\u53c2\u6570\uff1a</p> Python<pre><code>def parse_opt(known=False):\n    \"\"\"Parses command-line arguments for YOLOv5 training, validation, and testing.\"\"\"\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\"--weights\", type=str, default=ROOT / \"yolov5s.pt\", help=\"initial weights path\")\n    parser.add_argument(\"--cfg\", type=str, default=\"\", help=\"model.yaml path\")\n    parser.add_argument(\"--data\", type=str, default=ROOT / \"data/coco128.yaml\", help=\"dataset.yaml path\")\n    parser.add_argument(\"--hyp\", type=str, default=ROOT / \"data/hyps/hyp.scratch-low.yaml\", help=\"hyperparameters path\")\n    parser.add_argument(\"--epochs\", type=int, default=10, help=\"total training epochs\")\n    parser.add_argument(\"--batch-size\", type=int, default=8, help=\"total batch size for all GPUs, -1 for autobatch\")\n    parser.add_argument(\"--imgsz\", \"--img\", \"--img-size\", type=int, default=320, help=\"train, val image size (pixels)\")\n    parser.add_argument(\"--rect\", action=\"store_true\", help=\"rectangular training\")\n    parser.add_argument(\"--resume\", nargs=\"?\", const=True, default=False, help=\"resume most recent training\")\n    parser.add_argument(\"--nosave\", action=\"store_true\", help=\"only save final checkpoint\")\n    parser.add_argument(\"--noval\", action=\"store_true\", help=\"only validate final epoch\")\n    parser.add_argument(\"--noautoanchor\", action=\"store_true\", help=\"disable AutoAnchor\")\n    parser.add_argument(\"--noplots\", action=\"store_true\", help=\"save no plot files\")\n    parser.add_argument(\"--evolve\", type=int, nargs=\"?\", const=300, help=\"evolve hyperparameters for x generations\")\n    parser.add_argument(\n        \"--evolve_population\", type=str, default=ROOT / \"data/hyps\", help=\"location for loading population\"\n    )\n    parser.add_argument(\"--resume_evolve\", type=str, default=None, help=\"resume evolve from last generation\")\n    parser.add_argument(\"--bucket\", type=str, default=\"\", help=\"gsutil bucket\")\n    parser.add_argument(\"--cache\", type=str, nargs=\"?\", const=\"ram\", help=\"image --cache ram/disk\")\n    parser.add_argument(\"--image-weights\", action=\"store_true\", help=\"use weighted image selection for training\")\n    parser.add_argument(\"--device\", default=\"\", help=\"cuda device, i.e. 0 or 0,1,2,3 or cpu\")\n    parser.add_argument(\"--multi-scale\", action=\"store_true\", help=\"vary img-size +/- 50%%\")\n    parser.add_argument(\"--single-cls\", action=\"store_true\", help=\"train multi-class data as single-class\")\n    parser.add_argument(\"--optimizer\", type=str, choices=[\"SGD\", \"Adam\", \"AdamW\"], default=\"SGD\", help=\"optimizer\")\n    parser.add_argument(\"--sync-bn\", action=\"store_true\", help=\"use SyncBatchNorm, only available in DDP mode\")\n    parser.add_argument(\"--workers\", type=int, default=8, help=\"max dataloader workers (per RANK in DDP mode)\")\n    parser.add_argument(\"--project\", default=ROOT / \"runs/train\", help=\"save to project/name\")\n    parser.add_argument(\"--name\", default=\"exp\", help=\"save to project/name\")\n    parser.add_argument(\"--exist-ok\", action=\"store_true\", help=\"existing project/name ok, do not increment\")\n    parser.add_argument(\"--quad\", action=\"store_true\", help=\"quad dataloader\")\n    parser.add_argument(\"--cos-lr\", action=\"store_true\", help=\"cosine LR scheduler\")\n    parser.add_argument(\"--label-smoothing\", type=float, default=0.0, help=\"Label smoothing epsilon\")\n    parser.add_argument(\"--patience\", type=int, default=100, help=\"EarlyStopping patience (epochs without improvement)\")\n    parser.add_argument(\"--freeze\", nargs=\"+\", type=int, default=[0], help=\"Freeze layers: backbone=10, first3=0 1 2\")\n    parser.add_argument(\"--save-period\", type=int, default=-1, help=\"Save checkpoint every x epochs (disabled if &lt; 1)\")\n    parser.add_argument(\"--seed\", type=int, default=0, help=\"Global training seed\")\n    parser.add_argument(\"--local_rank\", type=int, default=-1, help=\"Automatic DDP Multi-GPU argument, do not modify\")\n\n    # Logger arguments\n    parser.add_argument(\"--entity\", default=None, help=\"Entity\")\n    parser.add_argument(\"--upload_dataset\", nargs=\"?\", const=True, default=False, help='Upload data, \"val\" option')\n    parser.add_argument(\"--bbox_interval\", type=int, default=-1, help=\"Set bounding-box image logging interval\")\n    parser.add_argument(\"--artifact_alias\", type=str, default=\"latest\", help=\"Version of dataset artifact to use\")\n\n    # NDJSON logging\n    parser.add_argument(\"--ndjson-console\", action=\"store_true\", help=\"Log ndjson to console\")\n    parser.add_argument(\"--ndjson-file\", action=\"store_true\", help=\"Log ndjson to file\")\n\n    return parser.parse_known_args()[0] if known else parser.parse_args()\n</code></pre> <p>\u53c2\u6570\u7684\u5177\u4f53\u89e3\u6790\u5982\u4e0b\uff1a</p> Python<pre><code>\"\"\"\n    opt\u6a21\u578b\u4e3b\u8981\u53c2\u6570\u89e3\u6790\uff1a\n    --weights\uff1a\u521d\u59cb\u5316\u7684\u6743\u91cd\u6587\u4ef6\u7684\u8def\u5f84\u5730\u5740\n    --cfg\uff1a\u6a21\u578byaml\u6587\u4ef6\u7684\u8def\u5f84\u5730\u5740\n    --data\uff1a\u6570\u636eyaml\u6587\u4ef6\u7684\u8def\u5f84\u5730\u5740\n    --hyp\uff1a\u8d85\u53c2\u6570\u6587\u4ef6\u8def\u5f84\u5730\u5740\n    --epochs\uff1a\u8bad\u7ec3\u8f6e\u6b21\n    --batch-size\uff1a\u5582\u5165\u6279\u6b21\u6587\u4ef6\u7684\u591a\u5c11\n    --img-size\uff1a\u8f93\u5165\u56fe\u7247\u5c3a\u5bf8\n    --rect:\u662f\u5426\u91c7\u7528\u77e9\u5f62\u8bad\u7ec3\uff0c\u9ed8\u8ba4False\n    --resume:\u63a5\u7740\u6253\u65ad\u8bad\u7ec3\u4e0a\u6b21\u7684\u7ed3\u679c\u63a5\u7740\u8bad\u7ec3\n    --nosave:\u4e0d\u4fdd\u5b58\u6a21\u578b\uff0c\u9ed8\u8ba4False\n    --notest:\u4e0d\u8fdb\u884ctest\uff0c\u9ed8\u8ba4False\n    --noautoanchor:\u4e0d\u81ea\u52a8\u8c03\u6574anchor\uff0c\u9ed8\u8ba4False\n    --evolve:\u662f\u5426\u8fdb\u884c\u8d85\u53c2\u6570\u8fdb\u5316\uff0c\u9ed8\u8ba4False\n    --bucket:\u8c37\u6b4c\u4e91\u76d8bucket\uff0c\u4e00\u822c\u4e0d\u4f1a\u7528\u5230\n    --cache-images:\u662f\u5426\u63d0\u524d\u7f13\u5b58\u56fe\u7247\u5230\u5185\u5b58\uff0c\u4ee5\u52a0\u5feb\u8bad\u7ec3\u901f\u5ea6\uff0c\u9ed8\u8ba4False\n    --image-weights\uff1a\u4f7f\u7528\u52a0\u6743\u56fe\u50cf\u9009\u62e9\u8fdb\u884c\u8bad\u7ec3\n    --device:\u8bad\u7ec3\u7684\u8bbe\u5907\uff0ccpu\uff1b0(\u8868\u793a\u4e00\u4e2agpu\u8bbe\u5907cuda:0)\uff1b0,1,2,3(\u591a\u4e2agpu\u8bbe\u5907)\n    --multi-scale:\u662f\u5426\u8fdb\u884c\u591a\u5c3a\u5ea6\u8bad\u7ec3\uff0c\u9ed8\u8ba4False\n    --single-cls:\u6570\u636e\u96c6\u662f\u5426\u53ea\u6709\u4e00\u4e2a\u7c7b\u522b\uff0c\u9ed8\u8ba4False\n    --adam:\u662f\u5426\u4f7f\u7528adam\u4f18\u5316\u5668\n    --sync-bn:\u662f\u5426\u4f7f\u7528\u8de8\u5361\u540c\u6b65BN,\u5728DDP\u6a21\u5f0f\u4f7f\u7528\n    --local_rank\uff1aDDP\u53c2\u6570\uff0c\u8bf7\u52ff\u4fee\u6539\n    --workers\uff1a\u6700\u5927\u5de5\u4f5c\u6838\u5fc3\u6570\n    --project:\u8bad\u7ec3\u6a21\u578b\u7684\u4fdd\u5b58\u4f4d\u7f6e\n    --name\uff1a\u6a21\u578b\u4fdd\u5b58\u7684\u76ee\u5f55\u540d\u79f0\n    --exist-ok\uff1a\u6a21\u578b\u76ee\u5f55\u662f\u5426\u5b58\u5728\uff0c\u4e0d\u5b58\u5728\u5c31\u521b\u5efa\n\"\"\"\n</code></pre>"},{"location":"study/yolov5/4/#_1","title":"\u5e38\u7528\u7684\u53c2\u6570","text":"<p><code>weights</code>\u9884\u8bad\u7ec3\u6743\u91cd<code>yolov5s.pt</code>\uff0c\u4e0e\u524d\u9762\u4fee\u6539\u7684\u6587\u4ef6\u8981\u4e00\u81f4\u3002</p> Python<pre><code>parser.add_argument(\"--weights\", type=str, default=ROOT / \"yolov5s.pt\", help=\"initial weights path\")\n</code></pre> <p><code>data</code>\u6570\u636eyaml\u6587\u4ef6\u7684\u8def\u5f84\u5730\u5740\uff0c\u540c\u6837\u4e0e\u524d\u9762\u4fee\u6539\u7684\u6587\u4ef6\u4fdd\u6301\u4e00\u81f4\u3002</p> Python<pre><code>parser.add_argument(\"--data\", type=str, default=ROOT / \"data/coco128.yaml\", help=\"dataset.yaml path\")\n</code></pre> <p><code>epochs</code>\u8bad\u7ec3\u8f6e\u6570\uff0c\u8981\u8fbe\u5230\u66f2\u7ebf\u62df\u5408\uff0c\u6700\u597d\u4ece100\u6216300\u8f6e\u5f00\u59cb\u3002</p> <p><code>batch-size</code>\u6279\u6b21\u6587\u4ef6\u7684\u591a\u5c11,\u8fd9\u4e2a\u770b\u7535\u8111\u7684\u6027\u80fd\u3002</p> <p><code>img-size</code>\u7167\u7247\u7684\u5c3a\u5bf8\uff0c\u4e00\u822c\u5c31\u9009320\u3002</p> Python<pre><code>parser.add_argument(\"--epochs\", type=int, default=10, help=\"total training epochs\")\nparser.add_argument(\"--batch-size\", type=int, default=8, help=\"total batch size for all GPUs, -1 for autobatch\")\nparser.add_argument(\"--imgsz\", \"--img\", \"--img-size\", type=int, default=320, help=\"train, val image size (pixels)\")\n</code></pre> <p><code>workers</code>\u6700\u5927\u5de5\u4f5c\u6838\u5fc3\u6570\uff0c\u8fd9\u4e2a\u770b\u7535\u8111\u7684\u6027\u80fd\u3002</p> Python<pre><code>parser.add_argument(\"--workers\", type=int, default=8, help=\"max dataloader workers (per RANK in DDP mode)\")\n</code></pre>"},{"location":"study/yolov5/4/#_2","title":"\u8bad\u7ec3\u6a21\u578b","text":"<p>\u76f4\u63a5\u8fd0\u884c<code>train.py</code></p> <p></p>"},{"location":"study/yolov5/4/#_3","title":"\u8bad\u7ec3\u7ed3\u679c","text":"<p>\u8fd9\u91cc\u6587\u4ef6\u5939\u4e0b\u6709\u6d4b\u8bd5\u7ed3\u679c\uff0c\u8bad\u7ec3\u7ed3\u679c\u66f2\u7ebf\u7b49\u4fe1\u606f\u3002</p> <p></p> <p>\u6743\u91cd\u6587\u4ef6\uff08\u6700\u540e\u8981\u83b7\u5f97\u5c31\u662f\u8fd9\u4e2a\u6587\u4ef6\uff0c\u53d6**best.pt**\u505a\u63a8\u7406\u4f7f\u7528\u7684\u6743\u91cd\uff09</p> <p></p>"},{"location":"study/yolov5/4/#tensorbord","title":"\u7528tensorbord\u67e5\u770b\u8bad\u7ec3\u7ed3\u679c","text":"<p>\u6253\u5f00pycharm\u7ec8\u7aef\uff0c\u8f93\u5165\u5982\u4e0b\u547d\u4ee4\uff1a</p> Bash<pre><code>tensorboard --logdir=runs/train\n</code></pre> <p></p> <p>ctrl\u70b9\u51fb\u7f51\u5740\uff0c\u8df3\u8f6c\u6d4f\u89c8\u5668\uff1a</p> <p></p>"},{"location":"study/%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95/PID/","title":"PID\u63a7\u5236","text":""},{"location":"study/%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95/PID/#1-pid","title":"1. PID\u539f\u7406","text":""},{"location":"study/%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95/PID/#11-pid","title":"1.1 PID\u7b80\u4ecb","text":"<ul> <li>PID\u662f\u6bd4\u4f8b\uff08Proportional\uff09\u3001\u79ef\u5206\uff08Integral\uff09\u3001\u5fae\u5206\uff08Differential\uff09\u7684\u7f29\u5199\u3002</li> <li>PID\u662f\u4e00\u79cd\u95ed\u73af\u63a7\u5236\u7b97\u6cd5\uff0c\u5b83\u52a8\u6001\u6539\u53d8\u65bd\u52a0\u5230\u88ab\u63a7\u5bf9\u8c61\u7684\u8f93\u51fa\u503c\uff08Out\uff09\uff0c\u4f7f\u5f97\u88ab\u63a7\u5bf9\u8c61\u67d0\u4e00\u7269\u7406\u91cf\u7684\u5b9e\u9645\u503c\uff08Actual\uff09\uff0c\u80fd\u591f\u5feb\u901f\u3001\u51c6\u786e\u3001\u7a33\u5b9a\u5730\u8ddf\u8e2a\u5230\u6307\u5b9a\u7684\u76ee\u6807\u503c\uff08Target\uff09\u3002</li> <li>PID\u662f\u4e00\u79cd\u57fa\u4e8e\u8bef\u5dee\uff08Error\uff09\u8c03\u63a7\u7684\u7b97\u6cd5\uff0c\u5176\u4e2d\u89c4\u5b9a\uff1a\u8bef\u5dee=\u76ee\u6807\u503c-\u5b9e\u9645\u503c\uff0cPID\u7684\u4efb\u52a1\u662f\u4f7f\u8bef\u5dee\u59cb\u7ec8\u4e3a 0 \u3002</li> <li>PID\u5bf9\u88ab\u63a7\u5bf9\u8c61\u6a21\u578b\u8981\u6c42\u4f4e\uff0c\u65e0\u9700\u5efa\u6a21\uff0c\u5373\u4f7f\u88ab\u63a7\u5bf9\u8c61\u5185\u90e8\u8fd0\u4f5c\u89c4\u5f8b\u4e0d\u660e\u786e\uff0cPID\u4e5f\u80fd\u8fdb\u884c\u8c03\u63a7\u3002</li> </ul>"},{"location":"study/%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95/PID/#12-pid","title":"1.2 PID\u516c\u5f0f","text":"<p>\u8bef\u5dee\uff1a </p> \\[ error(t) = target(t) - actual(t) \\] <p>\u8f93\u51fa\u503c\uff1a</p> \\[ out(t) = K_p \\cdot error(t) + K_i \\int_0^t error(t) \\, dt + K_d \\cdot \\frac{d \\, error(t)}{dt} \\] <p>\u82e5\u7528\u63a7\u5236\u7684\u8bed\u8a00\u8868\u8fbe\u5219\u5982\u4e0b\u7ed3\u6784\u56fe\uff1a</p> <p></p>"},{"location":"study/%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95/PID/#13-pid","title":"1.3 PID\u5404\u9879\u4f5c\u7528","text":"<p>\u6bd4\u4f8b\u9879\uff08P\uff09</p> <ul> <li>\u53ea\u542b\u6709\u6bd4\u4f8b\u9879\u7684PID\u8f93\u51fa\u503c\uff1a</li> </ul> \\[ out(t) = K_p \\cdot error(t) \\] <ul> <li>\u6bd4\u4f8b\u9879\u7684\u8f93\u51fa\u503c\u4ec5\u53d6\u51b3\u4e8e \u5f53\u524d\u65f6\u523b\u7684\u8bef\u5dee \uff0c\u4e0e\u5386\u53f2\u65f6\u523b\u65e0\u5173\u3002</li> <li>\u5f53\u524d\u5b58\u5728\u8bef\u5dee\u65f6\uff0c\u6bd4\u4f8b\u9879\u8f93\u51fa\u4e00\u4e2a\u4e0e\u8bef\u5dee\u5448\u6b63\u6bd4\u7684\u503c\uff0c\u5f53\u524d\u4e0d\u5b58\u5728\u8bef\u5dee\u65f6\uff0c\u6bd4\u4f8b\u9879\u8f93\u51fa 0 \u3002</li> <li>\u6bd4\u4f8b\u9879\u6743\u91cd\u8d8a\u5927\uff0c\u7cfb\u7edf\u54cd\u5e94\u8d8a\u5feb\uff0c\u4f46\u8d85\u8c03\u4e5f\u4f1a\u968f\u4e4b\u589e\u52a0\u3002</li> <li>\u7eaf\u6bd4\u4f8b\u9879\u63a7\u5236\u65f6\uff0c\u7cfb\u7edf\u4e00\u822c\u4f1a\u5b58\u5728\u7a33\u6001\u8bef\u5dee\uff0c\u6bd4\u4f8b\u9879\u8d8a\u5927\uff0c\u7a33\u6001\u8bef\u5dee\u8d8a\u5c0f\uff0c\u4f46\u5e76\u4e0d\u80fd\u5b8c\u5168\u6d88\u9664\u7a33\u6001\u8bef\u5dee\u3002</li> </ul> <p>Danger</p> <p>\u7531\u4e8e\u7eaf\u6bd4\u4f8b\u9879\u63a7\u5236\u4e2d\uff0c\u7a33\u6001\u8bef\u5dee\u96be\u4ee5\u5b8c\u5168\u6d88\u9664\uff0c\u56e0\u6b64\u5f15\u5165\u79ef\u5206\u9879\u3002</p> <p>\u79ef\u5206\u9879\uff08I\uff09</p> <ul> <li>\u542b\u6709\u6bd4\u4f8b\u9879\u548c\u79ef\u5206\u9879\u7684PID\u8f93\u51fa\u503c\uff1a</li> </ul> \\[ out(t) = K_p \\cdot error(t) + K_i \\int_0^t error(t) \\, dt \\] <ul> <li>\u79ef\u5206\u9879\u7684\u8f93\u51fa\u503c\u53d6\u51b3\u4e8e0~t\u6240\u6709\u65f6\u523b\u8bef\u5dee\u7684\u79ef\u5206\uff0c \u4e0e\u5386\u53f2\u65f6\u523b\u6709\u5173 \u3002</li> <li>\u79ef\u5206\u9879\u5c06\u5386\u53f2\u6240\u6709\u65f6\u523b\u7684\u8bef\u5dee\u7d2f\u79ef\uff0c\u4e58\u4e0a\u79ef\u5206\u9879\u7cfb\u6570\u540e\u4f5c\u4e3a\u79ef\u5206\u9879\u8f93\u51fa\u503c\u3002</li> <li>\u79ef\u5206\u9879\u7528\u4e8e\u5f25\u8865\u7eaf\u6bd4\u4f8b\u9879\u4ea7\u751f\u7684\u7a33\u6001\u8bef\u5dee\uff0c\u82e5\u7cfb\u7edf\u6301\u7eed\u4ea7\u751f\u8bef\u5dee\uff0c\u5219\u79ef\u5206\u9879\u4f1a\u4e0d\u65ad\u7d2f\u79ef\u8bef\u5dee\uff0c\u76f4\u5230\u63a7\u5236\u5668\u4ea7\u751f\u52a8\u4f5c\uff0c\u8ba9\u7a33\u6001\u8bef\u5dee\u6d88\u5931\u3002</li> <li>\u79ef\u5206\u9879\u6743\u91cd\u8d8a\u5927\uff0c\u7a33\u6001\u8bef\u5dee\u6d88\u5931\u8d8a\u5feb\uff0c\u4f46\u7cfb\u7edf\u6ede\u540e\u6027\u4e5f\u4f1a\u968f\u4e4b\u589e\u52a0\u3002</li> </ul> <p>Danger</p> <p>\u6ede\u540e\u6027\u662f\u56e0\u4e3a\u7eaf\u79ef\u5206\u9879\u4e0d\u80fd\u5f88\u5730\u6839\u636e\u76ee\u6807\u503c\u6539\u53d8\u8f93\u51fa\u529b\u5ea6\uff0c\u800c\u662f\u7f13\u6162\u6539\u53d8\uff0c\u56e0\u6b64\u8fd9\u662f\u79ef\u5206\u9879\u7684\u4e00\u4e2a\u7f3a\u9677\uff1b\u4f46\u5bf9\u4e8e\u7535\u673a\u901f\u5ea6\u63a7\u5236\u6765\u8bf4PI\u9879\u8db3\u77e3\uff0c\u800c\u7535\u673a\u4f4d\u7f6e\u63a7\u5236\u5219\u9700\u8981\u52a0\u4e0aD\u9879\u3002</p> <p>\u5fae\u5206\u9879\uff08D\uff09</p> <ul> <li>\u542b\u6709\u6bd4\u4f8b\u9879\u3001\u79ef\u5206\u9879\u548c\u5fae\u5206\u9879\u7684PID\u8f93\u51fa\u503c\uff1a</li> </ul> \\[ out(t) = K_p \\cdot error(t) + K_i \\int_0^t error(t) \\, dt + K_d \\cdot \\frac{d \\, error(t)}{dt} \\] <ul> <li>\u5fae\u5206\u9879\u7684\u8f93\u51fa\u503c\u53d6\u51b3\u4e8e\u5f53\u524d\u65f6\u523b\u8bef\u5dee\u53d8\u5316\u7684\u659c\u7387\uff0c\u4e0e\u5f53\u524d\u65f6\u523b\u9644\u8fd1 \u8bef\u5dee\u53d8\u5316\u7684\u8d8b\u52bf\u6709\u5173 \u3002</li> <li>\u5f53\u8bef\u5dee\u6025\u5267\u53d8\u5316\u65f6\uff0c\u5fae\u5206\u9879\u4f1a\u8d1f\u53cd\u9988\u8f93\u51fa\u76f8\u53cd\u7684\u4f5c\u7528\u529b\uff0c\u963b\u788d\u8bef\u5dee\u6025\u5267\u53d8\u5316\u3002</li> <li>\u659c\u7387\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53cd\u6620\u4e86\u8bef\u5dee\u672a\u6765\u7684\u53d8\u5316\u8d8b\u52bf\uff0c\u8fd9\u4f7f\u5f97\u5fae\u5206\u9879\u5177\u6709 \u201c\u9884\u6d4b\u672a\u6765\uff0c\u63d0\u524d\u8c03\u63a7\u201d \u7684\u7279\u6027\u3002</li> <li>\u5fae\u5206\u9879\u7ed9\u7cfb\u7edf\u589e\u52a0\u963b\u5c3c\uff0c\u53ef\u4ee5\u6709\u6548\u9632\u6b62\u7cfb\u7edf\u8d85\u8c03\uff0c\u5c24\u5176\u662f\u60ef\u6027\u6bd4\u8f83\u5927\u7684\u7cfb\u7edf\u3002</li> <li>\u5fae\u5206\u9879\u6743\u91cd\u8d8a\u5927\uff0c\u7cfb\u7edf\u963b\u5c3c\u8d8a\u5927\uff0c\u4f46\u7cfb\u7edf\u5361\u987f\u73b0\u8c61\u4e5f\u4f1a\u968f\u4e4b\u589e\u52a0\u3002</li> </ul>"},{"location":"study/%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95/PID/#2-pid","title":"2. \u79bb\u6563\u5316PID","text":""},{"location":"study/%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95/PID/#21-pid","title":"2.1 PID\u79bb\u6563\u5316","text":"<p>\u8bbe\u91c7\u6837\u5468\u671fT\uff0c\u6bcf\u4e2aT\u65f6\u523b\u8bfb\u53d6\u4e00\u6b21\u8bef\u5dee\u503c\uff1a</p> <ul> <li>P\u9879\uff1a\u7cfb\u6570 \u00d7 \u7b2c k \u4e2a T\u65f6\u523b\u8bef\u5dee\u503c</li> <li>I\u9879\uff1a\u7cfb\u6570 \u00d7 \u5468\u671fT \u00d7 \u8bef\u5dee\u7684\u7d2f\u52a0\u548c</li> <li>D\u9879\uff1a\u7cfb\u6570 \u00d7 \u7b2c k \u4e2aT\u65f6\u523b\u7684\u8bef\u5dee\u659c\u7387\uff08 \u5373\uff08\u672c\u6b21\u8bef\u5dee -\u4e0a\u6b21\u8bef\u5dee\uff09 / \u5468\u671fT \uff09</li> </ul> <p>\u56e0\u6b64\uff0cPID\u79bb\u6563\u5316\u540e\u7684\u516c\u5f0f\u5982\u4e0b\uff1a</p> \\[ out(k) = K_p \\cdot error(k) + K_i \\cdot T \\sum_{j=0}^k error(j) + K_d \\cdot \\frac{error(k) - error(k-1)}{T} \\] <p>\u82e5\u5c06T\u7684\u503c\u878d\u5165\u5230\u5404\u9879\u7cfb\u6570\u4e2d\uff0c\u5219\u4e3a\u53e6\u4e00\u4e2a\u5f62\u5f0f\u7684\u516c\u5f0f\uff1a</p> \\[ out(k) = K_p \\cdot error(k) + K_i \\cdot \\sum_{j=0}^k error(j) + K_d \\cdot ({error(k) - error(k-1)}) \\]"},{"location":"study/%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95/PID/#22-pid","title":"2.2 \u4f4d\u7f6e\u5f0fPID","text":"<p>\u4f4d\u7f6e\u5f0fPID\u5c31\u662fPID\u79bb\u6563\u5316\u540e\u7684PID\u516c\u5f0f\uff1a</p> \\[ out(k) = K_p \\cdot error(k) + K_i \\cdot \\sum_{j=0}^k error(j) + K_d \\cdot ({error(k) - error(k-1)}) \\]"},{"location":"study/%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95/PID/#23-pid","title":"2.3 \u589e\u91cf\u5f0fPID","text":"<p>\u7b2ck\u4e2aT\u65f6\u523b\uff1a</p> \\[ out(k) = K_p \\cdot error(k) + K_i \\cdot \\sum_{j=0}^k error(j) + K_d \\cdot ({error(k) - error(k-1)}) \\] <p>\u7b2ck-1\u4e2aT\u65f6\u523b\uff1a</p> \\[ out(k-1) = K_p \\cdot error(k-1) + K_i \\cdot \\sum_{j=0}^{k-1} error(j) + K_d \\cdot ({error(k-1) - error(k-2)}) \\] <p>\u4e24\u5f0f\u76f8\u51cf\uff0c\u5f97\u5230\u589e\u91cf\u5f0fPID\uff1a</p> \\[ \\Delta out(k) = K_p \\cdot (error(k) - error(k-1)) + K_i\\cdot error(k) + K_d \\cdot (error(k) - 2 \\cdot error(k-1) + error(k-2)) \\]"},{"location":"study/%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95/PID/#24-pid","title":"2.4 \u4e24\u79cdPID\u5dee\u5f02","text":"<ul> <li>\u4f4d\u7f6e\u5f0fPID\u76f4\u63a5\u8f93\u51fa\u7684\u4e3a\u672c\u6b21\u8f93\u51fa\u503c\u7684\u5168\u91cf\uff1b\u4ee5\u5360\u7a7a\u6bd4\u4e3a\u4f8b\uff1a20%\u300122%\u300118%\u3002</li> <li>\u589e\u91cf\u5f0fPID\u76f4\u63a5\u8f93\u51fa\u7684\u4e3a\u672c\u6b21\u8f93\u51fa\u503c\u76f8\u5bf9\u4e8e\u4e0a\u4e00\u6b21\u8f93\u51fa\u503c\u7684\u589e\u91cf\uff1b\u4ee5\u5360\u7a7a\u6bd4\u4e3a\u4f8b\uff1a+0%\u3001+2%\u3001-4%\u3002</li> </ul>"},{"location":"study/%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95/PID/#3-pid","title":"3. PID\u7a0b\u5e8f","text":""},{"location":"study/%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95/PID/#31","title":"3.1 \u5b9a\u901f\u63a7\u5236","text":"<p>\u4f4d\u7f6e\u5f0fPID\u7a0b\u5e8f\uff0c\u5927\u91cf\u8fd0\u7528\u4e86\u7ed3\u6784\u4f53\u6bd4\u5168\u5c40\u53d8\u91cf\u66f4\u76f4\u89c2\u4e00\u4e9b\uff1a</p> <p><code>pid.h</code></p> C<pre><code>#ifndef ROBOT_V1_0_PID_H\n#define ROBOT_V1_0_PID_H\n\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n#include \"usart.h\"\n#include \"encoder.h\"\n#include \"motor.h\"\n\n/* PID\u53ef\u8c03\u7684\u53c2\u6570 */\ntypedef struct {\n    float P;\n    float I;\n    float D;\n    float Target;\n} PID_Params;\n\n/* PID\u9700\u4ece\u5916\u90e8\u83b7\u53d6\u7684\u53c2\u6570 */\ntypedef struct {\n    float Cur_Error;\n    float Pre_Error;\n    float Cnt_Error;\n    float Actual;\n} PID_Error;\n\n/* \u50a8\u5b58PID\u8ba1\u7b97\u7ed3\u679c\uff0c\u7528\u4e8e\u540c\u65f6\u63a7\u5236\u56db\u4e2a\u7535\u673a */\ntypedef struct {\n    float duty1;\n    float duty2;\n    float duty3;\n    float duty4;\n} Duty;\n\nfloat PID_GetDuty(uint8_t Hx);\nvoid PID_Func(Duty* pDuty);\nvoid PID_SetTarget(float target);\nfloat PID_GetActual(void);\nvoid PID_SetP(float P);\nvoid PID_SetI(float I);\nvoid PID_SetD(float D);\nvoid PID_SerialPlot(Duty* pDuty, char* message);\n\n#endif //ROBOT_V1_0_PID_H\n</code></pre> <p><code>pid.c</code></p> C<pre><code>#include \"pid.h\"\n\nstatic PID_Params pPID = {0.6, 0.1, 0, 0};\nstatic PID_Error pError;\n\n/* \u83b7\u53d6PID\u8ba1\u7b97\u7ed3\u679c */\nfloat PID_GetDuty(uint8_t Hx) {\n    float duty;\n//    int32_t value = Encoder_Read_CNT(Hx);\n    /* \u83b7\u53d6\u771f\u5b9e\u503c */\n//    pError.Actual = Motor_CntToDuty(value);\n    pError.Actual = Encoder_Read_CNT(Hx);\n    /* \u5904\u7406\u8bef\u5dee */\n    pError.Pre_Error = pError.Cur_Error;\n    pError.Cur_Error = pPID.Target - pError.Actual;\n    pError.Cnt_Error += pError.Cur_Error;\n    /* PID\u7b97\u6cd5 */\n    duty = pPID.P * pError.Cur_Error + pPID.I * pError.Cnt_Error + pPID.D * (pError.Cur_Error - pError.Pre_Error);\n    if ( duty &gt; 100 ) { duty = 100; }\n    if ( duty &lt; -100 ) { duty = -100; }\n    return duty;\n}\n\n/* \u5c06\u8ba1\u7b97\u7ed3\u679c\u8fd0\u7528\u4e8e\u63a7\u5236\u5668 */\nvoid PID_Func(Duty* pDuty) {\n    Motor_SetSpeed(1,pDuty-&gt;duty1);\n    Motor_SetSpeed(2,pDuty-&gt;duty2);\n    Motor_SetSpeed(3,pDuty-&gt;duty3);\n    Motor_SetSpeed(4,pDuty-&gt;duty4);\n}\n\n/* \u8bbe\u7f6e\u76ee\u6807\u503c */\nvoid PID_SetTarget(float target) {\n    Motor_SetSpeed(1, target);\n    Motor_SetSpeed(2, target);\n    Motor_SetSpeed(3, target);\n    Motor_SetSpeed(4, target);\n    pPID.Target = target;\n}\n\n/* \u83b7\u53d6\u771f\u5b9e\u503c */\nfloat PID_GetActual(void) {\n    return pError.Actual;\n}\n\n/* \u8bbe\u7f6ePID\u53c2\u6570P */\nvoid PID_SetP(float P) {\n    pPID.P = P;\n}\n\n/* \u8bbe\u7f6ePID\u53c2\u6570I */\nvoid PID_SetI(float I) {\n    pPID.I = I;\n}\n\n/* \u8bbe\u7f6ePID\u53c2\u6570D */\nvoid PID_SetD(float D) {\n    pPID.D = D;\n}\n\n/* SerialPlot\u7ed8\u56fe\u4ea4\u4e92 */\nvoid PID_SerialPlot(Duty* pDuty, char* message) {\n    sprintf(message, \"%f,%f,%f,%f,%f\\r\\n\", pDuty-&gt;duty1, pDuty-&gt;duty2, pDuty-&gt;duty3, pDuty-&gt;duty4, pPID.Target);\n    HAL_UART_Transmit(&amp;huart1, (uint8_t *) message, strlen(message), 1000);\n}\n</code></pre> <p>\u5355\u4e2a\u7535\u673a\u8c03\u63a7\uff0c\u5b9a\u65f6\u4e2d\u65ad100ms\u6267\u884cPID\u8ba1\u7b97\uff1a</p> C<pre><code>void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {\n    /* USER CODE BEGIN Callback 0 */\n    static Duty duty;\n    char message[100] = \"\";\n    if (htim-&gt;Instance == TIM7) {\n        /*  */\n        duty.duty4 = PID_GetDuty(4);\n        duty.duty1 = PID_GetActual();\n        PID_Func(&amp;duty);\n        /*  */\n        PID_SerialPlot(&amp;duty, message);\n    }\n}\n</code></pre>"},{"location":"study/%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95/PID/#32","title":"3.2 \u4f4d\u7f6e\u63a7\u5236","text":"<p>\u53ea\u9700\u8981\u6539\u52a8\u4e00\u70b9\uff0c<code>PID_GetDuty</code>\u51fd\u6570\u4e2d\u771f\u5b9e\u503c\u7684\u83b7\u53d6\uff1a</p> C<pre><code>// \u5b9a\u901f\u63a7\u5236\npError.Actual = Encoder_Read_CNT(Hx);\n// \u4f4d\u7f6e\u63a7\u5236\npError.Actual += Encoder_Read_CNT(Hx);\n</code></pre>"},{"location":"study/%E8%8A%AF%E7%89%87%E7%B3%BB%E5%88%97/0.%E9%98%85%E8%AF%BB%E5%A3%B0%E6%98%8E/","title":"\u9605\u8bfb\u58f0\u660e","text":""},{"location":"study/%E8%8A%AF%E7%89%87%E7%B3%BB%E5%88%97/0.%E9%98%85%E8%AF%BB%E5%A3%B0%E6%98%8E/#_1","title":"\u9605\u8bfb\u58f0\u660e","text":"<p>\u82af\u7247\u7cfb\u5217\uff1a\u53c2\u8003\u539f\u5382\u4e2d/\u82f1\u6587\u6280\u672f\u624b\u518c\uff0c\u624b\u5199\u9a71\u52a8\u3002</p>"},{"location":"study/%E8%8A%AF%E7%89%87%E7%B3%BB%E5%88%97/ICM20948/","title":"ICM20948","text":""},{"location":"study/%E8%8A%AF%E7%89%87%E7%B3%BB%E5%88%97/ICM20948/#11","title":"1.1 \u6982\u8ff0","text":"<p>ICM-20948\u662f\u4e00\u4e2a\u591a\u82af\u7247\u6a21\u5757(MCM)\uff0c\u7531\u4e24\u4e2a\u82af\u7247\u96c6\u6210\u5230\u4e00\u4e2a\u5355QFN\u5c01\u88c5\u4e2d\u3002\u5176\u4e2d\u4e00\u4e2a\u82af\u7247\u5305\u542b\u4e00\u4e2a\u4e09\u8f74\u9640\u87ba\u4eea\u3001\u4e09\u8f74\u52a0\u901f\u5ea6\u8ba1\u548c\u4e00\u4e2a\u6570\u5b57\u8fd0\u52a8\u5904\u7406\u5668\u3002\u2122(DMP)\u3002\u53e6\u4e00\u4e2a\u82af\u7247\u5c01\u88c5\u4e86\u6765\u81ea\u65ed\u5316\u6210\u5fae\u5668\u4ef6\u516c\u53f8\u7684AK09916(3\u8f74\u78c1\u529b\u8ba1)\u3002</p>"},{"location":"study/%E8%8A%AF%E7%89%87%E7%B3%BB%E5%88%97/ICM20948/#12-icm20948","title":"1.2 ICM20948\u6846\u56fe","text":""},{"location":"study/%E8%8A%AF%E7%89%87%E7%B3%BB%E5%88%97/ICM20948/#13-i2c","title":"1.3 I2C\u63a5\u53e3","text":""},{"location":"study/%E8%8A%AF%E7%89%87%E7%B3%BB%E5%88%97/ICM20948/#131","title":"1.3.1 \u4ece\u673a\u5730\u5740","text":"<p>ICM-20948 \u7684\u4ece\u673a\u5730\u5740\u4e3a 1101 00X \u7684 7 Bit\u957f\u5ea6\uff0c\u5176\u4e2dAD0\u5f15\u811a\u53ef\u4ee5\u63a7\u5236 \u201cX\u201d \u4f4d\uff0c\u82e5AD0\u4e3a\u4f4e\u7535\u5e73\u5219\u4ece\u673a\u5730\u5740\u4e3a 1101 000\uff0c\u800c\u5f53AD0\u4e3a\u9ad8\u7535\u5e73\u65f6\u5219\u4ece\u673a\u5730\u5740\u4e3a 1101 001\u3002  </p>"},{"location":"study/%E8%8A%AF%E7%89%87%E7%B3%BB%E5%88%97/ICM20948/#131-i2c","title":"1.3.1 I2C\u65f6\u5e8f","text":"<p>\u8d77\u59cb\u6761\u4ef6\u4ee5\u540e\uff1a</p> <ul> <li>\u4e3b\u673a\u53d1\u9001 7 Bit\u7684\u4ece\u673a\u5730\u5740\uff08 1101000 \uff09\uff0c\u7b2c 8 Bit\u4e3a\u8bfb\u5199\u4f4d\u3002\u7136\u540e\uff0c\u4e3b\u673a\u91ca\u653eSDA\u5e76\u7b49\u5f85\u4ece\u673a\u8bbe\u5907\u7684\u5e94\u7b54\u4f4d\u3002</li> <li>\u6bcf\u4e00\u4e2a\u5b57\u8282\u4f20\u8f93\u5b8c\uff0c\u5fc5\u987b\u8ddf\u968f\u4e00\u4e2a\u5e94\u7b54\u4f4d\u3002</li> <li>\u4ece\u673a\u8bbe\u5907\u5728SCL\u9ad8\u7535\u5e73\u671f\u95f4\uff0c\u62c9\u4f4eSDA\u5e76\u4fdd\u6301SDA\u4e3aLow\uff0c\u8868\u793a\u5e94\u7b54\u3002</li> <li>\u6570\u636e\u4f20\u8f93\u5fc5\u987b\u7531\u4e3b\u673a\u53d1\u9001\u7ed3\u675f\u6761\u4ef6\u7ec8\u6b62\u3002</li> </ul> <p></p>"},{"location":"study/%E8%8A%AF%E7%89%87%E7%B3%BB%E5%88%97/ICM20948/#132-icm20948","title":"1.3.2 \u5199ICM20948\u5bc4\u5b58\u5668","text":"<ul> <li>\u4e3b\u673a\u53d1\u9001\u8d77\u59cb\u6761\u4ef6\uff0c\u7d27\u8ddf\u7740 7 Bit ICM20948\u5730\u5740\u548c\u5199\u4f4d(0)\u3002</li> <li>\u4ece\u673a\u8bbe\u5907ICM20948 \u53d1\u9001\u5e94\u7b54\u4f4d\u3002</li> <li>\u4e3b\u673a\u53d1\u9001\u5bc4\u5b58\u5668\u5730\u5740\u3002</li> <li>\u4ece\u673a\u8bbe\u5907ICM20948 \u53d1\u9001\u5e94\u7b54\u4f4d\u3002</li> <li>\u4e3b\u673a\u53d1\u9001\u9700\u8981\u5199\u5165\u7684\u6570\u636e\u3002</li> <li>\u4ece\u673a\u8bbe\u5907ICM20948 \u53d1\u9001\u5e94\u7b54\u4f4d\u3002</li> <li>\u4e3b\u673a\u53d1\u9001\u7ed3\u675f\u6761\u4ef6\uff0c\u4e00\u4e2a\u5b57\u8282\u6570\u636e\u4f20\u8f93\u7ec8\u6b62\u3002</li> </ul>"},{"location":"study/%E8%8A%AF%E7%89%87%E7%B3%BB%E5%88%97/ICM20948/#133-icm20948","title":"1.3.3 \u8bfbICM20948\u5bc4\u5b58\u5668","text":"<ul> <li>\u4e3b\u673a\u53d1\u9001\u8d77\u59cb\u6761\u4ef6\uff0c\u7d27\u8ddf\u7740 7 Bit ICM20948\u5730\u5740\u548c\u5199\u4f4d(0)\u3002</li> <li>\u4ece\u673a\u8bbe\u5907ICM20948 \u53d1\u9001\u5e94\u7b54\u4f4d\u3002</li> <li>\u4e3b\u673a\u53d1\u9001\u5bc4\u5b58\u5668\u5730\u5740\u3002</li> <li>\u4ece\u673a\u8bbe\u5907ICM20948 \u53d1\u9001\u5e94\u7b54\u4f4d\u3002</li> <li>\u4e3b\u673a\u518d\u6b21\u53d1\u9001\u8d77\u59cb\u6761\u4ef6\uff0c\u7d27\u8ddf\u77407 Bit ICM20948\u5730\u5740\u548c\u8bfb\u4f4d(1)\u3002</li> <li>\u4ece\u673a\u8bbe\u5907ICM20948 \u53d1\u9001\u5e94\u7b54\u4f4d\uff0c\u5e76\u8fd4\u56de\u5bc4\u5b58\u5668\u6570\u636e\u3002</li> <li>\u901a\u4fe1\u4ee5\u65e0\u5e94\u7b54\u548c\u4e3b\u673a\u53d1\u9001\u7ed3\u675f\u6761\u4ef6\u7ec8\u6b62\u3002</li> </ul>"},{"location":"study/%E8%8A%AF%E7%89%87%E7%B3%BB%E5%88%97/ICM20948/#14-spi","title":"1.4 SPI\u63a5\u53e3","text":"<ul> <li>\u6570\u636e\u9ad8\u4f4d\u5148\u884c\uff0c\u5373MSB \u9996\u5148\uff0cLSB \u6700\u540e\u3002</li> <li>\u6570\u636e\u88ab\u9501\u5b9a\u5728 SCLK \u7684\u4e0a\u5347\u6cbf\u3002</li> <li>\u6570\u636e\u5e94\u5728 SCLK \u7684\u4e0b\u964d\u6cbf\u4e0a\u8f6c\u6362\u3002</li> <li>SCLK\u7684\u6700\u5927\u9891\u7387\u4e3a7 MHz\u3002</li> <li>\u7b2c\u4e00\u4e2a\u5b57\u8282\u5305\u542bSPI\u5730\u5740\uff0c\u540e\u9762\u7684\u5b57\u8282\u5305\u542bSPI\u6570\u636e\u3002\u7b2c\u4e00\u4e2a\u5b57\u8282\u7684\u7b2c\u4e00\u4e2a\u4f4d\u5305\u542b\u8bfb\u5199\u4f4d\uff0c\u8868\u793a\u8bfb\u53d6(1)\u6216\u5199\u5165(0)\u64cd\u4f5c\u3002\u540e\u9762\u76847\u4f4d\u5305\u542b\u5bc4\u5b58\u5668\u5730\u5740\u3002</li> </ul>"},{"location":"study/%E8%8A%AF%E7%89%87%E7%B3%BB%E5%88%97/ICM20948/#15-i2c","title":"1.5 I2C\u63a5\u53e3\u9a71\u52a8","text":""},{"location":"study/%E8%8A%AF%E7%89%87%E7%B3%BB%E5%88%97/ICM20948/#151-i2c","title":"1.5.1 \u8f6f\u4ef6\u6a21\u62dfI2C\u901a\u4fe1","text":"<p>\u6e90\u7801\u548c\u8f6f\u4ef6\u6a21\u62df\u539f\u7406\u5728\u6211\u7684\u4e2a\u4eba\u7f51\u7ad9\uff1a\u8f6f\u4ef6\u6a21\u62dfI2C</p> <p>\u6a21\u62df\u7684GPIO\u53e3\u81ea\u5b9a\u4e49\uff0c\u4e0d\u8fc7\u591a\u8d58\u8ff0\u3002</p>"},{"location":"study/%E8%8A%AF%E7%89%87%E7%B3%BB%E5%88%97/ICM20948/#152-i2c","title":"1.5.2 \u6d4b\u8bd5\u6a21\u62dfI2C","text":"<p>\u6838\u5fc3\u6d4b\u8bd5\u7a0b\u5e8f\uff0c\u653e\u5728\u521d\u59cb\u5316\u4e4b\u540e\u5c31\u884c\uff0c\u539f\u7406\u5c31\u662fICM20948 \u82af\u7247\u662f\u5426\u6709\u5e94\u7b54\uff1a</p> <ul> <li>\u8f93\u5165\u6b63\u786e\u7684\u5730\u5740\u5e94\u8be5\u6709\u5e94\u7b54\u8fd4\u56de ack=0 </li> <li>\u8f93\u5165\u9519\u8bef\u7684\u5730\u5740\u5e94\u8be5\u65e0\u5e94\u7b54\u8fd4\u56de ack=1 (\u4e00\u5b9a\u8981\u6d4b\u8bd5\u65e0\u5e94\u7b54\u8fd9\u90e8\u5206)</li> </ul> C<pre><code>uint8_t ack;\nI2C_Start();\nI2C_WriteByte(0xD0);\nack = I2C_ReceiveAck();\nI2C_Stop();\nOLED_ShowNum(0, 0, ack, 1, 16);\n</code></pre>"},{"location":"study/%E8%8A%AF%E7%89%87%E7%B3%BB%E5%88%97/ICM20948/#153","title":"1.5.3 \u5b8c\u6574\u9a71\u52a8","text":"<p>\u5176\u5b9e\u662f\u8be5\u90e8\u5206\u5e76\u4e0d\u5b8c\u6574\uff0c\u60f3\u8981\u6a21\u62dfI2C\u53ef\u4ee5\u770bSPI\u90e8\u5206\uff0c\u5b8c\u5584\u7f3a\u5931\u7684\u90e8\u5206\u3002</p> <p><code>icm20948.c</code></p> C<pre><code>#include \"icm20948.h\"\n#include \"oled.h\"\n\n\n#define I2C\n\n#ifdef I2C\n\nstatic void ICM20948_WriteByte(uint8_t SlaveAddress, uint8_t RegisterAddress, uint8_t RegisterData) {\n    I2C_Start();\n    I2C_WriteByte(SlaveAddress|0x00);\n    I2C_ReceiveAck();\n    I2C_WriteByte(RegisterAddress);\n    I2C_ReceiveAck();\n    I2C_WriteByte(RegisterData);\n    I2C_ReceiveAck();\n    I2C_Stop();\n}\n\n\nstatic uint8_t ICM20948_ReadByte(uint8_t SlaveAddress, uint8_t RegisterAddress) {\n    uint8_t RegisterData;\n    I2C_Start();\n    I2C_WriteByte(SlaveAddress|0x00);\n    I2C_ReceiveAck();\n    I2C_WriteByte(RegisterAddress);\n    I2C_ReceiveAck();\n\n    I2C_Start();\n    I2C_WriteByte(SlaveAddress|0x01);\n    I2C_ReceiveAck();\n    RegisterData = I2C_ReadByte();\n    I2C_WriteAcK(1);\n    I2C_Stop();\n    return RegisterData;\n}\n\n#endif\n\n\n/* \u5207\u6362\u5bc4\u5b58\u5668BANK */\nstatic void ICM20948_SelectBank(uint8_t BankX) {\n    switch (BankX) {\n        case 0:\n            /* 0000 0000 */\n            ICM20948_WriteByte(ICM20948_ADDRESS, ICM20948_REG_BANK_SEL, 0x00);\n            break;\n        case 1:\n            /* 0001 0000 */\n            ICM20948_WriteByte(ICM20948_ADDRESS, ICM20948_REG_BANK_SEL, 0x10);\n            break;\n        case 2:\n            /* 0010 0000 */\n            ICM20948_WriteByte(ICM20948_ADDRESS, ICM20948_REG_BANK_SEL, 0x20);\n            break;\n        case 3:\n            /* 0011 0000 */\n            ICM20948_WriteByte(ICM20948_ADDRESS, ICM20948_REG_BANK_SEL, 0x30);\n            break;\n        default:\n            ICM20948_WriteByte(ICM20948_ADDRESS, ICM20948_REG_BANK_SEL, 0x00);\n    }\n}\n\n/* ICM20948\u521d\u59cb\u5316 */\nvoid ICM20948_Init(void) {\n    /* BANK 0 */\n    /* \u9009\u62e9bank0 */\n    ICM20948_SelectBank(0);\n    /* \u590d\u4f4d\u5bc4\u5b58\u5668,\u53d6\u6d88\u7761\u7720\u6a21\u5f0f */\n    ICM20948_WriteByte(ICM20948_ADDRESS, ICM20948_PWR_MGMT_1, 0x80);\n    vTaskDelay(100);\n    /* \u81ea\u52a8\u9009\u62e9\u5408\u9002\u7684\u65f6\u949f\u6e90 */\n    ICM20948_WriteByte(ICM20948_ADDRESS, ICM20948_PWR_MGMT_1, 0x01);\n    /* \u5f00\u542f\u9640\u87ba\u4eea\u548c\u52a0\u901f\u5ea6\u8ba1\u7684\u6240\u6709\u8f74 */\n    ICM20948_WriteByte(ICM20948_ADDRESS, ICM20948_PWR_MGMT_2, 0x00);\n    /* BANK 1 NONE */\n    /* BANK 2 */\n    /* \u9009\u62e9bank2 */\n    ICM20948_SelectBank(2);\n    /* \u914d\u7f6e\u9640\u87ba\u4eea\u91c7\u6837\u9891\u7387 1.1kHZ/(0x04+1) = 220HZ */\n    ICM20948_WriteByte(ICM20948_ADDRESS, ICM20948_GYRO_SMPLRT_DIV, 0x04);\n    /* \u9640\u87ba\u4eeaConfig,\u4f7f\u7528DLPF(\u4f4e\u901a\u6ee4\u6ce2),DLPFCFG=3,\u8bbe\u7f6e\u91cf\u7a0b\u4e3a \u00b12000dps */\n    ICM20948_WriteByte(ICM20948_ADDRESS, ICM20948_GYRO_CONFIG_1, 0x1F);\n    ICM20948_WriteByte(ICM20948_ADDRESS, ICM20948_GYRO_CONFIG_2, 0x00);\n    /* \u914d\u7f6e\u52a0\u901f\u5ea6\u8ba1\u91c7\u6837\u9891\u7387 1.125kHZ/(0x000A+1) = 102HZ */\n    ICM20948_WriteByte(ICM20948_ADDRESS, ICM20948_ACCEL_SMPLRT_DIV_1, 0x00);\n    ICM20948_WriteByte(ICM20948_ADDRESS, ICM20948_ACCEL_SMPLRT_DIV_2, 0x0A);\n    /* \u52a0\u901f\u5ea6\u8ba1Config,\u4f7f\u7528DLPF(\u4f4e\u901a\u6ee4\u6ce2),DLPFCFG=3,\u8bbe\u7f6e\u91cf\u7a0b\u4e3a \u00b18g */\n    ICM20948_WriteByte(ICM20948_ADDRESS, ICM20948_ACCEL_CONFIG, 0x1D);\n    ICM20948_WriteByte(ICM20948_ADDRESS, ICM20948_ACCEL_CONFIG_2, 0x00);\n    /* BANK 3 NONE */\n}\n\n\n/* IMU\u5355\u5143\u5e94\u7b54\u6d4b\u8bd5 */\nvoid ICM20948_AckTest(void) {\n    uint8_t ack;\n    I2C_Start();\n    I2C_WriteByte(0xD0);\n    ack = I2C_ReceiveAck();\n    I2C_Stop();\n    OLED_ShowNum(0, 0, ack, 1, 16);\n}\n\nuint8_t ICM20948_ReadDeviceID(void) {\n    ICM20948_SelectBank(0);\n    return ICM20948_ReadByte(ICM20948_ADDRESS, ICM20948_WHO_AM_I);\n}\n\nvoid ICM20948_Address_Change(void) {\n    HAL_GPIO_WritePin(IMU_AD0_GPIO_Port, IMU_AD0_Pin, GPIO_PIN_SET);\n}\n\n/* \u8bfb\u53d6\u52a0\u901f\u5ea6\u8ba1\u3001\u9640\u87ba\u4eea\u6570\u636e */\nvoid ICM20948_ReadData(ImuData* data) {\n    /* \u52a0\u901f\u5ea6\u771f\u5b9e\u503c: \u5bc4\u5b58\u5668\u503c/4095 ; 4095 = 65535/16 = 16\u4f4dADC/\u91cf\u7a0b\n     * \u89d2\u901f\u5ea6\u771f\u5b9e\u503c: \u5bc4\u5b58\u5668\u503c/16.4 ; 16.4 = 65535/4000 = 16\u4f4dADC/\u91cf\u7a0b\n     * */\n    ICM20948_SelectBank(0);\n    uint8_t accX_H = ICM20948_ReadByte(ICM20948_ADDRESS, ICM20948_ACCEL_XOUT_H);\n    uint8_t accX_L = ICM20948_ReadByte(ICM20948_ADDRESS, ICM20948_ACCEL_XOUT_L);\n    data-&gt;AccX = ((accX_H &lt;&lt; 8) | accX_L);\n\n    uint8_t accY_H = ICM20948_ReadByte(ICM20948_ADDRESS, ICM20948_ACCEL_YOUT_H);\n    uint8_t accY_L = ICM20948_ReadByte(ICM20948_ADDRESS, ICM20948_ACCEL_YOUT_L);\n    data-&gt;AccY = ((accY_H &lt;&lt; 8) | accY_L);\n\n    uint8_t accZ_H = ICM20948_ReadByte(ICM20948_ADDRESS, ICM20948_ACCEL_ZOUT_H);\n    uint8_t accZ_L = ICM20948_ReadByte(ICM20948_ADDRESS, ICM20948_ACCEL_ZOUT_L);\n    data-&gt;AccZ = ((accZ_H &lt;&lt; 8) | accZ_L);\n\n    uint8_t GyroX_H = ICM20948_ReadByte(ICM20948_ADDRESS, ICM20948_GYRO_XOUT_H);\n    uint8_t GyroX_L = ICM20948_ReadByte(ICM20948_ADDRESS, ICM20948_GYRO_XOUT_L);\n    data-&gt;GyroX = ((GyroX_H &lt;&lt; 8) | GyroX_L);\n\n    uint8_t GyroY_H = ICM20948_ReadByte(ICM20948_ADDRESS, ICM20948_GYRO_YOUT_H);\n    uint8_t GyroY_L = ICM20948_ReadByte(ICM20948_ADDRESS, ICM20948_GYRO_YOUT_L);\n    data-&gt;GyroY = ((GyroY_H &lt;&lt; 8) | GyroY_L);\n\n    uint8_t GyroZ_H = ICM20948_ReadByte(ICM20948_ADDRESS, ICM20948_GYRO_ZOUT_H);\n    uint8_t GyroZ_L = ICM20948_ReadByte(ICM20948_ADDRESS, ICM20948_GYRO_ZOUT_L);\n    data-&gt;GyroZ = ((GyroZ_H &lt;&lt; 8) | GyroZ_L);\n}\n</code></pre> <p><code>icm20948.h</code></p> C<pre><code>#ifndef __ICM20948_H\n#define __ICM20948_H\n\n#include \"sw_iic.h\"\n#include \"icm10948_reg.h\"\n\ntypedef struct {\n    int16_t AccX;\n    int16_t AccY;\n    int16_t AccZ;\n    int16_t GyroX;\n    int16_t GyroY;\n    int16_t GyroZ;\n} ImuData;\n\n\nvoid ICM20948_Init(void);\nvoid AK09916_Init(void);\nuint8_t ICM20948_ReadDeviceID(void);\nuint8_t AK09916_ReadDeviceID(void);\nvoid ICM20948_Address_Change(void);\nvoid ICM20948_ReadData(ImuData* data);\nvoid ICM20948_AckTest(void);\n\n#endif\n</code></pre>"},{"location":"study/%E8%8A%AF%E7%89%87%E7%B3%BB%E5%88%97/ICM20948/#16-spi","title":"1.6 SPI\u63a5\u53e3\u9a71\u52a8","text":"<p>\u5b8c\u6574\u7248</p> C<pre><code>#include \"icm20948.h\"\n\n\n#ifdef I2C\n\nstatic void ICM20948_WriteByte(uint8_t RegisterAddress, uint8_t RegisterData) {\n    I2C_Start();\n    I2C_WriteByte(ICM20948_ADDRESS|0x00);\n    I2C_ReceiveAck();\n    I2C_WriteByte(RegisterAddress);\n    I2C_ReceiveAck();\n    I2C_WriteByte(RegisterData);\n    I2C_ReceiveAck();\n    I2C_Stop();\n}\n\nstatic uint8_t ICM20948_ReadByte(uint8_t RegisterAddress) {\n    uint8_t RegisterData;\n    I2C_Start();\n    I2C_WriteByte(ICM20948_ADDRESS|0x00);\n    I2C_ReceiveAck();\n    I2C_WriteByte(RegisterAddress);\n    I2C_ReceiveAck();\n\n    I2C_Start();\n    I2C_WriteByte(ICM20948_ADDRESS|0x01);\n    I2C_ReceiveAck();\n    RegisterData = I2C_ReadByte();\n    I2C_WriteAcK(1);\n    I2C_Stop();\n    return RegisterData;\n}\n\n/* \u5207\u6362\u5bc4\u5b58\u5668BANK */\nstatic void ICM20948_SelectBank(uint8_t BankX) {\n    switch (BankX) {\n        case 0:\n            /* 0000 0000 */\n            ICM20948_WriteByte( ICM20948_REG_BANK_SEL, 0x00);\n            break;\n        case 1:\n            /* 0001 0000 */\n            ICM20948_WriteByte(ICM20948_REG_BANK_SEL, 0x10);\n            break;\n        case 2:\n            /* 0010 0000 */\n            ICM20948_WriteByte(ICM20948_REG_BANK_SEL, 0x20);\n            break;\n        case 3:\n            /* 0011 0000 */\n            ICM20948_WriteByte(ICM20948_REG_BANK_SEL, 0x30);\n            break;\n        default:\n            ICM20948_WriteByte(ICM20948_REG_BANK_SEL, 0x00);\n    }\n}\n\n/* ICM20948\u521d\u59cb\u5316 */\nvoid ICM20948_Init(void) {\n    /* BANK 0 */\n    /* \u9009\u62e9bank0 */\n    ICM20948_SelectBank(0);\n    /* \u590d\u4f4d\u5bc4\u5b58\u5668,\u53d6\u6d88\u7761\u7720\u6a21\u5f0f */\n    ICM20948_WriteByte(ICM20948_PWR_MGMT_1, 0x80);\n    vTaskDelay(100);\n    /* \u81ea\u52a8\u9009\u62e9\u5408\u9002\u7684\u65f6\u949f\u6e90 */\n    ICM20948_WriteByte(ICM20948_PWR_MGMT_1, 0x01);\n    /* \u5f00\u542f\u9640\u87ba\u4eea\u548c\u52a0\u901f\u5ea6\u8ba1\u7684\u6240\u6709\u8f74 */\n    ICM20948_WriteByte(ICM20948_PWR_MGMT_2, 0x00);\n    /* BANK 1 NONE */\n    /* BANK 2 */\n    /* \u9009\u62e9bank2 */\n    ICM20948_SelectBank(2);\n    /* \u914d\u7f6e\u9640\u87ba\u4eea\u91c7\u6837\u9891\u7387 1.1kHZ/(0x04+1) = 220HZ */\n    ICM20948_WriteByte(ICM20948_GYRO_SMPLRT_DIV, 0x04);\n    /* \u9640\u87ba\u4eeaConfig,\u4f7f\u7528DLPF(\u4f4e\u901a\u6ee4\u6ce2),DLPFCFG=3,\u8bbe\u7f6e\u91cf\u7a0b\u4e3a \u00b12000dps */\n    ICM20948_WriteByte(ICM20948_GYRO_CONFIG_1, 0x1F);\n    ICM20948_WriteByte(ICM20948_GYRO_CONFIG_2, 0x00);\n    /* \u914d\u7f6e\u52a0\u901f\u5ea6\u8ba1\u91c7\u6837\u9891\u7387 1.125kHZ/(0x000A+1) = 102HZ */\n    ICM20948_WriteByte(ICM20948_ACCEL_SMPLRT_DIV_1, 0x00);\n    ICM20948_WriteByte(ICM20948_ACCEL_SMPLRT_DIV_2, 0x0A);\n    /* \u52a0\u901f\u5ea6\u8ba1Config,\u4f7f\u7528DLPF(\u4f4e\u901a\u6ee4\u6ce2),DLPFCFG=3,\u8bbe\u7f6e\u91cf\u7a0b\u4e3a \u00b18g */\n    ICM20948_WriteByte(ICM20948_ACCEL_CONFIG, 0x1D);\n    ICM20948_WriteByte(ICM20948_ACCEL_CONFIG_2, 0x00);\n    /* BANK 3 NONE */\n}\n\n/* IMU\u5355\u5143\u5e94\u7b54\u6d4b\u8bd5 */\nvoid ICM20948_AckTest(void) {\n    uint8_t ack;\n    I2C_Start();\n    I2C_WriteByte(0xD0);\n    ack = I2C_ReceiveAck();\n    I2C_Stop();\n    OLED_ShowNum(0, 0, ack, 1, 16);\n}\n\nuint8_t ICM20948_ReadDeviceID(void) {\n    ICM20948_SelectBank(0);\n    return ICM20948_ReadByte(ICM20948_WHO_AM_I);\n}\n\nvoid ICM20948_Address_Change(void) {\n    HAL_GPIO_WritePin(IMU_AD0_GPIO_Port, IMU_AD0_Pin, GPIO_PIN_SET);\n}\n\n/* \u8bfb\u53d6\u52a0\u901f\u5ea6\u8ba1\u3001\u9640\u87ba\u4eea\u6570\u636e */\nvoid ICM20948_ReadData(ImuAccel* accData, ImuGyro* gyroData) {\n    /* \u52a0\u901f\u5ea6\u771f\u5b9e\u503c: \u5bc4\u5b58\u5668\u503c/4095 ; 4095 = 65535/16 = 16\u4f4dADC/\u91cf\u7a0b\n     * \u89d2\u901f\u5ea6\u771f\u5b9e\u503c: \u5bc4\u5b58\u5668\u503c/16.4 ; 16.4 = 65535/4000 = 16\u4f4dADC/\u91cf\u7a0b\n     * */\n    ICM20948_SelectBank(0);\n    uint8_t accX_H = ICM20948_ReadByte(ICM20948_ACCEL_XOUT_H);\n    uint8_t accX_L = ICM20948_ReadByte(ICM20948_ACCEL_XOUT_L);\n    accData-&gt;AccX = (int16_t)((accX_H &lt;&lt; 8) | accX_L);\n\n    uint8_t accY_H = ICM20948_ReadByte(ICM20948_ACCEL_YOUT_H);\n    uint8_t accY_L = ICM20948_ReadByte(ICM20948_ACCEL_YOUT_L);\n    accData-&gt;AccY = (int16_t)((accY_H &lt;&lt; 8) | accY_L);\n\n    uint8_t accZ_H = ICM20948_ReadByte(ICM20948_ACCEL_ZOUT_H);\n    uint8_t accZ_L = ICM20948_ReadByte(ICM20948_ACCEL_ZOUT_L);\n    accData-&gt;AccZ = (int16_t)((accZ_H &lt;&lt; 8) | accZ_L);\n\n    uint8_t GyroX_H = ICM20948_ReadByte(ICM20948_GYRO_XOUT_H);\n    uint8_t GyroX_L = ICM20948_ReadByte(ICM20948_GYRO_XOUT_L);\n    gyroData-&gt;GyroX = (int16_t)((GyroX_H &lt;&lt; 8) | GyroX_L);\n\n    uint8_t GyroY_H = ICM20948_ReadByte(ICM20948_GYRO_YOUT_H);\n    uint8_t GyroY_L = ICM20948_ReadByte(ICM20948_GYRO_YOUT_L);\n    gyroData-&gt;GyroY = (int16_t)((GyroY_H &lt;&lt; 8) | GyroY_L);\n\n    uint8_t GyroZ_H = ICM20948_ReadByte(ICM20948_GYRO_ZOUT_H);\n    uint8_t GyroZ_L = ICM20948_ReadByte(ICM20948_GYRO_ZOUT_L);\n    gyroData-&gt;GyroZ = (int16_t)((GyroZ_H &lt;&lt; 8) | GyroZ_L);\n}\n\n#endif\n\n#ifdef SPI\n\nstatic void ICM20948_Enable(void) {\n    HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_RESET);\n}\n\nstatic void ICM20948_Disable(void) {\n    HAL_GPIO_WritePin(SPI2_NSS_GPIO_Port, SPI2_NSS_Pin, GPIO_PIN_SET);\n}\n\nstatic void ICM20948_SelectBank(UserBank_t bank) {\n    /* \u7f13\u5b58\u4e24\u4e2a\u5b57\u8282 */\n    uint8_t write_reg[2];\n    write_reg[0] = WRITE | ICM20948_REG_BANK_SEL;\n    write_reg[1] = bank;\n    /* \u53d1\u9001\u4e24\u4e2a\u5b57\u8282 */\n    ICM20948_Enable();\n    HAL_SPI_Transmit(&amp;hspi2, write_reg, 2, 10);\n    ICM20948_Disable();\n}\n\nstatic void ICM20948_WriteByte(UserBank_t bank, uint8_t RegisterAddress, uint8_t RegisterData) {\n    /* \u7f13\u5b58\u4e24\u4e2a\u5b57\u8282 */\n    uint8_t write_reg[2];\n    write_reg[0] = (WRITE | RegisterAddress);\n    write_reg[1] = RegisterData;\n    /* \u9009\u62e9Bank */\n    ICM20948_SelectBank(bank);\n    /* \u53d1\u9001\u4e24\u4e2a\u5b57\u8282 */\n    ICM20948_Enable();\n    HAL_SPI_Transmit(&amp;hspi2, write_reg, 2, 1000);\n    ICM20948_Disable();\n}\n\nstatic uint8_t ICM20948_ReadByte(UserBank_t bank, uint8_t RegisterAddress) {\n    uint8_t data;\n    uint8_t read_reg = READ | RegisterAddress;\n    /* \u9009\u62e9Bank */\n    ICM20948_SelectBank(bank);\n    /* \u63a5\u6536\u5bc4\u5b58\u5668\u6570\u636e */\n    ICM20948_Enable();\n    // \u53d1\u9001\u8bfb\u6307\u4ee4\u548c\u5bc4\u5b58\u5668\u5730\u5740\n    HAL_SPI_Transmit(&amp;hspi2, &amp;read_reg, 1, 1000);\n    // \u63a5\u6536\u6570\u636e\u6570\u636e\n    HAL_SPI_Receive(&amp;hspi2, &amp;data, 1, 1000);\n    ICM20948_Disable();\n    return data;\n}\n\n/* \u5199\u591a\u4e2a\u5730\u5740\u7684\u6570\u636e\uff0c\u6bcf\u5199\u4e00\u6b21\u5730\u5740\u81ea\u52a8\u52a0\u4e00 */\nstatic void ICM20948_WriteMultiple(UserBank_t bank, uint8_t RegisterAddress, uint8_t* RegisterData, uint8_t len)\n{\n    uint8_t write_reg = WRITE | RegisterAddress;\n    ICM20948_SelectBank(bank);\n\n    ICM20948_Enable();\n    HAL_SPI_Transmit(&amp;hspi2, &amp;write_reg, 1, 1000);\n    HAL_SPI_Transmit(&amp;hspi2, RegisterData, len, 1000);\n    ICM20948_Disable();\n}\n\n/* \u8bfb\u591a\u4e2a\u5730\u5740\u7684\u6570\u636e */\nstatic uint8_t* ICM20948_ReadMultiple(UserBank_t bank, uint8_t RegisterAddress, uint8_t len) {\n    uint8_t read_reg = READ | RegisterAddress;\n    static uint8_t reg_val[6];\n    ICM20948_SelectBank(bank);\n    ICM20948_Enable();\n    HAL_SPI_Transmit(&amp;hspi2, &amp;read_reg, 1, 1000);\n    HAL_SPI_Transmit(&amp;hspi2, reg_val, len, 1000);\n    ICM20948_Disable();\n    return reg_val;\n}\n\n/* \u89d2\u901f\u5ea6\u6821\u51c6 */\nstatic void ICM20948_GyroCalibration(void) {\n    ImuGyro temp;\n    int32_t gyro_bias[3] = {0};\n    uint8_t gyro_offset[6] = {0};\n\n    for(int i = 0; i &lt; 100; i++)\n    {\n        ICM20948_ReadGyro(&amp;temp);\n        gyro_bias[0] += temp.GyroX;\n        gyro_bias[1] += temp.GyroY;\n        gyro_bias[2] += temp.GyroZ;\n    }\n\n    gyro_bias[0] /= 100;\n    gyro_bias[1] /= 100;\n    gyro_bias[2] /= 100;\n\n    gyro_offset[0] = (-gyro_bias[0] / 4  &gt;&gt; 8) &amp; 0xFF;\n    gyro_offset[1] = (-gyro_bias[0] / 4)       &amp; 0xFF;\n    gyro_offset[2] = (-gyro_bias[1] / 4  &gt;&gt; 8) &amp; 0xFF;\n    gyro_offset[3] = (-gyro_bias[1] / 4)       &amp; 0xFF;\n    gyro_offset[4] = (-gyro_bias[2] / 4  &gt;&gt; 8) &amp; 0xFF;\n    gyro_offset[5] = (-gyro_bias[2] / 4)       &amp; 0xFF;\n\n    ICM20948_WriteMultiple(Bank_2, ICM20948_XG_OFFS_USRH, gyro_offset, 6);\n}\n\n/* \u52a0\u901f\u5ea6\u6821\u51c6 */\nstatic void ICM20948_AccelCalibration(void) {\n    ImuAccel temp;\n    uint8_t* temp2;\n    uint8_t* temp3;\n    uint8_t* temp4;\n    int32_t accel_bias[3] = {0};\n    int32_t accel_bias_reg[3] = {0};\n    uint8_t accel_offset[6] = {0};\n\n    for(int i = 0; i &lt; 100; i++) {\n        ICM20948_ReadAccel(&amp;temp);\n        accel_bias[0] += temp.AccX;\n        accel_bias[1] += temp.AccY;\n        accel_bias[2] += temp.AccZ;\n    }\n\n    accel_bias[0] /= 100;\n    accel_bias[1] /= 100;\n    accel_bias[2] /= 100;\n\n    uint8_t mask_bit[3] = {0, 0, 0};\n    temp2 = ICM20948_ReadMultiple(Bank_1, ICM20948_XA_OFFS_H, 2);\n    accel_bias_reg[0] = (int32_t)(temp2[0] &lt;&lt; 8 | temp2[1]);\n    mask_bit[0] = temp2[1] &amp; 0x01;\n\n    temp3 = ICM20948_ReadMultiple(Bank_1, ICM20948_YA_OFFS_H, 2);\n    accel_bias_reg[1] = (int32_t)(temp3[0] &lt;&lt; 8 | temp3[1]);\n    mask_bit[1] = temp3[1] &amp; 0x01;\n\n    temp4 = ICM20948_ReadMultiple(Bank_1, ICM20948_ZA_OFFS_H, 2);\n    accel_bias_reg[2] = (int32_t)(temp4[0] &lt;&lt; 8 | temp4[1]);\n    mask_bit[2] = temp4[1] &amp; 0x01;\n\n    accel_bias_reg[0] -= (accel_bias[0] / 8);\n    accel_bias_reg[1] -= (accel_bias[1] / 8);\n    accel_bias_reg[2] -= (accel_bias[2] / 8);\n\n    accel_offset[0] = (accel_bias_reg[0] &gt;&gt; 8) &amp; 0xFF;\n    accel_offset[1] = (accel_bias_reg[0])      &amp; 0xFE;\n    accel_offset[1] = accel_offset[1] | mask_bit[0];\n\n    accel_offset[2] = (accel_bias_reg[1] &gt;&gt; 8) &amp; 0xFF;\n    accel_offset[3] = (accel_bias_reg[1])      &amp; 0xFE;\n    accel_offset[3] = accel_offset[3] | mask_bit[1];\n\n    accel_offset[4] = (accel_bias_reg[2] &gt;&gt; 8) &amp; 0xFF;\n    accel_offset[5] = (accel_bias_reg[2])      &amp; 0xFE;\n    accel_offset[5] = accel_offset[5] | mask_bit[2];\n\n    ICM20948_WriteMultiple(Bank_1, ICM20948_XA_OFFS_H, &amp;accel_offset[0], 2);\n    ICM20948_WriteMultiple(Bank_1, ICM20948_YA_OFFS_H, &amp;accel_offset[0], 2);\n    ICM20948_WriteMultiple(Bank_1, ICM20948_ZA_OFFS_H, &amp;accel_offset[0], 2);\n\n}\n\n/* ICM20948\u521d\u59cb\u5316 */\nvoid ICM20948_Init(void) {\n    /* BANK 0 */\n    /* \u590d\u4f4d\u5bc4\u5b58\u5668,\u53d6\u6d88\u7761\u7720\u6a21\u5f0f */\n    ICM20948_WriteByte(Bank_0, ICM20948_PWR_MGMT_1, 0x80);\n    vTaskDelay(100);\n    /* \u81ea\u52a8\u9009\u62e9\u5408\u9002\u7684\u65f6\u949f\u6e90 */\n    ICM20948_WriteByte(Bank_0, ICM20948_PWR_MGMT_1, 0x01);\n    /* \u5f00\u542f\u9640\u87ba\u4eea\u548c\u52a0\u901f\u5ea6\u8ba1\u7684\u6240\u6709\u8f74 */\n    ICM20948_WriteByte(Bank_0, ICM20948_PWR_MGMT_2, 0x00);\n    /* BANK 1 NONE */\n    /* BANK 2 */\n    /* \u914d\u7f6e\u9640\u87ba\u4eea\u91c7\u6837\u9891\u7387 1.1kHZ/(0x04+1) = 220HZ */\n    ICM20948_WriteByte(Bank_2, ICM20948_GYRO_SMPLRT_DIV, 0x04);\n    /* \u914d\u7f6e\u52a0\u901f\u5ea6\u8ba1\u91c7\u6837\u9891\u7387 1.125kHZ/(0x000A+1) = 102HZ */\n    ICM20948_WriteByte(Bank_2, ICM20948_ACCEL_SMPLRT_DIV_1, 0x00);\n    ICM20948_WriteByte(Bank_2, ICM20948_ACCEL_SMPLRT_DIV_2, 0x0A);\n    /* \u89d2\u901f\u5ea6\u8ba1\u9700\u8981\u6821\u51c6 */\n    ICM20948_GyroCalibration();\n//    ICM20948_AccelCalibration();\n    /* \u9640\u87ba\u4eeaConfig,\u4f7f\u7528DLPF(\u4f4e\u901a\u6ee4\u6ce2),DLPFCFG=3,\u8bbe\u7f6e\u91cf\u7a0b\u4e3a \u00b12000dps */\n    ICM20948_WriteByte(Bank_2, ICM20948_GYRO_CONFIG_1, 0x1F);\n    ICM20948_WriteByte(Bank_2, ICM20948_GYRO_CONFIG_2, 0x00);\n    /* \u52a0\u901f\u5ea6\u8ba1Config,\u4f7f\u7528DLPF(\u4f4e\u901a\u6ee4\u6ce2),DLPFCFG=3,\u8bbe\u7f6e\u91cf\u7a0b\u4e3a \u00b18g */\n    ICM20948_WriteByte(Bank_2, ICM20948_ACCEL_CONFIG, 0x1D);\n    ICM20948_WriteByte(Bank_2, ICM20948_ACCEL_CONFIG_2, 0x00);\n    /* BANK 3 NONE */\n\n}\n\nuint8_t ICM20948_ReadDeviceID(void) {\n    return ICM20948_ReadByte(Bank_0, ICM20948_WHO_AM_I);\n}\n\n/* \u8bfb\u53d6\u89d2\u901f\u5ea6\u6570\u636e */\nvoid ICM20948_ReadGyro(ImuGyro* gyroData) {\n    uint8_t GyroX_H = ICM20948_ReadByte(Bank_0, ICM20948_GYRO_XOUT_H);\n    uint8_t GyroX_L = ICM20948_ReadByte(Bank_0, ICM20948_GYRO_XOUT_L);\n    gyroData-&gt;GyroX = (int16_t)((GyroX_H &lt;&lt; 8) | GyroX_L);\n\n    uint8_t GyroY_H = ICM20948_ReadByte(Bank_0, ICM20948_GYRO_YOUT_H);\n    uint8_t GyroY_L = ICM20948_ReadByte(Bank_0, ICM20948_GYRO_YOUT_L);\n    gyroData-&gt;GyroY = (int16_t)((GyroY_H &lt;&lt; 8) | GyroY_L);\n\n    uint8_t GyroZ_H = ICM20948_ReadByte(Bank_0, ICM20948_GYRO_ZOUT_H);\n    uint8_t GyroZ_L = ICM20948_ReadByte(Bank_0, ICM20948_GYRO_ZOUT_L);\n    gyroData-&gt;GyroZ = (int16_t)((GyroZ_H &lt;&lt; 8) | GyroZ_L);\n}\n\n/* \u8bfb\u53d6\u52a0\u901f\u5ea6\u6570\u636e */\nvoid ICM20948_ReadAccel(ImuAccel* accData) {\n    uint8_t accX_H = ICM20948_ReadByte(Bank_0, ICM20948_ACCEL_XOUT_H);\n    uint8_t accX_L = ICM20948_ReadByte(Bank_0, ICM20948_ACCEL_XOUT_L);\n    accData-&gt;AccX = (int16_t)((accX_H &lt;&lt; 8) | accX_L);\n\n    uint8_t accY_H = ICM20948_ReadByte(Bank_0, ICM20948_ACCEL_YOUT_H);\n    uint8_t accY_L = ICM20948_ReadByte(Bank_0, ICM20948_ACCEL_YOUT_L);\n    accData-&gt;AccY = (int16_t)((accY_H &lt;&lt; 8) | accY_L);\n\n    uint8_t accZ_H = ICM20948_ReadByte(Bank_0, ICM20948_ACCEL_ZOUT_H);\n    uint8_t accZ_L = ICM20948_ReadByte(Bank_0, ICM20948_ACCEL_ZOUT_L);\n    accData-&gt;AccZ = (int16_t)((accZ_H &lt;&lt; 8) | accZ_L);\n}\n\n/* \u83b7\u53d6\u9640\u87ba\u4eea\u3001\u52a0\u901f\u5ea6\u8ba1\u7684\u771f\u5b9e\u503c */\nvoid ICM20948_RealData(ImuReal* accReal, ImuReal* gyroReal) {\n    /* \u52a0\u901f\u5ea6\u771f\u5b9e\u503c: \u5bc4\u5b58\u5668\u503c/4096 ; 4096 = 65535/16 = 16\u4f4dADC/\u91cf\u7a0b\n     * \u89d2\u901f\u5ea6\u771f\u5b9e\u503c: \u5bc4\u5b58\u5668\u503c/16.4 ; 16.4 = 65535/4000 = 16\u4f4dADC/\u91cf\u7a0b\n     * */\n    ImuAccel accData;\n    ImuGyro gyroData;\n    /* \u83b7\u53d6\u6a21\u62df\u503c */\n    ICM20948_ReadAccel(&amp;accData);\n    ICM20948_ReadGyro(&amp;gyroData);\n    vTaskDelay(10);\n    /* \u6362\u7b97\u771f\u5b9e\u503c */\n    accReal-&gt;X = (float)(accData.AccX / 4096.0);\n    accReal-&gt;Y = (float)(accData.AccY / 4096.0);\n    accReal-&gt;Z = (float)(accData.AccZ / 4096.0);\n    gyroReal-&gt;X = (float)(gyroData.GyroX / 16.4);\n    gyroReal-&gt;Y = (float)(gyroData.GyroY / 16.4);\n    gyroReal-&gt;Z = (float)(gyroData.GyroZ / 16.4);\n}\n\nstatic void AK09916_WriteByte(uint8_t RegisterAddress, uint8_t RegisterData) {\n    ICM20948_WriteByte(Bank_3, ICM20948_I2C_SLV0_ADDR, WRITE | AK09916_ADDRESS);\n    ICM20948_WriteByte(Bank_3, ICM20948_I2C_SLV0_REG, RegisterAddress);\n    ICM20948_WriteByte(Bank_3, ICM20948_I2C_SLV0_DO, RegisterData);\n    ICM20948_WriteByte(Bank_3, ICM20948_I2C_SLV0_CTRL, 0x81);\n}\n\nstatic uint8_t AK09916_ReadByte(uint8_t RegisterAddress) {\n    ICM20948_WriteByte(Bank_3, ICM20948_I2C_SLV0_ADDR, READ | AK09916_ADDRESS);\n    ICM20948_WriteByte(Bank_3, ICM20948_I2C_SLV0_REG, RegisterAddress);\n    ICM20948_WriteByte(Bank_3, ICM20948_I2C_SLV0_CTRL, 0x81);\n    vTaskDelay(1);\n    return ICM20948_ReadByte(Bank_0, ICM20948_EXT_SLV_SENS_DATA_00);\n}\n\n/* \u78c1\u529b\u8ba1\u521d\u59cb\u5316 */\nvoid AK09916_Init(void) {\n    /* \u590d\u4f4d\u5e76\u542f\u7528ICM20948\u7684I2C\u4e3b\u63a7\u529f\u80fd\n     * AK09916\u4f5c\u4e3a\u4ece\u8bbe\u5907\u6302\u8f7d\u5728ICM20948\u7684I2C\u603b\u7ebf\u4e0a\uff0c\u9700\u901a\u8fc7\u4e3b\u63a7\u6a21\u5f0f\u8fdb\u884c\u901a\u4fe1\u3002\n     */\n    uint8_t now_val = ICM20948_ReadByte(Bank_0, ICM20948_USER_CTRL);\n    now_val |= 0x22;\n    ICM20948_WriteByte(Bank_0, ICM20948_USER_CTRL, now_val);\n    vTaskDelay(100);\n    /* \u8bbe\u7f6eI2C\u4e3b\u63a7\u65f6\u949f\u9891\u7387\uff0c345.6kHZ */\n    now_val = ICM20948_ReadByte(Bank_3, ICM20948_I2C_MST_CTRL);\n    now_val |= 0x07;\n    ICM20948_WriteByte(Bank_3, ICM20948_I2C_MST_CTRL, now_val);\n    /* \u53d1\u9001\u8f6f\u590d\u4f4d\u547d\u4ee4 */\n    AK09916_WriteByte(AK09916_CNTL_3, 0x01);\n    vTaskDelay(100);\n    /* \u8bbe\u7f6e\u78c1\u529b\u8ba1\u4e3a\u8fde\u7eed\u6d4b\u91cf\u6a21\u5f0f\uff0c\u91c7\u6837\u7387100Hz */\n    AK09916_WriteByte(AK09916_CNTL_2, 0x08);\n}\n\nuint8_t AK09916_ReadDeviceID(void) {\n    return AK09916_ReadByte(AK09916_WIA);\n}\n\n/* \u8bfb\u53d6\u6570\u636e */\nvoid AK09916_ReadMag(ImuMag* magData) {\n    uint8_t magX_H = AK09916_ReadByte(AK09916_MGTR_XOUTH);\n    uint8_t magX_L = AK09916_ReadByte(AK09916_MGTR_XOUTL);\n    magData-&gt;MagX = (int16_t)((magX_H &lt;&lt; 8) | magX_L);\n\n    uint8_t magY_H = AK09916_ReadByte(AK09916_MGTR_YOUTH);\n    uint8_t magY_L = AK09916_ReadByte(AK09916_MGTR_YOUTL);\n    magData-&gt;MagY = (int16_t)((magY_H &lt;&lt; 8) | magY_L);\n\n    uint8_t magZ_H = AK09916_ReadByte(AK09916_MGTR_ZOUTH);\n    uint8_t magZ_L = AK09916_ReadByte(AK09916_MGTR_ZOUTL);\n    magData-&gt;MagZ = (int16_t)((magZ_H &lt;&lt; 8) | magZ_L);\n}\n\n/* \u83b7\u53d6\u78c1\u529b\u8ba1\u7684\u771f\u5b9e\u503c */\nvoid AK09916_RealData(ImuReal* magReal) {\n    /* \u78c1\u529b\u8ba1\u7075\u654f\u5ea6\u4e3a0.15 \u00b5T/LSB\uff0cADC\u6a21\u62df\u503c*0.15 */\n    ImuMag magData;\n    AK09916_ReadMag(&amp;magData);\n    magReal-&gt;X = (float)(magData.MagX * 0.15);\n    magReal-&gt;Y = (float)(magData.MagY * 0.15);\n    magReal-&gt;Z = (float)(magData.MagZ * 0.15);\n}\n\n#endif\n</code></pre> C<pre><code>#ifndef __ICM20948_H\n#define __ICM20948_H\n\n#include \"sw_iic.h\"\n#include \"spi.h\"\n#include \"icm20948_reg.h\"\n\n#define SPI\n\ntypedef struct {\n    int16_t AccX;\n    int16_t AccY;\n    int16_t AccZ;\n} ImuAccel;\n\ntypedef struct {\n    int16_t GyroX;\n    int16_t GyroY;\n    int16_t GyroZ;\n} ImuGyro;\n\ntypedef struct {\n    int16_t MagX;\n    int16_t MagY;\n    int16_t MagZ;\n} ImuMag;\n\ntypedef struct {\n    float X;\n    float Y;\n    float Z;\n} ImuReal;\n\ntypedef enum\n{\n    Bank_0 = 0 &lt;&lt; 4,\n    Bank_1 = 1 &lt;&lt; 4,\n    Bank_2 = 2 &lt;&lt; 4,\n    Bank_3 = 3 &lt;&lt; 4\n} UserBank_t;\n\n#ifdef I2C\n\nvoid ICM20948_Init(void);\nvoid ICM20948_AckTest(void);\nuint8_t ICM20948_ReadDeviceID(void);\nvoid ICM20948_Address_Change(void);\nvoid ICM20948_ReadData(ImuAccel* accData, ImuGyro* gyroData);\n\n#endif\n\n#ifdef SPI\n\nvoid ICM20948_Init(void);\nuint8_t ICM20948_ReadDeviceID(void);\nvoid ICM20948_ReadAccel(ImuAccel* accData);\nvoid ICM20948_ReadGyro(ImuGyro* gyroData);\nvoid ICM20948_RealData(ImuReal* accReal, ImuReal* gyroReal);\nvoid AK09916_Init(void);\nuint8_t AK09916_ReadDeviceID(void);\nvoid AK09916_ReadMag(ImuMag* magData);\nvoid AK09916_RealData(ImuReal* magReal);\n\n#endif\n\n#endif\n</code></pre>"},{"location":"study/%E8%8A%AF%E7%89%87%E7%B3%BB%E5%88%97/ICM20948/#17","title":"1.7 \u5bc4\u5b58\u5668\u8868","text":"C<pre><code>#ifndef __ICM10948_REG_H\n#define __ICM10948_REG_H\n\n/* \u8bfb\u5199\u4f4d */\n#define WRITE                        0x00\n#define READ                         0x80\n/* ICM20948\u7684\u4ece\u673a\u5730\u5740 */\n#define ICM20948_ADDRESS             0xD0     // 1101 000\n// AD0\u9ad8\u7535\u5e73\u65f6\u7684\u4ece\u673a\u5730\u5740\n#define ICM20948_ADDRESS_AD0         0xD2     // 1101 001\n/* ICM20948 USER BANK 0 Registers */\n#define ICM20948_WHO_AM_I            0x00\n#define ICM20948_USER_CTRL           0x03\n#define ICM20948_LP_CONFIG           0x05\n#define ICM20948_PWR_MGMT_1          0x06\n#define ICM20948_PWR_MGMT_2          0x07\n#define ICM20948_INT_PIN_CFG         0x0F\n#define ICM20948_INT_ENABLE          0x10\n#define ICM20948_INT_ENABLE_1        0x11\n#define ICM20948_INT_ENABLE_2        0x12\n#define ICM20948_INT_ENABLE_3        0x13\n#define ICM20948_I2C_MST_STATUS      0x17\n#define ICM20948_INT_STATUS          0x19\n#define ICM20948_INT_STATUS_1        0x1A\n#define ICM20948_INT_STATUS_2        0x1B\n#define ICM20948_INT_STATUS_3        0x1C\n#define ICM20948_DELAY_TIME_H        0x28\n#define ICM20948_DELAY_TIME_L        0x29\n#define ICM20948_ACCEL_XOUT_H        0x2D\n#define ICM20948_ACCEL_XOUT_L        0x2E\n#define ICM20948_ACCEL_YOUT_H        0x2F\n#define ICM20948_ACCEL_YOUT_L        0x30\n#define ICM20948_ACCEL_ZOUT_H        0x31\n#define ICM20948_ACCEL_ZOUT_L        0x32\n#define ICM20948_GYRO_XOUT_H         0x33\n#define ICM20948_GYRO_XOUT_L         0x34\n#define ICM20948_GYRO_YOUT_H         0x35\n#define ICM20948_GYRO_YOUT_L         0x36\n#define ICM20948_GYRO_ZOUT_H         0x37\n#define ICM20948_GYRO_ZOUT_L         0x38\n#define ICM20948_TEMP_OUT_H          0x39\n#define ICM20948_TEMP_OUT_L          0x3A\n#define ICM20948_EXT_SLV_SENS_DATA_00 0x3B\n/* 0x3b~0x52\u7701\u7565 */\n#define ICM20948_FIFO_EN_1           0x66\n#define ICM20948_FIFO_EN_2           0x67\n#define ICM20948_FIFO_RST            0x68\n#define ICM20948_FIFO_MODE           0x69\n#define ICM20948_FIFO_COUNT          0x70\n#define ICM20948_FIFO_R_W            0x72\n#define ICM20948_DATA_RDY_STATUS     0x74\n#define ICM20948_FIFO_CFG            0x76\n\n/* ICM20948 USER BANK 1 Registers */\n#define ICM20948_SELF_TEST_X_GYRO    0x02\n#define ICM20948_SELF_TEST_Y_GYRO    0x03\n#define ICM20948_SELF_TEST_Z_GYRO    0x04\n#define ICM20948_SELF_TEST_X_ACCEL   0x0E\n#define ICM20948_SELF_TEST_Y_ACCEL   0x0F\n#define ICM20948_SELF_TEST_Z_ACCEL   0x10\n#define ICM20948_XA_OFFS_H           0x14\n#define ICM20948_XA_OFFS_L           0x15\n#define ICM20948_YA_OFFS_H           0x17\n#define ICM20948_YA_OFFS_L           0x18\n#define ICM20948_ZA_OFFS_H           0x1A\n#define ICM20948_ZA_OFFS_L           0x1B\n#define ICM20948_TIMEBASE_CORR_PLL   0x28\n\n/* ICM20948 USER BANK 2 Registers */\n#define ICM20948_GYRO_SMPLRT_DIV     0x00\n#define ICM20948_GYRO_CONFIG_1       0x01\n#define ICM20948_GYRO_CONFIG_2       0x02\n#define ICM20948_XG_OFFS_USRH        0x03\n#define ICM20948_XG_OFFS_USRL        0x04\n#define ICM20948_YG_OFFS_USRH        0x05\n#define ICM20948_YG_OFFS_USRL        0x06\n#define ICM20948_ZG_OFFS_USRH        0x07\n#define ICM20948_ZG_OFFS_USRL        0x08\n#define ICM20948_ODR_ALIGN_EN        0x09\n#define ICM20948_ACCEL_SMPLRT_DIV_1  0x10\n#define ICM20948_ACCEL_SMPLRT_DIV_2  0x11\n#define ICM20948_ACCEL_INTEL_CTRL    0x12\n#define ICM20948_ACCEL_WOM_THR       0x13\n#define ICM20948_ACCEL_CONFIG        0x14\n#define ICM20948_ACCEL_CONFIG_2      0x15\n#define ICM20948_FSYNC_CONFIG        0x52\n#define ICM20948_TEMP_CONFIG         0x53\n#define ICM20948_MOD_CTRL_USR        0x54\n\n/* ICM20948 USER BANK 3 Registers */\n#define ICM20948_I2C_MST_ODR_CFG     0x00\n#define ICM20948_I2C_MST_CTRL        0x01\n#define ICM20948_I2C_MST_DELAY_CTRL  0x02\n#define ICM20948_I2C_SLV0_ADDR       0x03\n#define ICM20948_I2C_SLV0_REG        0x04\n#define ICM20948_I2C_SLV0_CTRL       0x05\n#define ICM20948_I2C_SLV0_DO         0x06\n/* 0x07~0x17\u7701\u7565 */\n\n/* To Choose Which Bank */\n#define ICM20948_REG_BANK_SEL        0x7F\n\n/* AK09916 Registers */\n#define AK09916_ADDRESS              0x0C\n#define AK09916_WIA                  0x01 // Who I am, Device ID\n#define AK09916_STATUS_1             0x10\n#define AK09916_MGTR_XOUTL           0x11\n#define AK09916_MGTR_XOUTH           0x12\n#define AK09916_MGTR_YOUTL           0x13\n#define AK09916_MGTR_YOUTH           0x14\n#define AK09916_MGTR_ZOUTL           0x15\n#define AK09916_MGTR_ZOUTH           0x16\n#define AK09916_STATUS_2             0x18\n#define AK09916_CNTL_2               0x31\n#define AK09916_CNTL_3               0x32\n\n#endif\n</code></pre>"},{"location":"study/%E9%A3%9E%E4%B9%A6%E6%96%87%E6%A1%A3/pythondata/","title":"Python\u6570\u636e\u5206\u6790","text":""},{"location":"study/%E9%A3%9E%E4%B9%A6%E6%96%87%E6%A1%A3/pythondata/#python","title":"python\u6570\u636e\u5206\u6790\u57fa\u7840","text":"<p>\u98de\u4e66\u94fe\u63a5\uff1ahttps://l5mnyvgt3n.feishu.cn/drive/folder/fldcnIlEhQrPlCao6eWmDzc91pf?from=from_copylink  \u5bc6\u7801\uff1a&amp;26U5515 </p>"},{"location":"study/%E9%A3%9E%E4%B9%A6%E6%96%87%E6%A1%A3/studydata/","title":"\u671f\u672b\u590d\u4e60","text":""},{"location":"study/%E9%A3%9E%E4%B9%A6%E6%96%87%E6%A1%A3/studydata/#_1","title":"\u81ea\u52a8\u63a7\u5236\u539f\u7406","text":"<p>\u98de\u4e66\u94fe\u63a5\uff1ahttps://l5mnyvgt3n.feishu.cn/drive/folder/N6qzfJXbvlR2twdfXOCcE4EZnZf?from=from_copylink  \u5bc6\u7801\uff1a8998&amp;C31</p>"}]}