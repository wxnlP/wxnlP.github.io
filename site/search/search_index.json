{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u5c0f\u674e","text":"<p>\u4f60\u597d</p> <pre><code>print(\"hello word\")\n</code></pre> <p><code>yolo</code></p>"},{"location":"#_2","title":"\u5218\u4f73\u76fc","text":""},{"location":"#love","title":"love","text":""},{"location":"study/yolo/","title":"yolo\u7cfb\u5217","text":""},{"location":"study/yolo/#1","title":"1. \u5185\u5bb9\u7b80\u4ecb","text":"<pre><code>----competition2023\n--Code  \u4ee3\u7801\n--Doc   \u6307\u5bfc\u6587\u6863\n--Pkgs  \u73af\u5883\u914d\u7f6e\u5b89\u88c5\u5305\n--Model \u5efa\u6a21\u6587\u4ef6\n</code></pre>"},{"location":"study/yolo/#11","title":"1.1 \u81ea\u6211\u4ecb\u7ecd","text":"<p>\u674e\u5fd7\u8c6a\uff0c\u6cb3\u5357\u4eba\uff0c\u5f55\u53d6\u4e13\u4e1a\u662f\u5de5\u4e1a\u5de5\u7a0b\uff0c\u5927\u4e00\u8f6c\u4e13\u4e1a\u5230\u4e86\u667a\u80fd\u5236\u9020\u5de5\u7a0b(\u5982\u679c\u662f\u5927\u4e00\u65b0\u751f\u60f3\u8981\u8f6c\u4e13\u4e1a\u7684\u8bdd\u53ef\u4ee5\u8ddf\u6211\u8054\u7cfb\u4e86\u89e3\u3002\u4e0d\u8fc7\u5927\u4e00\u7684\u540c\u5b66\u4e0d\u4e00\u5b9a\u80fd\u8bfb\u5230\u6211\u7684\u8fd9\u4efd\u6587\u6863\ud83d\ude36\u200d\ud83c\udf2b\ufe0f\u54c8\u54c8\u54c8\uff01)\u3002\u5927\u4e00\u5230\u5927\u4e8c\u66fe\u5728\u6821\u56ed\u5355\u8f66\u5fd7\u613f\u670d\u52a1\u961f\u5446\u8fc7\u4e00\u6bb5\u65f6\u95f4\uff0c\u5bf9\u4e8e\u6211\u8fd9\u79cd\u5185\u5411\u7684\u4eba\u5c5e\u5b9e\u662f\u5e2e\u5230\u4e86\u633a\u591a\u7684\u4e1c\u897f\uff0c\u6240\u4ee5\u4e5f\u63a8\u8350\u5927\u5bb6\u53bb\u670d\u52a1\u961f\u5b66\u4e60\u8fdb\u6b65\u3002\u672c\u4eba\u5462\uff0c\u6280\u672f\u4e3b\u8981\u8d70\u7684\u5d4c\u5165\u5f0f\u8f6f\u4ef6\u65b9\u5411\uff0c\u6b22\u8fce\u5927\u5bb6\u627e\u6211\u8fdb\u884c\u6280\u672f\u4ea4\u6d41(\u5982\u679c\u6211\u5728\u5fd9\u7740\u8003\u7814\u90a3\u5c31\u7b97\u55bd\u54c8\u54c8\ud83e\udd23)\uff0c\u4f46\u662f\u7531\u4e8e\u8d77\u6b65\u6bd4\u8f83\u665a\uff0c\u5927\u4e8c\u63a5\u89e6\u5d4c\u5165\u5f0f\u8bfe\u7a0b\u624d\u5f00\u59cb\u5b66\u4e60\uff0c\u6240\u4ee5\u6280\u672f\u65b9\u9762\u4e5f\u4e0d\u662f\u5f88\u6210\u719f\u3002</p> <p>\u597d\u55bd\uff0c\u81ea\u6211\u4ecb\u7ecd\u5c31\u8fd9\u6837\u5427\uff0c\u6bd5\u7adf\u54b1\u4e5f\u4e0d\u662f\u6280\u672f\u5927\u4f6c\uff0c\u62ff\u7684\u5956\u4e5f\u4e0d\u591a\u3002\u5982\u679c\u4f60\u8bfb\u5230\u8fd9\u91cc\uff0c\u90a3\u4e48\u6211\u5f88\u5e86\u5e78\u80fd\u591f\u8ba4\u8bc6\u4f60\ud83e\udd1e\uff0c\u52a0\u6cb9\u54e6\ud83d\udc7b\ud83d\udc7b\ud83d\udc7b\ud83d\udc7b\ud83d\udc7b\ud83d\udc7b\u3002</p>"},{"location":"study/yolo/#12","title":"1.2 \u521d\u8877","text":"<p>2023\u5e74\u516d\u6708\u4efd\uff0c\u5373\u6691\u5047\u671f\u95f4\uff0c\u6211\u548c\u4e00\u4f4d\u540c\u5b66\u4e86\u89e3\u5e76\u53c2\u52a0\u4e862023\u5e74\u4e2d\u56fd\u5927\u5b66\u751f\u5de5\u7a0b\u5b9e\u8df5\u4e0e\u521b\u65b0\u80fd\u529b\u5927\u8d5b\u7684\u6821\u5185\u9009\u62d4\u8d5b\uff0c\u6210\u529f\u8fdb\u5165\u5e02\u8d5b\u5e76\u53d6\u5f97\u4e0a\u6d77\u5e02\u7279\u7b49\u5956\u8fdb\u5165\u5f53\u65f6\u7684\u56fd\u8d5b\u3002</p> <p>\u56fd\u8d5b\u7ed3\u675f\u540e\u4e0e\u6307\u5bfc\u8001\u5e08\u5546\u91cf\uff0c\u51b3\u5b9a\u7f16\u5199\u5de5\u521b\u8d5b\u667a\u80fd\u751f\u6d3b\u5783\u573e\u5206\u7c7b\u8d5b\u9053\u7684\u6bd4\u8d5b\u6307\u5bfc\u6587\u6863\uff0c\u4e3b\u8981\u76ee\u7684\u5982\u4e0b\uff1a</p> <ul> <li>\u5206\u4eab\u6bd4\u8d5b\u7ecf\u9a8c\uff0c\u5e0c\u671b\u540e\u7eed\u7684\u540c\u5b66\u53ef\u4ee5\u8e0a\u8dc3\u53c2\u52a0\u5de5\u521b\u8d5b\u53ca\u5176\u4ed6\u7ade\u8d5b\u3002</li> <li>\u5c06\u7ade\u8d5b\u4f20\u627f\u4e0b\u53bb\uff0c\u5e0c\u671b\u540e\u7eed\u540c\u5b66\u53ef\u4ee5\u5728\u201c\u5de8\u4eba\u201d\u7684\u80a9\u8180\u4e0a\u66f4\u4e0a\u4e00\u5c42\u697c\u3002</li> <li>\u5206\u4eab\u5b66\u4e60\u7ecf\u9a8c\uff0c\u5e0c\u671b\u540e\u7eed\u540c\u5b66\u5728\u6280\u672f\u5b66\u4e60\u4e0a\u5c11\u8d70\u4e00\u4e9b\u5f2f\u8def\u3002</li> <li>\u5f25\u8865\u56fd\u8d5b\u9057\u61be\uff0c\u5e0c\u671b\u80fd\u5e2e\u52a9\u540e\u7eed\u540c\u5b66\u5728\u56fd\u8d5b\u53d6\u5f97\u94f6\u5956\u751a\u81f3\u91d1\u5956\u7684\u597d\u6210\u7ee9\uff0c\u5f25\u8865\u6211\u4eec\u5728\u56fd\u8d5b\u7559\u4e0b\u7684\u9057\u61be\u3002</li> </ul> <p>\u6587\u6863\u7b2c\u4e00\u90e8\u5206\u662f\u5de5\u521b\u8d5b\u8d5b\u9053\u7684\u4ecb\u7ecd\uff0c\u6211\u4f1a\u4e3b\u8981\u4ecb\u7ecd\u201c\u667a\u80fd+\u201d\u7684\u7269\u6d41\u5c0f\u8f66\u548c\u751f\u6d3b\u5783\u573e\u5206\u7c7b\u8d5b\u9053\u3002\u7b2c\u4e8c\u90e8\u5206\u662f\u9488\u5bf92023\u5e74\u5de5\u521b\u8d5b\u667a\u80fd\u751f\u6d3b\u5783\u573e\u5206\u7c7b\u8d5b\u9053\u7684\u6bd4\u8d5b\u4f7f\u7528\u65b9\u6848\uff0c\u5176\u4e2d\u4e5f\u5305\u62ec\u4e00\u4e9b\u6d89\u53ca\u5230\u7684\u6280\u672f\u3001\u6e90\u4ee3\u7801\u3001\u5efa\u6a21\u6587\u4ef6\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6211\u4f1a\u6574\u7406\u4e0a\u4f20\u5230Github\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4f1a\u653e\u4e00\u4e9b\u81ea\u5df1\u5728\u7528\u7684\u5b66\u4e60\u5730\u5740\uff0c\u548c\u6211\u81ea\u5df1\u603b\u7ed3\u7684\u77e5\u8bc6\u5728\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff0c\u65b9\u4fbf\u5927\u5bb6\u5b66\u4e60\u76f8\u5173\u6280\u672f.</p>"},{"location":"study/yolo/#2","title":"2. \u5de5\u521b\u8d5b\u4ecb\u7ecd","text":""},{"location":"study/yolo/#21","title":"2.1 \u4ec0\u4e48\u662f\u5de5\u521b\u8d5b","text":"<p>\u5168\u56fd\u5927\u5b66\u751f\u5de5\u7a0b\u5b9e\u8df5\u4e0e\u521b\u65b0\u80fd\u529b\u5927\u8d5b\u539f\u540d\u5168\u56fd\u5927\u5b66\u751f\u5de5\u7a0b\u8bad\u7ec3\u7efc\u5408\u80fd\u529b\u7ade\u8d5b\ud83e\udd3a\ud83e\udd3a\ud83e\udd3a</p> <p>\u540e\u9762\u5185\u5bb9\u4f1a\u7b80\u79f0\u5176\u4e3a\u5de5\u521b\u8d5b\u3002</p> <p>\u5927\u8d5b\u7684\u7b80\u4ecb\uff1a</p> <p>\u5168\u56fd\u5927\u5b66\u751f\u5de5\u7a0b\u8bad\u7ec3\u7efc\u5408\u80fd\u529b\u7ade\u8d5b\u662f\u516c\u76ca\u6027\u7684\u5927\u5b66\u751f\u79d1\u6280\u521b\u65b0\u7ade\u6280\u6d3b\u52a8\uff0c\u662f\u6709\u8f83\u5927\u5f71\u54cd\u529b\u7684\u56fd\u5bb6\u7ea7\u5927\u5b66\u751f\u79d1\u6280\u521b\u65b0\u7ade\u8d5b\uff0c\u662f\u6559\u80b2\u90e8\u3001\u8d22\u653f\u90e8\u8d44\u52a9\u7684\u5927\u5b66\u751f\u7ade\u8d5b\u9879\u76ee\uff0c\u76ee\u7684\u662f\u52a0\u5f3a\u5b66\u751f\u521b\u65b0\u80fd\u529b\u548c\u5b9e\u8df5\u80fd\u529b\u57f9\u517b\uff0c\u63d0\u9ad8\u672c\u79d1\u6559\u80b2\u6c34\u5e73\u548c\u4eba\u624d\u57f9\u517b\u8d28\u91cf\u3002\u4e3a\u5f00\u529e\u6b64\u9879\u7ade\u8d5b\uff0c\u7ecf\u6559\u80b2\u90e8\u9ad8\u7b49\u6559\u80b2\u53f8\u6279\u51c6\uff0c\u4e13\u95e8\u6210\u7acb\u4e86\u5168\u56fd\u5927\u5b66\u751f\u5de5\u7a0b\u8bad\u7ec3\u7efc\u5408\u80fd\u529b\u7ade\u8d5b\u7ec4\u7ec7\u59d4\u5458\u4f1a\u548c\u4e13\u5bb6\u59d4\u5458\u4f1a\u3002\u7ade\u8d5b\u7ec4\u59d4\u4f1a\u79d8\u4e66\u5904\u8bbe\u5728\u5927\u8fde\u7406\u5de5\u5927\u5b66\u3002\u6bcf\u4e24\u5e74\u4e00\u5c4a\u3002</p> <p>2023\u5de5\u521b\u8d5b\u7684\u5927\u8d5b\u4e3b\u9898\u4e0e\u76ee\u7684\uff1a</p> <p>\u672c\u5c4a\u5927\u8d5b\u4ee5\u4ea4\u53c9\u878d\u5408\u5de5\u7a0b\u521b\u65b0\u6c42\u5353\u8d8a\uff0c\u5b88\u5fb7\u5d07\u52b3\u5236\u9020\u5f3a\u56fd\u52c7\u62c5\u5f53\u4e3a\u4e3b\u9898\uff0c\u9762\u5411\u9002\u5e94\u5168\u7403\u53ef\u6301\u7eed\u53d1\u5c55\u9700\u6c42\u7684\u5de5\u7a0b\u5e08\u57f9\u517b\uff0c\u670d\u52a1\u4e8e\u56fd\u5bb6\u521b\u65b0\u9a71\u52a8\u4e0e\u5236\u9020\u5f3a\u56fd\u6218\u7565\uff0c\u5f3a\u5316\u5de5\u7a0b\u521b\u65b0\u80fd\u529b\uff0c\u575a\u6301\u7406\u8bba\u5b9e\u8df5\u7ed3\u5408\u3001\u5b66\u79d1\u4e13\u4e1a\u4ea4\u53c9\u3001\u6821\u4f01\u534f\u540c\u521b\u65b0\u3001\u7406\u5de5\u4eba\u6587\u878d\u901a\uff0c\u521b\u5efa\u5177\u6709\u9c9c\u660e\u4e2d\u56fd\u7279\u8272\u7684\u9ad8\u7aef\u5de5\u7a0b\u521b\u65b0\u8d5b\u4e8b\uff0c\u5efa\u8bbe\u5f15\u9886\u4e16\u754c\u5de5\u7a0b\u5b9e\u8df5\u6559\u80b2\u53d1\u5c55\u65b9\u5411\u7684\u7cbe\u54c1\u5de5\u7a0b\uff0c\u6784\u5efa\u9762\u5411\u5de5\u7a0b\u5b9e\u9645\u3001\u670d\u52a1\u793e\u4f1a\u9700\u6c42\u3001\u6821\u4f01\u534f\u540c\u521b\u65b0\u7684\u5b9e\u8df5\u80b2\u4eba\u5e73\u53f0\uff0c\u57f9\u517b\u670d\u52a1\u5236\u9020\u5f3a\u56fd\u7684\u5353\u8d8a\u5de5\u7a0b\u6280\u672f\u540e\u5907\u4eba\u624d\uff0c\u6253\u9020\u5177\u6709\u4e2d\u56fd\u7279\u8272\u4e16\u754c\u4e00\u6d41\u5de5\u7a0b\u5b9e\u8df5\u4e0e\u521b\u65b0\u6559\u80b2\u4f53\u7cfb\u3002</p> <p>\u5404\u5927\u8d5b\u9053\u53c2\u52a0\u60c5\u51b5\uff1a</p> <p></p> <p>\u5de5\u521b\u8d5b\u4e3b\u8981\u5206\u4ee5\u4e0a\u516d\u4e2a\u8d5b\u9053\uff0c\u5176\u4e2d\u201c\u667a\u80fd+\u201d\u8d5b\u9053\u5206\u4e3a\u7269\u6d41\u5c0f\u8f66\u548c\u751f\u6d3b\u5783\u573e\u5206\u7c7b\uff0c\u4e3b\u8981\u8003\u5bdf\u5d4c\u5165\u5f0f\u3001\u89c6\u89c9\u3001\u76ee\u6807\u68c0\u6d4b\u3001\u673a\u68b0\u7ed3\u6784\u8bbe\u8ba1\u7b49\u6280\u672f\u3002\u201c\u65b0\u80fd\u6e90\u8f66\u201d\u8d5b\u9053\u5206\u4e3a\u592a\u9633\u80fd\u548c\u6e29\u5dee\uff0c\u4e3b\u8981\u8003\u5bdf\u51f8\u8f6e\u8bbe\u8ba1\u3001RFID\u7b49\u3002\u5176\u4ed6\u8d5b\u9053\u4e0d\u592a\u4e86\u89e3\uff0c\u53ef\u4ee5\u53bb\u5b98\u7f51\u770b\u4ecb\u7ecd\u6587\u6863\u30022023\u5e74\u6211\u6821\u53c2\u52a0\u7684\u4e3b\u8981\u5c31\u662f\u6807\u6ce8\u7684\u56db\u4e2a\u8d5b\u9053\uff0c\u5176\u4e2d\u592a\u9633\u80fd\u3001\u751f\u6d3b\u5783\u573e\u5206\u7c7b\u3001\u98de\u884c\u5668\u4eff\u771f\u90fd\u5404\u6709\u4e00\u961f\u8fdb\u5165\u56fd\u8d5b\uff0c\u53d6\u5f97\u4e24\u94dc\u4e00\u94f6\u7684\u6210\u7ee9\u3002</p>"},{"location":"study/yolo/#22","title":"2.2 \u5de5\u521b\u8d5b\u542b\u91d1\u91cf","text":"<p>\u9996\u5148\uff0c\u5168\u56fd\u5927\u5b66\u751f\u5de5\u7a0b\u5b9e\u8df5\u4e0e\u521b\u65b0\u80fd\u529b\u5927\u8d5b\u5373\u5de5\u521b\u8d5b\u7684\u56fd\u8d5b\uff0c\u5c5e\u4e8e\u5927\u5b66\u751f\u7ade\u8d5b\u4e2d\u7684A\u7c7b\u8d5b\u4e8b\u3002\u5927\u5b66\u751f\u7ade\u8d5b\u4e3b\u8981\u5206\u4e3aABCD\u7c7b\u7ade\u8d5b\uff0cA\u7c7b\u7ade\u8d5b\u542b\u91d1\u91cf\u548c\u8ba4\u53ef\u5ea6\u4e3a\u6700\u9ad8\uff0c\u5982\u5927\u5bb6\u4e86\u89e3\u6bd4\u8f83\u591a\u7684\u4e92\u8054\u7f51+\u3001\u6311\u6218\u676f\u3001\u6570\u5b66\u5efa\u6a21\u3001\u7535\u8d5b\u7b49\u7b49\u540c\u5c5eA\u7c7b\u7ade\u8d5b\uff0c\u6211\u4eec\u5b66\u6821\u5bf9\u4e8eA\u7c7b\u7ade\u8d5b\u540c\u6837\u6709\u8bf4\u660e\uff1a</p> <p></p> <p>\u8fd9\u4e2a\u8868\u683c\u6765\u6e90\u4e8e\u5b66\u4e60\u4e0a\u6d77\u7b2c\u4e8c\u5de5\u4e1a\u5927\u5b66\u521b\u65b0\u521b\u4e1a\u5b66\u5206\u7ba1\u7406\u529e\u6cd5 \u6587\u6863\uff0c\u5728\u5927\u56db\u6bcf\u4e2a\u4e13\u4e1a\u90fd\u6709\u4e00\u95e8\u521b\u65b0\u521b\u4e1a\u8bfe\u7a0b\u9700\u8981\u4e0a\uff0c\u800c\u8fd9\u95e8\u8bfe\u6709\u4e00\u79cd\u514d\u4fee\u529e\u6cd5\uff0c\u53ea\u8981\u6ee1\u8db3\u6761\u4ef6\u7684\u540c\u5b66\u4fbf\u53ef\u4ee5\u63d0\u51fa\u514d\u4fee\u7533\u8bf7\uff0c\u6761\u4ef6\u5982\u4e0b\uff1a</p> <p></p> <p>\u26a0\u26a0\u26a0--\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u4e00\u70b9\uff0cA\u7c7b\u8d5b\u4e8b\u6307\u7684\u662f\u67d0\u7c7b\u8d5b\u4e8b\u7684\u56fd\u8d5b\uff0c\u8be5\u8d5b\u4e8b\u7684\u5e02\u8d5b\u53ea\u662fC\u7c7b\u6216\u8005\u662fB\u7c7b\u3002\u4f8b\u5982\u4e0a\u6d77\u7b2c\u4e8c\u5de5\u4e1a\u5927\u5b66\u521b\u65b0\u521b\u4e1a\u5b66\u5206\u7ba1\u7406\u529e\u6cd5 \u6587\u6863\u660e\u786e\u6307\u51fa\u5168\u56fd\u5927\u5b66\u751f\u673a\u68b0\u521b\u65b0\u8bbe\u8ba1\u5927\u8d5b\u4e3aA\u7c7b\uff0c\u800c\u4e0a\u6d77\u5e02\u5927\u5b66\u751f\u673a\u68b0\u5de5\u7a0b\u521b\u65b0\u5927\u8d5b\u662fC\u7c7b\u8d5b\u4e8b\u3002</p> <p>\u603b\u7684\u6765\u8bf4\uff0c\u5de5\u521b\u8d5b\u4f5c\u4e3aA\u7c7b\u8d5b\u4e8b\u542b\u91d1\u91cf\u8fd8\u662f\u5f88\u8db3\u7684\uff0c\u5bf9\u4e8e\u4e2a\u4eba\u6280\u672f\u7684\u5b9e\u8df5\u521b\u65b0\u548c\u56e2\u961f\u7ec4\u7ec7\u80fd\u529b\u90fd\u662f\u4e00\u79cd\u6311\u6218\u3002</p>"},{"location":"study/yolo/#23","title":"2.3 \u5de5\u521b\u8d5b\u6bd4\u8d5b\u5f62\u5f0f","text":"<p>\u50cf\u673a\u68b0\u521b\u65b0\u8bbe\u8ba1\u5927\u8d5b\u3001\u6311\u6218\u676f\u7b49\u6bd4\u8d5b\u662f\u5e26\u7740\u521b\u65b0\u4f5c\u54c1\u53c2\u4e0e\u7b54\u8fa9\u8bc4\u5206\uff0c\u5bf9\u4e8e\u4f5c\u54c1\u7684\u5f62\u5f0f\u3001\u79cd\u7c7b\u6ca1\u6709\u8981\u6c42\uff0c\u6216\u8005\u53ea\u4f1a\u89c4\u5b9a\u4e00\u4e2a\u5927\u6982\u7684\u65b9\u5411\u3002\u5982\u673a\u521b\u4f1a\u89c4\u5b9a\u4e00\u4e2a\u519c\u4e1a\u673a\u68b0\u548c\u4eff\u751f\u4e3b\u9898\uff0c\u5176\u4ed6\u81ea\u7531\u53d1\u6325\u3002\u800c\u5de5\u521b\u8d5b\u4e0d\u540c\u5176\u4ed6\u4e00\u4e9b\u521b\u65b0\u521b\u4e1a\u7c7b\u7684\u6bd4\u8d5b\uff0c\u5de5\u521b\u8d5b\u4f1a\u89c4\u5b9a\u4e00\u4e2a\u5e94\u7528\u573a\u666f\u548c\u88c5\u7f6e\u9700\u8981\u5b8c\u6210\u7684\u4efb\u52a1\uff0c\u4ee5\u53ca\u4e00\u4e9b\u5c3a\u5bf8\u7535\u538b\u7684\u7ec6\u81f4\u8981\u6c42\uff1b\u6700\u540e\u7684\u6bd4\u8d5b\u5f62\u5f0f\u6ca1\u6709\u7b54\u8fa9\uff0c\u6bd4\u8d5b\u8fc7\u7a0b\u5206\u4e3a\u521d\u8d5b\u548c\u51b3\u8d5b\uff0c\u521d\u8d5b\u5206\u6570\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a</p> <ul> <li>\u6587\u6863\u3001\u5916\u89c2\u3001\u521b\u610f\u8bbe\u8ba1\u536030%</li> <li>\u88c5\u7f6e\u81ea\u52a8\u5b8c\u6210\u6307\u5b9a\u4efb\u52a1\uff0c\u6839\u636e\u51c6\u786e\u7387\u8bc4\u5206\uff0c\u536070%</li> </ul> <p>\u901a\u8fc7\u521d\u8d5b\u51b3\u5b9a\u51fa\u51b3\u8d5b\u540d\u5355\uff0c\u7136\u540e\u51b3\u8d5b\u56e2\u961f\u8fdb\u5165\u521b\u65b0\u5b9e\u8df5\u73af\u8282\u73af\u8282\uff0c\u6839\u636e\u6bd4\u8d5b\u8981\u6c42\u66f4\u6539\u88c5\u7f6e\u7684\u67d0\u4e00\u4e2a\u7ed3\u6784(\u73b0\u573a\u516c\u5e03\uff0c\u6bd4\u8d5b\u524d\u5e76\u4e0d\u77e5\u9053)\uff0c\u6b64\u73af\u8282\u975e\u5e38\u8003\u9a8c\u8d5b\u524d\u51c6\u5907\u548c\u5e94\u53d8\u80fd\u529b\u3002-----\u5360\u520630%</p> <p>\u540e\u9762\u662f\u73b0\u573a\u51b3\u8d5b\uff0c\u8ddf\u521d\u8d5b\u4e00\u6837\u5b8c\u6210\u6307\u5b9a\u4efb\u52a1\uff0c\u4f1a\u6bd4\u521d\u8d5b\u96be\u3002-----\u5360\u520670%</p> <p></p> <p>\u5173\u4e8e\u73b0\u573a\u521d\u8d5b\u4e0e\u73b0\u573a\u51b3\u8d5b\uff1a</p> <p>\u73b0\u573a\u521d\u8d5b\u548c\u51b3\u8d5b\u662f\u57fa\u672c\u4e00\u6837\u7684\uff0c\u4e0d\u540c\u8d5b\u9879\u5177\u4f53\u5dee\u5f02\u53c2\u8003\u8d5b\u9053\u7684\u8bf4\u660e\u6587\u6863\u3002\u73b0\u573a\u6bd4\u8d5b\u6709\u4e24\u6b21\u673a\u4f1a\uff0c\u6bcf\u6b21\u5f00\u59cb\u524d\u6709\u4e00\u5b9a\u51c6\u5907\u65f6\u95f4\uff0c2023\u5e02\u8d5b\u51c6\u5907\u65f6\u95f4\uff1a\u7b2c\u4e00\u8f6e5\u5206\u949f\uff0c\u7b2c\u4e8c\u8f6e3\u5206\u949f\uff1b2023\u56fd\u8d5b\u51c6\u5907\u65f6\u95f4\uff1a\u7b2c\u4e00\u8f6e3\u5206\u949f\uff0c\u7b2c\u4e8c\u8f6e3\u5206\u949f.\u4e14\u667a\u80fd+\u8d5b\u9053\u90fd\u6709\u65f6\u95f4\u9650\u5236\uff0c\u8981\u7279\u522b\u6ce8\u610f\u3002</p> <p>\u26a0\u4e00\u5b9a\u8981\u4ed4\u7ec6\u9605\u8bfb\u8d5b\u9053\u8bf4\u660e\u6587\u6863\uff0c\u5f88\u91cd\u8981\uff0c\u4e0d\u8981\u51fa\u73b0\u8fdd\u89c4\u3002</p>"},{"location":"study/yolo/#3","title":"3. \u667a\u80fd \"+\" \u8d5b\u9053\u4ecb\u7ecd","text":"<p>\u667a\u80fd \"+\" \u8d5b\u9053\u6709\u7269\u6d41\u5c0f\u8f66\u548c\u751f\u6d3b\u5783\u573e\u5206\u7c7b\u4e24\u4e2a\u8d5b\u9879</p> <p>\u6211\u53c2\u52a0\u7684\u662f\u751f\u6d3b\u5783\u573e\u5206\u7c7b\uff0c\u6240\u4ee5\u6b64\u8d5b\u9879\u505a\u6ce8\u610f\u6307\u5bfc\u8bf4\u660e\uff0c\u5bf9\u4e8e\u7269\u6d41\u5c0f\u8f66\u4e5f\u4e86\u89e3\u4e00\u4e9b\u505a\u7b80\u5355\u4ecb\u7ecd\u63d0\u4e00\u4e9b\u610f\u89c1\u3002</p>"},{"location":"study/yolo/#31","title":"3.1 \u7269\u6d41\u5c0f\u8f66","text":"<p>\u9605\u8bfb\u58f0\u660e\uff1a\u672c\u4eba\u5e76\u4e0d\u662f\u53c2\u52a0\u7684\u8fd9\u4e2a\u8d5b\u9053\uff0c\u6211\u4ee5\u81ea\u5df1\u56fd\u8d5b\u3001\u5e02\u8d5b\u89c1\u5230\u7684\u5f88\u591a\u4f18\u79c0\u5c0f\u8f66\u65b9\u6848\u505a\u4e00\u4e2a\u63a8\u8350\uff0c\u4e5f\u6709\u4e00\u4e9b\u81ea\u5df1\u7684\u89c1\u89e3\uff0c\u56e0\u4e3a\u5bf9\u89c4\u5219\u7814\u7a76\u5e76\u4e0d\u662f\u5f88\u591a\u6240\u4ee5\u6709\u4e0d\u6070\u5f53\u7684\u5730\u65b9\u591a\u591a\u5305\u542b\u3002</p>"},{"location":"study/yolo/#311","title":"3.1.1 \u8d5b\u9879\u7b80\u4ecb","text":"<p>\u9996\u5148\u770b\u4e00\u4e0b\u4f5c\u54c1\u8981\u6c42\uff1a</p> <p></p> <p>\u6bd4\u8d5b\u573a\u5730\uff1a</p> <p></p> <p>\u7269\u6d41\u7684\u6bd4\u8d5b\u8fc7\u7a0b\u5927\u81f4\u5982\u4e0b\uff1a</p> <ol> <li>\u653e\u7f6e\u5230\u51fa\u53d1\u70b9\uff0c\u4e00\u952e\u542f\u52a8\u7269\u6d41\u5c0f\u8f66\u3002</li> <li>\u626b\u63cf\u5e76\u8bfb\u53d6\u4e8c\u7ef4\u7801\uff0c\u83b7\u53d6\u7269\u6599\u987a\u5e8f\u4fe1\u606f\u3002</li> <li>\u7269\u6d41\u5c0f\u8f66\u6839\u636e\u4e8c\u7ef4\u7801\u4fe1\u606f\uff0c\u5b8c\u6210\u7269\u6d41\u642c\u8fd0\u4efb\u52a1\u3002</li> </ol>"},{"location":"study/yolo/#312","title":"3.1.2 \u529f\u80fd\u65b9\u6848","text":"<p>\u6839\u636e\u6bd4\u8d5b\u8981\u6c42\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u6280\u672f\u65b9\u5411\uff1a</p> <ul> <li>\u5c0f\u8f66\u5e95\u76d8\uff0c\u63a7\u5236\u5c0f\u8f66\u79fb\u52a8\u5230\u6307\u5b9a\u4f4d\u7f6e\uff0c\u8981\u975e\u5e38\u7cbe\u786e\uff0c\u4e0d\u7136\u7269\u6599\u6293\u4e0d\u5230\u3002</li> <li>\u673a\u68b0\u81c2\uff0c\u8bbe\u8ba1\u4e00\u6b3e\u673a\u68b0\u81c2\u6293\u53d6\u7269\u6599\u3002</li> <li>\u89c6\u89c9\uff1a\u89c6\u89c9\u662f\u5f88\u91cd\u8981\u7684\u4e00\u73af\uff0c\u9700\u8981\uff1a\u626b\u63cf\u4e8c\u7ef4\u7801\u3001\u8bc6\u522b\u7269\u6599\u989c\u8272\u3001\u8f85\u52a9\u5e95\u76d8\u89c6\u89c9\u5b9a\u4f4d\u3002</li> </ul> <p>\u8fd9\u4e2a\u6bd4\u8d5b\u5408\u7406\u5206\u5de5\u5f88\u91cd\u8981\uff0c\u50cf\u6211\u6821\u8d5b\u6280\u672f\u65b9\u9762\u4e00\u4e2a\u4eba\u8d1f\u8d23\uff0c\u8bf4\u5b9e\u8bdd\u633a\u7d2f\u7684\u3002\u53ef\u4ee5\u6839\u636e\u4ee5\u4e0a\u4e09\u4e2a\u6280\u672f\u65b9\u9762\u505a\u4e00\u4e2a\u5206\u5de5\uff0c\u7559\u4e00\u4e2a\u4eba\u5199\u6587\u6863\u3002</p>"},{"location":"study/yolo/#_1","title":"\u5e95\u76d8\uff1a","text":"<p>\u8f6e\u5b50\u662f\u9ea6\u514b\u7eb3\u59c6\u8f6e\u6216\u5168\u5411\u8f6e\uff0c\u4e24\u79cd\u8f6e\u5b50\u90fd\u53ef\u4ee5\u8fdb\u884c\u591a\u65b9\u5411\u81ea\u7531\u79fb\u52a8\uff0c\u63a8\u8350\u4f7f\u7528\u9ea6\u514b\u7eb3\u59c6\u8f6e\uff0c\u597d\u4e0a\u624b\uff0c\u4e5f\u662f\u6211\u4eec\u5b66\u6821\u540c\u5b66\u90fd\u4f7f\u7528\u7684\u65b9\u6848\u3002</p> <p></p> <p></p> <p>\u7535\u673a\u9009\u62e9\uff0c\u76f4\u6d41\u51cf\u901f\u7535\u673a\u548c\u6b65\u8fdb\u7535\u673a\uff0c\u63a8\u8350\u76f4\u6d41\u51cf\u901f\u7535\u673a\u5373\u53ef\uff0c\u914d\u5408PID\u7b97\u6cd5\u505a\u95ed\u73af\u63a7\u5236\u3002\u9009\u62e9\u51cf\u901f\u7535\u673a\u8981\u6ce8\u610f\u4e00\u4e2a\u53c2\u6570\uff1a\u51cf\u901f\u6bd4\uff0c30\u5373\u53ef\u4e0d\u8981\u592a\u4f4e\u548c\u592a\u9ad8\u3002</p> <p></p> <p>\u63a8\u8350\u5546\u5bb6\uff1a\u4e9a\u535a\u667a\u80fd \u548c \u8f6e\u8da3\u79d1\u6280</p> <p>\u5f00\u53d1\u677f\u9009\u62e9\uff0c\u63a8\u8350stm32\u548carduino\uff0c\u6709\u57fa\u7840\u53ef\u4ee5\u4f7f\u7528stm32\uff0c\u5b66\u4e60\u8d77\u6765\u53ef\u80fd\u96be\u4e00\u4e9b\uff1barduino\u76f8\u5bf9\u7b80\u5355\u5f88\u591a\u3002</p> <p>stm32\u53ef\u4ee5\u9009\u7528stm32f103c8t6\u548cstm32f103ZET6\u4e24\u79cd\u82af\u7247\uff0c\u6ee1\u8db3\u56db\u4e2a\u7f16\u7801\u5668\u7684\u5b9a\u65f6\u5668\u9700\u6c42\uff0c\u53ef\u4ee5\u6302\u8f7d\u591a\u4e2a\u5916\u8bbe\uff0c\u5f15\u811a\u591f\u7528\u3002\u4e0d\u63a8\u8350\u8d2d\u4e70\u5b66\u4e60\u677f\uff0c\u4e70\u4e00\u4e2a\u5c0f\u4e00\u4e9b\u8d44\u6e90\u591f\u7528\u7684\u677f\u5b50\u5c31\u53ef\u4ee5\uff0c\u6709\u80fd\u529b\u7528PCB\u753b\u4e00\u4e2a\u5916\u8bbe\u62d3\u5c55\u677f\uff0c\u6bd4\u7528\u675c\u90a6\u7ebf\u8fde\u6765\u8fde\u53bb\u53ef\u9760\u5f88\u591a\u3002</p> <p>arduino\u9009\u578b\u5c31\u7b80\u5355\u5f88\u591a\uff0c\u6015\u8d44\u6e90\u4e0d\u591f\u5c31\u7528arduino mega\uff0c\u6216\u8005arduino uno\uff0c\u8d44\u6e90\u5c11\u4e00\u4e9b\u3002</p> <p></p> <p></p>"},{"location":"study/yolo/#_2","title":"\u673a\u68b0\u81c2\uff1a","text":"<p>\u673a\u68b0\u81c2\u6bd4\u8d5b\u4f7f\u7528\u7684\u5206\u4e09\u7c7b</p> <p>1.\u516d\u81ea\u7531\u5ea6\u8235\u673a\u673a\u68b0\u81c2</p> <p>\u57fa\u672c\u673a\u6784\u5927\u5dee\u4e0d\u5dee\uff0c\u6709\u4e00\u4e9b\u540c\u5b66\u4f1a\u5bf9\u673a\u68b0\u8fdb\u884c\u7b80\u5355\u6539\u9020\uff0c\u7b2c\u4e00\u4e2a\u81ea\u7531\u5ea6\u8235\u673a\u6700\u540e\u7528\u4e00\u4e2a\u626d\u77e9\u5927\u4e00\u4e9b\u9632\u6b62\u7a81\u7136\u70e7\u574f\u3002\u540c\u65f6\u673a\u68b0\u722a\u90e8\u5206\u6700\u540e\u81ea\u5df1\u8bbe\u8ba1\uff0c\u6839\u636e\u7269\u6599\u548c\u81ea\u5df1\u8bbe\u8ba1\u7684\u673a\u68b0\u81c2\u8fd0\u52a8\u65b9\u5f0f\u3002</p> <p></p> <p>2.\u56db\u81ea\u7531\u5ea6</p> <p></p> <p>3.\u4e24\u81ea\u7531\u5ea6\u6b65\u8fdb\u7535\u673a\u673a\u68b0\u81c2</p> <p>\u8fd9\u79cd\u90fd\u662f\u81ea\u5df13D\u6253\u5370\u8bbe\u8ba1</p> <p>\u70b9\u51fb\u67e5\u770b\u6848\u4f8b</p> <p>1\u30012\u65b9\u6848\u90fd\u9700\u8981\u591a\u4e2a\u8235\u673a\uff0c\u5efa\u8bae\u4e70\u4e00\u4e2a\u8235\u673a\u62d3\u5c55\u677f</p> <p></p>"},{"location":"study/yolo/#_3","title":"\u89c6\u89c9","text":"<p>\u89c6\u89c9\u91c7\u7528openmv\u6216\u8005\u5de5\u63a7\u673a\u642d\u914dopencv\uff0c\u5de5\u63a7\u673a\u53ef\u4ee5\u7528\u6811\u8393\u6d3e\u3002\u63a8\u8350openmv\u5373\u53ef\uff0c\u4e0a\u624b\u7b80\u5355\u3002</p> <p>openmv\u8d2d\u4e70\u94fe\u63a5</p> <p></p> <p>\u786c\u4ef6\u65b9\u6848\u90fd\u662f\u5176\u6b21\u7684\uff0c\u91cd\u8981\u7684\u662f\u5b9a\u4f4d\u7b97\u6cd5\u548c\u673a\u68b0\u81c2\u8def\u5f84\u89c4\u5212\u7684\u51c6\u786e\u6027\u3002</p>"},{"location":"study/yolo/#313","title":"3.1.3 \u6ce8\u610f\u4e8b\u9879","text":""},{"location":"study/yolo/#32","title":"3.2 \u751f\u6d3b\u5783\u573e\u5206\u7c7b","text":""},{"location":"study/yolo/#321","title":"3.2.1 \u8d5b\u9879\u7b80\u4ecb","text":""},{"location":"study/yolo/#_4","title":"\u4f5c\u54c1\u8981\u6c42\uff1a","text":"<p>\u8fd9\u4e00\u90e8\u5206\u662f\u5bf9\u4f5c\u54c1\u529f\u80fd\u7684\u603b\u4f53\u6982\u62ec\uff0c\u770b\u770b\u5c31\u884c\uff0c\u91cd\u70b9\u90fd\u5df2\u7ecf\u52a0\u6df1\u6807\u6ce8\u4e86\u3002\u9700\u8981\u6ce8\u610f\u7684\u5c31\u662f\u5206\u7c7b\u6807\u7b7e\u3001\u538b\u7f29\u88c5\u7f6e\uff0c\u540e\u9762\u4f1a\u8be6\u7ec6\u8bf4\u660e\u3002</p> <p></p>"},{"location":"study/yolo/#_5","title":"\u529f\u80fd\u8981\u6c42\uff1a","text":"<p>\u8fd9\u4e00\u90e8\u5206\u662f\u6700\u91cd\u8981\u7684\uff0c\u6db5\u76d6\u4e86\u6211\u4eec\u4f5c\u54c1\u6700\u540e\u7684\u529f\u80fd</p> <ul> <li>\u4f5c\u54c1\u9876\u90e8\uff0c\u56fa\u5b9a\u6295\u653e\u53e3(\u521d\u8d5b130x130\uff0c\u51b3\u8d5b\u73b0\u573a\u516c\u5e03)\u3002</li> <li>\u7531\u4e00\u4e2a\u4eba\u5c06\u5783\u573e\u653e\u5165\u6295\u653e\u53e3\u3002\u4f5c\u54c1\u81ea\u52a8\u8bc6\u522b\u5206\u7c7b\u81f3\u5783\u573e\u6876\u3002</li> <li>\u53ef\u56de\u6536\u5783\u573e\u9700\u8981\u538b\u7f29\u88c5\u7f6e\uff0c\u4e14\u5fc5\u987b\u5728\u5168\u90e8\u5783\u573e\u5206\u7c7b\u4efb\u52a1\u5b8c\u6210\u524d\u5b8c\u6210\u3002</li> <li>\u9ad8\u4eae\u663e\u793a\u5c4f\uff0c\u53ef\u4ee5\u64ad\u653e\u5ba3\u4f20\u89c6\u9891\uff0c\u663e\u793a\u6295\u653e\u5783\u573e\u7684\u4fe1\u606f\u3001\u6ee1\u8f7d\u60c5\u51b5\u3002</li> <li>\u5f85\u673a\u65f6\u5faa\u73af\u64ad\u653e\u5ba3\u4f20\u89c6\u9891\u3002</li> </ul> <p></p>"},{"location":"study/yolo/#_6","title":"\u9a71\u52a8\u8981\u6c42\uff1a","text":"<p>\u6ce8\u610f\u7535\u538b\u8981\u6c42\uff0c\u4e0d\u5927\u4e8e24\u4f0f\uff0c\u6211\u4eec\u56fd\u8d5b\u56e0\u4e3a\u9ad8\u4e860.03V\u6ca1\u6709\u7ed9\u6210\u7ee9\u6392\u5e8f\ud83d\ude2d\ud83d\ude2d\ud83d\ude2d(\u8fd9\u91cc\u4e0d\u5410\u69fd\u4e86\uff0c\u5218\u8001\u5e08\u6bd4\u8d5b\u524d\u80af\u5b9a\u4f1a\u5631\u5490\u4f60\u4eec\u7684\uff0c\u4e0d\u8981\u62a5\u6709\u4fa5\u5e78\u5fc3\u7406\uff0c\u4e25\u683c\u6309\u7167\u89c4\u5219)\u3002</p> <p></p>"},{"location":"study/yolo/#_7","title":"\u673a\u68b0\u7ed3\u6784\u8981\u6c42\uff1a","text":"<p>\u8fd9\u91cc\u4e0d\u7528\u88ab\u81ea\u4e3b\u8bbe\u8ba1\u5413\u5230\uff0c\u53ea\u8981\u4e0d\u662f\u6574\u7406\u5168\u4e70\u7684\u6210\u54c1\u5c31\u884c\uff0c\u80fd\u75283D\u6253\u5370\u5c31\u7528\uff0c\u6bd5\u7adf\u7ecf\u8d39\u6709\u9650\u54c8\u54c8\u54c8\u3002</p> <p></p>"},{"location":"study/yolo/#_8","title":"\u5916\u5f62\u5c3a\u5bf8\u8981\u6c42\uff1a","text":"<p>\u4f5c\u54c1\u5236\u4f5c\u65f6\u4e00\u5b9a\u8981\u8003\u8651\u9ad8\u5ea6\uff0c\u7279\u522b\u662f\u6821\u8d5b\uff0c\u56e0\u4e3a\u540e\u9762\u8981\u8003\u8651\u51b3\u8d5b\u7684\u591a\u79cd\u5783\u573e\u5206\u7c7b\uff0c\u80af\u5b9a\u4f1a\u6216\u591a\u6216\u5c11\u52a0\u9ad8\u3002</p> <p></p> <p>\u6295\u653e\u7684\u7269\u6599\uff1a</p> <p>\u7269\u6599\u8fd9\u91cc\u4e0d\u7ec6\u8bf4\uff0c\u540e\u9762\u7684\u7a0b\u5e8f\u90e8\u5206\u4f1a\u8be6\u7ec6\u8bf4\uff0c\u6211\u4eec\u56fd\u8d5b\u4e5f\u662f\u8e29\u4e86\u5751\u7684\u3002</p> <p></p> <p>\u751f\u6d3b\u5783\u573e\u5206\u7c7b\u8d5b\u9053\u6700\u91cd\u8981\u7684\u9664\u4e86\u89c6\u89c9\u65b9\u9762\u5c31\u662f\u7ed3\u6784\u642d\u5efa\u65b9\u9762\uff0c\u6700\u8017\u65f6\u95f4\u7684\u4e5f\u662f\u7ed3\u6784\u8bbe\u8ba1\u548c\u642d\u5efa\uff0c\u642d\u5efa\u4ee5\u540e\u8c03\u8bd5\u7a0b\u5e8f\u5c31\u662f\u5f88\u65b9\u4fbf\u548c\u5feb\u4e50\u7684\u3002</p> <p>\u4e0a\u8bc9\u4e3a2023\u5e74\u7684\u6bd4\u8d5b\u8bf4\u660e\u6587\u6863\uff0c\u6bcf\u5e74\u6587\u6863\u5dee\u7684\u4e0d\u591a\uff0c\u4f46\u4e00\u5b9a\u4ee5\u81ea\u5df1\u5f53\u4e0b\u6587\u6863\u4e3a\u6807\u51c6\u5236\u4f5c\u4f5c\u54c1\uff0c\u7279\u522b\u662f\u5c3a\u5bf8\u8981\u6c42\uff0c\u4e00\u70b9\u90fd\u4e0d\u80fd\u8d85\u8fc7\u3002</p>"},{"location":"study/yolo/#322","title":"3.2.2 \u4eba\u5458\u5206\u5de5","text":"<p>\u4eba\u5458\u5206\u5de5\u5f88\u91cd\u8981\uff0c\u8fd9\u91cc\u7279\u522b\u8bf4\u660e\u56e2\u961f\u4e2d\u4e0d\u8981\u6709\u6df7\u5b50\uff0c\u6211\u662f\u6df1\u6709\u4f53\u4f1a\u7684\u3002\u6821\u8d5b\u671f\u95f4\u662f\u6211\u548c\u4e00\u4f4d\u670b\u53cb\u4e24\u4e2a\u4eba\u53c2\u8d5b\u7684\uff0c\u4e00\u5f00\u59cb4\u4e2a\u4eba\u56e0\u4e3a\u6001\u5ea6\u6d88\u6781\u6c9f\u901a\u540e\u8e22\u4e86\u4e24\u4e2a\uff0c\u540e\u9762\u6211\u8d1f\u8d23\u6280\u672f\u90e8\u5206\uff0c\u53e6\u4e00\u4f4d\u540c\u5b66\u8d1f\u8d23\u6587\u6863\u548c\u5668\u4ef6\u8d2d\u4e70\u7b49\u5de5\u4f5c\uff0c\u6700\u540e\u901a\u5bb5\u597d\u51e0\u5929\u624d\u5b8c\u6210\u4f5c\u54c1\u3002\u8fd8\u8981\u4e00\u7ec4\u65f6\u4e00\u4e2a\u4eba\u5e72\u7684\u6821\u8d5b\uff0c\u540e\u9762\u8fdb\u56fd\u8d5b\u4e86\uff0c\u4e5f\u662f\u5f88\u5f3a\u54c8\u54c8\u54c8\ud83d\udc4d\ud83d\udc4d\ud83d\udc4d\u3002\u5e9f\u8bdd\u4e0d\u591a\u8bf4\u4e86\uff0c\u4e0b\u9762\u8bf4\u56db\u4e2a\u4eba\u5206\u5de5\uff0c\u4e5f\u662f\u7406\u60f3\u72b6\u6001\u7684\u56db\u4e2a\u4eba\u7684\u5b9a\u4f4d\uff1a</p> <ol> <li>\u673a\u68b0\u7ed3\u6784\u8bbe\u8ba1\uff0c\u8d1f\u8d23\u4f5c\u54c1\u6574\u4f53\u5f97\u7ed3\u6784\u8bbe\u8ba1\uff0c\u5305\u62ec\u6750\u6599\u9009\u62e9\u3001\u5206\u7c7b\u65b9\u5f0f\u3001\u6295\u653e\u53e3\u3001\u538b\u7f29\u88c5\u7f6e\u3001\u5916\u89c2\u7b49\u7b49\uff0c\u5f53\u7136\u5f88\u591a\u9700\u8981\u8ba8\u8bba\u5546\u91cf\uff0c\u6700\u540e\u4e3b\u8981\u7531\u8fd9\u4f4d\u540c\u5b66\u548c\u7ec4\u957f\u6572\u5b9a\u5373\u53ef\u3002</li> <li>\u63a7\u5236\u7ed3\u6784\u8bbe\u8ba1\uff0c\u8d1f\u8d23\u5206\u7c7b\u88c5\u7f6e\u5f97\u63a7\u5236\u90e8\u5206\uff0c\u6839\u636e\u6572\u5b9a\u5f97\u5206\u7c7b\u65b9\u5f0f\u8fdb\u884c\u63a7\u5236\u8bbe\u8ba1\uff0c\u4e3b\u8981\u5305\u62ec\u6ee1\u8f7d\u3001\u7ffb\u6597\u8fd0\u52a8\u3001\u673a\u68b0\u81c2\u8fd0\u52a8\u7b49\uff0c\u9700\u8981\u6700\u540e\u548c\u89c6\u89c9\u540c\u5b66\u4e00\u8d77\u8c03\u8bd5\u4f5c\u54c1\u3002</li> <li>\u89c6\u89c9\u7ed3\u6784\uff0c\u8d1f\u8d23\u76ee\u6807\u68c0\u6d4b\u6a21\u578b\u3001\u89c6\u89c9\u65b9\u6848\u9009\u62e9\uff0c\u8fd9\u90e8\u5206\u5f88\u91cd\u8981\uff0c\u6ca1\u6709\u89c6\u89c9\u5176\u4ed6\u90e8\u5206\u90fd\u662f0\uff0c\u4e00\u5206\u62ff\u4e0d\u5230\u7684\u3002</li> <li>\u6587\u6863\u548c\u6750\u6599\u8d2d\u4e70\uff0c\u6211\u4eec\u5b66\u6821\u62a5\u9500\u91c7\u7528\u4ee3\u4ed8\u65b9\u5f0f\uff0c\u9700\u8981\u6574\u7406\u53d1\u7968\uff0c\u6240\u4ee5\u53d1\u7968\u5728\u4e00\u4e2a\u4eba\u624b\u91cc\u5f88\u65b9\u4fbf\uff0c\u53e6\u5916\u5c31\u662f\u6587\u6863\u4e66\u5199\uff0c\u901a\u5e38\u8981\u75315\u5343\u5b57\u4ee5\u4e0a\u6bd4\u8f83\u597d\u3002</li> </ol> <p>\u5f53\u7136\u4ee5\u4e0a\u65f6\u7406\u60f3\u4e2d\u7684\u4eba\u5458\u5206\u5de5\uff0c\u5b9e\u65f6\u4e0a\u5f88\u96be\u627e\u7684\u6ee1\u8db3\u4ee5\u4e0a\u80fd\u529b\u7684\u4eba\uff0c\u6240\u4ee5\u9700\u8981\u4e2a\u522b\u80fd\u529b\u5f3a\u7684\u6210\u5458\u591a\u8d1f\u8d23\u4e00\u90e8\u5206\u5185\u5bb9\u3002\u6211\u4eec\u5f53\u65f6\u5e02\u8d5b\u53ca\u56fd\u8d5b\u7684\u5206\u5de5\u662f\uff1a</p> <ol> <li>\u6211\uff0c\u8d1f\u8d23\u89c6\u89c9\u6a21\u578b\u8bad\u7ec3\u3001\u673a\u68b0\u7ed3\u6784\u8bbe\u8ba1\uff0c\u90e8\u5206\u7ed3\u6784\u9009\u578b\u3002\u5e02\u8d5b\u7ed3\u6784\u9664\u5206\u7c7b\u65b9\u5f0f\u5927\u4f53\u6700\u540e\u6cbf\u7528\u6211\u6821\u8d5b\u8bbe\u8ba1\u5185\u5bb9\uff0c\u6240\u4ee5\u6821\u8d5b\u4ee5\u540e\u7684\u673a\u68b0\u7ed3\u6784\u90e8\u5206\u7531\u63a7\u5236\u7ed3\u6784\u7684\u540c\u5b66\u627f\u62c5\u4e86\u5f88\u591a\u3002</li> <li>\u96f7\u540c\u5b66\uff0c\u8d1f\u8d23\u63a7\u5236\u7ed3\u6784\u8bbe\u8ba1\uff0c\u63a7\u5236\u7a0b\u5e8f\u3001\u51b3\u8d5b\u673a\u68b0\u81c2\u7ed3\u6784\u8bbe\u8ba1\u3001\u90e8\u5206\u673a\u68b0\u7ed3\u6784\u8bbe\u8ba1\u3002</li> <li>\u6bdb\u540c\u5b66\uff0c\u8d1f\u8d23\u6587\u6863\u4e66\u5199\u3002</li> <li>\u9f99\u540c\u5b66\uff0c\u8d1f\u8d23\u6a21\u578b\u8bad\u7ec3\u7684\u7167\u7247\u6807\u6ce8\uff0c\u6fc0\u5149\u5207\u5272\uff0c\u6750\u6599\u8d2d\u4e70\u7b49\u3002</li> </ol> <p>\u5728\u6211\u770b\u6765\u6211\u4eec\u7684\u5206\u5de5\u4e5f\u662f\u6bd4\u8f83\u5408\u7406\u7684\uff0c\u6211\u548c\u96f7\u540c\u5b66\u5206\u62c5\u4e86\u673a\u68b0\u7ed3\u6784\u8bbe\u8ba1\u90e8\u5206\uff0c\u8fd9\u6837\u4e3a\u6211\u4eec\u7a0b\u5e8f\u8c03\u8bd5\u4e5f\u63d0\u4f9b\u4e00\u5b9a\u4fbf\u5229\u3002</p> <p>\u26a0\u8fd8\u662f\u5efa\u8bae\u673a\u68b0\u7ed3\u6784\u5c3d\u91cf\u5355\u72ec\u627e\u4e00\u4e2a\u540c\u5b66\uff0c\u5199\u7a0b\u5e8f\u4ee5\u5916\u8d1f\u8d23\u673a\u68b0\u7ed3\u6784\u8bbe\u8ba1\uff0c\u4f1a\u4e00\u5b9a\u7a0b\u5ea6\u62d6\u6162\u7a0b\u5e8f\u8fdb\u5ea6\uff0c\u4e14\u7ed3\u6784\u8bbe\u8ba1\u771f\u7684\u5f88\u70e6\uff0c\u7279\u522b\u5bf9\u6211\u8fd9\u79cd\u4e0d\u559c\u6b22\u505a\u673a\u68b0\u7ed3\u6784\u7684\u4eba\u54c8\u54c8\u54c8\u54c8\u3002</p>"},{"location":"study/yolo/#4","title":"4. \u751f\u6d3b\u5783\u573e\u5206\u7c7b\u65b9\u6848","text":""},{"location":"study/yolo/#41","title":"4.1 \u673a\u68b0\u7ed3\u6784\u8bbe\u8ba1","text":"<p>\u5148\u8bf4\u4e00\u8bf4\u673a\u68b0\u7ed3\u6784\u8bbe\u8ba1\u5427\uff0c\u6bd5\u7adf\u7528\u4e86\u5f88\u957f\u7684\u65f6\u95f4\u3002</p>"},{"location":"study/yolo/#411","title":"4.1.1 \u6750\u6599\u9009\u62e9","text":"<p>\u94dd\u6750\uff1a\u7ed3\u6784\u4e00\u5b9a\u8981\u7a33\u5b9a\uff0c\u56e0\u4e3a\u8981\u8003\u8651\u540e\u7eed\u53bb\u5176\u4ed6\u5b66\u6821\u6bd4\u8d5b\u7684\u65f6\u5019\u8981\u957f\u9014\u8fd0\u8f93\uff0c\u7279\u522b\u662f\u56fd\u8d5b\u8de8\u7701\u8fd0\u8fc7\u53bb\u4f1a\u6389\u5f88\u591a\u87ba\u4e1d\u3002\u6240\u4ee5\u4f5c\u54c1\u201d\u9aa8\u9abc\u201c\u6846\u67b6\u7528\u6b27\u680720\u7684\u94dd\u6750\uff0c\u6700\u597d\u4e0d\u8981\u752830\u621640\u4ee5\u4e0a\u9664\u975e\u7ed3\u6784\u9700\u8981\uff0c\u56e0\u4e3a\u771f\u7684\u5f88\u91cd\u3002\u957f\u5ea6\u4e0d\u5bf9\u53ef\u4ee5\u4f7f\u7528\u5de5\u8bad\u4e2d\u5fc3\u4e00\u697c\u7684\u94e3\u5e8a\u94bb\u65ad\u3002</p> <p></p> <p>\u94dd\u6750\u8fde\u63a5\u952e\uff1a\u5efa\u8bae\u4f7f\u7528\u8fd9\u79cd\u76f4\u89d2\u89d2\u7801\uff1b\u6211\u4eec\u4e5f\u7528\u8fc7\u4e00\u4e9b\u5185\u7f6e\u7684\u8fde\u63a5\u4ef6\u5e76\u4e0d\u597d\u7528\uff0c\u5f53\u65f6\u8003\u8651\u88c5\u4e9a\u514b\u529b\u677f\u597d\u88c5\u4f46\u6070\u6070\u76f8\u53cd\uff0c\u6240\u4ee5\u4e0d\u63a8\u8350\uff0c\u76f4\u89d2\u89d2\u7801\u76f8\u5bf9\u5b89\u88c5\u66f4\u7b80\u5355\u3002</p> <p></p> <p></p> <p>\u524d\u9762\u63d0\u5230\u8fd0\u8f93\u8fc7\u7a0b\u4e2d\u87ba\u4e1d\u5bb9\u6613\u6389\uff0c\u6240\u4ee5\u5728\u94dd\u6750\u5e95\u90e8\u7528\u76f4\u89d2\u94c1\u56fa\u5b9a\uff0c\u9632\u6b62\u7ed3\u6784\u53d8\u578b\u3002</p> <p></p> <p>\u4e9a\u514b\u529b\u677f\uff0c\u6839\u636e\u4e0d\u540c\u7528\u5904\u5bf9\u4e8e\u4e9a\u514b\u529b\u677f\u7684\u539a\u5ea6\u9009\u62e9\u6709\u4e00\u70b9\u9009\u62e9\uff1a</p> <ul> <li>4mm\uff0c---&gt;\u7528\u4e8e\u5916\u58f3\u88c5\u914d\u6216\u5c0f\u7a0b\u5ea6\u652f\u6491\u9762\u3002</li> <li>4mm\u4ee5\u4e0a\uff0c---&gt;\u7528\u4e8e\u9700\u8981\u652f\u6491\u91cd\u91cf\u8f83\u5927\u7684\u5730\u65b9\u3002</li> <li>8mm\u4ee5\u4e0a\uff0c---&gt;\u7528\u4e8e\u538b\u7f29\u62b5\u6321\u9762\uff0c\u9700\u8981\u627f\u53d71000N\u4ee5\u4e0a\u7684\u529b\u3002</li> </ul> <p></p>"},{"location":"study/yolo/#412","title":"4.1.2 \u7ed3\u6784\u8bbe\u8ba1","text":"<p>\u4e0b\u9762\u662f\u7ed3\u6784\u8bbe\u8ba1\u65b9\u6848\uff0c\u4ece\u4e0b\u5f80\u4e0a\u4ecb\u7ecd\u3002</p> <p>\u88c5\u914d\u56fe\uff1a</p> <p></p> <p>\u5783\u573e\u6876\uff0c\u56db\u4e2a\u6876\u5c3a\u5bf8\u4e00\u6837\uff0c\u6bd4\u89c4\u5b9a\u5c3a\u5bf8\u8981\u5927\u4e00\u4e9b\u5177\u4f53\u591a\u5c11\u5fd8\u8bb0\u4e86\uff0c\u53ef\u4ee5\u91cf\u4e00\u91cf\u3002\u5efa\u8bae\u6bd4\u6211\u4eec\u7684\u6876\u5c0f\u4e00\u4e9b\u3002</p> <p>\u538b\u7f29\u88c5\u7f6e\uff0c\u4f7f\u7528\u8def\u661324V\u7535\u52a8\u63a8\u6746\u5e73\u5e95\u5ea7\uff0c\u6709\u5f88\u591a\u901f\u5ea6\u548c\u63a8\u529b\u53ef\u9009\uff0c\u7ed3\u5408\u9700\u6c42\u9009\u8d2d\u3002</p> <p></p> <p>\u5206\u7c7b\u88c5\u7f6e\uff0c\u7528\u4e9a\u514b\u529b\u677f\u62fc\u88c5\u7684\uff0c\u5c3a\u5bf8\u770b\u6211\u7684UG\u56fe\u7eb8\u5c31\u597d\uff0c\u8868\u9762\u94fa\u7684A4\u7eb8\u3002\u505a\u7684\u6bd4\u8f83\u7b80\u964b\uff0c\u8fd9\u91cc\u4e0d\u5efa\u8bae\u7ee7\u7eed\u91c7\u7528\uff0c\u56fd\u8d5b\u5409\u5927\u7ed9\u7684\u571f\u8c46\u5f88\u5c0f\u800c\u4e14\u662f\u6e7f\u7684(\u5fc5\u987b\u5410\u69fd\u4e00\u4e0b\u5409\u5927\ud83e\udd23)\uff0c\u5f88\u5bb9\u6613\u6cbe\u4e0a\u9762\u3002</p> <p>\u5f88\u591a\u4e1c\u897f\u53c2\u8003\u5b9e\u9a8c\u5ba4\u7684\u5b9e\u7269\u4f1a\u66f4\u6e05\u695a\u4e00\u4e9b\u3002</p>"},{"location":"study/yolo/#42","title":"4.2 \u63a7\u5236\u7ed3\u6784\u8bbe\u8ba1","text":"<p>\u63a7\u5236\u7ed3\u6784\u5206\u521d\u8d5b\u548c\u51b3\u8d5b\uff0c\u521d\u8d5b\u8f83\u4e3a\u7b80\u5355\uff0c\u51b3\u8d5b\u5c31\u662f\u628a\u5206\u7c7b\u65b9\u6cd5\u6539\u4e3a\u4e86\u673a\u68b0\u81c2\u6293\u53d6\u3002\u7531\u4e8e\u521d\u8d5b\u51b3\u8d5b\u6700\u597d\u662f\u4e00\u4e2a\u6210\u54c1\uff0c\u6240\u4ee5\u653e\u5728\u4e00\u8d77\u8bf4\u3002\u533a\u5206\u65b9\u6cd5\u4e3a\u5783\u573e\u4e2a\u6570\uff0c\u5783\u573e\u4e3a\u4e00\u4e2a\u5373\u521d\u8d5b\uff0c\u5783\u573e\u591a\u4e2a\u5373\u51b3\u8d5b\u3002</p>"},{"location":"study/yolo/#421","title":"4.2.1 \u786c\u4ef6\u9009\u62e9","text":""},{"location":"study/yolo/#_9","title":"\u4e3b\u63a7\u9009\u62e9","text":"<p>\u63a7\u5236\u677f\u9009\u62e9\u7684\u662fArduino mega(\u7269\u6599\u5c0f\u8f66\u90e8\u5206\u6709\u63d0\u5230)\uff0c\u5173\u4e8eArduino mega\uff1a</p> <p>Arduino Mega 2560\u662f\u57fa\u4e8eATmega2560\u7684\u4e3b\u63a7\u5f00\u53d1\u677f\u3002Arduino Mega2560\u662f\u91c7\u7528USB\u63a5\u53e3\u7684\u6838\u5fc3\u7535\u8def\u677f\u3002\u5177\u670954\u8def\u6570\u5b57\u8f93\u5165\u8f93\u51fa\uff0c\u9002\u5408\u9700\u8981\u5927\u91cfIO\u63a5\u53e3\u7684\u8bbe\u8ba1\u3002\u5904\u7406\u5668\u6838\u5fc3\u662fATmega2560,\u540c\u65f6\u5177\u670954\u8def\u6570\u5b57\u8f93\u5165/\u8f93\u51fa\u53e3\uff0c16\u8def\u6a21\u62df\u8f93\u5165\uff0c4\u8defUART\u63a5\u53e3\uff0c\u4e00\u4e2a16MHz\u6676\u4f53\u632f\u8361\u5668\uff0c\u4e00\u4e2aUSB\u53e3\uff0c\u4e00\u4e2a\u7535\u6e90\u63d2\u5ea7\uff0c\u4e00\u4e2aICSP header\u548c\u4e00\u4e2a\u590d\u4f4d\u6309\u94ae\u3002\u677f\u4e0a\u6709\u652f\u6301\u4e00\u4e2a\u4e3b\u63a7\u677f\u7684\u6240\u6709\u8d44\u6e90\u3002Arduino Mega2560\u4e5f\u80fd\u517c\u5bb9\u4e3aArduino NUO\u8bbe\u8ba1\u7684\u6269\u5c55\u677f\u3002\u53ef\u4ee5\u81ea\u52a8\u9009\u62e93\u4e2d\u4f9b\u7535\u65b9\u5f0f\uff1a\u5916\u90e8\u76f4\u6d41\u7535\u6e90\u901a\u8fc7\u7535\u6e90\u63d2\u5ea7\u4f9b\u7535\uff1b\u7535\u6c60\u8fde\u63a5\u7535\u6e90\u8fde\u63a5\u5668\u7684GND\u548cVIN\u5f15\u811a\uff1bUSB\u63a5\u53e3\u76f4\u6d41\u4f9b\u7535\u3002</p> <p></p>"},{"location":"study/yolo/#_10","title":"\u5206\u7c7b\u88c5\u7f6e\u63a7\u5236\u9009\u62e9","text":"<p>1.\u5355\u79cd\u5783\u573e\u5206\u7c7b\u9009\u62e9\u4e8c\u8f74\u4e91\u53f0\u63a7\u5236\uff0c\u5373\u4e24\u4e2a\u8235\u673a\u5b8c\u6210\u7ffb\u8f6c\u8fd0\u52a8\uff1b\u8981\u9009\u62e9\u9ad8\u7cbe\u5ea6\u8235\u673a\uff0c20kg\u4ef7\u683c\u572870~90\u4e4b\u95f4\u3002</p> <p>\u53ef\u4ee5\u8bd5\u8bd5\u4e9a\u535a\u667a\u80fd\u7684\u8235\u673a\uff1a\u4e9a\u535a\u667a\u80fd15/20/25kg\u91d1\u5c5e\u6570\u5b57\u8235\u673a</p> <p></p> <p>2.\u591a\u79cd\u5783\u573e\u662f\u91c7\u7528\u4e24\u4e2a\u6b65\u8fdb\u7535\u673a\u63a7\u5236\u673a\u68b0\u81c2x\u3001y\u8f74\u8fd0\u52a8\uff0c\u7136\u540e\u75314\u4e2a\u8235\u673a\u63a7\u5236\u6293\u53d6\u3002\u6b65\u8fdb\u7535\u673a\u9009\u7528\u597d\u4e00\u4e9b\u7684\u4f46\u4e5f\u4e0d\u9700\u8981\u5f88\u5927\uff0c\u8fd9\u91cc\u63a8\u8350\u6211\u4eec\u4f7f\u7528\u7684\u6b65\u8fdb\u7535\u673a\uff1a42\u6b65\u8fdb\u7535\u673a \uff0c\u7ecf\u8fc7\u4f7f\u7528\u6d4b\u8bd5\uff0c\u8d28\u91cf\u662f\u591f\u7528\u7684\u3002\u9632\u6b62\u6b65\u8fdb\u7535\u673a\u4e22\u6b65\u60c5\u51b5\uff0c\u6b65\u8fdb\u7535\u673a\u987b\u914d\u5907\u95ed\u73af\u63a7\u5236\u5668\uff1a42\u6b65\u8fdb\u95ed\u73af\u7535\u673a\u9a71\u52a8\u5668\u6a21\u5757\uff0c\u9009\u75283D\u6253\u5370\u5957\u9910\u5373\u53ef\u3002</p> <p></p>"},{"location":"study/yolo/#_11","title":"\u6ee1\u8f7d\u68c0\u6d4b","text":"<p>\u9009\u7528\u8d85\u58f0\u6ce2\uff0c\u6839\u636e\u6d4b\u8ddd\u5224\u65ad\u662f\u5426\u6ee1\u8f7d\u3002\u56e0\u4e3a\u5783\u573e\u6876\u89c4\u5b9a\u4e3a\u900f\u660e\uff0c\u7ea2\u5916\u6d4b\u8ddd\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u8d85\u58f0\u6ce2\u5219\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\u3002</p> <p></p>"},{"location":"study/yolo/#422","title":"4.2.2 \u9a71\u52a8\u9009\u62e9","text":"<p>\u9a71\u52a8\u65b9\u9762\u4e3b\u8981\u5c31\u662f\u6d89\u53ca\u5230\u8235\u673a\u3001\u6b65\u8fdb\u7535\u673a\u3001\u7a33\u538b\u3002</p>"},{"location":"study/yolo/#_12","title":"\u8235\u673a\u62d3\u5c55\u677f","text":"<p>\u88c5\u7f6e\u6d89\u53ca\u5230\u7684\u8235\u673a\u8fbe\u5230\u4e8610\u4e2a\u5de6\u53f3\uff0c\u6240\u4ee5\u914d\u5907\u4e00\u4e2a\u8235\u673a\u62d3\u5c55\u677f\u63a7\u5236\u66f4\u7b80\u5355\u4e14\u65b9\u4fbf\uff0c\u5e7b\u5c14\u79d1\u6280\u548c\u4e9a\u535a\u667a\u80fd\u7684\u62d3\u5c55\u677f\u529f\u80fd\u591a\u4e00\u4e9b\uff0c\u5177\u5907\u4e32\u53e3\u6216\u84dd\u7259\u8c03\u8bd5\u529f\u80fd(\u5bf9\u4e8e\u673a\u68b0\u81c2\u66f4\u6709\u7528)\uff0c\u4ef7\u683c\u4e5f\u66f4\u9ad8\u4e00\u4e9b\uff1b\u7b2c\u4e09\u4e2a\u94fe\u63a5\u5219\u4fbf\u5b9c\u4e00\u4e9b\uff0c\u4e0d\u5177\u5907\u4e32\u53e3\u6216\u84dd\u7259\u8c03\u8bd5\u529f\u80fd\u3002</p> <p>\u5e7b\u5c14\u79d1\u628016\u8def\u8235\u673a\u63a7\u5236\u5668</p> <p>\u4e9a\u535a\u667a\u80fd16\u8def\u8235\u673a\u9a71\u52a8\u677f</p> <p>16\u8defPWM Servo\u8235\u673a\u9a71\u52a8\u677f\u6a21\u5757</p> <p>\u8235\u673a\u62d3\u5c55\u677f\u9700\u8981\u901a\u8fc7\u7535\u6c60\u7a33\u538b\u63a5\u5165\u7535\u6e90\uff0c\u800c\u8235\u673a\u7535\u6e90\u4e00\u822c\u4e3a5~8V\uff0c\u8c03\u52306.5V\u4e2a\u4eba\u8ba4\u4e3a\u8f83\u5408\u9002\u3002\u8235\u673a\u6570\u91cf\u589e\u52a0\u4f1a\u5bfc\u81f4\u7535\u6d41\u589e\u9ad8\uff0c\u6240\u4ee5\u7a33\u538b\u6a21\u5757\u7684\u8f93\u51fa\u7535\u6d41\u8981\u5c3d\u53ef\u80fd\u9ad8\uff0c\u63a8\u8350\u6700\u540e\u4e00\u4e2a\u94fe\u63a5\u7684\u7a33\u538b\u6a21\u5757\u3002</p> <p>\u6570\u663e8A\u5e26\u7a33\u538b\u964d\u538b\u6a21\u5757</p>"},{"location":"study/yolo/#_13","title":"\u6b65\u8fdb\u7535\u673a\u95ed\u73af\u9a71\u52a8","text":"<p>\u6b65\u8fdb\u7535\u673a\u7528\u4e8e\u51b3\u8d5b\u6293\u53d6\uff0c\u7cbe\u5ea6\u8981\u6c42\u5f88\u9ad8\uff0c\u95ed\u73af\u9a71\u52a8\u677f\u5c5e\u4e8e\u5fc5\u5907\uff01</p> <p>42\u6b65\u8fdb\u95ed\u73af\u7535\u673a\u9a71\u52a8\u5668\u6a21\u5757</p>"},{"location":"study/yolo/#423","title":"4.2.3 \u63a7\u5236\u7b97\u6cd5","text":""},{"location":"study/yolo/#43","title":"4.3 \u76ee\u6807\u68c0\u6d4b\u73af\u5883\u642d\u5efa","text":""},{"location":"study/yolo/#431","title":"4.3.1 \u786c\u4ef6\u9009\u62e9","text":"<p>\u89c6\u89c9\u91c7\u7528\u6811\u8393\u6d3e4B+USB\u6444\u50cf\u5934+7\u5bf8\u7535\u5bb9\u5c4f</p> <p>\u6811\u8393\u6d3e\u63a8\u8350\u4e86\u4e24\u5bb6\uff0c\u4e9a\u535a\u667a\u80fd\u662f\u5927\u5382\uff0c\u4ef7\u683c\u4f1a\u8d35\u4e00\u4e9b\u4e5f\u4f1a\u9001\u4e00\u4e9b\u8d44\u6599\u548c\u4ea4\u6d41\u7fa4(\u4e2a\u4eba\u611f\u89c9\u8d44\u6599\u7528\u5904\u4e0d\u5927\uff0c\u4e0d\u5982\u4e0a\u7f51\u67e5)\uff0c\u4e0d\u8fc7\u73b0\u5728\u6811\u8393\u6d3e\u964d\u4ef7\u4e86\uff0c\u4e5f\u53ef\u4ee5\u63a5\u53d7\u3002\u540e\u4e00\u5bb6\u4f1a\u4fbf\u5b9c\u4e00\u4e9b\uff0c\u6211\u540e\u9762\u90fd\u662f\u5728\u8fd9\u4e00\u5bb6\u4e70\u7684\uff0c\u552e\u540e\u4e5f\u6709\u89e3\u51b3\u8fc7\u4e00\u4e9b\u95ee\u9898\u3002</p> <p>\u6811\u8393\u6d3e4B-4GB\uff1a\u6811\u8393\u6d3e4B Raspberry Pi 4 \uff0c\u4e9a\u535a\u667a\u80fd Raspberry Pi\u6811\u8393\u6d3e4B </p> <p>\u8fd9\u4e2a\u6811\u8393\u6d3e\u6559\u7a0b\u7b97\u662f\u542c\u4e0d\u9519\u7684\uff0c\u57fa\u7840\u914d\u7f6e\u4f1a\u6559\uff0c\u5d4c\u5165\u5f0f\u5f00\u53d1\u4e5f\u4f1a\u6559\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u7cfb\u5217\u597d\u50cf\u6ca1\u6709\u66f4\u65b0\u5b8c\uff0c\u4e0d\u8fc7\u770b\u5b8c\u5c31\u5bf9\u6811\u8393\u6d3e\u4e86\u89e3\u4e0d\u5c11\u4e86\u3002\u53e6\u5916\uff0c\u6211\u7528\u6811\u8393\u6d3e\u5f15\u811a\u60c5\u51b5\u5f88\u5c11\uff0c\u66f4\u591a\u662f\u505a\u89c6\u89c9\uff0c\u53ea\u9700\u8981\u4e00\u4e2a\u6444\u50cf\u5934\u5c31\u597d\u4e86\uff0c\u5ea7\u6905\u4e0d\u9700\u8981\u8fc7\u591a\u5b66\u4e60\uff0c\u4f46\u8981\u4e86\u89e3Linux\u547d\u4ee4\uff0c\u7528\u591a\u4e86\u5c31\u719f\u7ec3\u4e86\u3002</p> <p>\u6811\u8393\u6d3e\u89c6\u9891\u5b66\u4e60\uff1a\u6811\u8393\u6d3e\u5341\u5206\u949f\u73a9\u8f6c\u7cfb\u5217\u5165\u95e8\u7bc7_</p> <p>\u6444\u50cf\u5934\u5176\u5b9e\u4e00\u5f00\u59cb\u7528\u7684\u662f\u5b98\u65b9\u4e8c\u4ee3\u6444\u50cf\u5934\uff0c\u4f46\u662f\u6821\u8d5b\u524d\u4e00\u5929\u665a\u4e0a\u7a81\u7136\u574f\u4e86\uff0c\u5f53\u65f6\u4e34\u65f6\u501f\u7684\u4e00\u4e2a\u6444\u50cf\u5934\uff0c\u91cd\u65b0\u8c03\u8bd5\u89d2\u5ea6\u5b8c\u6210\u7684\u6bd4\u8d5b\uff1b\u540e\u6765\u4e70\u4e86\u4e00\u4e2a\u53c8\u83ab\u540d\u5176\u5999\u7684\u574f\u4e86\uff0c\u6240\u4ee5\u540e\u6765\u6362\u4e86USB\u6444\u50cf\u5934\uff0c\u4e0d\u5bb9\u6613\u574f\u3002</p> <p>\u6811\u8393\u6d3e\u5b98\u65b9\u6444\u50cf\u5934\uff1a\u6811\u8393\u6d3e\u5b98\u65b9\u539f\u88c5\u6444\u50cf\u5934Pi </p> <p>\u6811\u8393\u6d3e\u5b98\u65b9\u4e8c\u4ee3\u6444\u50cf\u5934\u50cf\u7d20\u662f800\u4e07\uff0c\u5176\u5b9e\u591f\u7528\uff0c\u8fd9\u4e2aUSB\u6444\u50cf\u5934\u662f1200\u4e07\uff0c\u5f88\u6e05\u6670\u3002\u6211\u8fd8\u662f\u63a8\u8350\u6811\u8393\u6d3e\u5b98\u65b9\u4e8c\u4ee3\u6444\u50cf\u5934\uff0c\u53ea\u6709\u4ed6\u4e0d\u51fa\u5947\u602a\u95ee\u9898\u8fd8\u662f\u5f88\u597d\u7528\u7684\u3002(\u63d0\u9192\u4e00\u4e0b\u4e0d\u8981\u4e703\u4ee3\uff0c\u5b83\u4ec5\u652f\u6301\u6700\u65b0\u7cfb\u7edf\uff0c\u5f88\u591a\u914d\u7f6e\u90fd\u4e0d\u65b9\u4fbf\uff0c\u627e\u4e0d\u5230\u6559\u7a0b)</p> <p>USB\u6444\u50cf\u5934\uff1a1200\u4e07\u7535\u8111\u6444\u5f71\u5934USB\u5de5\u4e1a\u6444\u50cf\u59344K</p> <p>\u663e\u793a\u5c4f\u4e00\u822c\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u6570\u636e\u7ebf\u63a5\u53e3\u5728\u540e\u9762\u4e00\u79cd\u5728\u4fa7\u9762\uff0c\u63a8\u8350\u4e70\u5728\u4fa7\u9762\u7684\u3002\u6700\u597d\u9009\u89e6\u6478\u6b3e\uff0c\u8c03\u8bd5\u4ee3\u7801\u65b9\u4fbf\u3002</p> <p>7\u5bf8\u663e\u793a\u5c4f\uff1a\u6811\u8393\u6d3e\u663e\u793a\u5c4f 4B 7\u5bf8 \u8d85\u6e05\u89e6\u6478\u5c4f</p>"},{"location":"study/yolo/#432","title":"4.3.2 \u76ee\u6807\u68c0\u6d4b\u6a21\u578b","text":"<p>\u4e0a\u4e00\u8282\u8bf4\u4e86\u786c\u4ef6\u9009\u578b\uff0c\u5b8c\u6210\u4ee5\u540e\u5c31\u53ef\u4ee5\u51c6\u5907\u8f6f\u4ef6\u65b9\u9762\u4e86\u3002</p> <p>\u6700\u540e\u7684\u89c6\u89c9\u65b9\u6848\u662fYOLOv5-Lite + onnx\u63a8\u7406\u52a0\u901f</p>"},{"location":"study/yolo/#433","title":"4.3.3 \u8bad\u7ec3\u73af\u5883\u642d\u5efa\uff08\u6709\u4fee\u6539\uff09","text":"<p>\u89e3\u91ca\u4e00\u4e0b\uff0cyolo\u662f\u4e00\u79cd\u76ee\u6807\u68c0\u6d4b\u6a21\u578b\uff0c\u6709\u5f88\u591a\u7248\u672c\uff0cyolov5\u662f\u4ed6\u7684\u4e00\u4e2a\u5b98\u65b9\u7248\u672c\uff0c\u800cyolov5-lite\u662f\u7531\u4e00\u4f4d\u5927\u4f6c\u6539\u826f\u540e\u7684\u4e00\u79cd\u66f4\u8f7b\u91cf\u7ea7\u6a21\u578b\uff0c\u4e3a\u4ec0\u4e48\u9700\u8981\u8f7b\u91cf\u7ea7\u5462\uff0c\u56e0\u4e3a\u592a\u5927\u7684\u6a21\u578b\u8ba1\u7b97\u91cf\u5927\uff0c\u6811\u8393\u6d3e\u5e26\u4e0d\u52a8\uff0c\u7b97\u529b\u4e0d\u591f\uff0c\u5c31\u4f1a\u5bfc\u81f4\u89c6\u9891\u753b\u9762\u5f88\u5361\uff0c\u68c0\u6d4b\u901f\u5ea6\u4e5f\u6162\u3002\u672c\u8d28\u4e0ayolov5\u548cyolov5-lite\u4f7f\u7528\u65b9\u5f0f\u662f\u4e00\u6837\u7684\u3002</p> <p>\u5b8c\u6574\u7684\u89c6\u9891\u6559\u7a0b\uff0c\u642d\u5efayolov5-lite\u6a21\u578b\u8bad\u7ec3\u73af\u5883\uff1a\u624b\u628a\u624b\u6559\u4f60\u642d\u5efa\u81ea\u5df1\u7684yolov5\u76ee\u6807\u68c0\u6d4b\u5e73\u53f0</p> <p>\u5b8c\u6574\u7684\u535a\u5ba2\u6587\u6863\uff1a\u76ee\u6807\u68c0\u6d4b--\u624b\u628a\u624b\u6559\u4f60\u642d\u5efa\u81ea\u5df1\u7684YOLOv5\u76ee\u6807\u68c0\u6d4b\u5e73\u53f0_\u70ae\u54e5\u5e26\u4f60\u5b66\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u4ee5\u4e0a\u6559\u7a0b\u8bbe\u8ba1\u5230\u5185\u5bb9\u5305\u62ec\uff1a</p> <ul> <li>\u642d\u5efayolov5-lite\u8bad\u7ec3\u73af\u5883\u3002</li> <li>\u6570\u636e\u96c6\u7684\u6807\u6ce8\u3002</li> <li>\u8bad\u7ec3\u81ea\u5b9a\u4e49\u6570\u636e\u96c6\uff0c\u5bfc\u51fapt\u6587\u4ef6\u3002</li> </ul> <p>\u5728<code>export.py</code>\u6587\u4ef6\u76ee\u5f55\u7ec8\u7aef\u53ef\u4ee5\u8fd0\u884c\u4e0b\u5217\u4ee3\u7801\u8fdb\u884c\u6a21\u578b\u8f6c\u6362(.pt-&gt;.onnx)\uff1a</p> <p>\u7b2c\u4e00\u7248\u6587\u6863\u8fd9\u91cc\u6709\u4e2a\u9519\u8bef\uff0c\u6587\u5b57\u63cf\u8ff0\u9519\u8bef\uff0c\u4ee5\u6b64\u7248\u4e3a\u4e3b\u3002</p> <pre><code>python export.py --weights best.pt\n</code></pre>"},{"location":"study/yolo/#434","title":"4.3.4 \u6811\u8393\u6d3e\u73af\u5883\u642d\u5efa","text":"<p>\u7ecf\u8fc7\u4e0a\u4e00\u4e2a\u8fc7\u7a0b\uff0c\u6211\u4eec\u5c31\u5df2\u7ecf\u628a\u6211\u4eec\u7684\u6a21\u578b\u8bad\u7ec3\u5b8c\u6210\uff0c\u540e\u7eed\u9700\u8981\u7684\u662f\u901a\u8fc7\u4ee3\u7801\u89e3\u6790\u8fd9\u4e2apt\u6587\u4ef6\uff0c\u7136\u540e\u901a\u8fc7\u5b83\u53bb\u68c0\u6d4b\u6444\u50cf\u5934\u4e00\u5e27\u4e00\u5e27\u7684\u56fe\u50cf\u6570\u636e\uff0c\u5206\u6790\u6211\u4eec\u76ee\u6807\u7684\u79cd\u7c7b\u3002\u6b65\u9aa4\u5982\u4e0b\uff1a</p>"},{"location":"study/yolo/#1_1","title":"1. \u914d\u7f6e\u6811\u8393\u6d3e\u73af\u5883","text":"<p>\u6811\u8393\u6d3e4b\u5b89\u88c5yolov5\u5b9e\u73b0\u5b9e\u65f6\u76ee\u6807\u68c0\u6d4b_\u6811\u8393\u6d3e4b\u8dd1yolov5\u5e27\u7387\u4f4e-CSDN\u535a\u5ba2\uff0c\u8fd9\u4e2a\u597d\u50cf\u9700\u8981\u4f1a\u5458\u770b\u4e86</p> <p>\u57fa\u4e8e\u6811\u8393\u6d3e4B\u7684YOLOv5-Lite\u76ee\u6807\u68c0\u6d4b\u7684\u79fb\u690d\u4e0e\u90e8\u7f72\uff08\u542b\u8bad\u7ec3\u6559\u7a0b\uff09_\u6811\u8393\u6d3eyolo-CSDN\u535a\u5ba2</p> <p>\u6811\u8393\u6d3e-\u5feb\u901f\u76ee\u6807\u68c0\u6d4byoloV5-lite\u8bad\u7ec3\u4e0e\u79fb\u690d_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>\u4ee5\u4e0a\u4ec5\u4f5c\u53c2\u8003\uff0c\u56e0\u4e3a\u4ed6\u4eec\u6709\u4e9b\u5e93\u53ef\u80fd\u5b89\u88c5\u4e0d\u4e0a\uff0c\u4e14\u63a8\u7406\u4ee3\u7801\u7531\u4e9b\u8bb8BUG\uff0c\u5927\u5bb6\u6839\u636e\u6211\u7684\u6d41\u7a0b\u5e76\u53c2\u8003\u4ed6\u4eec\u7684\u4e00\u8d77\u770b\uff0c\u6211\u4f1a\u628a\u6211\u4fee\u6539\u8fc7\u7684\u63a8\u7406\u4ee3\u7801\u653e\u5728\u8fd9\u91cc\u3002</p> <p>\u5176\u5b9e\u672c\u6765\u7531\u5f88\u591a\u8d44\u6599\u3001\u955c\u50cf\u3001\u5e93\u6587\u4ef6\u6211\u4fdd\u5b58\u597d\u4e86\uff0c\u4f46\u662f\u6bd4\u8d5b\u7684\u65f6\u5019\u6211\u628a\u5b58\u8d44\u6599\u7684U\u76d8\u4e22\u4e86\uff0c\u8d44\u6599\u4e5f\u4e22\u4e86\ud83d\ude2d\ud83d\ude2d\ud83d\ude2d\uff0c\u6211\u65b0\u4e70\u7684U\u76d8\u8fd8\u662f\ud83d\ude23\ud83d\ude23\ud83d\ude23\u3002\u4e0d\u8fc7\u95ee\u9898\u4e0d\u5927\uff0c\u6211\u624b\u6572\u4e00\u904d\u8fc7\u7a0b\uff0c\u518d\u627e\u4e00\u904d\u8d44\u6599\u3002</p> <p>\u6811\u8393\u6d3e\u5f00\u673a\uff0c\u5b8c\u6210\u57fa\u7840\u914d\u7f6e\u3002</p> <p>\u8fd9\u91cc\u662f\u6211\u8d2d\u4e70\u6811\u8393\u6d3e\u83b7\u5f97\u7684\u4e9a\u535a\u667a\u80fd\u7684\u8d44\u6599\uff0c\u514d\u8d39\u5206\u7ed9\u5927\u5bb6\uff1a</p> <p>\u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1Jm9qrot5CN4mZSJJhASeXg?pwd=cmzz  \u63d0\u53d6\u7801\uff1acmzz</p> <p>\u5b8c\u6210\u57fa\u7840\u8bbe\u7f6e\u90e8\u5206\u65e2\u53ef\u3002\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\u8bbe\u7f6e\u5f00\u673a\u81ea\u542f\u52a8\u7a0b\u5e8f\uff0c\u6bd4\u8d5b\u8981\u6c42\u4e00\u952e\u542f\u52a8\uff0c\u6240\u4ee5\u8981\u5728\u81ea\u542f\u52a8\u6587\u4ef6\u91cc\u9762\u628a\u6211\u4eec\u7684\u7a0b\u5e8f\u542f\u52a8\u3002</p>"},{"location":"study/yolo/#2-yolov5-lite","title":"2. yolov5-lite\u79fb\u690d","text":"<p>\u7531\u4e8e\u624b\u8fb9\u6ca1\u6709\u6811\u8393\u6d3e\uff0c\u6240\u4ee5\u90e8\u5206\u5185\u5bb9\u6211\u7528\u865a\u62df\u673a\u6f14\u793a\uff0c\u5b9e\u9645\u662f\u57fa\u672c\u4e00\u81f4\u7684\u3002</p> <ol> <li>\u514b\u9686yolov5-lite</li> </ol> <p>\u8bbf\u95eeGithub\u7684yolov5-lite\u5730\u5740(\u8bb0\u5f97\u4f7f\u7528\u9b54\u6cd5)\uff1a\u4e0b\u8f7dYOLOv5-Lite</p> <p></p> <p>\u63a8\u8350\u76f4\u63a5\u4e0b\u8f7d\u538b\u7f29\u5305\u628a\u538b\u7f29\u5305\u4f20\u5230\u6811\u8393\u6d3e\uff0c\u76f4\u63a5\u53f3\u952e\u89e3\u538b\u6216\u7ec8\u7aef\u89e3\u538b\uff0c\u56fe\u793a\u7684\u6587\u4ef6\u5c06\u90fd\u4f1a\u5b58\u5728\u4e8e\u6587\u4ef6\u5939\u3002</p> <pre><code>unzip your_file.zip # \u89e3\u538b\n</code></pre> <p>\u89e3\u538b\u4ee5\u540e\u7684\u6587\u4ef6\u7ed3\u6784\u5982\u4e0b\u56fe\uff0cYOLO-Lite-master\u662f\u6587\u4ef6\u5939\u540d\u79f0\uff0c\u540e\u7eed\u5c31\u79f0\u4e4b\u4e3ayolov5-lite\u6587\u4ef6\u5939</p> <p></p> <p>\u89e3\u91ca\u4e00\u4e0b\u6587\u4ef6\u5939\u4e0b\u6253\u5f00\u7ec8\u7aef\uff0c\u4f8b\u5982\uff1a\u5728yolov5-lite\u6587\u4ef6\u5939\u4e0b\u6253\u5f00\u7ec8\u7aef\uff0c\u5373\u7ec8\u7aef\u4f4d\u7f6e\u5728yolov5-lite\u6587\u4ef6\u5939\u4f4d\u7f6e\u3002</p> <p></p> <p>\u64cd\u4f5c\u65b9\u6cd5\u4e3a\u9ed8\u8ba4\u7ec8\u7aef\u8f93\u5165<code>cd + your_path</code>\uff0c\u4f8b\u5982\uff1a</p> <p></p> <p>\u53ef\u4ee5\u6572\u524d\u51e0\u4e2a\u5b57\u6bcd\uff0c\u7528Tab\u952e\u8865\u9f50\u3002\u540e\u7eed\u4f1a\u76f4\u63a5\u8bf4\u5728\u67d0\u4e00\u4e2a\u6587\u4ef6\u5939\u4e0b\u6253\u5f00\u7ec8\u7aef\uff0c\u627e\u5230\u8def\u5f84\u81ea\u884c\u64cd\u4f5c\u3002</p> <ol> <li>\u5b89\u88c5pytorch</li> </ol> <p>\u5b89\u88c5\u4f9d\u8d56</p> <pre><code>sudo apt-get install libopenblas-dev libblas-dev m4 cmake cython python3-dev python3-yaml python3-setuptools python3-wheel python3-pillow python3-numpy\n</code></pre> <p>\u5728\u6211\u7684\u8d44\u6599\u5305\u627e\u5230pytorch\u5b89\u88c5\u5305\uff0c\u901a\u8fc7\u6587\u4ef6\u4f20\u8f93\u52a9\u624bWinSCP\u4f20\u8f93\u5230\u6811\u8393\u6d3e(4\u4e2a\u6587\u4ef6\u90fd\u4f20\u8f93\uff0c\u540e\u9762\u90fd\u8981\u6709)\uff0c\u5728pytorch\u5b89\u88c5\u6587\u4ef6\u7684\u76ee\u5f55\u4e0b\u6253\u5f00\u7ec8\u7aef\uff0c\u6267\u884c\u4e0b\u9762\u547d\u4ee4\u5b89\u88c5pytorch\uff1a</p> <pre><code>pip3 install torch-1.8.0a0+56b43f4-cp37-cp37m-linux_armv7l.whl\npip3 install torchvision-0.9.0a0+8fb5838-cp37-cp37m-linux_armv7l.whl\n</code></pre> <p></p> <p></p> <ol> <li>\u5b89\u88c5\u4f9d\u8d56</li> </ol> <p>yolov5-lite\u6587\u4ef6\u5939\u4e0b\u627e\u5230requirements.txt\uff0c\u8fd9\u91cc\u662f\u9700\u8981\u5b89\u88c5\u7684\u5e93\u7684\u7248\u672c\uff0c\u628a\u6211\u4eec\u5df2\u7ecf\u5b89\u88c5\u8fc7\u7684torch\u548ctorchvision\u6ce8\u91ca\u6389\uff0c\u7136\u540e\u6587\u4ef6\u5939\u4e0b\u6253\u5f00\u7ec8\u7aef\u6267\u884c\u5b89\u88c5\u547d\u4ee4\uff1a</p> <pre><code>pip3 install -r requirements.txt\n</code></pre> <p></p> <p>\u5c06v5lite-s.pt\u6587\u4ef6\u8f6c\u79fb\u5230\u6811\u8393\u6d3e\u4e0byolov5-lite\u6587\u4ef6\u5939\u4e0b</p> <p></p> <ol> <li>\u6444\u50cf\u5934\u914d\u7f6e</li> </ol> <p>\u68c0\u6d4b\u6811\u8393\u6d3e\u662f\u5426\u6709opencv\uff0c\u6253\u5f00\u7ec8\u7aef\uff0c\u8f93\u5165<code>python3</code>\u8c03\u51fapython\u7ec8\u7aef\uff0c\u8f93\u5165<code>import cv2</code>\u4e0d\u62a5\u9519\u5373\u53ef</p> <p></p> <p>\u65b0\u5efaPyProjects\u6587\u4ef6\u5939\uff0c\u6587\u4ef6\u5939\u4e0b\u65b0\u5efa\u6587\u4ef6cv_test.py</p> <pre><code>mkdir PyProjects\ncd PyProjects\ntouch cv_test.py\n</code></pre> <p></p> <p>\u590d\u5236\u4e0b\u9762\u4ee3\u7801\u5230cv_test.py\u6587\u4ef6\u3002</p> <pre><code>import cv2\n\n# \u521b\u5efa\u6444\u50cf\u5934\u5bf9\u8c61\ncap = cv2.VideoCapture(-1)  # 0 \u8868\u793a\u9ed8\u8ba4\u6444\u50cf\u5934\uff0c\u5982\u679c\u6709\u591a\u4e2a\u6444\u50cf\u5934\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4e0d\u540c\u7684\u7f16\u53f7\n\n# \u68c0\u67e5\u6444\u50cf\u5934\u662f\u5426\u6210\u529f\u6253\u5f00\nif not cap.isOpened():\n    print(\"\u65e0\u6cd5\u6253\u5f00\u6444\u50cf\u5934\")\n    exit()\n\n# \u8bbe\u7f6e\u6444\u50cf\u5934\u5206\u8fa8\u7387\uff08\u53ef\u9009\uff09\n# cap.set(cv2.CAP_PROP_FRAME_WIDTH, 640)\n# cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)\n\nwhile True:\n    # \u4ece\u6444\u50cf\u5934\u8bfb\u53d6\u4e00\u5e27\u56fe\u50cf\n    ret, frame = cap.read()\n\n    # \u68c0\u67e5\u5e27\u662f\u5426\u6210\u529f\u8bfb\u53d6\n    if not ret:\n        print(\"\u65e0\u6cd5\u8bfb\u53d6\u5e27\")\n        break\n\n    # \u5728\u7a97\u53e3\u4e2d\u663e\u793a\u56fe\u50cf\n    cv2.imshow('\u6444\u50cf\u5934\u6d4b\u8bd5', frame)\n\n    # \u6309\u4e0b 'q' \u952e\u9000\u51fa\u5faa\u73af\n    if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n        break\n\n# \u91ca\u653e\u6444\u50cf\u5934\u8d44\u6e90\ncap.release()\n\n# \u5173\u95ed\u6240\u6709\u7a97\u53e3\ncv2.destroyAllWindows()\n</code></pre> <p>\u6253\u5f00\u7ec8\u7aef\uff0c\u8fd0\u884c\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230\u6444\u50cf\u5934\u753b\u9762\u5219\u6ca1\u6709\u95ee\u9898\u3002</p> <pre><code>python3 cv_test.py\n</code></pre> <p></p> <p>Ctrl+c\u9000\u51fa\uff0c\u8f93\u5165<code>ls /dev/video*</code>\u67e5\u770b\u6444\u50cf\u5934\u8bbe\u5907\uff0c\u4e00\u822c\u662f0/1</p> <p></p> <ol> <li>\u63a8\u7406</li> </ol> <p>yolov5-lite\u7684\u6839\u76ee\u5f55\u4e0b\uff0c\u6253\u5f00\u7ec8\u7aef\u5c1d\u8bd5\u63a8\u7406\uff1a</p> <pre><code>python3 detect.py --source 0\n</code></pre> <p>source 0\u4e0d\u884c\u53ef\u4ee5\u8bd5\u8bd5source 1\uff0c\u53d6\u51b3\u4e8e\u6444\u50cf\u5934\u8bbe\u5907\u3002</p>"},{"location":"study/yolo/#3-onnx","title":"3. onnx\u63a8\u7406","text":"<p>\u5b89\u88c5onnxruntime</p> <p>\u5728\u6211\u7684\u8d44\u6599\u5305\u91cc\uff0connx\u63a8\u7406\u6587\u4ef6\u5939\u4e0b\u6709\u4e00\u4e2aonnxruntime\u5e93\u7684\u5b89\u88c5\u6587\u4ef6\uff0c\u901a\u8fc7\u6587\u4ef6\u4f20\u8f93\u52a9\u624bWinSCP\u4f20\u8f93\u5230\u6811\u8393\u6d3e\uff0c\u6267\u884c\u4e0b\u9762\u547d\u4ee4\u5b89\u88c5\uff1a</p> <pre><code>pip3 install onnxruntime-1.9.1-cp37-none-linux_armv7l.whl\n</code></pre> <p>\u6ce8\u610f\uff1aonnxruntime\u7684\u5b89\u88c5\u9700\u8981python3.7 \u548c numpy 1.21\u4ee5\u4e0a</p> <pre><code>pip3 install numpy # \u5b89\u88c5numpy\n</code></pre> <p></p> <p>onnx\u63a8\u7406</p> <p>\u65b0\u5efa\u6587\u4ef6yolo.py\uff0c<code>python3 yolo.py</code>\u8fd0\u884c\u5373\u53ef\u3002</p> <pre><code>import random\n\nimport cv2\nimport numpy as np\nimport onnxruntime as ort\nimport time\n\n\ndef plot_one_box(x, img, color=None, label=None, line_thickness=None):\n    \"\"\"\n    description: Plots one bounding box on image img,\n                 this function comes from YoLov5 project.\n    param: \n        x:      a box likes [x1,y1,x2,y2]\n        img:    a opencv image object\n        color:  color to draw rectangle, such as (0,255,0)\n        label:  str\n        line_thickness: int\n    return:\n        no return\n    \"\"\"\n    tl = (\n            line_thickness or round(0.002 * (img.shape[0] + img.shape[1]) / 2) + 1\n    )  # line/font thickness\n    color = color or [random.randint(0, 255) for _ in range(3)]\n    x = x.squeeze()\n    c1, c2 = (int(x[0]), int(x[1])), (int(x[2]), int(x[3]))\n    cv2.rectangle(img, c1, c2, color, thickness=tl, lineType=cv2.LINE_AA)\n    if label:\n        tf = max(tl - 1, 1)  # font thickness\n        t_size = cv2.getTextSize(label, 0, fontScale=tl / 3, thickness=tf)[0]\n        c2 = c1[0] + t_size[0], c1[1] - t_size[1] - 3\n        cv2.rectangle(img, c1, c2, color, -1, cv2.LINE_AA)  # filled\n        cv2.putText(\n            img,\n            label,\n            (c1[0], c1[1] - 2),\n            0,\n            tl / 3,\n            [225, 255, 255],\n            thickness=tf,\n            lineType=cv2.LINE_AA,\n        )\n\n\ndef _make_grid(nx, ny):\n    xv, yv = np.meshgrid(np.arange(ny), np.arange(nx))\n    return np.stack((xv, yv), 2).reshape((-1, 2)).astype(np.float32)\n\n\ndef cal_outputs(outs, nl, na, model_w, model_h, anchor_grid, stride):\n    row_ind = 0\n    grid = [np.zeros(1)] * nl\n    for i in range(nl):\n        h, w = int(model_w / stride[i]), int(model_h / stride[i])\n        length = int(na * h * w)\n        if grid[i].shape[2:4] != (h, w):\n            grid[i] = _make_grid(w, h)\n\n        outs[row_ind:row_ind + length, 0:2] = (outs[row_ind:row_ind + length, 0:2] * 2. - 0.5 + np.tile(\n            grid[i], (na, 1))) * int(stride[i])\n        outs[row_ind:row_ind + length, 2:4] = (outs[row_ind:row_ind + length, 2:4] * 2) ** 2 * np.repeat(\n            anchor_grid[i], h * w, axis=0)\n        row_ind += length\n    return outs\n\n\ndef post_process_opencv(outputs, model_h, model_w, img_h, img_w, thred_nms, thred_cond):\n    conf = outputs[:, 4].tolist()\n    c_x = outputs[:, 0] / model_w * img_w\n    c_y = outputs[:, 1] / model_h * img_h\n    w = outputs[:, 2] / model_w * img_w\n    h = outputs[:, 3] / model_h * img_h\n    p_cls = outputs[:, 5:]\n    if len(p_cls.shape) == 1:\n        p_cls = np.expand_dims(p_cls, 1)\n    cls_id = np.argmax(p_cls, axis=1)\n\n    p_x1 = np.expand_dims(c_x - w / 2, -1)\n    p_y1 = np.expand_dims(c_y - h / 2, -1)\n    p_x2 = np.expand_dims(c_x + w / 2, -1)\n    p_y2 = np.expand_dims(c_y + h / 2, -1)\n    areas = np.concatenate((p_x1, p_y1, p_x2, p_y2), axis=-1)\n\n    areas = areas.tolist()\n    ids = cv2.dnn.NMSBoxes(areas, conf, thred_cond, thred_nms)\n    if len(ids) &gt; 0:\n        return np.array(areas)[ids], np.array(conf)[ids], cls_id[ids]\n    else:\n        return [], [], []\n\n\ndef infer_img(img0, net, model_h, model_w, nl, na, stride, anchor_grid, thred_nms=0.4, thred_cond=0.5):\n    # \u56fe\u50cf\u9884\u5904\u7406\n    img = cv2.resize(img0, (model_w, model_h), interpolation=cv2.INTER_AREA)\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n    img = img.astype(np.float32) / 255.0\n    blob = np.expand_dims(np.transpose(img, (2, 0, 1)), axis=0)\n\n    # \u6a21\u578b\u63a8\u7406\n    outs = net.run(None, {net.get_inputs()[0].name: blob})[0].squeeze(axis=0)\n\n    # \u8f93\u51fa\u5750\u6807\u77eb\u6b63\n    outs = cal_outputs(outs, nl, na, model_w, model_h, anchor_grid, stride)\n\n    # \u68c0\u6d4b\u6846\u8ba1\u7b97\n    img_h, img_w, _ = np.shape(img0)\n    boxes, confs, ids = post_process_opencv(outs, model_h, model_w, img_h, img_w, thred_nms, thred_cond)\n\n    return boxes, confs, ids\n\n\n# \u5f97\u5230\u4e2d\u5fc3\u5750\u6807\ndef get_centre(x_list):\n    c_x = (x_list[0] + x_list[2]) / 2\n    c_y = (x_list[1] + x_list[3]) / 2\n    # c_x = c_x*np.cos(np.radians(45))-c_y*np.sin(np.radians(45))\n    # c_y = c_y*np.cos(np.radians(45))+c_x*np.sin(np.radians(45))\n    c_list = [c_x, c_y]\n    # \u8fd4\u56de\u4e2d\u5fc3\u5750\u6807\u5217\u8868\n    return c_list\n\n\n# \u5f97\u5230\u9762\u79ef\ndef get_area(label_list):\n    length = label_list[2] - label_list[0]\n    height = label_list[3] - label_list[1]\n    area = []\n    # \u9762\u79ef\n    area.append(length * height)\n    area.append(length/height)\n    return area\n\n\n# \u5f97\u5230\u6700\u5927\u9762\u79ef\u7684\u5750\u6807\ndef get_data(c_list, ids_, scores_):\n\n    # \u83b7\u53d6\u5750\u6807\u8bc6\u522b\u6807\u7b7e\u4e2a\u6570\n    coordinate_length = len(c_list)\n    # \u4e2d\u5fc3\u5750\u6807\u5217\u8868\n    centre_list = []\n    area_list = []\n    l_h_list = []\n    # \u5206\u522b\u8bfb\u53d6\u6bcf\u4e2a\u6807\u7b7e\u7684\u6570\u636e\n    for i in range(int(coordinate_length)):\n        # \u83b7\u53d6\u6bcf\u4e2a\u6807\u7b7e\u7684\u5750\u6807\u5217\u8868\n        coordinate = c_list[i]\n        # \u83b7\u53d6\u9762\u79ef\u548c\u957f\u5bbd\u6bd4\n        area, l_h = get_area(coordinate)\n        # \u4e2d\u5fc3\u70b9\u5750\u6807\u5217\u8868\n        centre_list.append(get_centre(coordinate))\n        # \u9762\u79ef\u5217\u8868\n        area_list.append(area)\n        # \u83b7\u53d6\u957f\u5bbd\u6bd4()\n        l_h_list.append(l_h)\n    if area_list:\n        max_area = max(area_list)\n        # \u8bfb\u53d6\u9762\u79ef\u6700\u5927\u7684\u6807\u7b7e\u7684 \u7d22\u5f15\n        area_index = area_list.index(max_area)\n        # \u6839\u636e\u7d22\u5f15\u83b7\u53d6\u9762\u79ef\u6700\u5927\u7684\u6807\u7b7e\u7684\u6570\u636e\n        target = centre_list[area_index]\n        label = dic_labels[ids_[area_index]]\n        score = scores_[area_index]\n        box = c_list[area_index]\n        l_h = l_h_list[area_index]\n        return box, target, label, score, l_h, len(area_list)\n    else:\n        return None, None, None, None, None, None\n\n\nif __name__ == \"__main__\":\n\n    # \u6a21\u578b\u52a0\u8f7d\n    model_pb_path = \"FINAL.onnx\"\n    so = ort.SessionOptions()\n    net = ort.InferenceSession(model_pb_path, so)\n\n    # \u6807\u7b7e\u5b57\u5178\n    dic_labels = {\n        0: '0-plastic_bottle',\n        1: '0-drink_can',\n        2: '0-paper',\n        3: '0-carton',\n        4: '0-milkCarton',\n        5: '1-pericarp',\n        6: '1-vegetable_leaf',\n        7: '1-radish',\n        8: '1-potato',\n        9: '1-fruits',\n        10: '2-battery',\n        11: '2-Expired_drug',\n        12: '2-button cell',\n        13: '2-thermometer',\n        14: '3-tile',\n        15: '3-cobblestone',\n        16: '3-brick',\n        17: '3-paperCup',\n        18: '3-tableware',\n        19: '3-chopsticks',\n        20: '3-butt',\n        21: '3-mask'\n\n    }\n\n    # \u6a21\u578b\u53c2\u6570\n    model_h = 320\n    model_w = 320\n    nl = 3\n    na = 3\n    stride = [8., 16., 32.]\n    anchors = [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]]\n    anchor_grid = np.asarray(anchors, dtype=np.float32).reshape(nl, -1, 2)\n\n    video = 1\n    cap = cv2.VideoCapture(video)\n    flag_det = True  # \u521d\u59cb\u5316\u8bbe\u4e3aFalse\uff0c\u6536\u5230\u4fe1\u53f7\u5219\u53d8\u4e3aTrue\n    while True:\n        success, img0 = cap.read()\n        # \u53d6\u611f\u5174\u8da3\u533a\u57df\n        # img0 = img0[20:220, 30: 290]\n\n        if success:\n\n            if flag_det:\n                t1 = time.time()\n                det_boxes, scores, ids = infer_img(img0, net, model_h, model_w, nl, na, stride, anchor_grid,\n                                                   thred_nms=0.4, thred_cond=0.5)\n                time.sleep(0.02)\n                t2 = time.time()\n                # print(det_boxes)\n                # print(ids)\n                print(\"-\"*100)\n                box, target, label, score, l_h, lens = get_data(det_boxes, ids, scores)\n                print(f\"box:{box}\\ntarget:{target}\\nlabel:{label}\\nscore:{score}\\n L-h:{l_h}\\nlongs:{lens}\")\n                print(\"-\" * 100)\n                str_FPS = f\"FPS: {(1 / (t2 - t1)):.2f}\"\n                if label:\n                    label = f\"{label}:{score:.2f}\"\n                    plot_one_box(box.astype(np.int16), img0, color=(255, 0, 0), label=label, line_thickness=1)\n                    cv2.putText(img0, \"str_FPS\", (20, 20), cv2.FONT_HERSHEY_COMPLEX, 0.5, (0, 255, 0), 1)\n\n\n            cv2.imshow(\"video\", img0)\n        key = cv2.waitKey(1) &amp; 0xFF\n        if key == ord('q'):\n            break\n\n    cap.release()\n\n</code></pre> <p></p> <p>\u5982\u679c\u53ef\u4ee5\u6b63\u5e38\u8bc6\u522b\u68c0\u6d4b\u76ee\u6807\uff0c\u73af\u5883\u642d\u5efa\u5c31\u6ca1\u6709\u95ee\u9898\uff0c\u540e\u7eed\u6839\u636e\u6bd4\u8d5b\u8981\u6c42\u6dfb\u52a0\u901a\u4fe1\u4ee3\u7801\u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"study/yolo/#435","title":"4.3.5 \u81ea\u542f\u52a8\u7a0b\u5e8f","text":"<p>\u6253\u5f00\u7ec8\u7aef\uff0c\u8f93\u5165<code>sudo nano /etc/rc.local</code>\uff0c\u4fee\u6539\u4ee3\u7801\u4e3a\u4e00\u4e0b\u5f62\u5f0f\uff0c\u5176\u4e2d<code>#my codes</code>\u4e3a\u4e3b\u8981\u6dfb\u52a0\u4ee3\u7801\uff0c<code>autoboot.sh</code>\u4e3a\u542f\u52a8\u7a0b\u5e8f\u6587\u4ef6\uff0c\u81ea\u5df1\u547d\u540d\u5373\u53ef\u3002</p> <p></p> <p>\u6839\u636e\u76ee\u5f55\u521b\u5efa<code>autoboot.sh</code>\u6587\u4ef6\uff0c\u5e76\u6dfb\u52a0\u4e00\u4e0b\u5185\u5bb9</p> <pre><code>#!/bin/bash\n\nexport DISPLAY=:0\nstartx\n\n# \u65e5\u5fd7\nexec &amp;&gt;&gt; /home/pi/logfile.log\necho \"Script started at: $(date)\"\n\n# \u5e02\u8d5b\npython3 /home/pi/Py_Projects/Municipal_contest.py\n# \u521d\u8d5b\n# python3 /home/pi/Py_Projects/preliminary_contest.py\n</code></pre> <p>\u5176\u4e2d<code>#!/bin/bash</code>\u4e3a\u5fc5\u987b\u5185\u5bb9\uff0c<code>export DISPLAY=:0 startx</code>\u662f\u6211\u6478\u7d22\u5f88\u4e45\uff0c\u53ef\u4ee5\u5b9e\u73b0QT\u754c\u9762\u5f00\u673a\u663e\u793a\u7684\u5fc5\u987b\u5185\u5bb9\uff0c\u5426\u5219\u5f00\u673aQT\u754c\u9762\u65e0\u6cd5\u6b63\u5e38\u663e\u793a\u3002\u65e5\u5fd7\u90e8\u5206\u5efa\u8bae\u586b\u5199\uff0c\u65b9\u4fbf\u5f00\u673a\u81ea\u542f\u51fa\u95ee\u9898\u627e\u539f\u56e0\uff0c\u8f93\u51fa\u7684\u65e5\u5fd7\u4f1a\u5728<code>/home/pi/logfile.log</code>\u76ee\u5f55\u4e0b\u3002<code>python3 /home/pi/Py_Projects/Municipal_contest.py</code>\u4e3a\u9700\u8981\u8fd0\u884c\u7684\u4ee3\u7801\u3002</p>"},{"location":"study/yolo/#44","title":"4.4 \u663e\u793a\u5c4f\u754c\u9762\u8bbe\u8ba1","text":"<p>\u6ca1\u4ec0\u4e48\u53ef\u8bb2\u7684\uff0c\u81ea\u5df1\u53bb\u5b66\u4e00\u5b66pyqt5\uff0c\u7b80\u5355\u8bbe\u8ba1\u4e00\u4e2a\u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"study/yolo/#441-pythonwindows","title":"4.4.1 python\u73af\u5883\u642d\u5efa(windows)","text":"<p>Python\u73af\u5883\u914d\u7f6e\uff1a</p> <p>\u94fe\u63a5\uff1ahttps://pan.baidu.com/s/1WBBtduC-grJw9ZM88HqXfg?pwd=cmzz  \u63d0\u53d6\u7801\uff1acmzz</p> <p></p> <p>PyQt5\u73af\u5883\u914d\u7f6e\uff1a\u754c\u9762\u5f00\u53d1\uff081\uff09 --- PyQt5\u73af\u5883\u914d\u7f6e_pyqt5 \u914d\u7f6e-CSDN\u535a\u5ba2</p> <p>QT\u5b66\u4e60\uff1aPython Qt \u7b80\u4ecb | \u767d\u6708\u9ed1\u7fbd (byhy.net)</p> <p>\u754c\u9762\u8bbe\u8ba1\u4e3b\u8981\u9700\u8981\u6ce8\u610f\u7684\u5462\u5c31\u4e24\u70b9\uff1a</p> <ol> <li>\u662f\u5426\u663e\u793a\u6444\u50cf\u5934\u753b\u9762\uff0c\u6211\u9009\u62e9\u662f\u663e\u793a\uff0c\u56e0\u4e3a\u6211\u770b\u5230\u753b\u9762\u5b89\u5fc3\u4e00\u4e9b\uff0c\u4e5f\u77e5\u9053\u54ea\u4e9b\u68c0\u6d4b\u9519\u4e86\u518d\u53bb\u4f18\u5316\u6570\u636e\u96c6\u3002\u6211\u7528\u7684\u5c31\u662f\u4e00\u5e27\u4e00\u5e27\u7684\u56fe\u50cf\uff0c\u4ee5\u7167\u7247\u7684\u5f62\u5f0f\u663e\u793a\u51fa\u6765\u3002(QImage\uff09</li> <li>\u89c6\u9891\u7684\u64ad\u653e\uff0c\u4e00\u5f00\u59cb\u7528\u7684Pyqt5\u7684player\u7ec4\u4ef6\uff0c\u4f46\u662f\u79fb\u690d\u5230\u6811\u8393\u6d3e\u4f1a\u4e00\u76f4\u62a5\u9519\uff0c\u5e76\u4e14\u4f1a\u5bfc\u81f4\u5206\u89e3\u6811\u8393\u6d3e\u7b97\u529b\u4f7f\u7528\uff0c\u5bfc\u81f4\u76ee\u6807\u68c0\u6d4b\u63a8\u7406\u66f4\u6162\u3002\u540e\u6765\u9009\u7528\u4e86\u6811\u8393\u6d3e\u7684\u4e00\u4e2a\u64ad\u653e\u8f6f\u4ef6omxplayer\uff0c\u5b89\u88c5\u4ed6\u7684python\u5e93\uff0c\u7528\u4ee3\u7801\u63a7\u5236\u64ad\u653e\u3002</li> </ol>"},{"location":"study/yolo/#442","title":"4.4.2 \u4ee3\u7801\u683c\u5f0f","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u7b2c\u4e00\u7248\u754c\u9762\u8bbe\u8ba1\uff0c\u6ca1\u6709\u52a0\u4e32\u53e3\u901a\u4fe1\u3001\u89c6\u9891\u3001\u76ee\u6807\u68c0\u6d4b\u3002</p> <pre><code>from pathlib import Path\nfrom threading import Thread\nfrom PyQt5.QtCore import Qt\nfrom PyQt5.QtMultimediaWidgets import QVideoWidget\nfrom PyQt5.QtWidgets import *\nfrom PyQt5.QtGui import QIcon, QPixmap, QFont\nfrom PyQt5.QtMultimedia import QMediaPlayer, QMediaPlaylist, QMediaContent\nfrom PyQt5.Qt import QUrl\nimport sys\nimport time\n\n\ndef is_mp4(file_path):\n    # \u4f7f\u7528Path\u7c7b\u521b\u5efa\u6587\u4ef6\u8def\u5f84\u5bf9\u8c61\n    path = Path(file_path)\n\n    # \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728\n    if not path.exists():\n        return False\n\n    # \u68c0\u67e5\u6587\u4ef6\u6269\u5c55\u540d\u662f\u5426\u4e3a.mp4\n    if path.suffix.lower() == '.mp4':\n        return True\n    return False\n\n\nclass Demo:\n    def __init__(self):\n\n        \"\"\"\u63a7\u4ef6\u521d\u59cb\u5316\"\"\"\n        self.ui = QMainWindow()\n        # self.player = QMediaPlayer(self.ui)\n        self.label = QLabel(self.ui)\n        self.map_label = QLabel(self.ui)\n        self.map2_label = QLabel(self.ui)\n        # self.playlist = QMediaPlaylist(self.ui)\n        # self.video_widget = QVideoWidget(self.ui)\n\n        # self.slider = QSlider(Qt.Horizontal, self.ui)\n        self.video_button = QPushButton(\"\u9009\u62e9\u89c6\u9891\u6587\u4ef6\", self.ui)\n        self.map_button = QPushButton(\"\u9009\u62e9\u56fe\u7247\u6587\u4ef6\", self.ui)\n\n        # self.textLabel = QLabel(self.ui)\n        self.list = QListWidget(self.ui)\n        # \u521b\u5efa\u8868\u683c\n        rows = 4  # \u884c\n        columns = 2  # \u5217\n        self.table = QTableWidget(rows, columns, self.ui)\n        thread_text = Thread(\n            target=self.Text_time\n        )\n        # \u5c5e\u6027\u521d\u59cb\u5316\u51fd\u6570\u8c03\u7528\n        self.LayoutInit()\n        self.WidgetInit()\n        self.tabel_items()\n        self.add_list_items()\n        # self.Player()\n        self.Signal()\n        thread_text.start()\n\n    # \u89c6\u9891\u64ad\u653e\u51fd\u6570\n    # def Player(self):\n    #     self.player.setVideoOutput(self.video_widget)  # \u8bbe\u7f6e\u89c6\u9891\u8f93\u51fa\n    #     self.player.setPlaylist(self.playlist)\n    #     self.playlist.addMedia(QMediaContent(QUrl.fromLocalFile(\"bak.mp4\")))\n    #     self.playlist.addMedia(QMediaContent(QUrl.fromLocalFile(\"lajifenlei.mp4\")))\n    #     self.playlist.setPlaybackMode(QMediaPlaylist.Loop)\n    #\n    #     self.player.setVolume(50)\n    #\n    #     self.player.play()\n\n    # Layout\u754c\u9762\n    def LayoutInit(self):\n        central_widget = QWidget(self.ui)\n        self.ui.setCentralWidget(central_widget)\n        layout_v = QVBoxLayout(central_widget)\n        layout_h = QHBoxLayout(central_widget)\n        layout_h2 = QHBoxLayout(central_widget)\n        layout_h3 = QHBoxLayout(central_widget)\n\n        layout_h.addWidget(self.label)\n        layout_h.addWidget(self.video_button)\n        layout_h.addWidget(self.map_button)\n        layout_h.setStretch(0, 5)\n        layout_h.setStretch(1, 1)\n        layout_h.setStretch(2, 1)\n        layout_h.setSpacing(170)\n\n        layout_h2.addWidget(self.map2_label)\n        layout_h2.addWidget(self.map_label)\n        layout_h2.setStretch(0, 5)\n        layout_h2.setStretch(1, 5)\n        layout_h2.setSpacing(0)\n\n        layout_h3.addWidget(self.table)\n        layout_h3.addWidget(self.list)\n        layout_h3.setStretch(0, 1)\n        layout_h3.setStretch(1, 3)\n        layout_h3.setSpacing(50)\n\n        layout_v.addLayout(layout_h)\n        layout_v.addLayout(layout_h2)\n        # layout_v.addWidget(self.slider)\n        layout_v.addLayout(layout_h3)\n        layout_v.setStretch(0, 1)\n        layout_v.setStretch(1, 5)\n        layout_v.setStretch(2, 1)\n        layout_v.setStretch(3, 3)\n\n        self.ui.setLayout(layout_v)\n\n\n\n    def Text_time(self):\n        while True:\n            text = \"\u2764\u2764\u2764\u2764\u2764\u5730\u7403\u73af\u4fdd\u536b\u58eb\u2764\u2764\u2764\u2764\u2764\"\n            for i in range(108):\n                self.label.setText(text)\n                time.sleep(0.1)\n                text = ' ' + text\n\n\n    def tabel_items(self):\n        font_tabel = self.table.font()\n        font_tabel.setPointSize(20)\n        self.table.setFont(font_tabel)\n        self.item1 = QTableWidgetItem(\"\u53ef\u56de\u6536\u5783\u573e\")\n        self.table.setItem(0, 0, self.item1)\n        self.item2 = QTableWidgetItem(\"\u6709\u5bb3\u5783\u573e\")\n        self.table.setItem(1, 0, self.item2)\n        self.item3 = QTableWidgetItem(\"\u53a8\u4f59\u5783\u573e\")\n        self.table.setItem(2, 0, self.item3)\n        self.item4 = QTableWidgetItem(\"\u5176\u4ed6\u5783\u573e\")\n        self.table.setItem(3, 0, self.item4)\n        self.item5 = QTableWidgetItem(\"\u672a\u6ee1\u8f7d\")\n        self.item6 = QTableWidgetItem(\"\u672a\u6ee1\u8f7d\")\n        self.item7 = QTableWidgetItem(\"\u672a\u6ee1\u8f7d\")\n        self.item8 = QTableWidgetItem(\"\u672a\u6ee1\u8f7d\")\n        self.table.setItem(0, 1, self.item5)\n        self.table.setItem(1, 1, self.item6)\n        self.table.setItem(2, 1, self.item7)\n        self.table.setItem(3, 1, self.item8)\n\n    def add_list_items(self):\n        for i in range(10):\n            print(self.list.count())\n            news = QListWidgetItem(\"\u53ef\u56de\u6536\u5783\u573e\")\n            self.list.addItem(news)\n            self.list.scrollToItem(news, QListWidget.PositionAtBottom)\n\n    # \u63a7\u4ef6\u521d\u59cb\u5316\n    def WidgetInit(self):\n        self.ui.setWindowTitle(\"\u64ad\u653e\u89c6\u9891\")\n        self.ui.resize(177 * 4, 400)\n        self.label.setFrameStyle(QFrame.Panel | QFrame.Sunken)\n        self.table.setShowGrid(False)  # \u662f\u5426\u663e\u793a\u7f51\u683c\n        self.table.setHorizontalHeaderLabels([\"\u7c7b\u522b\", \"\u662f\u5426\u6ee1\u8f7d\"])\n        self.table.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)\n        font_list = self.list.font()\n        font_list.setPointSize(18)\n        self.list.setFont(font_list)\n        # self.label.setAlignment(Qt.AlignCenter)\n        map_widget = QPixmap(\"../../pictures/bu2.jpg\")\n        map_widget = map_widget.scaled(177 * 3, 300)\n        self.map_label.setPixmap(map_widget)\n        self.map_label.setScaledContents(True)\n\n    # \u4fe1\u53f7\u69fd\u51fd\u6570\u521d\u59cb\u5316\n    def Signal(self):\n        # self.slider.sliderMoved.connect(self.GetMoved)\n        # self.player.durationChanged.connect(self.GetDuration)\n        # self.player.positionChanged.connect(self.GetPosition)\n        self.video_button.clicked.connect(self.GetMap2)\n        self.map_button.clicked.connect(self.GetMap)\n\n    # \u69fd\u51fd\u6570\n    # def GetDuration(self, d):\n    #     if d:\n    #         self.slider.setRange(0, d)\n    #         seconds = int(d / 1000)\n    #         minutes = int(seconds / 60)\n    #         seconds -= minutes * 60\n    #         # self.label.setText(f\"\u603b\u65f6\u957f\uff1a{minutes}:{seconds}\")\n    #         print(f\"\u603b\u65f6\u957f\uff1a{minutes}:{seconds}\")\n\n    # def GetPosition(self, time):\n    #     if time:\n    #         self.slider.setValue(time)\n    #\n    # def GetMoved(self, time):\n    #     self.player.setPosition(time)\n\n    # def GetFiles(self):\n    #     video = QFileDialog()\n    #     url = video.getOpenFileUrl()[0].toLocalFile()\n    #     self.playlist.addMedia(QMediaContent(QUrl.fromLocalFile(url)))\n    #     if is_mp4(url):\n    #         num = self.playlist.mediaCount()\n    #         for i in range(num):\n    #             files = []\n    #             file = self.playlist.media(i).canonicalUrl().toString()\n    #             files.append(file)\n    #             print(files)\n    #\n    #         self.playlist.setCurrentIndex(num - 1)\n    #     else:\n    #         QMessageBox.warning(self.ui, \"\u8b66\u544a\", \"\u6240\u9009\u6570\u636e\u7c7b\u578b\u4e0d\u662f'.MP4\uff01'\", QMessageBox.Yes | QMessageBox.No)\n\n    def GetMap2(self):\n        video = QFileDialog()\n        url = video.getOpenFileUrl()[0].toLocalFile()\n        map_widget = QPixmap(url)\n        map_widget = map_widget.scaled(177 * 3, 300)\n        self.map2_label.setPixmap(map_widget)\n        self.map2_label.setScaledContents(True)\n\n    def GetMap(self):\n        video = QFileDialog()\n        url = video.getOpenFileUrl()[0].toLocalFile()\n        map_widget = QPixmap(url)\n        map_widget = map_widget.scaled(177 * 3, 300)\n        self.map_label.setPixmap(map_widget)\n        self.map_label.setScaledContents(True)\n\n\nif __name__ == \"__main__\":\n    while 1:\n        app = QApplication(sys.argv)\n        app.setWindowIcon(QIcon(\"../ico/social-gears.ico\"))\n        bar = Demo()\n\n        bar.ui.show()\n        bar.ui.showFullScreen()\n        sys.exit(app.exec_())\n\n</code></pre> <p>\u8fd9\u91cc\u4e0d\u63a8\u8350\u6211\u8fd9\u79cd\u4ee3\u7801\u683c\u5f0f\uff0c\u4fee\u6539\u8d77\u6765\u5f88\u9ebb\u70e6\uff0c\u5230\u540e\u9762\u51e0\u767e\u53f7\u7684\u4ee3\u7801\u5728\u4e00\u4e2a\u6587\u4ef6\u91cc\uff0c\u4fee\u6539\u8d77\u6765\u5f88\u4e0d\u65b9\u4fbf\u3002\u63a8\u8350\u7684\u65b9\u5f0f\u662f\u6bcf\u4e00\u4e2a\u529f\u80fd\u5355\u72ec\u4e00\u4e2apython\u6587\u4ef6\uff0c\u5efa\u7acb\u4e00\u7cfb\u5217\u7684\u51fd\u6570\u5e93\uff0c\u6700\u540e\u5199\u4e00\u4e2a\u5355\u72ec\u7684\u8c03\u7528\u6587\u4ef6\uff1b\u5f53\u67d0\u4e2a\u529f\u80fd\u51fa\u95ee\u9898\u4ee5\u540e\u5c31\u53ef\u4ee5\u5728\u5176\u6587\u4ef6\u91cc\u4fee\u6539\uff0c\u4ee3\u7801\u91cf\u5c11\uff0c\u4e14\u66f4\u76f4\u89c2\u3002</p> <p>\u4e0b\u9762\u5c55\u793a\u4e00\u4e0b\u6211\u540e\u9762\u5199\u7684\u4e00\u4e2a\u7c97\u7cd9\u7248QT\u767b\u5f55\u754c\u9762\uff0c\u5c55\u793a\u4e00\u4e0b\u51fd\u6570\u5e93\u8fd0\u7528\uff1a</p> <p></p> <p>\u51fd\u6570\u5e93\uff1a</p> <p><code>demoUI.py</code></p> <pre><code># -*- coding: utf-8 -*-\n\n# Form implementation generated from reading ui file 'demoUI.ui'\n#\n# Created by: PyQt5 UI code generator 5.15.9\n#\n# WARNING: Any manual changes made to this file will be lost when pyuic5 is\n# run again.  Do not edit this file unless you know what you are doing.\n\n\nfrom PyQt5 import QtCore, QtGui, QtWidgets\n\n\nclass Ui_Form(object):\n    def setupUi(self, Form):\n        Form.setObjectName(\"Form\")\n        Form.resize(640, 480)\n        self.resign = QtWidgets.QPushButton(Form)\n        self.resign.setGeometry(QtCore.QRect(210, 230, 91, 41))\n        font = QtGui.QFont()\n        font.setPointSize(11)\n        self.resign.setFont(font)\n        self.resign.setObjectName(\"resign\")\n        self.forget = QtWidgets.QPushButton(Form)\n        self.forget.setGeometry(QtCore.QRect(340, 230, 91, 41))\n        font = QtGui.QFont()\n        font.setPointSize(11)\n        self.forget.setFont(font)\n        self.forget.setObjectName(\"forget\")\n        self.label_username = QtWidgets.QLabel(Form)\n        self.label_username.setGeometry(QtCore.QRect(210, 120, 72, 30))\n        font = QtGui.QFont()\n        font.setPointSize(12)\n        self.label_username.setFont(font)\n        self.label_username.setObjectName(\"label_username\")\n        self.label_passwd = QtWidgets.QLabel(Form)\n        self.label_passwd.setGeometry(QtCore.QRect(230, 160, 72, 30))\n        font = QtGui.QFont()\n        font.setPointSize(12)\n        self.label_passwd.setFont(font)\n        self.label_passwd.setTabletTracking(False)\n        self.label_passwd.setObjectName(\"label_passwd\")\n        self.UserName = QtWidgets.QLineEdit(Form)\n        self.UserName.setGeometry(QtCore.QRect(290, 120, 141, 31))\n        self.UserName.setObjectName(\"UserName\")\n        self.Passwd = QtWidgets.QLineEdit(Form)\n        self.Passwd.setGeometry(QtCore.QRect(290, 160, 141, 31))\n        self.Passwd.setObjectName(\"Passwd\")\n        self.Inter = QtWidgets.QPushButton(Form)\n        self.Inter.setGeometry(QtCore.QRect(270, 290, 91, 41))\n        font = QtGui.QFont()\n        font.setPointSize(12)\n        self.Inter.setFont(font)\n        self.Inter.setStyleSheet(\"background-color: rgb(0, 85, 255);\")\n        self.Inter.setObjectName(\"Inter\")\n        self.label = QtWidgets.QLabel(Form)\n        self.label.setGeometry(QtCore.QRect(220, 30, 201, 51))\n        font = QtGui.QFont()\n        font.setPointSize(20)\n        self.label.setFont(font)\n        self.label.setStyleSheet(\"background-color: rgb(255, 170, 255);\")\n        self.label.setObjectName(\"label\")\n\n        self.retranslateUi(Form)\n        QtCore.QMetaObject.connectSlotsByName(Form)\n\n    def retranslateUi(self, Form):\n        _translate = QtCore.QCoreApplication.translate\n        Form.setWindowTitle(_translate(\"Form\", \"\u4eba\u673a\u4ea4\u4e92\u754c\u9762\"))\n        self.resign.setText(_translate(\"Form\", \"\u6ce8\u518c\u8d26\u53f7\"))\n        self.forget.setText(_translate(\"Form\", \"\u5fd8\u8bb0\u5bc6\u7801\"))\n        self.label_username.setText(_translate(\"Form\", \"\u7528\u6237\u540d\uff1a\"))\n        self.label_passwd.setText(_translate(\"Form\", \"\u5bc6\u7801\uff1a\"))\n        self.Inter.setText(_translate(\"Form\", \"\u767b\u5f55\"))\n        self.label.setText(_translate(\"Form\", \"\u7528\u6237\u767b\u5f55\u754c\u9762\"))\n\n</code></pre> <p><code>drug.py</code></p> <pre><code># -*- coding: utf-8 -*-\n\n# Form implementation generated from reading ui file 'drug.ui'\n#\n# Created by: PyQt5 UI code generator 5.15.9\n#\n# WARNING: Any manual changes made to this file will be lost when pyuic5 is\n# run again.  Do not edit this file unless you know what you are doing.\n\n\nfrom PyQt5 import QtCore, QtGui, QtWidgets\n\n\nclass Ui_drug(object):\n    def setupUi(self, Form):\n        Form.setObjectName(\"Form\")\n        Form.resize(640, 480)\n        self.label = QtWidgets.QLabel(Form)\n        self.label.setGeometry(QtCore.QRect(210, 40, 211, 61))\n        font = QtGui.QFont()\n        font.setPointSize(20)\n        self.label.setFont(font)\n        self.label.setStyleSheet(\"background-color: rgb(255, 170, 255);\")\n        self.label.setObjectName(\"label\")\n        self.red = QtWidgets.QPushButton(Form)\n        self.red.setGeometry(QtCore.QRect(140, 150, 121, 81))\n        font = QtGui.QFont()\n        font.setPointSize(20)\n        self.red.setFont(font)\n        self.red.setStyleSheet(\"background-color: rgb(255, 36, 17);\")\n        self.red.setObjectName(\"red\")\n        self.green = QtWidgets.QPushButton(Form)\n        self.green.setGeometry(QtCore.QRect(140, 280, 121, 81))\n        font = QtGui.QFont()\n        font.setPointSize(20)\n        self.green.setFont(font)\n        self.green.setStyleSheet(\"background-color: rgb(29, 255, 29);\")\n        self.green.setObjectName(\"green\")\n        self.title = QtWidgets.QPushButton(Form)\n        self.title.setGeometry(QtCore.QRect(360, 150, 121, 81))\n        font = QtGui.QFont()\n        font.setPointSize(20)\n        self.title.setFont(font)\n        self.title.setStyleSheet(\"background-color: rgb(31, 24, 255);\")\n        self.title.setObjectName(\"title\")\n        self.crey = QtWidgets.QPushButton(Form)\n        self.crey.setGeometry(QtCore.QRect(360, 280, 121, 81))\n        font = QtGui.QFont()\n        font.setPointSize(20)\n        self.crey.setFont(font)\n        self.crey.setStyleSheet(\"background-color: rgb(102, 240, 255);\")\n        self.crey.setObjectName(\"crey\")\n\n        self.retranslateUi(Form)\n        QtCore.QMetaObject.connectSlotsByName(Form)\n\n    def retranslateUi(self, Form):\n        _translate = QtCore.QCoreApplication.translate\n        Form.setWindowTitle(_translate(\"Form\", \"Form\"))\n        self.label.setText(_translate(\"Form\", \"\u836f\u54c1\u4ed3\u5e93\u793a\u610f\"))\n        self.red.setText(_translate(\"Form\", \"1\u53f7\"))\n        self.green.setText(_translate(\"Form\", \"3\u53f7\"))\n        self.title.setText(_translate(\"Form\", \"2\u53f7\"))\n        self.crey.setText(_translate(\"Form\", \"4\u53f7\"))\n\n</code></pre> <p><code>regist.py</code></p> <pre><code># -*- coding: utf-8 -*-\n\n# Form implementation generated from reading ui file 'regist.ui'\n#\n# Created by: PyQt5 UI code generator 5.15.9\n#\n# WARNING: Any manual changes made to this file will be lost when pyuic5 is\n# run again.  Do not edit this file unless you know what you are doing.\n\n\nfrom PyQt5 import QtCore, QtGui, QtWidgets\n\n\nclass Ui_regist(object):\n    def setupUi(self, widget):\n        widget.setObjectName(\"widget\")\n        widget.resize(640, 480)\n        self.regist_user = QtWidgets.QLabel(widget)\n        self.regist_user.setGeometry(QtCore.QRect(180, 90, 91, 31))\n        self.regist_user.setMinimumSize(QtCore.QSize(0, 0))\n        self.regist_user.setBaseSize(QtCore.QSize(0, 0))\n        font = QtGui.QFont()\n        font.setPointSize(12)\n        self.regist_user.setFont(font)\n        self.regist_user.setObjectName(\"regist_user\")\n        self.text_user = QtWidgets.QLineEdit(widget)\n        self.text_user.setGeometry(QtCore.QRect(280, 90, 141, 31))\n        font = QtGui.QFont()\n        font.setPointSize(12)\n        self.text_user.setFont(font)\n        self.text_user.setObjectName(\"text_user\")\n        self.text_passwd = QtWidgets.QLineEdit(widget)\n        self.text_passwd.setGeometry(QtCore.QRect(280, 150, 141, 31))\n        font = QtGui.QFont()\n        font.setPointSize(12)\n        self.text_passwd.setFont(font)\n        self.text_passwd.setObjectName(\"text_passwd\")\n        self.text_passwd_Q = QtWidgets.QLineEdit(widget)\n        self.text_passwd_Q.setGeometry(QtCore.QRect(280, 210, 141, 31))\n        font = QtGui.QFont()\n        font.setPointSize(12)\n        self.text_passwd_Q.setFont(font)\n        self.text_passwd_Q.setObjectName(\"text_passwd_Q\")\n        self.regist_passwd_Q = QtWidgets.QLabel(widget)\n        self.regist_passwd_Q.setGeometry(QtCore.QRect(180, 210, 91, 31))\n        self.regist_passwd_Q.setMinimumSize(QtCore.QSize(0, 0))\n        self.regist_passwd_Q.setBaseSize(QtCore.QSize(0, 0))\n        font = QtGui.QFont()\n        font.setPointSize(12)\n        self.regist_passwd_Q.setFont(font)\n        self.regist_passwd_Q.setObjectName(\"regist_passwd_Q\")\n        self.regist_passwd = QtWidgets.QLabel(widget)\n        self.regist_passwd.setGeometry(QtCore.QRect(180, 150, 91, 31))\n        self.regist_passwd.setMinimumSize(QtCore.QSize(0, 0))\n        self.regist_passwd.setBaseSize(QtCore.QSize(0, 0))\n        font = QtGui.QFont()\n        font.setPointSize(12)\n        self.regist_passwd.setFont(font)\n        self.regist_passwd.setObjectName(\"regist_passwd\")\n        self.Regist = QtWidgets.QPushButton(widget)\n        self.Regist.setGeometry(QtCore.QRect(250, 280, 111, 41))\n        font = QtGui.QFont()\n        font.setPointSize(12)\n        self.Regist.setFont(font)\n        self.Regist.setStyleSheet(\"background-color: rgb(0, 0, 255);\")\n        self.Regist.setObjectName(\"Regist\")\n\n        self.retranslateUi(widget)\n        QtCore.QMetaObject.connectSlotsByName(widget)\n\n    def retranslateUi(self, widget):\n        _translate = QtCore.QCoreApplication.translate\n        widget.setWindowTitle(_translate(\"widget\", \"\u6ce8\u518c\"))\n        self.regist_user.setText(_translate(\"widget\", \"\u8f93\u5165\u8d26\u53f7:\"))\n        self.regist_passwd_Q.setText(_translate(\"widget\", \"\u786e\u8ba4\u5bc6\u7801:\"))\n        self.regist_passwd.setText(_translate(\"widget\", \"\u8f93\u5165\u5bc6\u7801:\"))\n        self.Regist.setText(_translate(\"widget\", \"\u6ce8\u518c\"))\n\n</code></pre> <p>\u8c03\u7528\u51fd\u6570<code>Demo1.py</code>\uff1a</p> <pre><code>import sys\n# \u8fd9\u90e8\u5206\u5c31\u662f\u81ea\u5b9a\u4e49\u51fd\u6570\u5e93\uff0cfrom \u6587\u4ef6\u540d import \u51fd\u6570\u540d/\u7c7b\nfrom demoUI import Ui_Form\nfrom regist import Ui_regist\nfrom drug import Ui_drug\n#\nfrom PyQt5.QtWidgets import QApplication, QMainWindow\n\n\nclass MainWindow(QMainWindow, Ui_Form):\n    def __init__(self):\n        super(MainWindow, self).__init__()\n        self.setupUi(self)\n\n\nclass Register(QMainWindow, Ui_regist):\n    def __init__(self, parent=None):\n        super(Register, self).__init__(parent)\n        self.setupUi(self)\n\n    def Open(self):\n        self.show()\n\n\nclass Drug(QMainWindow, Ui_drug):\n    def __init__(self, parent=None):\n        super(Drug, self).__init__(parent)\n        self.setupUi(self)\n\n    def Open(self):\n        self.show()\n\n\nif __name__ == \"__main__\":\n    app = QApplication(sys.argv)\n    main = MainWindow()\n    register = Register()\n    drug = Drug()\n    main.resign.clicked.connect(register.Open)\n    main.Inter.clicked.connect(drug.Open)\n    main.show()\n    sys.exit(app.exec_())\n\n</code></pre>"},{"location":"study/yolo/#45","title":"4.5 \u4ee3\u7801\u6c47\u603b","text":"<p>\u5176\u5b9e\u51b3\u8d5b\u548c\u521d\u8d5b\u6700\u91cd\u8981\u533a\u522b\u5c31\u662f\u5206\u7c7b\u7684\u6570\u91cf\uff0c\u5f53\u6570\u91cf\u4e3a1\u7684\u65f6\u5019\u7528\u7ffb\u6597\uff0c\u5927\u4e8e\u7b49\u4e8e2\u7528\u673a\u68b0\u81c2\u3002\u6240\u4ee5\u6700\u540e\u521d\u8d5b\u51b3\u8d5b\u53ef\u4ee5\u7528\u540c\u4e00\u5957\u4ee3\u7801\u3002</p> <p>\u51b3\u8d5b\u4ee3\u7801<code>Municipal_contest.py</code></p> <pre><code>from pathlib import Path\nfrom threading import Thread, Event\nfrom PyQt5.QtCore import Qt,QCoreApplication\nfrom PyQt5.QtWidgets import *\nfrom PyQt5.QtGui import *\nfrom PyQt5.Qt import QUrl\n\nfrom omxplayer import OMXPlayer\nfrom pathlib import Path\nimport sys\nimport time\nimport serial\nimport RPi.GPIO as GPIO\nimport cv2\nimport numpy as np\nimport onnxruntime as ort\nimport random as rd\n\nGPIO.setmode(GPIO.BOARD)\nGPIO.setwarnings(False)\nvideo1 = 16\n# \u8bbe\u7f6e\u8bfb\u53d6\u5f15\u811a\uff0c\u4f4e\u7535\u9891\u626b\u63cf\nGPIO.setup(video1,GPIO.IN)\n\ndef get_key(dict, m_num):\n    for key,values in dict.items():\n        if values == m_num:\n            return key\n\n\n\n\n\n# yolov5\u8bc6\u522b\ndef plot_one_box(x, img, color=None, label=None, line_thickness=None):\n    \"\"\"\n    description: Plots one bounding box on image img,\n                 this function comes from YoLov5 project.\n    param: \n        x:      a box likes [x1,y1,x2,y2]\n        img:    a opencv image object\n        color:  color to draw rectangle, such as (0,255,0)\n        label:  str\n        line_thickness: int\n    return:\n        no return\n    \"\"\"\n    tl = (\n        line_thickness or round(0.002 * (img.shape[0] + img.shape[1]) / 2) + 1\n    )  # line/font thickness\n    color = color or [random.randint(0, 255) for _ in range(3)]\n    x=x.squeeze()\n    c1, c2 = (int(x[0]), int(x[1])), (int(x[2]), int(x[3]))\n    cv2.rectangle(img, c1, c2, color, thickness=tl, lineType=cv2.LINE_AA)\n    if label:\n        tf = max(tl - 1, 1)  # font thickness\n        t_size = cv2.getTextSize(label, 0, fontScale=tl / 3, thickness=tf)[0]\n        c2 = c1[0] + t_size[0], c1[1] - t_size[1] - 3\n        cv2.rectangle(img, c1, c2, color, -1, cv2.LINE_AA)  # filled\n        cv2.putText(\n            img,\n            label,\n            (c1[0], c1[1] - 2),\n            0,\n            tl / 3,\n            [225, 255, 255],\n            thickness=tf,\n            lineType=cv2.LINE_AA,\n        )\n\ndef _make_grid( nx, ny):\n        xv, yv = np.meshgrid(np.arange(ny), np.arange(nx))\n        return np.stack((xv, yv), 2).reshape((-1, 2)).astype(np.float32)\n\ndef cal_outputs(outs,nl,na,model_w,model_h,anchor_grid,stride):\n\n    row_ind = 0\n    grid = [np.zeros(1)] * nl\n    for i in range(nl):\n        h, w = int(model_w/ stride[i]), int(model_h / stride[i])\n        length = int(na * h * w)\n        if grid[i].shape[2:4] != (h, w):\n            grid[i] = _make_grid(w, h)\n\n        outs[row_ind:row_ind + length, 0:2] = (outs[row_ind:row_ind + length, 0:2] * 2. - 0.5 + np.tile(\n            grid[i], (na, 1))) * int(stride[i])\n        outs[row_ind:row_ind + length, 2:4] = (outs[row_ind:row_ind + length, 2:4] * 2) ** 2 * np.repeat(\n            anchor_grid[i], h * w, axis=0)\n        row_ind += length\n    return outs\n\n\n\ndef post_process_opencv(outputs,model_h,model_w,img_h,img_w,thred_nms,thred_cond):\n    conf = outputs[:,4].tolist()\n    c_x = outputs[:,0]/model_w*img_w\n    c_y = outputs[:,1]/model_h*img_h\n    w  = outputs[:,2]/model_w*img_w\n    h  = outputs[:,3]/model_h*img_h\n    p_cls = outputs[:,5:]\n    if len(p_cls.shape)==1:\n        p_cls = np.expand_dims(p_cls,1)\n    cls_id = np.argmax(p_cls,axis=1)\n\n    p_x1 = np.expand_dims(c_x-w/2,-1)\n    p_y1 = np.expand_dims(c_y-h/2,-1)\n    p_x2 = np.expand_dims(c_x+w/2,-1)\n    p_y2 = np.expand_dims(c_y+h/2,-1)\n    areas = np.concatenate((p_x1,p_y1,p_x2,p_y2),axis=-1)\n\n    areas = areas.tolist()\n    ids = cv2.dnn.NMSBoxes(areas,conf,thred_cond,thred_nms)\n    if len(ids)&gt;0:\n        return  np.array(areas)[ids],np.array(conf)[ids],cls_id[ids]\n    else:\n        return [],[],[]\ndef infer_img(img0,net,model_h,model_w,nl,na,stride,anchor_grid,thred_nms=0.4,thred_cond=0.5):\n    # \u56fe\u50cf\u9884\u5904\u7406\n    img = cv2.resize(img0, (model_w,model_h), interpolation=cv2.INTER_AREA)\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n    img = img.astype(np.float32) / 255.0\n    blob = np.expand_dims(np.transpose(img, (2, 0, 1)), axis=0)\n\n    # \u6a21\u578b\u63a8\u7406\n    outs = net.run(None, {net.get_inputs()[0].name: blob})[0].squeeze(axis=0)\n\n    # \u8f93\u51fa\u5750\u6807\u77eb\u6b63\n    outs = cal_outputs(outs,nl,na,model_w,model_h,anchor_grid,stride)\n\n    # \u68c0\u6d4b\u6846\u8ba1\u7b97\n    img_h,img_w,_ = np.shape(img0)\n    boxes,confs,ids = post_process_opencv(outs,model_h,model_w,img_h,img_w,thred_nms,thred_cond)\n\n    return  boxes,confs,ids\n\n# \u5f97\u5230\u4e2d\u5fc3\u5750\u6807\ndef get_centre(x_list):\n    c_x = (x_list[0] + x_list[2]) / 2\n    c_y = (x_list[1] + x_list[3]) / 2\n#     c_x = c_x*np.cos(np.radians(45))-c_y*np.sin(np.radians(45))\n#     c_y = c_y*np.cos(np.radians(45))+c_x*np.sin(np.radians(45))\n    c_list = [c_y, c_x]\n    # \u8fd4\u56de\u4e2d\u5fc3\u5750\u6807\u5217\u8868\n    return c_list\n\n\n# \u5f97\u5230\u9762\u79ef\ndef get_area(label_list):\n    length = label_list[2] - label_list[0]\n    height = label_list[3] - label_list[1]\n    area = []\n    # \u9762\u79ef\n    area.append(length * height)\n    area.append(length/height)\n    return area\n\n\n# \u5f97\u5230\u6700\u5927\u9762\u79ef\u7684\u5750\u6807\ndef get_data(c_list, ids_, scores_, dic_labels):\n\n    # \u83b7\u53d6\u5750\u6807\u8bc6\u522b\u6807\u7b7e\u4e2a\u6570\n    coordinate_length = len(c_list)\n    # \u4e2d\u5fc3\u5750\u6807\u5217\u8868\n    centre_list = []\n    area_list = []\n    l_h_list = []\n    for i in range(int(coordinate_length)):\n        # \u83b7\u53d6\u6bcf\u4e2a\u6807\u7b7e\u7684\u5750\u6807\u5217\u8868\n        coordinate = c_list[i][0]\n\n        # \u83b7\u53d6\u9762\u79ef\u548c\u957f\u5bbd\u6bd4\n        area, l_h = get_area(coordinate)\n        if area &gt; 100000:\n            break\n        # \u4e2d\u5fc3\u70b9\u5750\u6807\u5217\u8868\n        centre_list.append(get_centre(coordinate))\n        # \u9762\u79ef\u5217\u8868\n        area_list.append(area)\n        # \u83b7\u53d6\u957f\u5bbd\u6bd4()\n        l_h_list.append(l_h)\n    if area_list:\n        max_area = max(area_list)\n        area_index = area_list.index(max_area)\n        target = centre_list[area_index]\n        id_ = ids_[area_index]\n        label = dic_labels[ids_[area_index].item()]\n        score = scores_[area_index]\n        box = c_list[area_index]\n        l_h = l_h_list[area_index]\n        return box, target, label, score, l_h, id_, len(area_list),ids_\n    else:\n        return None, None, None, None, None, None, None, None\n\n\n\nexit_flag = Event()\nclass Demo:\n    def __init__(self):\n\n        \"\"\"\u63a7\u4ef6\u521d\u59cb\u5316\"\"\"\n        self.ui = QMainWindow()\n        self.label = QLabel(self.ui)\n        self.map_label = QLabel(self.ui)\n        self.map2_label = QLabel(self.ui)\n\n        self.video_button = QPushButton(\"\u521b\u94ed\", self.ui)\n        self.map_button = QPushButton(\"\u667a\u9020\", self.ui)\n        self.close_button = QPushButton(\"\u7ed3\u675f\", self.ui)\n\n        # self.textLabel = QLabel(self.ui)\n        self.list = QListWidget(self.ui)\n        # \u521b\u5efa\u8868\u683c\n        rows = 6  # \u884c\n        columns = 2  # \u5217\n\n        self.table = QTableWidget(rows, columns, self.ui)\n        self.thread_serial = Thread(\n            target=self.thread_serial,\n            args=(9600,)\n            )\n        self.thread_text = Thread(\n            target=self.Text_time\n        )\n        self.thread_yolov5 = Thread(\n            target=self.thread_yolov5)\n\n        self.pic_control()\n\n        # \u5c5e\u6027\u521d\u59cb\u5316\u51fd\u6570\u8c03\u7528\n        self.LayoutInit()\n        self.WidgetInit()\n        self.tabel_items()\n#         self.add_list_items()\n        self.Signal()\n#         thread_text.start()\n        self.thread_serial.start()\n        self.thread_yolov5.start()\n\n    # Layout\u754c\u9762\n    def LayoutInit(self):\n        central_widget = QWidget(self.ui)\n        self.ui.setCentralWidget(central_widget)\n        layout_v = QVBoxLayout(central_widget)\n        layout_h = QHBoxLayout(central_widget)\n        layout_h2 = QHBoxLayout(central_widget)\n        layout_h3 = QHBoxLayout(central_widget)\n\n        layout_h.addWidget(self.label)\n        layout_h.addWidget(self.video_button)\n        layout_h.addWidget(self.map_button)\n        layout_h.addWidget(self.close_button)\n        layout_h.setStretch(0, 7)\n        layout_h.setStretch(1, 1)\n        layout_h.setStretch(2, 1)\n        layout_h.setStretch(3, 1)\n        layout_h.setSpacing(50)\n\n        layout_h2.addWidget(self.map2_label)\n        layout_h2.addWidget(self.map_label)\n        layout_h2.setStretch(0, 5)\n        layout_h2.setStretch(1, 7)\n        layout_h2.setSpacing(0)\n\n        layout_h3.addWidget(self.table)\n        layout_h3.addWidget(self.list)\n        layout_h3.setStretch(0, 4)\n        layout_h3.setStretch(1, 10)\n        layout_h3.setSpacing(50)\n\n        layout_v.addLayout(layout_h)\n        layout_v.addLayout(layout_h2)\n        layout_v.addLayout(layout_h3)\n        layout_v.setStretch(0, 1)\n        layout_v.setStretch(1, 6)\n        layout_v.setStretch(2, 3)\n\n        self.ui.setLayout(layout_v)\n\n\n\n    def thread_yolov5(self):\n        # \u6a21\u578b\u52a0\u8f7d\n        model_pb_path = \"/home/pi/Py_Projects/G_final.onnx\"\n        so = ort.SessionOptions()\n        net = ort.InferenceSession(model_pb_path, so)\n\n        # \u6807\u7b7e\u5b57\u5178\n\n        dic_labels={\n            0:\"0-plastic_bottle\",\n            1:\"0-drink_can\",\n            2:\"0-paper\",\n            3:\"0-carton\",\n            4:\"0-milkCarton\",\n            5:\"1-pericarp\",\n            6:\"1-vegetable_leaf\",\n            7:\"1-radish\",\n            8:\"1-potato\",\n            9:\"1-fruits\",\n            10:\"2-battery\",\n            11:\"2-Expired_drug\",\n            12:\"2-button cell\",\n            13:\"2-thermometer\",\n            14:\"3-tile\",\n            15:\"3-cobblestone\",\n            16:\"3-brick\",\n            17:\"3-paperCup\",\n            18:\"3-tableware\",\n            19:\"3-chopsticks\",\n            20:\"3-butt\",\n            21:\"3-mask\"\n            }\n        recoverable = [0, 1, 2, 3, 4, 17]\n        kitchen_garbage = [6, 7, 8, 9, 5]\n        harmful = [11, 12, 13, 10]\n        others = [15, 16, 18, 19, 20, 21, 14]\n        # \u6a21\u578b\u53c2\u6570\n        model_h = 320\n        model_w = 320\n        nl = 3\n        na = 3\n        stride=[8.,16.,32.]\n        anchors = [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]]\n        anchor_grid = np.asarray(anchors, dtype=np.float32).reshape(nl, -1, 2)\n\n\n        video = -1\n        cap = cv2.VideoCapture(video)\n        ser = serial.Serial(\"/dev/ttyAMA0\", 9600)\n        num=0\n        id_list=[]\n        lengths=[]\n        target_y=[]\n#         cenx_list={}\n#         ceny_list={}\n        temp=1\n        global player\n        VIDEO_PATH = Path(\"/home/pi/Videos/video.mp4\")#\u52a0\u7c97\u7684\u6587\u5b57\u8bf7\u81ea\u884c\u66ff\u6362\u6210\u81ea\u5df1\u7684\u8def\u5f84\u8ddf\u6587\u4ef6\u540d\n        player = OMXPlayer(VIDEO_PATH,args=['--loop', '--no-osd'])\n#         time_able=1\n#         enable=0\n#         global start\n#         start=0\n#         start_=0\n        # \u5783\u573e\u6570\u91cf\u72b6\u6001 1:\u5783\u573e\u6570\u91cf&gt;0 0:\u6570\u91cf\u5f520\n        StatusAmount=1\n        while True and not exit_flag.is_set():\n\n            success, img0 = cap.read()\n            t1 = time.time()\n            if success:\n                det_boxes, scores, ids = infer_img(img0, net, model_h, model_w, nl, na, stride, anchor_grid,\n                                                           thred_nms=0.4, thred_cond=0.5)\n                t2 = time.time()\n                if temp==0:\n                    player.quit()\n                else:\n                    if player.is_playing():\n                        print(\"\u89c6\u9891\u6b63\u5728\u64ad\u653e\")\n                    else:\n                        print(\"\u89c6\u9891\u672a\u5728\u64ad\u653e\")\n#                 print(GPIO.input(video1)==GPIO.LOW)\n                if GPIO.input(video1)==GPIO.LOW:\n    #                 print(\"-\"*100)\n                    box, target, label, score, l_h, id, length, labels = get_data(det_boxes, ids, scores, dic_labels)\n                    # \u5224\u65adid\u4e2a\u6570\uff0c&gt;=2,\u6b21\u6570\u589e\u52a0\n\n\n    #                 print(f\"box:{box}\\ntarget:{target}\\nlabel:{label}\\nscore:{score}\\n L-h:{l_h}\")\n    #                 print(\"-\" * 100)\n    #                 print(f\"\u4e2d\u5fc3\u5750\u6807\uff1a{target}\")\n#                     print(f\"lables:{labels}\")\n#                     if not length:\n#                         StatusAmount=0\n#                 \n#                     if time_able==1 and enable==1:\n#                         start=time.time()\n#                     \n#                     time_able=0\n#                     enable_start = time.time()\n#                     text=str(round(enable_start-start,2))\n#                     self.item_ = QTableWidgetItem(text)\n#                     self.table.setItem(4, 1, self.item_)\n#                     #  \u626b\u63cf\u5ef6\u65f6\n#                     if enable_start-start&gt;=5 or StatusAmount:\n#                         start_=1\n#                         StatusAmount=1\n\n                    # \u8d85\u65f6\u5224\u65ad\n#                     if start:\n#                         end=time.time()\n#                         text=str(round(end-start,2))\n#                         self.item_ = QTableWidgetItem(text)\n#                         self.table.setItem(4, 1, self.item_)\n# #                         self.label.setText(text)\n#                         if end-start &gt;=15:\n#                             self.label.setText(\"\u5df2\u7ecf\u8d85\u65f6\")\n#                             print(f\"\u5f00\u59cb\u65f6\u95f4\uff1a{start}\u7ed3\u675f\u65f6\u95f4\uff1a{end}\u65f6\u5dee\uff1a{end-start}s\")\n#                             start=0\n#                             time_able=1\n#                             ser.write(bytes(f'0#0#4#a#o\\n', 'utf-8'))\n#                             num += 1\n#                             self.add_list_items(f\"{num}-\u5176\u4ed6\u5783\u573e-1-okk\")\n\n\n                    if label:\n#                         enable=1\n#                         #\u5237\u65b0\u8ba1\u6570\n#                         start=time.time()\n                        if id_list==[]:\n                            if length&gt;=2:\n                                times=15\n                            else:\n                                times=7\n\n                        temp=0\n                        label = '%s:%.2f'%(dic_labels[id.item()],score)\n                        r = rd.randint(0, 255)\n                        g = rd.randint(0, 255)\n                        b = rd.randint(0, 255)\n                        plot_one_box(box.astype(np.int16), img0, color=(r, g, b), label=label, line_thickness=2)\n\n                        id = id.item()\n                        id_list.append(id)\n                        lengths.append(length)\n                        print(lengths)\n#                         cen_x = round(target[0], 1)\n#                         cen_y = round(target[1], 1)\n#                         if id in cenx_list:\n#                             cenx_list[id].append(cen_x)\n#                         else:\n#                             cenx_list[id]=[cen_x]\n#                         if id in ceny_list:\n#                             ceny_list[id].append(cen_y)\n#                         else:\n#                             ceny_list[id]=[cen_y]\n\n#                         print(cenx_list)\n\n                        if len(id_list)&gt;=times:\n                            # \u5224\u65ad\u5783\u573e\u6570\u91cf\n#                             length=max(lengths)\n                            len_idct={}\n                            for length in lengths:\n                                len_idct[length] = len_idct.get(length, 0)+1\n                            length=max(len_idct.keys())\n                            lengths=[]\n                            id_dict={}\n                            for id in id_list:\n                                id_dict[id] = id_dict.get(id, 0)+1\n\n                            max_num = max(id_dict.values())\n                            # \u8fd4\u56de\u9891\u7387\u6700\u9ad8\u7684\u6807\u7b7e\n                            id_1 = get_key(id_dict, max_num)\n                            # \u5224\u65ad\u53d1\u9001\u6807\u7b7e,id\u6570\u91cf\u4e3a1,\u8fd4\u56de\u5e73\u5747\u6807\u7b7e\n                            if times==7:\n                                id = id_1\n                            # \u5e73\u5747\u5750\u6807\n#                             cen_x = round(sum(cenx_list[id])/len(cenx_list[id]),1)\n#                             cen_y = round(sum(ceny_list[id])/len(ceny_list[id]),1)\n#                             print(f\"ceshi:{cenx_list[id]}\")\n#                             print(f\"ceshi:{ceny_list[id]}\")\n    #                         if max_num &lt; 3:\n    #                             id_list=[]\n\n\n\n                            print(label)\n                            # \u6c42\u4e2d\u5fc3\u5750\u6807\u7684\u5e73\u5747\u503c\n                            cen_x = round(target[0], 1)\n                            cen_y = round(target[1], 1)\n                            print(f\"cen_x:{cen_x}\")\n                            print(f\"cen_y:{cen_y}\")\n                            print(f\"\u6570\u91cf\uff1a{length}\")\n                            if length &gt;1:\n                                move='o'\n\n                            else:\n                                move='o'\n                                # \u5783\u573e\u6570\u91cf\u5f521,\u72b6\u6001\u4e3a0,\u5f00\u59cb4\u79d2\u5ef6\u65f6\n\n                            if l_h &gt;1:\n                                dir='b'\n                            else:\n                                dir='a'\n\n                            if id in recoverable:\n                                ser.write(bytes(f'{cen_x}#{cen_y}#1#{dir}#{move}\\n', 'utf-8')) #\u53ef\u56de\u6536\n                                print(f'{cen_x}#{cen_y}#1#{dir}#{move}\\n')\n                                num+=1\n                                self.add_list_items(f\"{num}-\u53ef\u56de\u6536\u5783\u573e-1-okk\")\n\n                            if id in kitchen_garbage:\n\n                                ser.write(bytes(f'{cen_x}#{cen_y}#3#{dir}#{move}\\n', 'utf-8')) # \u53a8\u4f59\u5783\u573e\n                                print(f'{cen_x}#{cen_y}#3#{dir}#{move}\\n')\n                                num+=1\n                                self.add_list_items(f\"{num}-\u53a8\u4f59\u5783\u573e-1-okk\")\n                            if id in harmful:\n\n                                ser.write(bytes(f'{cen_x}#{cen_y}#2#{dir}#{move}\\n', 'utf-8')) #\u6709\u5bb3\u5783\u573e\n                                print(f'{cen_x}#{cen_y}#2#{dir}#{move}')\n\n                                num+=1\n                                self.add_list_items(f\"{num}-\u6709\u5bb3\u5783\u573e-1-okk\")\n                            if id in others:\n                                ser.write(bytes(f'{cen_x}#{cen_y}#4#{dir}#{move}\\n', 'utf-8'))\n                                print(f'{cen_x}#{cen_y}#4#{dir}#{move}\\n')\n                                num+=1\n                                self.add_list_items(f\"{num}-\u5176\u4ed6\u5783\u573e-1-okk\")\n\n                            id_list=[]\n#                             cenx_list={}\n#                             ceny_list={}\n\n\n\n                else:\n                    id_list=[]\n#                     cenx_list={}\n#                     ceny_list={}\n#                     start=time.time()\n#                     start_=0\n#                     time_able=1\n\n                str_FPS = \"FPS: %.2f\"%(1./(t2-t1))\n                cv2.putText(img0,str_FPS,(40,40),cv2.FONT_HERSHEY_COMPLEX,1,(90,10,70),2)                 \n\n                show = cv2.resize(img0, (640, 480))  # \u628a\u8bfb\u5230\u7684\u5e27\u7684\u5927\u5c0f\u91cd\u65b0\u8bbe\u7f6e\u4e3a 640x480\n                show = cv2.cvtColor(show, cv2.COLOR_BGR2RGB)  # \u89c6\u9891\u8272\u5f69\u8f6c\u6362\u56deRGB\uff0c\u8fd9\u6837\u624d\u662f\u73b0\u5b9e\u7684\u989c\u8272\n                showImage = QImage(show.data, show.shape[1], show.shape[0],\n                                                  QImage.Format_RGB888)  # \u628a\u8bfb\u53d6\u5230\u7684\u89c6\u9891\u6570\u636e\u53d8\u6210QImage\u5f62\u5f0f\n                self.map_label.setPixmap(QPixmap.fromImage(showImage))  # \u5f80\u663e\u793a\u89c6\u9891\u7684Label\u91cc \u663e\u793aQImage\n                self.map_label.setScaledContents(True)  \n\n\n    def stop_video(self):\n        try:\n            if  player.is_playing():\n                player.quit()\n                print(\"\u89c6\u9891\u5df2\u505c\u6b62\u64ad\u653e\")\n        except Exception:\n            print(\"meiyou1\")\n        exit_flag.set()\n\n        # \u7b49\u5f85\u7ebf\u7a0b\u7ed3\u675f\n        self.thread_serial.join()\n        self.thread_yolov5.join()\n        self.ui.close()\n\n\n    def thread_serial(self, boot):\n        ser = serial.Serial(\"/dev/ttyUSB0\", boot)\n        data=['w', 'W', 'Y', 'y', 'R', 'r', 'B', 'b']\n        while True and not exit_flag.is_set():\n\n            if not ser.isOpen():\n                ser.open()\n            count = ser.inWaiting()\n            if count &gt; 0:\n                recv = ser.read().decode('utf-8',\"ignore\")\n\n                if recv == 'w':\n                    self.item = QTableWidgetItem(\"\u6ee1\u8f7d\")\n                    self.table.setItem(0, 1, self.item)\n#                     GPIO.output(LED_white, 1)\n\n                if recv == 'W':\n                    self.item = QTableWidgetItem(\"\u672a\u6ee1\u8f7d\")\n                    self.table.setItem(0, 1, self.item)\n#                     GPIO.output(LED_white, 0)\n                if recv == 'y':\n                    self.item = QTableWidgetItem(\"\u6ee1\u8f7d\")\n                    self.table.setItem(1, 1, self.item)\n#                     GPIO.output(LED_yellow, 1)\n\n                if recv == 'Y':\n                    self.item = QTableWidgetItem(\"\u672a\u6ee1\u8f7d\")\n                    self.table.setItem(1, 1, self.item)\n#                     GPIO.output(LED_yellow, 0)\n                if recv == 'b':\n                    self.item = QTableWidgetItem(\"\u6ee1\u8f7d\")\n                    self.table.setItem(2, 1, self.item)\n#                     GPIO.output(LED_blue, 1)\n\n                if recv == 'B':\n                    self.item = QTableWidgetItem(\"\u672a\u6ee1\u8f7d\")\n                    self.table.setItem(2, 1, self.item)\n#                     GPIO.output(LED_blue, 0)\n                if recv == 'r':\n                    self.item = QTableWidgetItem(\"\u6ee1\u8f7d\")\n                    self.table.setItem(3, 1, self.item)\n#                     GPIO.output(LED_red, 1)\n\n                if recv == 'R':\n                    self.item = QTableWidgetItem(\"\u672a\u6ee1\u8f7d\")\n                    self.table.setItem(3, 1, self.item)\n#                     GPIO.output(LED_red, 0)\n\n                print(f\"recv:{recv}\")\n                time.sleep(0.1)\n\n\n\n    def Text_time(self):\n        while True:\n            text = \"\u2764\u2764\u2764\u2764\u2764\u5730\u7403\u73af\u4fdd\u536b\u58eb\u2764\u2764\u2764\u2764\u2764\"\n            for i in range(135):\n                self.label.setText(text)\n#                 time.sleep(0.1)\n                text = ' ' + text\n\n\n    def tabel_items(self):\n        font_tabel = self.table.font()\n        font_tabel.setPointSize(20)\n        self.table.setFont(font_tabel)\n        self.item1 = QTableWidgetItem(\"\u5176\u4ed6\u5783\u573e\")\n        self.table.setItem(0, 0, self.item1)\n        self.item2 = QTableWidgetItem(\"\u53a8\u4f59\u5783\u573e\")\n        self.table.setItem(1, 0, self.item2)\n        self.item3 = QTableWidgetItem(\"\u6709\u5bb3\u5783\u573e\")\n        self.table.setItem(2, 0, self.item3)\n        self.item4 = QTableWidgetItem(\"\u53ef\u56de\u6536\u5783\u573e\")\n        self.table.setItem(3, 0, self.item4)\n        self.item5 = QTableWidgetItem(\"\u672a\u6ee1\u8f7d\")\n        self.item6 = QTableWidgetItem(\"\u672a\u6ee1\u8f7d\")\n        self.item7 = QTableWidgetItem(\"\u672a\u6ee1\u8f7d\")\n        self.item8 = QTableWidgetItem(\"\u672a\u6ee1\u8f7d\")\n        self.table.setItem(0, 1, self.item5)\n        self.table.setItem(1, 1, self.item6)\n        self.table.setItem(2, 1, self.item7)\n        self.table.setItem(3, 1, self.item8)\n        self.item9 = QTableWidgetItem(\"\u8ba1\u65f6\u5668--\")\n        self.item10 = QTableWidgetItem(\"0\")\n        self.table.setItem(4, 0, self.item9)\n        self.table.setItem(4, 1, self.item10)\n\n\n    def add_list_items(self, label):\n\n        print(f\"\u5217\u8868\u6570\u91cf{self.list.count()}\")\n        news = QListWidgetItem(label)\n        self.list.addItem(news)\n#         self.list.scrollToBottom()\n#         self.list.scrollToItem(news, QListWidget.PositionAtBottom)\n#         self.list.setCurrentRow(self.list.count() - 1)\n\n\n    # \u63a7\u4ef6\u521d\u59cb\u5316\n    def WidgetInit(self):\n        self.ui.setWindowTitle(\"ui\")\n        self.ui.resize(177 * 4, 400)\n        self.label.setFrameStyle(QFrame.Panel | QFrame.Sunken)\n        self.table.setShowGrid(False)  # \u662f\u5426\u663e\u793a\u7f51\u683c\n        self.table.setHorizontalHeaderLabels([\"\u7c7b\u522b\", \"\u662f\u5426\u6ee1\u8f7d\"])\n        self.table.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)\n        font_list = self.list.font()\n        font_list.setPointSize(15)\n        self.list.setFont(font_list)\n        # self.label.setAlignment(Qt.AlignCenter)\n        map_widget = QPixmap(\"/home/pi/Pictures/\u5973\u795e/17.jpg\")\n        map_widget = map_widget.scaled(177 * 3, 300)\n        self.map_label.setPixmap(map_widget)\n        self.map_label.setScaledContents(True)\n\n    def pic_control(self):\n        pic_list = [\"/home/pi/Pictures/\u5de5\u521b\u8d5b\u56fe\u96c6/logo.jpg\", \"/home/pi/Pictures/6.jpg\"]\n\n        map_widget = QPixmap(pic_list[0])\n\n        map_widget = map_widget.scaled(177 * 3, 300)\n        self.map2_label.setPixmap(map_widget)\n        self.map2_label.setScaledContents(True)\n\n    # \u4fe1\u53f7\u69fd\u51fd\u6570\u521d\u59cb\u5316\n    def Signal(self):\n        self.video_button.clicked.connect(self.GetMap2)\n        self.map_button.clicked.connect(self.GetMap)\n#         self.close_button.clicked.connect(QCoreApplication.instance().quit)\n        self.close_button.clicked.connect(self.stop_video)\n\n    def GetMap2(self):\n        video = QFileDialog()\n        url = video.getOpenFileUrl()[0].toLocalFile()\n        map_widget = QPixmap(url)\n        map_widget = map_widget.scaled(177 * 3, 300)\n        self.map2_label.setPixmap(map_widget)\n        self.map2_label.setScaledContents(True)\n\n\n    def GetMap(self):\n        video = QFileDialog()\n        url = video.getOpenFileUrl()[0].toLocalFile()\n        map_widget = QPixmap(url)\n        map_widget = map_widget.scaled(177 * 3, 300)\n        self.map_label.setPixmap(map_widget)\n        self.map_label.setScaledContents(True)\n\n\nif __name__ == \"__main__\":\n#         temp=1\n#         VIDEO_PATH = Path(\"/home/pi/Videos/video.mp4\")#\u52a0\u7c97\u7684\u6587\u5b57\u8bf7\u81ea\u884c\u66ff\u6362\u6210\u81ea\u5df1\u7684\u8def\u5f84\u8ddf\u6587\u4ef6\u540d\n#         player = OMXPlayer(VIDEO_PATH,args=['--loop', '--no-osd'])\n#         while temp==1:\n#             if GPIO.input(video1)==1:\n#                 player.quit()\n#                 temp=0\n\n        app = QApplication(sys.argv)\n        bar = Demo()\n        bar.ui.show()\n        bar.ui.showFullScreen()\n        sys.exit(app.exec_())\n\n</code></pre> <p>\u8fd9\u91cc\u95ee\u9898\u524d\u9762\u63d0\u5230\u8fc7\uff0c\u4e0d\u8981\u628a\u6240\u4ee5\u5185\u5bb9\u5199\u7684\u4e00\u4e2a\u6587\u4ef6\uff0c\u8fd9\u662f\u6211\u72af\u5f97\u5f88\u4e25\u91cd\u7684\u4e00\u4e2a\u9519\u8bef\uff0c\u4e5f\u662f\u4ee3\u7801\u9996\u8981\u4f18\u5316\u7684\u5730\u65b9\u3002</p>"},{"location":"study/yolo/#5","title":"5. \u65b9\u6848\u4f18\u5316\u6307\u5bfc","text":""},{"location":"study/yolo/#51","title":"5.1 \u91cd\u8981\u8bf4\u660e","text":"<p>\u91cd\u70b9\u8bf4\u660e\uff1a</p> <p>\u6807\u7ea2\u7684\u662f\u6587\u6863\u660e\u786e\u8bf4\u660e\u7684\u79cd\u7c7b\uff0c\u5176\u4ed6\u4e3a\u6211\u4eec\u81ea\u5df1\u6dfb\u52a0\u7684\u79cd\u7c7b\u3002\u4f46\u662f\uff0c\u6709\u51e0\u70b9\u91cd\u8981\u8bf4\u660e\uff1a</p> <ul> <li>\u65e0\u8bba\u662f\u5e02\u8d5b\u8fd8\u662f\u56fd\u8d5b\uff0c\u521d\u8d5b\u671f\u95f4\u5783\u573e\u79cd\u7c7b\u90fd\u6ca1\u6709\u8d85\u8fc7\u6807\u7ea2\u8303\u56f4\u3002</li> <li>\u5e02\u8d5b\u7684\u51b3\u8d5b\uff0c\u591a\u51fa\u6765\u7684\u5783\u573e\u4e3a\u5e9f\u7eb8\u56e2\u548c\u7eb8\u676f\u3002</li> <li>\u56fd\u8d5b\u521d\u8d5b\u6709\u4e00\u4e9b\u6bd4\u8f83\u62bd\u8c61\u7684\u5783\u573e\u3002</li> </ul> <p>\u56fd\u8d5b\u62bd\u8c61\u5783\u573e\uff1a</p> <ol> <li>\u5c0f\u7c73\u6a59\u8272\u7535\u6c60\uff0c\u5f88\u5bb9\u6613\u8bc6\u522b\u6210\u80e1\u841d\u535c\u3002</li> </ol> <p></p> <ol> <li>\u7eaf\u767d\u8272\u74f7\u7247</li> <li>\u5c0f\u571f\u8c46\uff0c\u5f88\u5c0f\uff0c\u4e14\u662f\u6e7f\u7684\u3002</li> </ol> <p>\u8bad\u7ec3\u6a21\u578b\u6ce8\u91cd\u6587\u6863\u8bf4\u660e\u7684\u5783\u573e\u79cd\u7c7b\uff0c\u6ce8\u91cd\u79cd\u7c7b\uff0c\u6bd4\u5982\u7535\u6c60\uff0c\u627e\u5404\u79cd\u5404\u6837\u7684\u7535\u6c60\uff0c\u5176\u6b21\u624d\u662f\u6570\u91cf\u3002</p>"},{"location":"study/yolo/#52","title":"5.2 \u5e02\u8d5b\u7684\u51b3\u8d5b\u4efb\u52a1","text":"<p>\u8fd9\u4e9b\u4efb\u52a1\u4e2d\uff0c\u6211\u4eec\u5f53\u65f6\u57fa\u672c\u90fd\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u9664\u4e86\u7eb8\u676f\u548c\u5e9f\u7eb8\u662f\u6587\u6863\u4e2d\u6ca1\u6709\u8bf4\u660e\u7684\uff0c\u4e0d\u8fc7\u95ee\u9898\u4e0d\u5927\uff0c\u5176\u4ed6\u7ec4\u51c6\u5907\u7684\u4e5f\u4e0d\u5b8c\u7f8e\u3002</p> <p></p>"},{"location":"study/yolo/#6","title":"6 \u8054\u7cfb\u65b9\u5f0f","text":"<p>\u6211\u7684Github\uff1awxnlP</p> <p>\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff1a\u5c0f\u674e\ud83c\udf19\u7684\u6d41\u6d6a\u6240 (tonmoon.top)</p> <p>\u6211\u7684\u90ae\u7bb1\uff1a2661006892@qq.com</p> <p>\u6211\u7684\u535a\u5ba2\u6709\u4e00\u4e9bstm32\u6559\u7a0b\uff0c\u81ea\u5df1\u603b\u7ed3\u7684\uff0c\u7b49\u81ea\u5df1\u6709\u7a7a\u4f1a\u66f4\u65b0\u4e00\u4e9b\u5176\u4ed6\u5d4c\u5165\u5f0f\u548c\u751f\u6d3b\u76f8\u5173\u5185\u5bb9\u3002</p>"}]}